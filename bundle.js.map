{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\", \"-ms-\", \"-o-\", \"-epub-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  // Special case\n  if (prop === \"writing-mode\") {\n    const probe = document.createElement(\"span\");\n    if (prefix === \"-ms-\") {\n      probe.style.setProperty(prefix + prop, \"tb-rl\");\n      return probe.style[\"writing-mode\"] === \"tb-rl\";\n    } else {\n      probe.style.setProperty(prefix + prop, \"vertical-rl\");\n      return probe.style[prefix + prop] === \"vertical-rl\";\n    }\n  } else {\n    const style = document.documentElement.style;\n    return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n  }\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"writing-mode\":\n      // Special case: prefer '-ms-writing-mode' to 'writing-mode'\n      if (checkIfPropertySupported(\"-ms-\", \"writing-mode\")) {\n        propNameMap[prop] = [\"-ms-writing-mode\"];\n        return [\"-ms-writing-mode\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      if (prefixed === \"-ms-writing-mode\") {\n        switch (value) {\n          case \"horizontal-tb\":\n            value = \"lr-tb\";\n            break;\n          case \"vertical-rl\":\n            value = \"tb-rl\";\n            break;\n          case \"vertical-lr\":\n            value = \"tb-lr\";\n            break;\n        }\n      } else if (prefixed === \"-webkit-text-combine\") {\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n      }\n      if (elem && (elem as HTMLElement).style) {\n        (elem as HTMLElement).style.setProperty(prefixed, value);\n      }\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  // FIXME: This property is added to reduce TypeScript error on `dependCore`\n  // but it is never initialized. Is it really correct code?\n  value: Val;\n\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -ms-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -ms-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nazimuth = ANGLE | [[ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncue-after = URI_OR_NONE;\ncue-before = URI_OR_NONE;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nelevation = ANGLE | below | level | above | higher | lower;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-variant = normal | small-caps;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM ;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH;\nmax-width = NPLENGTH;\nmin-height = auto | PLENGTH;\nmin-width = auto | PLENGTH;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nPAUSE = POS_TIME | ZERO | POS_PERCENTAGE;\npause-after = PAUSE;\npause-before = PAUSE;\npitch-range = NUM;\npitch = FREQUENCY | x-low | low | medium | high | x-high;\nplay-during = [URI [ mix || repeat ]?] | auto | none;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nrichness = NUM;\nright = APLENGTH;\nspeak-header = once | always;\nspeak-numeral = digits | continuous;\nspeak-punctuation = code | none;\nspeech-rate = NUM | x-slow | slow | medium | fast | x-fast | faster | slower;\nstress = NUM;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nvoice-family = FAMILY_LIST;\nvolume = NUM | PERCENTAGE | silent | x-soft | soft | medium | loud | x-loud;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM ;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,ms,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | POS_NUM;\ninline-size = PAPLENGTH | POS_NUM;\nmax-block-size = NPLENGTH;\nmax-inline-size = NPLENGTH;\nmin-block-size = auto | PLENGTH;\nmin-inline-size = auto | PLENGTH;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx,ms]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub,ms]transform = none | TRANSFORM_FUNCTION+;\n[epub,ms]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-variant-east-asian = normal | [[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || [ full-width | proportional-width ] || ruby];\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nfont-stretch = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz,ms]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[ms,webkit]line-break = auto | loose | normal | strict;\noverflow-wrap = normal | break-word;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz,ms]text-align-last = auto | start | end | left | right | center | justify;\n[ms]text-justify = auto | none | inter-word | inter-character | inter-ideograph /* specified in UA stylesheet for IE */;\n[ms]word-break = normal | keep-all | break-all | break-word;\n[ms]word-wrap = normal | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[ms,webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[ms,webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\n[ms]text-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[webkit]text-combine = none | horizontal;\n[epub,ms]text-combine-horizontal = none | all | [ digits POS_INT? ]; /* relaxed */\ntext-combine-upright = none | all | [ digits POS_INT? ]; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\n[ms]touch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-variant: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\npause = INSETS pause-before pause-after;\nfont = FONT font-style font-variant font-weight font-stretch /* font-size line-height font-family are special-cased */;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|body {\n  margin: 8px;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\nhtml|ruby,\nhtml|rb,\nhtml|rt,\nhtml|rbc,\nhtml|rtc {\n  unicode-bidi: isolate;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    this.handler.error(mnemonics, token);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.OrMedia(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery,\n    parsingFunctionParam,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          if (token.text.toLowerCase() == \"and\") {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            if (this.propName) {\n              this.actions = actionsPropVal;\n            } else {\n              this.exprError(\"E_CSS_UNBALANCED_PAR\", token);\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  azimuth: true,\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  elevation: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  \"pitch-range\": true,\n  quotes: true,\n  richness: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"speak-header\": true,\n  \"speak-numeral\": true,\n  \"speak-punctuation\": true,\n  \"speech-rate\": true,\n  \"shape-rendering\": true,\n  stress: true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"voice-family\": true,\n  volume: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"word-wrap\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return !!this.condition.evaluate(context);\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    let maxSize = 0;\n\n    // Get first of the widest boxes (works around Chrome results for soft\n    // hyphens).\n    for (const box of boxes) {\n      const boxSize = vertical ? box.bottom - box.top : box.right - box.left;\n      if (\n        box.right > box.left &&\n        box.bottom > box.top &&\n        (isNaN(edge) || boxSize > maxSize)\n      ) {\n        edge = vertical ? box.left : box.bottom;\n        maxSize = boxSize;\n      }\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = nodeContext.floatSide as string;\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          (node as Element).localName == \"ruby\" ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch (flowPosition.sourceNode.namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent && nodeContext.parent.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                !Break.isForcedBreakValue(breakAtTheEdge) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    const penalty = checkPoints[0].breakPenalty;\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\"font-family\", \"line-height\", \"font-size\");\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              propList.push(token.text);\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if ((this.atBlockStart || this.atFlowStart) && box.hasBox()) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n          }\n        }\n        this.context.rootFontSize = px;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-variant\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"font-variant\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, null, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"] || [\"word-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        overflowWrap === Css.ident.break_word;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      pos.sourceNode.namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      Base.setCSSProperty(target, propName, value.toString());\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem && parseFloat(window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage = page;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","probe","document","createElement","style","setProperty","documentElement","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","Negate","And","AndMedia","Or","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","Param","_this11","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","processingOrder","font-size","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","first-except","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","token1","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","WHEN","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","z-index","column-count","flow-linger","opacity","flow-priority","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","transform-origin","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","azimuth","border-collapse","border-spacing","caption-side","clip-rule","color-interpolation","color-rendering","elevation","empty-cells","fill","fill-opacity","fill-rule","font-kerning","font-size-adjust","font-family","font-feature-settings","font-style","font-stretch","font-variant","font-weight","glyph-orientation-vertical","hyphens","hyphenate-character","hyphenate-limit-chars","hyphenate-limit-last","image-rendering","image-resolution","letter-spacing","line-break","line-height","list-style-image","list-style-position","list-style-type","marker","marker-end","marker-mid","marker-start","orphans","overflow-wrap","paint-order","pointer-events","pitch-range","quotes","richness","ruby-align","ruby-position","speak-header","speak-numeral","speak-punctuation","speech-rate","shape-rendering","stress","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","text-align","text-align-last","text-anchor","text-decoration-skip","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-combine-upright","text-indent","text-justify","text-rendering","text-size-adjust","text-transform","text-underline-position","voice-family","volume","white-space","widows","word-break","word-spacing","word-wrap","writing-mode","polyfilledInheritedProps","supportedNamespaces","http://www.idpf.org/2007/ops","http://www.w3.org/1999/xhtml","http://www.w3.org/2000/svg","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","max-width","max-height","min-width","min-height","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","block-start","block-end","inline-start","inline-end","block-size","inline-size","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","region-id","fragment-selector-id","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","_this12","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","setMap","set","setVal","_this$currentElement","_this$currentElement2","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","nth-child","nth-of-type","nth-last-child","nth-last-of-type","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","Size","horizontal-tb","vertical-rl","vertical-lr","toPhysicalMaps","toLogicalMaps","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","float","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","toLogical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","avoid-page","avoid-column","avoid-region","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","maxSize","boxSize","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","nodeContextAfter","floatBBox","floatBox","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","layoutProcessor","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","table-caption","table-column-group","table-column","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","elemStyle","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","slashIndex","index1","acc","FONT","_SimpleShorthandValid2","familyList","family","systemFonts","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","%","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","isFunc","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","jis-b10","jis-b9","jis-b8","jis-b7","jis-b6","jis-b5","jis-b4","jis-b3","jis-b2","jis-b1","jis-b0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","outline-width","outline-style","outline-color","pageMarginBoxes","top-left-corner","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","top-left","START","top-center","CENTER","top-right","top-right-corner","right-top","right-middle","right-bottom","bottom-right-corner","bottom-right","bottom-center","bottom-left","bottom-left-corner","left-bottom","left-middle","left-top","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","margin-top","padding-top","border-top-width","border-top-style","border-top-color","border-top-left-radius","border-top-right-radius","frontEdgeBlackListVert","margin-right","padding-right","border-right-width","border-right-style","border-right-color","border-bottom-right-radius","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","dataset","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","parentElem","_this$nodeContext","_this$nodeContext$par","getComputedStyle","HTMLElement","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","parentElement","nodePosition1","nodePosition2","DOMParserSupportedType","box-decoration-break","float-min-wrap-block","float-reference","flow-into","flow-options","footnote-policy","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","fontFace","isRectoStart","isLTR","getStyleForDoc","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","startsWith","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","application/xhtml+xml","image/jpeg","image/png","image/svg+xml","image/gif","audio/mp3","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","tagName","newUrl","mathTypeset","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","AUTO_SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO8C,KACP9C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO+C,KACP/C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO6C,QACP7C,GAAOgD,QACPhD,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO+C,KACP/C,GAAO6C,QACP7C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,QACP7C,GAAO6C,SAGTD,GAAYrC,IAAQP,GAAO6C,YAKdI,GAA8B,CACzCjkD,QACPlD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOS,QACPT,GAAOoD,OACPpD,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,SAGTmC,GAAYrC,IAAQP,GAAO6C,YAKdQ,GAAyB,CACpCrsD,OACPtD,GAAOmD,MACPnD,GAAOQ,IACPR,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOQ,IACPR,GAAOoD,OACPpD,GAAOQ,IACPR,GAAOQ,IACPR,GAAOwD,QACPxD,GAAOQ,IACPR,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOwD,QACPxD,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,IACPR,GAAOQ,KAGT6C,GAAY9C,IAAQP,GAAOQ,QAKdiD,GAA4B,CACvCzD,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO2D,QACP3D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO2D,QACP3D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO4D,OACP5D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO0D,QACP1D,GAAOgD,QACPhD,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO+C,KACP/C,GAAO0D,QACP1D,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,QACP1D,GAAO0D,SAGTD,GAAelD,IAAQP,GAAO0D,YAKjBG,GAAuB,CAClgE,OACPhE,GAAO8D,OACP9D,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAOiE,KACPjE,GAAO8D,OACP9D,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,OACP9D,GAAO8D,QAGTD,GAAUtD,IAAQP,GAAO8D,WAKZI,GAA0B,CACrClE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+D,OACP/D,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE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AC,gBAAAC,EAAoCv2D,OAK/D,WAAW+mB,GAAQnK,MAMrBR,UAAA,SAAUC,GACR,OAAQA,EAAKvZ,MACX,IAAK,UACH,GAAIuZ,EAAK1K,OAAOha,QAAU,EACxB,YAAY29D,iBAAiBj5C,EAAK1K,QAEpC,MACF,IAAK,WACH,GAAI0K,EAAK1K,OAAOha,QAAU,EACxB,YAAY89D,kBAAkBp5C,EAAK1K,QAErC,MACF,IAAK,iBACH,GAAI0K,EAAK1K,OAAOha,QAAU,EACxB,YAAYi+D,uBAAuBv5C,EAAK1K,QAE1C,MACF,IAAK,kBACH,GAAI0K,EAAK1K,OAAOha,QAAU,EACxB,YAAYq+D,wBAAwB35C,EAAK1K,QAE3C,MACF,IAAK,SACH,GAAI0K,EAAK1K,OAAOha,QAAU,EACxB,YAAYu+D,gBAAgB75C,EAAK1K,QAEnC,MACF,IAAK,UACH,GAAI0K,EAAK1K,OAAOha,QAAU,EACxB,YAAYw+D,iBAAiB95C,EAAK1K,QAKxC,OADA1O,EAAejB,KAAK,sBAAuBqa,EAAKnb,gBACrC6lB,GAAQ,QAlQiBA,IAqS3ButC,GAAoB,CAC/BkC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGEt3C,GAAQ,CACnBu3C,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRv2C,KAAM,IAmEK00C,GAAwC,CACnDN,UACAF,OAAQ,aACRG,QAAS,MACTF,SAAU,cA4DIqC,GAAUz2B,EAAkB02B,GAC1C,IAAK,IAAMx4D,KAAK8hC,EACd02B,EAAIx4D,GAAK8hC,EAAI9hC,GAAG09C,YAsnBR+a,GAlnBCC,gCACX7I,QAAkB,OAClBD,SAAsC,QACtCH,KAAoB,QACpBK,OAAsB,QACtBc,UAAyB,QACzB5oB,QAAuB,QACvB3X,IAAmB,QACnBsoC,UAAyB,QACzBx7B,MAAgB,6BAEhBugB,MAAA,WACE,IAAM32C,EAAI,IAAI2xD,EAEd,IAAK,IAAMxqD,KADXnH,EAAE8oD,QAAUltD,KAAKktD,aACID,SACnB7oD,EAAE6oD,SAAS1hD,GAAKvL,KAAKitD,SAAS1hD,GAShC,OAPAqqD,GAAU51D,KAAK8sD,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"}