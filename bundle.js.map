{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  const style = document.documentElement.style;\n  return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    const elemStyle = (elem as HTMLElement)?.style;\n    if (!elemStyle) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      switch (prefixed) {\n        case \"-webkit-text-combine\": // for Safari\n          switch (value) {\n            case \"all\":\n              value = \"horizontal\";\n              break;\n          }\n          break;\n        case \"text-combine-upright\":\n          switch (value) {\n            case \"all\":\n              // workaround for Chrome 93 bug https://crbug.com/1242755\n              elemStyle.setProperty(\"text-indent\", \"0\");\n              break;\n          }\n          break;\n      }\n      elemStyle.setProperty(prefixed, value);\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitURange(urange: URange): Val {\n    throw new Error(\"E_CSS_URANGE_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^\\+[?0-9a-fA-F]/.test(input.substr(position, 2)) &&\n              /\\bunicode-range\\s*:\\s*(u\\+[-?0-9a-f]+\\s*,\\s*)*u$/i.test(\n                input.substr(0, position),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\nhtml|ruby,\nhtml|rb,\nhtml|rt,\nhtml|rbc,\nhtml|rtc {\n  unicode-bidi: isolate;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n              tokenizer.reset();\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n              continue;\n            }\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (token.type === CssTokenizer.TokenType.O_BRC) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal = Css.ident.inline;\n    const float = props[\"float\"];\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = this.currentStyle[\"counter-increment\"]?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            incrPropValue.values?.includes(Css.ident.footnote)\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    let maxSize = 0;\n\n    // Get first of the widest boxes (works around Chrome results for soft\n    // hyphens).\n    for (const box of boxes) {\n      const boxSize = vertical ? box.bottom - box.top : box.right - box.left;\n      if (\n        box.right > box.left &&\n        box.bottom > box.top &&\n        (isNaN(edge) || boxSize > maxSize)\n      ) {\n        edge = vertical ? box.left : box.bottom;\n        maxSize = boxSize;\n      }\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = nodeContext.floatSide as string;\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          (node as Element).localName == \"ruby\" ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    const penalty = checkPoints[0].breakPenalty;\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport const ALLOW_URANGE = 4096;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      let isRelativeFontSize = true;\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n            isRelativeFontSize = false;\n          }\n        }\n        this.context.rootFontSize = px;\n        this.context.isRelativeRootFontSize = isRelativeFontSize;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.isRelativeRootFontSize\n      ? this.context.initialFontSize // Fix for issue #549\n      : this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (isRoot && CssCascade.isInherited(propName)) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.viewRoot.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem && parseFloat(window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage, true).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","document","documentElement","style","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","elemStyle","setProperty","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","URange","urangeText","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","fullURange","processingOrder","font-size","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","first-except","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","URANGE","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","z-index","column-count","flow-linger","opacity","flow-priority","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","transform-origin","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","border-collapse","border-spacing","caption-side","clip-rule","color-interpolation","color-rendering","empty-cells","fill","fill-opacity","fill-rule","font-kerning","font-size-adjust","font-family","font-feature-settings","font-style","font-stretch","font-variant-ligatures","font-variant-caps","font-variant-numeric","font-variant-east-asian","font-weight","glyph-orientation-vertical","hyphens","hyphenate-character","hyphenate-limit-chars","hyphenate-limit-last","image-rendering","image-resolution","letter-spacing","line-break","line-height","list-style-image","list-style-position","list-style-type","marker","marker-end","marker-mid","marker-start","orphans","overflow-wrap","paint-order","pointer-events","quotes","ruby-align","ruby-position","shape-rendering","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","text-align","text-align-last","text-anchor","text-decoration-skip","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-combine-upright","text-indent","text-justify","text-rendering","text-size-adjust","text-transform","text-underline-position","white-space","widows","word-break","word-spacing","writing-mode","polyfilledInheritedProps","supportedNamespaces","http://www.idpf.org/2007/ops","http://www.w3.org/1999/xhtml","http://www.w3.org/2000/svg","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","max-width","max-height","min-width","min-height","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","block-start","block-end","inline-start","inline-end","block-size","inline-size","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","region-id","fragment-selector-id","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement","_this$currentElement2","DOCUMENT_NODE","incrPropValue","_this$currentStyle$co","_incrPropValue$values","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","nth-child","nth-of-type","nth-last-child","nth-last-of-type","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","Size","horizontal-tb","vertical-rl","vertical-lr","toPhysicalMaps","toLogicalMaps","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","toLogical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","avoid-page","avoid-column","avoid-region","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","maxSize","boxSize","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","_nodeContext$parent","layoutProcessor","_nodeContext$parent2","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","table-caption","table-column-group","table-column","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","slashIndex","index1","acc","FONT","_SimpleShorthandValid2","fontVariant","fontStretch","familyList","family","systemFonts","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","%","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","unicode-range","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","jis-b10","jis-b9","jis-b8","jis-b7","jis-b6","jis-b5","jis-b4","jis-b3","jis-b2","jis-b1","jis-b0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","outline-width","outline-style","outline-color","pageMarginBoxes","top-left-corner","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","top-left","START","top-center","CENTER","top-right","top-right-corner","right-top","right-middle","right-bottom","bottom-right-corner","bottom-right","bottom-center","bottom-left","bottom-left-corner","left-bottom","left-middle","left-top","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","margin-top","padding-top","border-top-width","border-top-style","border-top-color","border-top-left-radius","border-top-right-radius","frontEdgeBlackListVert","margin-right","padding-right","border-right-width","border-right-style","border-right-color","border-bottom-right-radius","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","dataset","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","parentElement","_this$viewRoot","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","parentElem","_this$nodeContext2","_this$nodeContext2$pa","getComputedStyle","HTMLElement","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","box-decoration-break","float-min-wrap-block","float-reference","flow-into","flow-options","footnote-policy","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","fontFace","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","startsWith","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","application/xhtml+xml","image/jpeg","image/png","image/svg+xml","image/gif","audio/mp3","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","tagName","newUrl","mathTypeset","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","AUTO_SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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iBACAsmB,wBACApY,IAAc,OACd5K,KAAe,QACfijB,SAAmB,EAGjB1wB,KAAKmK,KAAOwd,GAAUgJ,cA6FVC,GAAYrK,EAAasK,GACvC,IACIz4B,EADE8G,EAAchF,MAAM,KAE1B,IAAK9B,EAAI,EAAGA,EAAI,IAAKA,IACnB8G,EAAE9G,GAAKmuB,EAGT,IADArnB,EAAC4xB,IAAQvK,GAAOgK,GAAOQ,IAAMR,GAAOQ,IAAMR,GAAOS,QAC5C54B,EAAI,EAAGA,EAAIy4B,EAAKz6B,OAAQgC,GAAK,EAChC8G,EAAE2xB,EAAKz4B,IAAMy4B,EAAKz4B,EAAI,GAExB,OAAO8G,GAhGT,SAAYqxB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCU,GAA0B,CACrCV,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,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CPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+D,OACP/D,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOi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IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,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"}