{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\", \"-ms-\", \"-o-\", \"-epub-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  // Special case\n  if (prop === \"writing-mode\") {\n    const probe = document.createElement(\"span\");\n    if (prefix === \"-ms-\") {\n      probe.style.setProperty(prefix + prop, \"tb-rl\");\n      return probe.style[\"writing-mode\"] === \"tb-rl\";\n    } else {\n      probe.style.setProperty(prefix + prop, \"vertical-rl\");\n      return probe.style[prefix + prop] === \"vertical-rl\";\n    }\n  } else {\n    const style = document.documentElement.style;\n    return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n  }\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"writing-mode\":\n      // Special case: prefer '-ms-writing-mode' to 'writing-mode'\n      if (checkIfPropertySupported(\"-ms-\", \"writing-mode\")) {\n        propNameMap[prop] = [\"-ms-writing-mode\"];\n        return [\"-ms-writing-mode\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      if (prefixed === \"-ms-writing-mode\") {\n        switch (value) {\n          case \"horizontal-tb\":\n            value = \"lr-tb\";\n            break;\n          case \"vertical-rl\":\n            value = \"tb-rl\";\n            break;\n          case \"vertical-lr\":\n            value = \"tb-lr\";\n            break;\n        }\n      } else if (prefixed === \"-webkit-text-combine\") {\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n      }\n      if (elem && (elem as HTMLElement).style) {\n        (elem as HTMLElement).style.setProperty(prefixed, value);\n      }\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -ms-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -ms-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nazimuth = ANGLE | [[ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncue-after = URI_OR_NONE;\ncue-before = URI_OR_NONE;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nelevation = ANGLE | below | level | above | higher | lower;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-variant = normal | small-caps;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM ;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH;\nmax-width = NPLENGTH;\nmin-height = auto | PLENGTH;\nmin-width = auto | PLENGTH;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nPAUSE = POS_TIME | ZERO | POS_PERCENTAGE;\npause-after = PAUSE;\npause-before = PAUSE;\npitch-range = NUM;\npitch = FREQUENCY | x-low | low | medium | high | x-high;\nplay-during = [URI [ mix || repeat ]?] | auto | none;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nrichness = NUM;\nright = APLENGTH;\nspeak-header = once | always;\nspeak-numeral = digits | continuous;\nspeak-punctuation = code | none;\nspeech-rate = NUM | x-slow | slow | medium | fast | x-fast | faster | slower;\nstress = NUM;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nvoice-family = FAMILY_LIST;\nvolume = NUM | PERCENTAGE | silent | x-soft | soft | medium | loud | x-loud;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM ;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,ms,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | POS_NUM;\ninline-size = PAPLENGTH | POS_NUM;\nmax-block-size = NPLENGTH;\nmax-inline-size = NPLENGTH;\nmin-block-size = auto | PLENGTH;\nmin-inline-size = auto | PLENGTH;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx,ms]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub,ms]transform = none | TRANSFORM_FUNCTION+;\n[epub,ms]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-variant-east-asian = normal | [[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || [ full-width | proportional-width ] || ruby];\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nfont-stretch = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz,ms]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[ms,webkit]line-break = auto | loose | normal | strict;\noverflow-wrap = normal | break-word;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz,ms]text-align-last = auto | start | end | left | right | center | justify;\n[ms]text-justify = auto | none | inter-word | inter-character | inter-ideograph /* specified in UA stylesheet for IE */;\n[ms]word-break = normal | keep-all | break-all | break-word;\n[ms]word-wrap = normal | break-word;\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[ms,webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[ms,webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\n[ms]text-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[webkit]text-combine = none | horizontal;\n[epub,ms]text-combine-horizontal = none | all | [ digits POS_INT? ]; /* relaxed */\ntext-combine-upright = none | all | [ digits POS_INT? ]; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\n[ms]touch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-variant: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\npause = INSETS pause-before pause-after;\nfont = FONT font-style font-variant font-weight font-stretch /* font-size line-height font-family are special-cased */;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|body {\n  margin: 8px;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\nhtml|ruby,\nhtml|rb,\nhtml|rt,\nhtml|rbc,\nhtml|rtc {\n  unicode-bidi: isolate;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (token.type === CssTokenizer.TokenType.O_BRC) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  azimuth: true,\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  elevation: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  \"pitch-range\": true,\n  quotes: true,\n  richness: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"speak-header\": true,\n  \"speak-numeral\": true,\n  \"speak-punctuation\": true,\n  \"speech-rate\": true,\n  \"shape-rendering\": true,\n  stress: true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"voice-family\": true,\n  volume: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"word-wrap\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    let maxSize = 0;\n\n    // Get first of the widest boxes (works around Chrome results for soft\n    // hyphens).\n    for (const box of boxes) {\n      const boxSize = vertical ? box.bottom - box.top : box.right - box.left;\n      if (\n        box.right > box.left &&\n        box.bottom > box.top &&\n        (isNaN(edge) || boxSize > maxSize)\n      ) {\n        edge = vertical ? box.left : box.bottom;\n        maxSize = boxSize;\n      }\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1) {\n    return isSpecial(viewNode as Element);\n  } else {\n    return false;\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    const parentNode = nodeContext.viewNode.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, nodeContext.viewNode);\n    if (removeSelf) {\n      parentNode.removeChild(nodeContext.viewNode);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  switch (display) {\n    case \"ruby\":\n    case \"inline-block\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"inline-list-item\":\n    case \"inline-table\":\n      return true;\n  }\n  return false;\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        return this.layoutContext.peelOff(position, r ? r[0].length : 0);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = nodeContext.floatSide as string;\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      let textAlign = \"\";\n      for (\n        let parent = nodeContext.parent;\n        parent && !textAlign;\n        parent = parent.parent\n      ) {\n        if (!parent.inline && parent.viewNode) {\n          textAlign = (parent.viewNode as HTMLElement).style.textAlign;\n        }\n      }\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    const node = nodeContext.viewNode;\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (viewNode.nodeType != 1) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          (node as Element).localName == \"ruby\" ||\n          isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch (flowPosition.sourceNode.namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent && nodeContext.parent.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                !Break.isForcedBreakValue(breakAtTheEdge) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    const penalty = checkPoints[0].breakPenalty;\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\"font-family\", \"line-height\", \"font-size\");\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              propList.push(token.text);\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if ((this.atBlockStart || this.atFlowStart) && box.hasBox()) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n          }\n        }\n        this.context.rootFontSize = px;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-variant\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    let fetcher = this.srcURLMap[src];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[src] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"font-variant\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"] || [\"word-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        overflowWrap === Css.ident.break_word;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      pos.sourceNode.namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      Base.setCSSProperty(target, propName, value.toString());\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem && parseFloat(window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): ClientRect[] {\n    const rects = range[\"getClientRects\"]();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(manifestUrl).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage, true).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","probe","document","createElement","style","setProperty","documentElement","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","processingOrder","font-size","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","first-except","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","z-index","column-count","flow-linger","opacity","flow-priority","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","transform-origin","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","azimuth","border-collapse","border-spacing","caption-side","clip-rule","color-interpolation","color-rendering","elevation","empty-cells","fill","fill-opacity","fill-rule","font-kerning","font-size-adjust","font-family","font-feature-settings","font-style","font-stretch","font-variant","font-weight","glyph-orientation-vertical","hyphens","hyphenate-character","hyphenate-limit-chars","hyphenate-limit-last","image-rendering","image-resolution","letter-spacing","line-break","line-height","list-style-image","list-style-position","list-style-type","marker","marker-end","marker-mid","marker-start","orphans","overflow-wrap","paint-order","pointer-events","pitch-range","quotes","richness","ruby-align","ruby-position","speak-header","speak-numeral","speak-punctuation","speech-rate","shape-rendering","stress","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","tab-size","text-align","text-align-last","text-anchor","text-decoration-skip","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-combine-upright","text-indent","text-justify","text-rendering","text-size-adjust","text-transform","text-underline-position","voice-family","volume","white-space","widows","word-break","word-spacing","word-wrap","writing-mode","polyfilledInheritedProps","supportedNamespaces","http://www.idpf.org/2007/ops","http://www.w3.org/1999/xhtml","http://www.w3.org/2000/svg","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","max-width","max-height","min-width","min-height","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","block-start","block-end","inline-start","inline-end","block-size","inline-size","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","region-id","fragment-selector-id","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","setMap","set","setVal","_this$currentElement","_this$currentElement2","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","nth-child","nth-of-type","nth-last-child","nth-last-of-type","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","Size","horizontal-tb","vertical-rl","vertical-lr","toPhysicalMaps","toLogicalMaps","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","float","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","toLogical","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","avoid-page","avoid-column","avoid-region","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","maxSize","boxSize","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","isSpecialInlineDisplay","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","nodeContextAfter","floatBBox","floatBox","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","layoutProcessor","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","table-caption","table-column-group","table-column","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","elemStyle","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","slashIndex","index1","acc","FONT","_SimpleShorthandValid2","familyList","family","systemFonts","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","cssval","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","%","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","jis-b10","jis-b9","jis-b8","jis-b7","jis-b6","jis-b5","jis-b4","jis-b3","jis-b2","jis-b1","jis-b0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","outline-width","outline-style","outline-color","pageMarginBoxes","top-left-corner","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","top-left","START","top-center","CENTER","top-right","top-right-corner","right-top","right-middle","right-bottom","bottom-right-corner","bottom-right","bottom-center","bottom-left","bottom-left-corner","left-bottom","left-middle","left-top","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","margin-top","padding-top","border-top-width","border-top-style","border-top-color","border-top-left-radius","border-top-right-radius","frontEdgeBlackListVert","margin-right","padding-right","border-right-width","border-right-style","border-right-color","border-bottom-right-radius","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","POLYFILLED_INHERITED_PROPS","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","dataset","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","parentElem","_this$nodeContext","_this$nodeContext$par","getComputedStyle","HTMLElement","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","parentElement","nodePosition1","nodePosition2","DOMParserSupportedType","box-decoration-break","float-min-wrap-block","float-reference","flow-into","flow-options","footnote-policy","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","fontFace","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","PREPROCESS_SINGLE_DOCUMENT","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","startsWith","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","application/xhtml+xml","image/jpeg","image/png","image/svg+xml","image/gif","audio/mp3","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","tagName","newUrl","mathTypeset","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","AUTO_SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","FIT_INSIDE_VIEWPORT","pageDim","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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CPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+D,OACP/D,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOi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OAK/D,WAAWqnB,GAAQnK,MAMrBR,UAAA,SAAUC,GACR,OAAQA,EAAK7Z,MACX,IAAK,UACH,GAAI6Z,EAAKhL,OAAOha,QAAU,EACxB,YAAYy+D,iBAAiBz5C,EAAKhL,QAEpC,MACF,IAAK,WACH,GAAIgL,EAAKhL,OAAOha,QAAU,EACxB,YAAY4+D,kBAAkB55C,EAAKhL,QAErC,MACF,IAAK,iBACH,GAAIgL,EAAKhL,OAAOha,QAAU,EACxB,YAAY++D,uBAAuB/5C,EAAKhL,QAE1C,MACF,IAAK,kBACH,GAAIgL,EAAKhL,OAAOha,QAAU,EACxB,YAAYm/D,wBAAwBn6C,EAAKhL,QAE3C,MACF,IAAK,SACH,GAAIgL,EAAKhL,OAAOha,QAAU,EACxB,YAAYq/D,gBAAgBr6C,EAAKhL,QAEnC,MACF,IAAK,UACH,GAAIgL,EAAKhL,OAAOha,QAAU,EACxB,YAAYs/D,iBAAiBt6C,EAAKhL,QAKxC,OADA1O,EAAejB,KAAK,sBAAuB2a,EAAKzb,gBACrCmmB,GAAQ,QAlQiBA,IAqS3B+tC,GAAoB,CAC/BkC,MAAO,CACL,KACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,IACA,GACA,KACA,GACA,IACA,GACA,KACA,GACA,IACA,EACA,KACA,EACA,IACA,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGE93C,GAAQ,CACnB+3C,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACR/2C,KAAM,IAmEKk1C,GAAwC,CACnDN,UACAF,OAAQ,aACRG,QAAS,MACTF,SAAU,cA4DIqC,GAAUj3B,EAAkBk3B,GAC1C,IAAK,IAAMt5D,KAAKoiC,EACdk3B,EAAIt5D,GAAKoiC,EAAIpiC,GAAGy+C,YAsnBR8a,GAlnBCC,gCACX5I,QAAkB,OAClBD,SAAsC,QACtCH,KAAoB,QACpBK,OAAsB,QACtBa,UAAyB,QACzBppB,QAAuB,QACvB3X,IAAmB,QACnB8oC,UAAyB,QACzBh8B,MAAgB,6BAEhBghB,MAAA,WACE,IAAM13C,EAAI,IAAIyyD,EAEd,IAAK,IAAMtrD,KADXnH,EAAE6pD,QAAUjuD,KAAKiuD,aACID,SACnB5pD,EAAE4pD,SAASziD,GAAKvL,KAAKguD,SAASziD,GAShC,OAPAmrD,GAAU12D,KAAK6tD,KAAMzpD,EAAEypD,MAC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"}