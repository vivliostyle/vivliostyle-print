{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/text-polyfill.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\n/**\n * @param prefix Prefix (containing leading and trailing hyphens)\n * @param cssPropName CSS property name\n * @return JavaScript property name\n */\nexport function cssToJSProp(prefix: string, cssPropName: string): string {\n  if (prefix) {\n    cssPropName = `-${cssPropName}`;\n    prefix = prefix.replace(/-/g, \"\");\n    if (prefix === \"moz\") {\n      prefix = \"Moz\";\n    }\n  }\n  return (\n    prefix +\n    cssPropName.replace(/-[a-z]/g, (txt) => txt.substr(1).toUpperCase())\n  );\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  const style = document.documentElement.style;\n  return typeof style[cssToJSProp(prefix, prop)] === \"string\";\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n    case \"filter\":\n      // Special case: prefer '-webkit-filter' to 'filter'\n      if (checkIfPropertySupported(\"-webkit-\", \"filter\")) {\n        propNameMap[prop] = [\"-webkit-filter\"];\n        return [\"-webkit-filter\"];\n      }\n      break;\n    case \"clip-path\":\n      // Special case for chrome.\n      if (checkIfPropertySupported(\"-webkit-\", \"clip-path\")) {\n        return (propNameMap[prop] = [\"-webkit-clip-path\", \"clip-path\"]);\n      }\n      break;\n    case \"margin-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-start\")) {\n        propNameMap[prop] = [\"-webkit-margin-start\"];\n        return [\"-webkit-margin-start\"];\n      }\n      break;\n    case \"margin-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"margin-end\")) {\n        propNameMap[prop] = [\"-webkit-margin-end\"];\n        return [\"-webkit-margin-end\"];\n      }\n      break;\n    case \"padding-inline-start\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-start\")) {\n        propNameMap[prop] = [\"-webkit-padding-start\"];\n        return [\"-webkit-padding-start\"];\n      }\n      break;\n    case \"padding-inline-end\":\n      if (checkIfPropertySupported(\"-webkit-\", \"padding-end\")) {\n        propNameMap[prop] = [\"-webkit-padding-end\"];\n        return [\"-webkit-padding-end\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = prefix + prop;\n      propNameMap[prop] = [prefixed];\n      return [prefixed];\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  try {\n    const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n    if (!prefixedPropertyNames) {\n      return;\n    }\n    const elemStyle = (elem as HTMLElement)?.style;\n    if (!elemStyle) {\n      return;\n    }\n    prefixedPropertyNames.forEach((prefixed) => {\n      switch (prefixed) {\n        case \"-webkit-text-combine\": // for Safari\n          switch (value) {\n            case \"all\":\n              value = \"horizontal\";\n              break;\n          }\n          break;\n        case \"text-combine-upright\":\n          switch (value) {\n            case \"all\":\n              // workaround for Chrome 93 bug https://crbug.com/1242755\n              elemStyle.setProperty(\"text-indent\", \"0\");\n              break;\n          }\n          break;\n      }\n      elemStyle.setProperty(prefixed, value);\n    });\n  } catch (err) {\n    Logging.logger.warn(err);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      throw new Error(\"E_CFI_ID_MISMATCH\");\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  /**\n   * @return void\n   */\n  visitValues(values: Val[]): any {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n  }\n\n  visitEmpty(empty: Val): Val {\n    throw new Error(\"E_CSS_EMPTY_NOT_ALLOWED\");\n  }\n\n  visitSlash(slash: Val): Val {\n    throw new Error(\"E_CSS_SLASH_NOT_ALLOWED\");\n  }\n\n  visitStr(str: Str): Val {\n    throw new Error(\"E_CSS_STR_NOT_ALLOWED\");\n  }\n\n  visitIdent(ident: Ident): Val {\n    throw new Error(\"E_CSS_IDENT_NOT_ALLOWED\");\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    throw new Error(\"E_CSS_NUMERIC_NOT_ALLOWED\");\n  }\n\n  visitNum(num: Num): Val {\n    throw new Error(\"E_CSS_NUM_NOT_ALLOWED\");\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitColor(color: Color): Val {\n    throw new Error(\"E_CSS_COLOR_NOT_ALLOWED\");\n  }\n\n  visitURL(url: URL): Val {\n    throw new Error(\"E_CSS_URL_NOT_ALLOWED\");\n  }\n\n  visitURange(urange: URange): Val {\n    throw new Error(\"E_CSS_URANGE_NOT_ALLOWED\");\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    throw new Error(\"E_CSS_LIST_NOT_ALLOWED\");\n  }\n\n  visitCommaList(list: CommaList): Val {\n    throw new Error(\"E_CSS_COMMA_NOT_ALLOWED\");\n  }\n\n  visitFunc(func: Func): Val {\n    throw new Error(\"E_CSS_FUNC_NOT_ALLOWED\");\n  }\n\n  visitExpr(expr: Expr): Val {\n    throw new Error(\"E_CSS_EXPR_NOT_ALLOWED\");\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  constructor() {\n    super();\n  }\n\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Color): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: any): any {\n    throw new Error(\"F_ABSTRACT\");\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class Color extends Val {\n  constructor(public rgb: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    const str = this.rgb.toString(16);\n    buf.append(\"000000\".substr(str.length));\n    buf.append(str);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0].appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i].appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"-epubx-expr(\");\n    this.expr.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: any): any {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code <= 65535) {\n    return String.fromCharCode(code);\n  }\n  if (code <= 1114111) {\n    // non-BMP characters: convert to a surrogate pair\n    return String.fromCharCode(\n      55296 | ((code >> 10) & 1023),\n      56320 | (code & 1023),\n    );\n  }\n\n  // not a valid Unicode value\n  return \"\\ufffd\";\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  INVALID,\n  LAST = 51,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.ENDNOTK,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  9 /*tab*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  32 /*sp*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      if (oldIndex == this.curr) {\n        this.curr = newIndex;\n      }\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = input.substring(tokenPosition, position);\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^\\+[?0-9a-fA-F]/.test(input.substr(position, 2)) &&\n              /\\bunicode-range\\s*:\\s*(u\\+[-?0-9a-f]+\\s*,\\s*)*u$/i.test(\n                input.substr(0, position),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          continue;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src: string): Fetcher<string> {\n  let width: string | null = null;\n  let height: string | null = null;\n  if (elem.localName == \"img\") {\n    width = elem.getAttribute(\"width\");\n    height = elem.getAttribute(\"height\");\n  }\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadImage\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      if (elem.localName == \"img\") {\n        // IE puts these bogus attributes, even if they were not present\n        if (!width) {\n          elem.removeAttribute(\"width\");\n        }\n        if (!height) {\n          elem.removeAttribute(\"height\");\n        }\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: -webkit-flex;\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    -webkit-flex: none;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    -webkit-flex: none;\n    flex: none;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -moz-transform-origin: left top;\n    -webkit-transform-origin: left top;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row;\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    -webkit-flex-direction: row-reverse;\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    -webkit-flex: none;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  overflow: hidden;\n  max-width: 100%;\n  max-height: 100%;\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    -moz-transform: none !important;\n    -webkit-transform: none !important;\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-width: 100%;\n    height: 100% !important;\n    max-height: 100%;\n  }\n\n  /* Workaround for Chrome printing problem */\n  /* [data-vivliostyle-page-box] {\n        padding-bottom: 0 !important;\n        overflow: visible !important;\n    } */\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document regexp('.*') {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nSCOLOR = HASHCOLOR | aliceblue: #F0F8FF | antiquewhite: #FAEBD7 | aqua: #00FFFF | aquamarine: #7FFFD4 | azure: #F0FFFF |\n    beige: #F5F5DC | bisque: #FFE4C4 | black: #000000 | blanchedalmond: #FFEBCD | blue: #0000FF | blueviolet: #8A2BE2 | brown: #A52A2A |\n    burlywood: #DEB887 | cadetblue: #5F9EA0 | chartreuse: #7FFF00 | chocolate: #D2691E | coral: #FF7F50 | cornflowerblue: #6495ED |\n    cornsilk: #FFF8DC | crimson: #DC143C | cyan: #00FFFF | darkblue: #00008B | darkcyan: #008B8B | darkgoldenrod: #B8860B |\n    darkgray: #A9A9A9 | darkgreen: #006400 | darkgrey: #A9A9A9 | darkkhaki: #BDB76B | darkmagenta: #8B008B | darkolivegreen: #556B2F |\n    darkorange: #FF8C00 | darkorchid: #9932CC | darkred: #8B0000 | darksalmon: #E9967A | darkseagreen: #8FBC8F | darkslateblue: #483D8B |\n    darkslategray: #2F4F4F | darkslategrey: #2F4F4F | darkturquoise: #00CED1 | darkviolet: #9400D3 | deeppink: #FF1493 |\n    deepskyblue: #00BFFF | dimgray: #696969 | dimgrey: #696969 | dodgerblue: #1E90FF | firebrick: #B22222 | floralwhite: #FFFAF0 |\n    forestgreen: #228B22 | fuchsia: #FF00FF | gainsboro: #DCDCDC | ghostwhite: #F8F8FF | gold: #FFD700 | goldenrod: #DAA520 |\n    gray: #808080 | green: #008000 | greenyellow: #ADFF2F | grey: #808080 | honeydew: #F0FFF0 | hotpink: #FF69B4 | indianred: #CD5C5C |\n    indigo: #4B0082 | ivory: #FFFFF0 | khaki: #F0E68C | lavender: #E6E6FA | lavenderblush: #FFF0F5 | lawngreen: #7CFC00 |\n    lemonchiffon: #FFFACD | lightblue: #ADD8E6 | lightcoral: #F08080 | lightcyan: #E0FFFF | lightgoldenrodyellow: #FAFAD2 |\n    lightgray: #D3D3D3 | lightgreen: #90EE90 | lightgrey: #D3D3D3 | lightpink: #FFB6C1 | lightsalmon: #FFA07A | lightseagreen: #20B2AA |\n    lightskyblue: #87CEFA | lightslategray: #778899 | lightslategrey: #778899 | lightsteelblue: #B0C4DE | lightyellow: #FFFFE0 |\n    lime: #00FF00 | limegreen: #32CD32 | linen: #FAF0E6 | magenta: #FF00FF | maroon: #800000 | mediumaquamarine: #66CDAA |\n    mediumblue: #0000CD | mediumorchid: #BA55D3 | mediumpurple: #9370DB | mediumseagreen: #3CB371 | mediumslateblue: #7B68EE |\n    mediumspringgreen: #00FA9A | mediumturquoise: #48D1CC | mediumvioletred: #C71585 | midnightblue: #191970 | mintcream: #F5FFFA |\n    mistyrose: #FFE4E1 | moccasin: #FFE4B5 | navajowhite: #FFDEAD | navy: #000080 | oldlace: #FDF5E6 | olive: #808000 |\n    olivedrab: #6B8E23 | orange: #FFA500 | orangered: #FF4500 | orchid: #DA70D6 | palegoldenrod: #EEE8AA | palegreen: #98FB98 |\n    paleturquoise: #AFEEEE | palevioletred: #DB7093 | papayawhip: #FFEFD5 | peachpuff: #FFDAB9 | peru: #CD853F | pink: #FFC0CB |\n    plum: #DDA0DD | powderblue: #B0E0E6 | purple: #800080 | rebeccapurple: #663399 | red: #FF0000 | rosybrown: #BC8F8F | royalblue: #4169E1 |\n    saddlebrown: #8B4513 | salmon: #FA8072 | sandybrown: #F4A460 | seagreen: #2E8B57 | seashell: #FFF5EE | sienna: #A0522D |\n    silver: #C0C0C0 | skyblue: #87CEEB | slateblue: #6A5ACD | slategray: #708090 | slategrey: #708090 | snow: #FFFAFA |\n    springgreen: #00FF7F | steelblue: #4682B4 | tan: #D2B48C | teal: #008080 | thistle: #D8BFD8 | tomato: #FF6347 |\n    turquoise: #40E0D0 | violet: #EE82EE | wheat: #F5DEB3 | white: #FFFFFF | whitesmoke: #F5F5F5 | yellow: #FFFF00 |\n    yellowgreen: #9ACD32 | transparent | currentcolor;\nRGBCOLOR = rgb(INT{3}) | rgb(STRICT_PERCENTAGE{3});\nRGBACOLOR = rgba(NUM{4}) | rgba(STRICT_PERCENTAGE{3} NUM);\nHSLCOLOR = hsl(NUM PERCENTAGE{2});\nHSLACOLOR = hsl(NUM PERCENTAGE{2} NUM);\nCOLOR = SCOLOR | RGBCOLOR | RGBACOLOR | HSLCOLOR | HSLACOLOR;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nSIDE_OR_CORNER =  [left | right] || [top | bottom];\nCOLOR_STOP = SPACE(COLOR [PERCENTAGE | LENGTH]?);\nLINEAR_GRADIENT = linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |\n                  repeating-linear-gradient([ANGLE | SPACE(to SIDE_OR_CORNER)]? COLOR_STOP+) |;\nGRADIENT_EXTENT = closest-corner | closest-side | farthest-corner | farthest-side;\nGRADIENT_POSITION = at BG_POSITION_TERM{1,4};\nGRADIENT_SHAPE = SPACE(circle LENGTH? GRADIENT_POSITION?) | SPACE(ellipse PLENGTH{2}? GRADIENT_POSITION?)| SPACE([circle | ellipse] GRADIENT_EXTENT? GRADIENT_POSITION?);\nRADIAL_GRADIENT = radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+) |\n                  repeating-radial-gradient([GRADIENT_SHAPE | SPACE(GRADIENT_POSITION)]? COLOR_STOP+);\nURI_OR_NONE = URI | none;\nIMAGE =  URI | LINEAR_GRADIENT | RADIAL_GRADIENT | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing = normal | none | auto | [[ trim-start | space-start | space-first ] ||\n    [ trim-end | space-end | allow-end ] || [ trim-adjacent | space-adjacent ] ||\n    no-compress || ideograph-alpha || ideograph-numeric || punctuation];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n\n// text-polyfill.css\nexport const TextPolyfillCss = `\nviv-ts-open:not(.viv-ts-trim,.viv-ts-space,.viv-hang-first)::before,\nviv-ts-close:not(.viv-ts-trim,.viv-ts-space,.viv-hang-last)::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  font-size: 83%;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-open:not(.viv-ts-space,.viv-hang-first) > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close:not(.viv-ts-space,.viv-hang-last,.viv-hang-end:not(.viv-ts-trim)) > viv-ts-inner {\n  margin-inline-end: -0.5em;\n}\nviv-ts-close.viv-hang-end:not(.viv-ts-trim,.viv-hang-hw)::after {\n  font-size: 166%;\n}\nviv-ts-close.viv-hang-end:not(.viv-ts-trim) > viv-ts-inner {\n  margin-inline-end: -1em;\n}\nviv-ts-close.viv-hang-end.viv-hang-hw > viv-ts-inner {\n  margin-inline-end: -0.5em;\n}\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  display: inline-block;\n  inline-size: 0;\n  text-indent: 0;\n  text-align: start;\n  text-align-last: start;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  font-size: 66.6%;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 16777216;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 33554432;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 50331648;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 67108864;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 83886080;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 100663296;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\n/**\n * CSS Color value from hash text (without '#' character).\n */\nexport function colorFromHash(text: string): Css.Color {\n  let num = parseInt(text, 16);\n  if (isNaN(num)) {\n    throw new Error(\"E_CSS_COLOR\");\n  }\n  if (text.length == 6) {\n    return new Css.Color(num);\n  }\n  if (text.length == 3) {\n    num =\n      (num & 15) |\n      ((num & 15) << 4) |\n      ((num & 240) << 4) |\n      ((num & 240) << 8) |\n      ((num & 3840) << 8) |\n      ((num & 3840) << 12);\n    return new Css.Color(num);\n  }\n  throw new Error(\"E_CSS_COLOR\");\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index == valStack.length) {\n        break;\n      }\n      if (valStack[index++] != sep) {\n        throw new Error(\"Unexpected state\");\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return null;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    return valStack[0] as Css.Val;\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          try {\n            valStack.push(colorFromHash(token.text));\n          } catch (err) {\n            if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n              tokenizer.reset();\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n              continue;\n            }\n            handler.error(\"E_CSS_COLOR\", token);\n            this.actions = actionsError;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"calc\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (token.type === CssTokenizer.TokenType.O_BRC) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export interface ElementStyle {}\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(element: Element, styles: { [key: string]: Css.Val });\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    nps1.node === nps2.node &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page ||\n      this.highestSeenOffset !== other.highestSeenOffset\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setHorizontalPosition(start + extent * this.getBoxDir(), extent);\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    val !== Css.ident.inherit\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade } from \"./types\";\n\nexport interface ElementStyle extends CssCascade.ElementStyle {}\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-block should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName: string): Css.Val {\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority > tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name];\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): any {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyleMap }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyleMap;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target as ElementStyleMap,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: any): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val: Css.Val = pseudos?.[pseudoName]?.[\"content\"]?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return new Css.Str(\"\");\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 1048576;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal = Css.ident.inline;\n    const display = props[\"display\"];\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal = Css.ident.inline;\n    const float = props[\"float\"];\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"];\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"];\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"];\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = this.currentStyle[\"counter-increment\"]?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            incrPropValue.values?.includes(Css.ident.footnote)\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet: CascadeValue = props[\"string-set\"];\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    if (pseudoprops[\"content\"]) {\n      pseudoprops[\"content\"] = pseudoprops[\"content\"].filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"];\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(visitor, elementStyle): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName)) {\n        elementStyle[propName] = elementStyle[propName].filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\",\n  /* content */\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    this.specificity += 1;\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (writingMode && writingMode !== Css.ident.inherit) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (direction && direction !== Css.ident.inherit) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  const element = node.nodeType == 1 ? (node as Element) : node.parentElement;\n  if (element && element instanceof HTMLElement) {\n    if (element.localName === \"rt\" && element.style[\"zoom\"]) {\n      // \"zoom\" is set in fixRubyTextFontSize() to fix the issue #673 for Chrome.\n      // when zoom is set, it is hard to get the edge value, so return NaN.\n      // (Fix for issues #804 and #808)\n      return NaN;\n    }\n    if (/^([\\d\\.]|super|(text-)?top)/.test(element.style.verticalAlign)) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nconst specialInlineDisplayTypes = {\n  ruby: true,\n  \"ruby-base\": true,\n  \"ruby-base-container\": true,\n  \"ruby-text\": true,\n  \"ruby-text-container\": true,\n  \"inline-block\": true,\n  \"inline-flex\": true,\n  \"inline-grid\": true,\n  \"inline-list-item\": true,\n  \"inline-table\": true,\n};\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return !!specialInlineDisplayTypes[display];\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  if (!nodeContext) {\n    return false;\n  }\n  const viewNode = nodeContext.viewNode;\n  if (viewNode && viewNode.nodeType === 1 && isSpecial(viewNode as Element)) {\n    return true;\n  }\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (isSpecialInlineDisplay(p.display)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if ((float && float !== Css.ident.none) || isRoot) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode instanceof Text &&\n          position.sourceNode.nextSibling instanceof Text &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '“Foo' may be split to '“' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        parent.viewNode.appendChild(nodeContext.viewNode);\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      const parentElem = nodeContext.parent?.viewNode as Element;\n      const textAlign =\n        parentElem &&\n        this.clientLayout.getElementComputedStyle(parentElem).textAlign;\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos - minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          this.postLayoutBlock(nodeContext, checkPoints);\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test((node as Element).localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      return vertical ? rect[\"height\"] : rect[\"width\"];\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Layout from \"./layout\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { TextPolyfillCss } from \"./assets\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  end: boolean;\n  allowEnd: boolean;\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  end: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.end = true;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.end = true;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\ntype TextSpacing = {\n  trimStart: boolean;\n  spaceFirst: boolean;\n  trimEnd: boolean;\n  allowEnd: boolean;\n  trimAdjacent: boolean;\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n};\n\n/**\n * text-spacing: none\n * none = space-start space-end space-adjacent\n */\nconst TEXT_SPACING_NONE: TextSpacing = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-spacing: normal\n * normal = space-first trim-end trim-adjacent\n */\nconst TEXT_SPACING_NORMAL: TextSpacing = {\n  trimStart: true,\n  spaceFirst: true,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n/**\n * text-spacing: auto\n * auto = trim-start trim-end trim-adjacent ideograph-alpha ideograph-numeric\n */\nconst TEXT_SPACING_AUTO: TextSpacing = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction textSpacingFromPropertyValue(value: PropertyValue): TextSpacing {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return TEXT_SPACING_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return TEXT_SPACING_NONE;\n  }\n  if (cssval === Css.ident.auto) {\n    return TEXT_SPACING_AUTO;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: TextSpacing = Object.create(TEXT_SPACING_NORMAL);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n        case \"ideograph-alpha\":\n          textSpacing.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          textSpacing.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nclass TextSpacingPolyfill {\n  textSpacingProcessed = false;\n\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-spacing\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = document.createNodeIterator(\n      document.body,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}'\"、。，．：；､｡]\\p{M}*(?=\\P{M})|.(?=[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}'\"、。，．：；､｡])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    column: Layout.Column,\n  ): void {\n    const isFirstFragment = !nodeContext || nodeContext.fragmentIndex === 1;\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        p.viewNode.textContent.trimStart().length > 0\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const textSpacing = textSpacingFromPropertyValue(\n          p.inheritedProps[\"text-spacing\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstInBlock = i === 0 && isFirstFragment;\n        let isFirstAfterForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode instanceof Element) {\n            return prevP.viewNode.localName === \"br\";\n          }\n          if (prevP.viewNode instanceof Text) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n\\s*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (prevP.viewNode.previousElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && prevP.display !== \"inline\") ||\n            (prevP.viewNode instanceof Element &&\n              (prevP.viewNode.localName === \"br\" ||\n                Layout.mediaTags[prevP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (prev === 0 && isFirstFragment) {\n            isFirstInBlock = true;\n            isFirstAfterForcedLineBreak = true;\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && nextP.display !== \"inline\") ||\n            (nextP.viewNode instanceof Element &&\n              (nextP.viewNode.localName === \"br\" ||\n                Layout.mediaTags[nextP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastInBlock = true;\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          textSpacing,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    textSpacing: TextSpacing,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n\n    let punctProcessing = false;\n    let hanging = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hanging = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hanging = true;\n    } else if (hangingPunctuation.end && /^[、。，．､｡]\\p{M}*$/u.test(text)) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hanging = true;\n    } else if (\n      (textSpacing.trimStart || textSpacing.trimAdjacent) &&\n      /^[‘“〝（［｛｟〈〈《「『【〔〖〘〚]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (textSpacing.trimEnd || textSpacing.trimAdjacent) &&\n      (/^[’”〞〟）］｝｠〉〉》」』】〕〗〙〛]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[：；]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[、。，．]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    function checkFullWidth(innerElem: HTMLElement): boolean {\n      // Check if the punctuation is really full width\n      const fullWidthElem = document.createElement(\"viv-ts-inner\");\n      fullWidthElem.appendChild(document.createTextNode(\"水\"));\n      const outerElem = innerElem.parentElement;\n      outerElem.appendChild(fullWidthElem);\n      const isFullWidth = vertical\n        ? innerElem.offsetHeight >= fullWidthElem.offsetHeight * 0.9\n        : innerElem.offsetWidth >= fullWidthElem.offsetWidth * 0.9;\n      outerElem.removeChild(fullWidthElem);\n      return isFullWidth;\n    }\n\n    if (punctProcessing) {\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      if (hanging || checkFullWidth(innerElem)) {\n        if (tagName === \"viv-ts-open\") {\n          if (hanging && hangingPunctuation.first) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]\\p{M}*$/u.test(\n              prevNode.textContent,\n            )\n          ) {\n            if (textSpacing.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (textSpacing.spaceFirst || !textSpacing.trimStart) {\n              outerElem.className = \"viv-ts-first viv-ts-space\";\n            } else {\n              outerElem.className = \"viv-ts-first\";\n            }\n          } else if (!textSpacing.trimStart) {\n            outerElem.className = \"viv-ts-space\";\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hanging && hangingPunctuation.last) {\n            outerElem.className = \"viv-hang-last\";\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (textSpacing.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hanging && hangingPunctuation.end) {\n            if (checkFullWidth(innerElem)) {\n              outerElem.className = \"viv-hang-end\";\n            } else {\n              // Halfwidth \"､｡\" or half width glyph of \"、。\"\n              outerElem.className = \"viv-hang-end viv-hang-hw\";\n            }\n          } else if (!textSpacing.trimEnd) {\n            outerElem.className = \"viv-ts-space\";\n          }\n        }\n      } else {\n        // Undo the processing\n        outerElem.parentNode.insertBefore(textNode, outerElem);\n        outerElem.parentNode.removeChild(outerElem);\n        punctProcessing = false;\n      }\n    } else {\n      punctProcessing = false;\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      if (!elem || !(elem instanceof HTMLElement)) {\n        return false;\n      }\n      if (elem.style.textOrientation === \"upright\") {\n        return true;\n      }\n      if (elem.style.textCombineUpright === \"all\") {\n        return true;\n      }\n      return checkUpright(elem.parentElement);\n    }\n\n    if (textSpacing.ideographAlpha || textSpacing.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n\n    if (punctProcessing || spaceIdeoAlnumProcessing) {\n      if (!this.textSpacingProcessed) {\n        this.initTextPolyfillCss(document.head);\n        this.textSpacingProcessed = true;\n      }\n    }\n  }\n\n  private initTextPolyfillCss(head: Element): void {\n    const style = head.ownerDocument.createElement(\"style\");\n    style.textContent = TextPolyfillCss;\n    head.appendChild(style);\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 1;\n\nexport const ALLOW_STR = 2;\n\nexport const ALLOW_IDENT = 4;\n\nexport const ALLOW_POS_NUMERIC = 8;\n\nexport const ALLOW_POS_NUM = 16;\n\nexport const ALLOW_POS_INT = 32;\n\nexport const ALLOW_COLOR = 64;\n\nexport const ALLOW_URL = 128;\n\nexport const ALLOW_NEGATIVE = 256;\n\nexport const ALLOW_ZERO = 512;\n\nexport const ALLOW_ZERO_PERCENT = 1024;\n\nexport const ALLOW_SLASH = 2048;\n\nexport const ALLOW_URANGE = 4096;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      return color;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateInherit(important: boolean, receiver: PropertyReceiver): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, Css.ident.inherit, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitColor(color: Css.Color): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    this.error = true;\n    return null;\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = CssParser.colorFromHash(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"HASHCOLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      receiver.unknownProperty(origName, value);\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        value === Css.ident.inherit || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (value === Css.ident.inherit) {\n        shorthand.propagateInherit(important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name];\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      Asserts.assert(whitespace !== null);\n      if (!Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name];\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    [\"writing-mode\", \"direction\"].forEach((propName) => {\n      if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n        // Copy it over, but keep it at the root element as well.\n        this.rootStyle[propName] = elemStyle[propName];\n      }\n    });\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? elemStyle[\"background-color\"].evaluate(this.context)\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? elemStyle[\"background-image\"].evaluate(this.context)\n        : (null as Css.Val);\n      if (\n        (backgroundColor && backgroundColor !== Css.ident.inherit) ||\n        (backgroundImage && backgroundImage !== Css.ident.inherit)\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"];\n      let isRelativeFontSize = true;\n      if (fontSize) {\n        const val = fontSize.evaluate(this.context);\n        let px = val.num;\n        switch (val.unit) {\n          case \"em\":\n          case \"rem\":\n            px *= this.context.initialFontSize;\n            break;\n          case \"ex\":\n            px *=\n              (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n              Exprs.defaultUnitSizes[\"em\"];\n            break;\n          case \"%\":\n            px *= this.context.initialFontSize / 100;\n            break;\n          default: {\n            const unitSize = Exprs.defaultUnitSizes[val.unit];\n            if (unitSize) {\n              px *= unitSize;\n            }\n            isRelativeFontSize = false;\n          }\n        }\n        this.context.rootFontSize = px;\n        this.context.isRelativeRootFontSize = isRelativeFontSize;\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"];\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"];\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"];\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"];\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageType = style[\"page\"]?.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(element: Element, styles: { [key: string]: Css.Val }) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const probe = this.body.ownerDocument.createElement(\"span\");\n    probe.textContent = \"M\";\n    const killTime = new Date().valueOf() + 1000;\n    const style = this.head.ownerDocument.createElement(\"style\");\n    const bogusData = bogusFontData + bogusFontCounter++;\n    style.textContent = viewFontFace.makeAtRule(\"\", Net.makeBlob([bogusData]));\n    this.head.appendChild(style);\n    const probeCont = this.body.ownerDocument.createElement(\"span\");\n    probeCont.style.width = \"0\";\n    probeCont.style.height = \"0\";\n    probeCont.style.overflow = \"hidden\";\n    probeCont.appendChild(probe);\n    this.body.appendChild(probeCont);\n    probe.style.visibility = \"hidden\";\n    probe.style.fontFamily = fontFamily;\n    for (const pname in traitProps) {\n      Base.setCSSProperty(probe, pname, props[pname].toString());\n    }\n    const rect = probe.getBoundingClientRect();\n    const initWidth = rect.right - rect.left;\n    const initHeight = rect.bottom - rect.top;\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    Logging.logger.info(\"Starting to load font:\", src);\n    let loaded = false;\n    frame\n      .loop(() => {\n        const rect = probe.getBoundingClientRect();\n        const currWidth = rect.right - rect.left;\n        const currHeight = rect.bottom - rect.top;\n        if (initWidth != currWidth || initHeight != currHeight) {\n          loaded = true;\n          return Task.newResult(false);\n        }\n        const currTime = new Date().valueOf();\n        if (currTime > killTime) {\n          return Task.newResult(false);\n        }\n        return frame.sleep(10);\n      })\n      .then(() => {\n        if (loaded) {\n          Logging.logger.info(\"Loaded font:\", src);\n        } else {\n          Logging.logger.warn(\"Failed to load font:\", src);\n        }\n        this.body.removeChild(probeCont);\n        frame.finish(viewFontFace);\n      });\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.warn(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    if (style[\"content\"]) {\n      style[\"content\"] = style[\"content\"].filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    Base.setCSSProperty(container.element, \"overflow\", \"hidden\"); // default value\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  let writingMode = style[\"writing-mode\"];\n  writingMode = writingMode && writingMode.value;\n  let direction = style[\"direction\"];\n  direction = direction && direction.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marks = style[\"marks\"];\n  if (marks && marks.value !== Css.ident.none) {\n    pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n  }\n  const bleed = style[\"bleed\"];\n  if (!bleed || bleed.value === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks) {\n      let hasCrop = false;\n      if (marks.value.isSpaceList()) {\n        hasCrop = (marks.value as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks.value === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.value && bleed.value.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed.value as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    pageSizeAndBleed.bleed.num *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    pageSizeAndBleed.bleedOffset.num *\n    context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false);\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"black\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"];\n  if (marks) {\n    const value = marks.value;\n    if (value.isSpaceList()) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Css.toNumber(defaultPrinterMarkOffset, context);\n  const lineLength = Css.toNumber(defaultPrinterMarkLineLength, context);\n\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\"background-color\"];\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (val && val.value !== Css.ident.inherit) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop];\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"];\n    if (size) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"],\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"],\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(props, n, noPageSelectorProps[n]);\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"];\n          if (\n            !content ||\n            content === Css.ident.normal ||\n            content === Css.ident.none\n          ) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle = (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.isRelativeRootFontSize\n      ? this.context.initialFontSize // Fix for issue #549\n      : this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (value.value !== Css.ident.inherit) {\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReference =\n      elementStyle[\"float-reference\"] &&\n      PageFloats.floatReferenceOf(\n        elementStyle[\"float-reference\"].value.toString(),\n      );\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(element, computedStyle);\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"];\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"];\n      let floatSide = computedStyle[\"float\"];\n      let clearSide = computedStyle[\"clear\"];\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"],\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      if (\n        floating ||\n        (computedStyle[\"break-inside\"] &&\n          computedStyle[\"break-inside\"] !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      this.nodeContext.floatMinWrapBlock =\n        computedStyle[\"float-min-wrap-block\"] || null;\n      this.nodeContext.columnSpan = computedStyle[\"column-span\"];\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        let pageType = computedStyle[\"page\"]?.toString() || null;\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing;\n        let blockBorderSpacing;\n        if (borderSpacing) {\n          if (borderSpacing.isSpaceList()) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      this.nodeContext.footnotePolicy = computedStyle[\"footnote-policy\"];\n      const firstPseudo = computedStyle[\"x-first-pseudo\"];\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter !== Css.ident.auto) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (\n            elementStyle[\"content\"] &&\n            elementStyle[\"content\"].value &&\n            elementStyle[\"content\"].value.url\n          ) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                attributeValue = this.documentURLTransformer.transformFragment(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n                result.setAttribute(attributeName, attributeValue);\n                this.page.registerElementWithId(result, attributeValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (repeatOnBreak === Css.ident.auto) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || value === Css.empty) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem &&\n        parseFloat(this.viewport.window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport \"./text-polyfill\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"];\n      const height = viewportProps[\"height\"];\n      const textZoom = viewportProps[\"text-zoom\"];\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).thenFinish(frame);\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    Object.keys(pageProps).forEach((selector) => {\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageProps[selector] as any),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Fix for issue #681\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats.\n    if (\n      deferredFloats.length &&\n      deferredFloats[0].float.floatReference === \"page\"\n    ) {\n      const deferredFloatNode =\n        deferredFloats[0].float.nodePosition.steps[0].node;\n      const deferredFloatOffset =\n        deferredFloatNode &&\n        this.xmldoc.getNodeOffset(deferredFloatNode, 0, false);\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      if (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      ) {\n        return Task.newResult(true);\n      }\n    }\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        pageMaster.pageBox.specified[\"width\"].value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        pageMaster.pageBox.specified[\"height\"].value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n\n    // Shift 1px to workaround Chrome printing bug (Canceled because of another Chrome problem)\n    // page.bleedBox.style.paddingTop = `${evaluatedPageSizeAndBleed.bleed+1}px`;\n\n    // Shift 0.01px to workaround Firefox printing problem\n    // (This small value (< 1/64 px) has no effect to Chrome)\n    page.bleedBox.style.paddingTop = `${\n      evaluatedPageSizeAndBleed.bleed + 0.01\n    }px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = this.url + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      (doc && doc.title) ||\n      manifestObj[\"name\"] ||\n      (manifestObj[\"metadata\"] && manifestObj[\"metadata\"][\"title\"]);\n    if (title) {\n      this.metadata[metaTerms.title] = [{ v: title }];\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getCurrentSpread\");\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(\n        /** @type Vtree.Spread */\n        { left: null, right: null } as Vtree.Spread,\n      );\n    }\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    // Workaround for Chromium problem (issues #758 and #793).\n    // Chromium currently uses legacy engine for multicol and print\n    // and uses new engine (LayoutNG) for non-multicol screen,\n    // so need to use multicol to match screen and print layouts.\n    // This will be unnecessary when the Chromium issue is resolved:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=829028\n    pageCont.style.columnCount = \"1\";\n    pageCont.style.height = \"99999999px\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n      pageCont.setAttribute(\"aria-hidden\", \"true\");\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (page.offset === 0) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    const document = window.document;\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = document.getElementById(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n      page.container.setAttribute(\"aria-hidden\", \"true\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n    page.container.setAttribute(\"aria-hidden\", \"false\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    if (!this.pageSheetSizeAlreadySet && this.pageRuleStyleElement) {\n      let styleText = \"\";\n      Object.keys(pageSheetSize).forEach((selector) => {\n        styleText += `@page ${selector}{margin:0;size:`;\n        const size = pageSheetSize[selector];\n        styleText += `${size.width}px ${size.height}px;}`;\n      });\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          if (this.renderAllPages) {\n                            this.setReadyState(Constants.ReadyState.COMPLETE);\n                          }\n                          this.callback({ t: \"loaded\" });\n                          frame.finish(p);\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer.showCurrent(viewer.currentPage, true).then(() => {\n                loopFrame.continueLoop();\n              });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\nimport { VivliostyleViewportCss, VivliostyleViewportScreenCss } from \"./assets\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>${VivliostyleViewportCss}</style>\n          <style>${VivliostyleViewportScreenCss}</style>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer(\n        {\n          viewportElement: this.iframeWin.document.body\n            .firstElementChild as HTMLElement,\n          window: this.iframeWin,\n          debug: true,\n        },\n        {\n          defaultPaperSize: {\n            width: 794, // These numbers give weird output, but not setting them crashes the browser when there is no CSS.\n            height: 1122,\n          },\n        },\n      );\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","document","documentElement","style","cssPropName","txt","toUpperCase","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","prefixedPropertyNames","elemStyle","setProperty","err","getCSSProperty","opt_value","propertyNames","getPropertyValue","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","Color","rgb","URL","URange","urangeText","appendList","separator","Expr","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","fullURange","processingOrder","processingOrderFn","name1","name2","Number","MAX_VALUE","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCharCode","escapeParse","Action","Token","precededBySpace","position","EOF","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","BANG","STR2","HASH","DOLLAR","PERCENT","AMP","STR1","O_PAR","C_PAR","STAR","PLUS","COMMA","MINUS","DOT","SLASH","INT","COLON","SEMICOL","LT","EQ","GT","QMARK","AT","IDENT","O_BRK","BSLASH","C_BRK","HAT","O_BRC","BAR","C_BRC","TILDE","actionsIdent","ENDIDNT","FUNC","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","COL_COL","actionsBar","BAR_BAR","actionsAmp","AMP_AMP","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","CLASS","BANG_EQ","NUM","parseFloat","NUMERIC","URANGE","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","localName","removeAttribute","SVG","setAttributeNS","XLINK","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","TextPolyfillCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","colorFromHash","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","GT_EQ","LT_EQ","EQ_EQ","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","TILDE_EQ","BAR_EQ","HAT_EQ","DOLLAR_EQ","STAR_EQ","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","opacity","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowType","isSameShadowContext","shadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","ROOTLESS","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","ownerDocument","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","supportedNamespaces","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","getElementById","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","_this13","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement","_this$currentElement2","DOCUMENT_NODE","incrPropValue","_this$currentStyle$co","_incrPropValue$values","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","applyAttrFilterInner","elementStyle","pseudoMap","popRule","popElement","uaBaseCascade","CascadeParserHandler","validatorSet","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","cascVal","coupledName","targetName","coupledCascVal","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","toPhysicalMaps","toLogicalMaps","toLogical","Size","lineRelativeValues","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","CssLogicalUtil","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","calculateEdge","extraOffset","parentElement","HTMLElement","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","specialInlineDisplayTypes","ruby","isSpecialInlineDisplay","isSpecialNodeContext","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","getStyle","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","svg","audio","video","AllLayoutConstraint","constraints","BoxBreakPosition","checkPoints","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","firstLetterLength","Text","firstLetterText","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","postLayoutBlock","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","lineRelativeValue","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","parentElem","_nodeContext$parent","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","POST_LAYOUT_BLOCK","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","textNode","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","_nodeContext$parent2","layoutProcessor","_nodeContext$parent3","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","previousElementSibling","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","HANGING_PUNCTUATION_NONE","allowEnd","hangingPunctuationFromPropertyValue","cssval","hangingPunctuation","TEXT_SPACING_NONE","trimStart","spaceFirst","trimEnd","trimAdjacent","ideographAlpha","ideographNumeric","TEXT_SPACING_NORMAL","TEXT_SPACING_AUTO","textSpacingFromPropertyValue","textSpacing","normalizeLang","mean","textSpacingProcessed","getPolyfilledInheritedProps","preprocessSingleDocument","nodeIter","createNodeIterator","NodeFilter","SHOW_TEXT","nextNode","dataset","mathTypeset","textArr","lastIndex","isFirstFragment","checkIfFirstAfterForcedLineBreak","prevP","Element","prevNode","isFirstInBlock","isFirstAfterForcedLineBreak","isLastInBlock","nextP","processTextSpacing","tagName","punctProcessing","hanging","checkFullWidth","innerElem","fullWidthElem","outerElem","isFullWidth","offsetHeight","offsetWidth","spaceIdeoAlnumProcessing","checkUpright","textOrientation","textCombineUpright","initTextPolyfillCss","registerHooks","POLYFILLED_INHERITED_PROPS","PREPROCESS_SINGLE_DOCUMENT","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","_style$page","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","propList","setOwner","syntaxNodeForProperty","receiver","defaultValues","propagateInherit","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","InsetsSlashShorthandValidator","slashIndex","index1","CommaShorthandValidator","acc","FontShorthandValidator","_SimpleShorthandValid2","fontVariant","fontStretch","familyList","family","systemFonts","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","ValidatorSet","prefixes","namedValidators","shorthands","addReplacement","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","HASHCOLOR","POS_INT","POS_NUM","POS_PERCENTAGE","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","shorthand","pval","origName","rvalue","baseValidatorSet","traitProps","bogusFontData","bogusFontCounter","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","killTime","bogusData","probeCont","initWidth","initHeight","loaded","loadFont","srcFamilySrc","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","Constants","CornerMarkPosition","CrossMarkPosition","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","defaultPrinterMarkLineWidth","defaultPrinterMarkOffset","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","val1","marks","evaluatePageSizeAndBleed","evaluated","cropOffset","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","pageMarginBoxes","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","START","CENTER","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","frontEdgeBlackListVert","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","NCX","navParent","hp","behavior","iframe","contentWindow","navigator","epubReadingSystem","version","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributes","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","_this$viewRoot","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","_this$nodeContext2","_this$nodeContext2$pa","getComputedStyle","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","getClientRects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","fontFace","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","deferredFloatNode","deferredFloatOffset","pageStartPos","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","printerMarkOffset","bgcolor","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","anchorElem","showTOC","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","startsWith","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","math","MathJax","Hub","PageViewMode","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","OPFDocumentURLTransformer","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","newUrl","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","styleText","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","pageDim","FIT_INSIDE_VIEWPORT","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","AUTO_SPREAD","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","isArray","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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OACd5K,KAAe,QACf+iB,SAAmB,EAGjBxwB,KAAKmK,KAAOud,GAAU+I,cA6FVC,GAAYpK,EAAaqK,GACvC,IACIv4B,EADE8G,EAAchF,MAAM,KAE1B,IAAK9B,EAAI,EAAGA,EAAI,IAAKA,IACnB8G,EAAE9G,GAAKkuB,EAGT,IADApnB,EAAC0xB,IAAQtK,GAAO+J,GAAOQ,IAAMR,GAAOQ,IAAMR,GAAOS,QAC5C14B,EAAI,EAAGA,EAAIu4B,EAAKv6B,OAAQgC,GAAK,EAChC8G,EAAEyxB,EAAKv4B,IAAMu4B,EAAKv4B,EAAI,GAExB,OAAO8G,GAhGT,SAAYmxB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBAnFF,CAAYA,KAAAA,YAsGCU,GAA0B,CACrCV,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QACPT,GAAOW,MACPX,GAAOW,MACPX,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAO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CPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOmD,MACPnD,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOS,QACPT,GAAOoD,OACPpD,GAAOS,QACPT,GAAOS,QACPT,GAAOkD,QACPlD,GAAOS,QACPT,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAOkD,QACPlD,GAAO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nE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+D,OACP/D,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAO+C,KACP/C,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOmE,OACPnE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,KACPjE,GAAOiE,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AChC,IACAyK,eAGJ,IAAM/Q,EAAO9K,KAAKgvB,oBAAoB7c,EAAIf,EAAKpR,KAAKoH,KAAKm7C,eACzDviD,KAAKsiD,cAAclxC,EAAKtG,mBAzDcqb,aA+D5B08B,GAAkBzxC,GAChC,aACEA,GACAA,IAAQ+U,IACR/U,IAAQ+U,GAAUnG,QAClB5O,IAAQ+U,GAAUpG,MAClB3O,IAAQ+U,GAAU/G,YCvyCT87B,GAAiB,CAC5B,qBACA,oBACA,kBACA,eACAngC,SACA,yBACA,qBACAzjB,UACA8jD,aACA,iBACA0H,QACA,kBACA,eACA,kBACA,eACA,sBACA,iBACA,2BACA,gBACA,kBACA,4BACA,uBACA,0BACA,6BACA,iBACA,gCACA,yBACAC,WACA,yBACA,2BACA,0BACA,qBACA,sBACA,oBACA,gBACA,iBACA,sBACA,yBACA,qBACAC,UACA,gBACA,gBACA,kBACAC,WACA,mBACA,iBACA,oBACAC,UACA,gBACA,mBACA,qBACAC,UACA,sBACA,uBACA,oBACA,qBACA,uBACA,oBACA,kBACA,cACA,gBACA,qBACA,iBACA,0BACA,yBACA,4BACA,yBACA,0BACA,iBACA,kBACA,oBACA,sBACA,kBACA,oBACA,6BACA/O,cACA,iBACAgP,UACA,gBACA,kBACA,mBAGWC,GAA2B,CACtC,uBAGA,mBACA,UACA,UAaWC,GAAsB,CACjC,kCACA,kCACA,iCAGWC,GAAkB,CAC7B,WACA,YACA,iBACA,iBACA,iBACA,KAGWC,GAAwB,CAAC,QAAS,QAAS,KAE3CC,GAAyC,WAUpD,IATA,IAAMC,EAAQ,CAAC,OAAQ,QAAS,MAAO,UACjCC,EAAQ,CACZh9B,SACAC,UACA,eACA,gBACA,eACA,iBAEOxuB,EAAI,EAAGA,EAAImrD,GAAgBntD,OAAQgC,IAC1C,IAAK,IAAI+E,EAAI,EAAGA,EAAIumD,EAAMttD,OAAQ+G,IAEhCwmD,EADaJ,GAAgBnrD,GAAGgN,QAAQ,IAAKs+C,EAAMvmD,QAIvD,OAAOwmD,EAhB6C,YAmBtCC,GACdC,EACAC,GAGA,IADA,MAAMh6C,EAAM,OACUy5C,mBAAi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ACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISnC,GAAsB,CACjCoC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGEjyC,GAAQ,CACnBkyC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRlxC,KAAM,IAmEKqvC,GAAwC,CACnDN,UACAF,OAAQ,aACRG,QAAS,MACTF,SAAU,cA4DIqC,GAAUnxB,EAAkBoxB,GAC1C,IAAK,IAAM9zD,KAAK0iC,EACdoxB,EAAI9zD,GAAK0iC,EAAI1iC,GAAG4+C,YAypBRmV,GArpBCC,gCACX5I,QAAkB,OAClB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"}