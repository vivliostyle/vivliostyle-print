{"version":3,"file":"bundle.js","sources":["../node_modules/fast-diff/diff.js","../node_modules/@vivliostyle/core/src/vivliostyle/constants.ts","../node_modules/@vivliostyle/core/src/vivliostyle/logging.ts","../node_modules/@vivliostyle/core/src/vivliostyle/plugin.ts","../node_modules/@vivliostyle/core/src/vivliostyle/profile.ts","../node_modules/@vivliostyle/core/src/vivliostyle/base.ts","../node_modules/@vivliostyle/core/src/vivliostyle/cfi.ts","../node_modules/@vivliostyle/core/src/vivliostyle/exprs.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css.ts","../node_modules/@vivliostyle/core/src/vivliostyle/geometry-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-prop.ts","../node_modules/@vivliostyle/core/src/vivliostyle/counters.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-tokenizer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task.ts","../node_modules/@vivliostyle/core/src/vivliostyle/task-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/net.ts","../node_modules/@vivliostyle/core/src/vivliostyle/assets.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-parser.ts","../node_modules/@vivliostyle/core/src/vivliostyle/matchers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/types.ts","../node_modules/@vivliostyle/core/src/vivliostyle/diff.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vtree.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-cascade.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-logical-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sizing.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-floats.ts","../node_modules/@vivliostyle/core/src/vivliostyle/footnotes.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break.ts","../node_modules/@vivliostyle/core/src/vivliostyle/display.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-helper.ts","../node_modules/@vivliostyle/core/src/vivliostyle/break-position.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-processor.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-retryers.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/shared.ts","../node_modules/@vivliostyle/core/src/vivliostyle/text-polyfill.ts","../node_modules/@vivliostyle/core/src/vivliostyle/pseudo-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/layout.ts","../node_modules/@vivliostyle/core/src/vivliostyle/repetitive-element.ts","../node_modules/@vivliostyle/core/src/vivliostyle/table.ts","../node_modules/@vivliostyle/core/src/vivliostyle/math-util.ts","../node_modules/@vivliostyle/core/src/vivliostyle/columns.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-validator.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-styler.ts","../node_modules/@vivliostyle/core/src/vivliostyle/font.ts","../node_modules/@vivliostyle/core/src/vivliostyle/page-master.ts","../node_modules/@vivliostyle/core/src/vivliostyle/css-page.ts","../node_modules/@vivliostyle/core/src/vivliostyle/scripts.ts","../node_modules/@vivliostyle/core/src/vivliostyle/urls.ts","../node_modules/@vivliostyle/core/src/vivliostyle/vgen.ts","../node_modules/@vivliostyle/core/src/vivliostyle/xml-doc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/ops.ts","../node_modules/@vivliostyle/core/src/vivliostyle/sha1.ts","../node_modules/@vivliostyle/core/src/vivliostyle/toc.ts","../node_modules/@vivliostyle/core/src/vivliostyle/epub.ts","../node_modules/@vivliostyle/core/src/vivliostyle/adaptive-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/core-viewer.ts","../node_modules/@vivliostyle/core/src/vivliostyle/print.ts","index.js"],"sourcesContent":["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Constants\n */\n\n/**\n * Debug flag.\n */\nexport let isDebug: boolean = false;\nexport function setDebug(value: boolean): void {\n  isDebug = value;\n}\n\n/**\n * Page progression direction.\n * @enum {string}\n */\nexport enum PageProgression {\n  LTR = \"ltr\",\n  RTL = \"rtl\",\n}\n\n/**\n * Return PageProgression corresponding to the specified string\n */\nexport function pageProgressionOf(str: string): PageProgression {\n  switch (str) {\n    case \"ltr\":\n      return PageProgression.LTR;\n    case \"rtl\":\n      return PageProgression.RTL;\n    default:\n      throw new Error(`unknown PageProgression: ${str}`);\n  }\n}\n\n/**\n * Page side (left/right).\n * @enum {string}\n */\nexport enum PageSide {\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Viewer ready state.\n * @enum {string}\n */\nexport enum ReadyState {\n  LOADING = \"loading\",\n  INTERACTIVE = \"interactive\",\n  COMPLETE = \"complete\",\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Logging - Logging utility\n */\n\n/**\n * Log level.\n * @enum {number}\n */\nexport enum LogLevel {\n  DEBUG = 1,\n  INFO,\n  WARN,\n  ERROR,\n}\n\nexport type ErrorInfo = {\n  error: Error;\n  messages: any[];\n};\n\n/**\n * Class logging error, warning, information or debug messages.\n */\nexport class Logger {\n  private listeners: { [key in LogLevel]?: ((p1: ErrorInfo) => void)[] } = {};\n\n  constructor(private opt_console?: Console) {}\n\n  private consoleDebug(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.debug) {\n        this.opt_console.debug(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.debug(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleInfo(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.info) {\n        this.opt_console.info(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.info(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleWarn(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.warn) {\n        this.opt_console.warn(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.warn(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private consoleError(msg: any[]) {\n    if (this.opt_console) {\n      if (this.opt_console.error) {\n        this.opt_console.error(...msg);\n      } else {\n        this.opt_console.log(...msg);\n      }\n    } else {\n      console.error(...msg); // eslint-disable-line no-console\n    }\n  }\n\n  private triggerListeners(level: LogLevel, args: ErrorInfo) {\n    const listeners = this.listeners[level];\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(args);\n      });\n    }\n  }\n\n  /**\n   * Add a listener function invoked when a log event with the specified level\n   * occurs.\n   */\n  addListener(level: LogLevel, listener: (p1: ErrorInfo) => void) {\n    let listeners = this.listeners[level];\n    if (!listeners) {\n      listeners = this.listeners[level] = [];\n    }\n    listeners.push(listener);\n  }\n\n  debug(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleDebug(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.DEBUG, args);\n  }\n\n  info(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleInfo(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.INFO, args);\n  }\n\n  warn(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleWarn(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.WARN, args);\n  }\n\n  error(...var_args: any[]) {\n    const args = argumentsToErrorInfo(arguments);\n    this.consoleError(buildMessageAndStackTrace(args));\n    this.triggerListeners(LogLevel.ERROR, args);\n  }\n}\n\n/**\n * @param args\n */\nfunction argumentsToErrorInfo(args: IArguments): ErrorInfo {\n  const a = Array.from(args);\n  let e: Error = null;\n  if (a[0] instanceof Error) {\n    e = a.shift();\n  }\n  return { error: e, messages: a };\n}\n\nfunction buildMessageAndStackTrace(args: ErrorInfo): string[] {\n  const e = args.error;\n  const stack = e && (e[\"frameTrace\"] || e[\"stack\"]);\n  let messages = [].concat(args[\"messages\"]);\n  if (e) {\n    if (messages.length > 0) {\n      messages = messages.concat([\"\\n\"]);\n    }\n    messages = messages.concat([e[\"toString\"]()]);\n    if (stack) {\n      messages = messages.concat([\"\\n\"]).concat(stack);\n    }\n  }\n  return messages;\n}\n\nexport const logger = new Logger();\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Plugin - Plugin mechanism\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Type of implemented hooks.\n * @enum {string}\n */\nexport enum HOOKS {\n  /**\n   * Called when a single property declaration is parsed.\n   *\n   * The hook is called with an object with the following properties:\n   *   {string} name: Property name\n   *   {!Css.Val} value: Property value\n   *   {boolean} important: Whether '!important' flag is present or not\n   * Functions called by this hook are expected to return a value with the same\n   * type as the above. The declaration is then replaced by the returned value.\n   *\n   * Note that a shorthand declaration is not directly passed to this hook.\n   * After the shorthand declaration is interpreted and broken into\n   * non-shorthand declarations, the hook is called for each of the\n   * non-shorthand declarations.\n   */\n  SIMPLE_PROPERTY = \"SIMPLE_PROPERTY\",\n\n  /**\n   * Called when a single document (i.e. a single spine item) has been fetched,\n   * before parsing.\n   *\n   * The hook is called with the Document object.\n   */\n  PREPROCESS_SINGLE_DOCUMENT = \"PREPROCESS_SINGLE_DOCUMENT\",\n\n  /**\n   * Called before creating a text node for modifying a text content.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {string} sourceTextContent\n   *\n   * Functions called by this hook are expected to return a\n   * Task.Result.<string>. The text content is then replaced by the\n   * returned value.\n   */\n  PREPROCESS_TEXT_CONTENT = \"PREPROCESS_TEXT_CONTENT\",\n\n  /**\n   * Called before creating a element for modifying a element style.\n   *\n   * The hook is called with an object with the following properties:\n   *   {Vtree.NodeContext} nodeContext\n   *   {!Object} style\n   */\n  PREPROCESS_ELEMENT_STYLE = \"PREPROCESS_ELEMENT_STYLE\",\n\n  /**\n   * Called before geting CssCascade.polyfilledInheritedProps.\n   *\n   * The hook return a array of polyfilled inherited property name.\n   */\n  POLYFILLED_INHERITED_PROPS = \"POLYFILLED_INHERITED_PROPS\",\n\n  /**\n   * Called when a Viewer is configured.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Base.JSON} command\n   */\n  CONFIGURATION = \"CONFIGURATION\",\n\n  /**\n   * Called when resolving a text node breaker\n   * which detects an acceptable breakpoint and break text node at this point.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *\n   * Functions called by this hook are expected to\n   * return an instnce of {Layout.TextNodeBreaker} or null.\n   */\n  RESOLVE_TEXT_NODE_BREAKER = \"RESOLVE_TEXT_NODE_BREAKER\",\n\n  /**\n   * Called when resolving a formatting context.\n   *\n   * The hook is called with the following parameters:\n   *   nodeContext: a NodeContext object\n   *   firstTime: a boolean flag representing whether this node is encountered\n   * for the first time or not display: an Css.Ident value representing\n   * 'display' value of the node position: an Css.Ident value representing\n   * 'position' value of the node float: an Css.Ident value representing\n   * 'float' value of the node isRoot: a boolean flag representing whether this\n   * node is a root (of a flow) or not Functions called by this hook are\n   * expected to return a formatting context for the NodeContext.\n   */\n  RESOLVE_FORMATTING_CONTEXT = \"RESOLVE_FORMATTING_CONTEXT\",\n\n  /**\n   * Called when resolving a layout processor (LayoutProcessor) for\n   * a formatting context.\n   *\n   * The hook is called with a formatting context\n   * (Vtree.FormattingContext). Functions called by this hook are expected\n   * to return a layout processor corresponding to the formatting context.\n   */\n  RESOLVE_LAYOUT_PROCESSOR = \"RESOLVE_LAYOUT_PROCESSOR\",\n\n  /**\n   * Called after laid out a block contents.\n   *\n   * The hook is called with an object with the following properties:\n   *  {Vtree.NodeContext} nodeContext\n   *  {Array.<Vtree.NodeContext>} checkPoints\n   *  {Layout.Column} column\n   */\n  POST_LAYOUT_BLOCK = \"POST_LAYOUT_BLOCK\",\n}\n\nexport type PreProcessSingleDocumentHook = (p1: Document) => any;\n\nexport type PreProcessTextContentHook = (\n  p1: Vtree.NodeContext,\n  p2: string,\n) => Task.Result<string>;\n\nexport type PreProcessElementStyleHook = (\n  p1: Vtree.NodeContext,\n  p2: object,\n) => void;\n\nexport type PolyfilledInheritedPropsHook = () => string[];\n\nexport type ConfigurationHook = (p1: Base.JSON) => {\n  needResize: boolean | null | undefined;\n  needRefresh: boolean | null | undefined;\n};\n\nexport type ResolveTextNodeBreakerHook = (\n  p1: Vtree.NodeContext,\n) => Layout.TextNodeBreaker;\n\nexport type ResolveFormattingContextHook = (\n  p1: Vtree.NodeContext,\n  p2: boolean,\n  p3: Css.Ident,\n  p4: Css.Ident,\n  p5: Css.Ident,\n  p6: boolean,\n) => Vtree.FormattingContext;\n\nexport type ResolveLayoutProcessorHook = (\n  p1: Vtree.FormattingContext,\n) => LayoutProcessor.LayoutProcessor;\n\nexport type PostLayoutBlockHook = (\n  p1: Vtree.NodeContext,\n  p2: Vtree.NodeContext[],\n  p3: Layout.Column,\n) => void;\n\nconst hooks = {};\n\n/**\n * Register a function to a hook with the specified name.\n * The registered function is called at appropriate timings by the core code.\n * Arguments passed to the function depend on the hook.\n * When multiple functions are registered, they are called by the order in which\n * they are registered.\n * @param name Name of the hook.\n * @param fn Function to be registered to the hook.\n */\nexport function registerHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Skipping unknown plugin hook '${name}'.`));\n  } else {\n    let hooksForName = hooks[name];\n    if (!hooksForName) {\n      hooksForName = hooks[name] = [];\n    }\n    hooksForName.push(fn);\n  }\n}\n\n/**\n * Remove a function already registered to the specified name.\n * Note that even if the same function are registered multiple times, this\n * method removes only the first one.\n * @param name Name of the hook.\n * @param fn Function to be removed from the hook.\n */\nexport function removeHook(name: string, fn: (...p1) => any): void {\n  if (!HOOKS[name]) {\n    Logging.logger.warn(new Error(`Ignoring unknown plugin hook '${name}'.`));\n  } else {\n    const hooksForName = hooks[name];\n    if (hooksForName) {\n      const index = hooksForName.indexOf(fn);\n      if (index >= 0) {\n        hooksForName.splice(index, 1);\n      }\n    }\n  }\n}\n\n/**\n * Get all hooks registered to the specified name.\n * This method is for internal use (from the core code).\n */\nexport function getHooksForName(name: string): ((...p1) => any)[] {\n  const hooksForName = hooks[name];\n  return hooksForName || [];\n}\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const plugin = {\n  registerHook,\n  removeHook,\n};\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Profile - Utility for profiling\n */\nimport * as Logging from \"./logging\";\n\n/**\n * Performance profiler measuring execution time of the script.\n */\nexport class Profiler {\n  timestamps: { [key: string]: { [key: string]: number } } = {};\n  private registerTiming: (p1: string, p2: string, p3?: number) => any;\n  registerStartTiming: (name: string, timestamp?: number) => any;\n  registerEndTiming: (name: string, timestamp?: number) => any;\n\n  constructor(public readonly performanceInstance: Performance) {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Registers start timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterStartTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"start\", timestamp);\n  }\n\n  /**\n   * Registers end timing of some event, even if profile is disabled.\n   * @param name Name of event\n   * @param timestamp Used as the actual timestamp of the event if specified,\n   *     instead of \"now\"\n   */\n  forceRegisterEndTiming(name: string, timestamp?: number) {\n    registerTiming.call(this, name, \"end\", timestamp);\n  }\n\n  /**\n   * Log registered timings (start/end/duration).\n   * All values are printed in ms unit.\n   */\n  printTimings() {\n    const timestamps = this.timestamps;\n    let st = \"\";\n    Object.keys(timestamps).forEach((name) => {\n      const stamps = timestamps[name];\n      const l = stamps.length;\n      for (let i = 0; i < l; i++) {\n        const t = stamps[i];\n        st += name;\n        if (l > 1) {\n          st += `(${i})`;\n        }\n        st += ` => start: ${t[\"start\"]}, end: ${t[\"end\"]}, duration: ${\n          t[\"end\"] - t[\"start\"]\n        }\\n`;\n      }\n    });\n    Logging.logger.info(st);\n  }\n\n  /**\n   * Disable profiling.\n   */\n  disable() {\n    this.registerTiming = noop;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming = noop;\n    this[\"registerEndTiming\"] = this.registerEndTiming = noop;\n  }\n\n  /**\n   * Enable profiling.\n   */\n  enable() {\n    this.registerTiming = registerTiming;\n\n    // hack to export (non-prototype) methods\n    this[\"registerStartTiming\"] = this.registerStartTiming =\n      registerStartTiming;\n    this[\"registerEndTiming\"] = this.registerEndTiming = registerEndTiming;\n  }\n\n  /**\n   * Returns if profiling is enabled or not.\n   */\n  isEnabled(): boolean {\n    return this.registerStartTiming === registerStartTiming;\n  }\n}\n\nfunction noop(): void {}\n\n/**\n * Registers start/end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param startEnd Either of \"start\" or \"end\"\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerTiming(\n  name: string,\n  startEnd: string,\n  timestamp?: number,\n): void {\n  if (!timestamp) {\n    timestamp = this.performanceInstance.now();\n  }\n  let timestamps = this.timestamps[name];\n  if (!timestamps) {\n    timestamps = this.timestamps[name] = [];\n  }\n  let t;\n  const l = timestamps.length;\n  for (let i = l - 1; i >= 0; i--) {\n    t = timestamps[i];\n    if (t && !t[startEnd]) {\n      break;\n    }\n    t = null;\n  }\n  if (!t) {\n    t = {};\n    timestamps.push(t);\n  }\n  t[startEnd] = timestamp;\n}\n\n/**\n * Registers start timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerStartTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"start\", timestamp);\n}\n\n/**\n * Registers end timing of some event.\n * @this {Profile.Profiler}\n * @param name Name of event\n * @param timestamp Used as the actual timestamp of the event if specified,\n *     instead of \"now\"\n */\nfunction registerEndTiming(name: string, timestamp?: number): void {\n  this.registerTiming(name, \"end\", timestamp);\n}\nconst fallbackPerformanceInstance = { now: Date.now } as Performance;\nconst performanceInstance = window && window.performance;\nexport const profiler = new Profiler(\n  performanceInstance || fallbackPerformanceInstance,\n);\nprofiler.forceRegisterStartTiming(\"load_vivliostyle\");\n\n/**\n * Pubilc members of the bundled library.\n */\nexport const profile = {\n  profiler: {\n    registerStartTiming: profiler.registerStartTiming,\n    registerEndTiming: profiler.registerEndTiming,\n    printTimings: profiler.printTimings,\n    disable: profiler.disable,\n    enable: profiler.enable,\n  },\n};\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Base - Common utilities.\n */\nimport * as Logging from \"./logging\";\nimport * as Asserts from \"./asserts\";\n\n/**\n * RegExp pattern for ::first-letter pseudo element:\n * https://drafts.csswg.org/css-pseudo-4/#first-letter-pseudo\n */\nexport const firstLetterPattern =\n  /^[\\s\\p{Zs}\\p{P}\\p{Mn}]*[\\p{L}\\p{N}]\\p{Mn}*(?:[\\s\\p{Zs}]*\\p{P}\\p{Mn}*)*/u;\n/**\n * Indicates the offset position of an element in a document\n */\nexport const ELEMENT_OFFSET_ATTR = \"data-adapt-eloff\";\n\nexport let emptyObj = {};\n\nexport type JSON = any;\n\nexport function jsonToString(json: JSON): string {\n  return JSON.stringify(json);\n}\n\nexport function stringToJSON(str: string): JSON {\n  return JSON.parse(str);\n}\n\nexport function stripFragment(url: string): string {\n  const r = url.match(/^([^#]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\nexport function stripFragmentAndQuery(url: string): string {\n  const r = url.match(/^([^#?]*)/);\n  if (r) {\n    return r[1];\n  }\n  return url;\n}\n\n/**\n * Base URL relative to which URLs of resources are resolved.\n */\nexport let baseURL = window.location.href;\nexport function setBaseURL(value: string): void {\n  baseURL = value;\n}\n\n/**\n * Base URL relative to which URLs of resources such as validation.txt and\n * user-agent.css are resolved.\n */\nexport let resourceBaseURL = window.location.href;\nexport function setResourceBaseURL(value: string): void {\n  resourceBaseURL = value;\n}\n\n/**\n * @param relURL relative URL\n * @param baseURL base (absolute) URL\n * @return resolved (absolute) URL\n */\nexport function resolveURL(relURL: string, baseURL: string): string {\n  if (/^data:/i.test(baseURL)) {\n    return relURL || baseURL;\n  }\n  if (!baseURL || relURL.match(/^\\w{2,}:/)) {\n    if (relURL.toLowerCase().match(\"^javascript:\")) {\n      return \"#\";\n    }\n    if (relURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n      relURL = `${relURL}/`;\n    }\n    return relURL;\n  }\n  if (baseURL.match(/^\\w{2,}:\\/\\/[^\\/]+$/)) {\n    baseURL = `${baseURL}/`;\n  }\n  let r: string[];\n  if (relURL.match(/^\\/\\//)) {\n    r = baseURL.match(/^(\\w{2,}:)\\/\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\//)) {\n    r = baseURL.match(/^(\\w{2,}:\\/\\/[^\\/]+)\\//);\n    if (r) {\n      return r[1] + relURL;\n    }\n    return relURL;\n  }\n  if (relURL.match(/^\\.(\\/|$)/)) {\n    relURL = relURL.substr(2); // './foo' => 'foo'\n  }\n  baseURL = stripFragmentAndQuery(baseURL);\n  if (relURL.match(/^#/)) {\n    return baseURL + relURL;\n  }\n  let i = baseURL.lastIndexOf(\"/\");\n  if (i < 0) {\n    return relURL;\n  }\n  if (i < baseURL.length - 1) {\n    const j = baseURL.lastIndexOf(\".\");\n    if (j < i) {\n      // Assume the last part without '.' to be a directory name.\n      if (relURL == \"\") {\n        return baseURL;\n      }\n      baseURL += \"/\";\n      i = baseURL.length - 1;\n    }\n  }\n  let url = baseURL.substr(0, i + 1) + relURL;\n  let urlOption = \"\";\n  r = url.match(/^([^?#]*)([?#].*)$/);\n  if (r) {\n    url = r[1];\n    urlOption = r[2];\n  }\n\n  while (true) {\n    i = url.indexOf(\"/../\");\n    if (i <= 0) {\n      break;\n    }\n    const j = url.lastIndexOf(\"/\", i - 1);\n    if (j <= 0) {\n      break;\n    }\n    url = url.substr(0, j) + url.substr(i + 3);\n  }\n  return url.replace(/\\/(\\.\\/)+/g, \"/\") + urlOption;\n}\n\n/**\n * @return converted URL\n */\nexport function convertSpecialURL(url: string): string {\n  let r: RegExpMatchArray;\n  if (\n    (r =\n      /^(https?:)\\/\\/github\\.com\\/([^/]+\\/[^/]+)\\/(blob\\/|tree\\/|raw\\/)?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert GitHub URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/${r[2]}/${r[3] ? \"\" : \"master/\"}${\n      r[4]\n    }`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/www\\.aozora\\.gr\\.jp\\/(cards\\/[^/]+\\/files\\/[^/.]+\\.html)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Aozorabunko (X)HTML URL to GitHub raw URL\n    url = `${r[1]}//raw.githubusercontent.com/aozorabunko/aozorabunko/master/${r[2]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/gist\\.github\\.com\\/([^/]+\\/\\w+)(\\/|$)(raw(\\/|$))?(.*)$/.exec(\n        url,\n      ))\n  ) {\n    // Convert Gist URL to Gist raw URL\n    url = `${r[1]}//gist.githubusercontent.com/${r[2]}/raw/${r[6]}`;\n  } else if (\n    (r =\n      /^(https?:)\\/\\/(?:[^/.]+\\.)?jsbin\\.com\\/(?!(?:blog|help)\\b)(\\w+)((\\/\\d+)?).*$/.exec(\n        url,\n      ))\n  ) {\n    // Convert JS Bin URL to JS Bin output URL\n    url = `${r[1]}//output.jsbin.com/${r[2]}${r[3]}/`;\n  }\n  return url;\n}\n\nexport interface DocumentURLTransformer {\n  transformFragment(fragment: string, baseURL: string): string;\n\n  transformURL(url: string, baseURL: string): string;\n\n  restoreURL(encoded: string): string[];\n}\n\n/**\n * Various namespaces.\n * @enum {string}\n */\nexport enum NS {\n  epub = \"http://www.idpf.org/2007/ops\",\n  EV = \"http://www.w3.org/2001/xml-events\",\n  MATHML = \"http://www.w3.org/1998/Math/MathML\",\n  XML = \"http://www.w3.org/XML/1998/namespace\",\n  XHTML = \"http://www.w3.org/1999/xhtml\",\n  XLINK = \"http://www.w3.org/1999/xlink\",\n  SHADOW = \"http://www.pyroxy.com/ns/shadow\",\n  SVG = \"http://www.w3.org/2000/svg\",\n  DC = \"http://purl.org/dc/elements/1.1/\",\n  NCX = \"http://www.daisy.org/z3986/2005/ncx/\",\n}\n\n/**\n * @param name parameter name\n * @param opt_url URL; window.location.href is used if not provided\n * @return parameter value\n */\nexport function getURLParam(name: string, opt_url?: string): string | null {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const url = opt_url || window.location.href;\n  const r = url.match(rg);\n  if (r) {\n    return r[2];\n  }\n  return null;\n}\n\n/**\n * @param name parameter name\n * @param value parameter value\n * @return new url\n */\nexport function setURLParam(url: string, name: string, value: string): string {\n  const rg = new RegExp(`#(.*&)?${escapeRegExp(name)}=([^#&]*)`);\n  const r = url.match(rg);\n  if (r) {\n    const length = r[2].length;\n    const index = r.index + r[0].length - length;\n    return url.substr(0, index) + value + url.substr(index + length);\n  }\n  if (!url.match(/#/)) {\n    return `${url}#${name}=${value}`;\n  } else {\n    return `${url}&${name}=${value}`;\n  }\n}\n\n/**\n * @return ?string\n */\nexport function asString(v: any): any {\n  if (v == null) {\n    return v;\n  }\n  return v.toString();\n}\n\nexport interface Comparable {\n  /**\n   * @return -1 when this less then other, 0 when this equals other\n   */\n  compare(other: Comparable): number;\n}\n\n/**\n * A priority queue.\n */\nexport class PriorityQueue {\n  queue: Comparable[] = [null];\n\n  length(): number {\n    return this.queue.length - 1;\n  }\n\n  add(item: Comparable): void {\n    let index = this.queue.length;\n    while (index > 1) {\n      const parentIndex = Math.floor(index / 2);\n      const parent = this.queue[parentIndex];\n      if (parent.compare(item) > 0) {\n        this.queue[index] = item;\n        return;\n      }\n      this.queue[index] = parent;\n      index = parentIndex;\n    }\n    this.queue[1] = item;\n  }\n\n  /**\n   * @return highest priority Comparable.\n   */\n  peek(): Comparable {\n    return this.queue[1];\n  }\n\n  /**\n   * Remove the highest-priority item from the queue.\n   * @return removed item.\n   */\n  remove(): Comparable {\n    const result = this.queue[1] as Comparable;\n    const curr = this.queue.pop() as Comparable;\n    const size = this.queue.length;\n    if (size > 1) {\n      let index = 1;\n      while (true) {\n        let childIndex = index * 2;\n        if (childIndex >= size) {\n          break;\n        }\n        if (this.queue[childIndex].compare(curr) > 0) {\n          if (\n            childIndex + 1 < size &&\n            this.queue[childIndex + 1].compare(\n              this.queue[childIndex] as Comparable,\n            ) > 0\n          ) {\n            childIndex++;\n          }\n        } else if (\n          childIndex + 1 < size &&\n          this.queue[childIndex + 1].compare(curr) > 0\n        ) {\n          childIndex++;\n        } else {\n          break;\n        }\n        this.queue[index] = this.queue[childIndex];\n        index = childIndex;\n      }\n      this.queue[index] = curr;\n    }\n    return result;\n  }\n}\n\nexport const knownPrefixes = [\"\", \"-webkit-\", \"-moz-\"];\n\nexport const propNameMap: { [key: string]: string[] } = {};\n\nexport function checkIfPropertySupported(\n  prefix: string,\n  prop: string,\n): boolean {\n  return CSS.supports(prefix + prop, \"unset\");\n}\n\nexport function getPrefixedPropertyNames(prop: string): string[] | null {\n  let prefixed = propNameMap[prop];\n  if (prefixed || prefixed === null) {\n    // null means the browser does not support the property\n    return prefixed;\n  }\n  switch (prop) {\n    case \"behavior\":\n      propNameMap[prop] = null;\n      return null;\n    case \"text-combine-upright\":\n      // Special case for Safari\n      if (\n        checkIfPropertySupported(\"-webkit-\", \"text-combine\") &&\n        !checkIfPropertySupported(\"\", \"text-combine-upright\")\n      ) {\n        propNameMap[prop] = [\"-webkit-text-combine\"];\n        return [\"-webkit-text-combine\"];\n      }\n      break;\n  }\n  for (const prefix of knownPrefixes) {\n    if (checkIfPropertySupported(prefix, prop)) {\n      prefixed = [prefix + prop];\n      propNameMap[prop] = prefixed;\n      return prefixed;\n    }\n  }\n\n  // Not supported by the browser\n  Logging.logger.warn(\"Property not supported by the browser: \", prop);\n  propNameMap[prop] = null;\n  return null;\n}\n\nexport function setCSSProperty(\n  elem: Element,\n  prop: string,\n  value: string,\n): void {\n  const elemStyle = (elem as HTMLElement)?.style;\n  if (!elemStyle) {\n    return;\n  }\n  if (prop.startsWith(\"--\")) {\n    elemStyle.setProperty(prop, value || \" \");\n    return;\n  }\n  const prefixedPropertyNames = getPrefixedPropertyNames(prop);\n  if (!prefixedPropertyNames) {\n    return;\n  }\n  for (const prefixed of prefixedPropertyNames) {\n    switch (prefixed) {\n      case \"-webkit-text-combine\": // for Safari\n        switch (value) {\n          case \"all\":\n            value = \"horizontal\";\n            break;\n        }\n        break;\n      case \"text-combine-upright\":\n        switch (value) {\n          case \"all\":\n            // workaround for Chrome 93 bug https://crbug.com/1242755\n            elemStyle.setProperty(\"text-indent\", \"0\");\n            break;\n        }\n        break;\n    }\n    elemStyle.setProperty(prefixed, value);\n  }\n}\n\nexport function getCSSProperty(\n  elem: Element,\n  prop: string,\n  opt_value?: string,\n): string {\n  try {\n    const propertyNames = propNameMap[prop];\n    return (elem as HTMLElement).style.getPropertyValue(\n      propertyNames ? propertyNames[0] : prop,\n    );\n  } catch (err) {}\n  return opt_value || \"\";\n}\n\nexport function getLangAttribute(element: Element): string {\n  let lang = element.getAttributeNS(NS.XML, \"lang\");\n  if (!lang && element.namespaceURI == NS.XHTML) {\n    lang = element.getAttribute(\"lang\");\n  }\n  return lang;\n}\n\nexport class StringBuffer {\n  list: string[] = [];\n\n  append(str: string): StringBuffer {\n    this.list.push(str);\n    return this;\n  }\n\n  clear(): void {\n    this.list = [];\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const str = this.list.join(\"\");\n    this.list = [str];\n    return str;\n  }\n}\n\nexport function escapeChar(str: string): string {\n  // not called for surrogate pairs, no need to worry about them\n  return `\\\\${str.charCodeAt(0).toString(16)} `;\n}\n\nexport function escapeCSSIdent(name: string): string {\n  return name.replace(/[^-_a-zA-Z0-9\\u0080-\\uFFFF]/g, escapeChar);\n}\n\nexport function escapeCSSStr(str: string): string {\n  return str.replace(/[\\u0000-\\u001F\"\\\\]/g, escapeChar);\n}\n\nexport function lightURLEncode(str: string): string {\n  return str.replace(/[\\s+&?=#\\u007F-\\uFFFF]+/g, encodeURIComponent);\n}\n\nexport function isLetter(ch: string): boolean {\n  return !!ch.match(\n    /^[a-zA-Z\\u009E\\u009F\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u024F\\u037B-\\u037D\\u0386\\u0388-\\u0482\\u048A-\\u0527]$/,\n  );\n}\n\nexport function escapeCharToHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  return prefix + (65536 | str.charCodeAt(0)).toString(16).substr(1);\n}\n\nexport function escapeNameStrToHex(str: string, prefix?: string): string {\n  function escapeChar(s) {\n    return escapeCharToHex(s, prefix);\n  }\n  return str.replace(/[^-a-zA-Z0-9_]/g, escapeChar);\n}\n\nexport function escapeRegExp(str: string): string {\n  return escapeNameStrToHex(str);\n}\n\nexport function unescapeCharFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n  if (str.indexOf(prefix) === 0) {\n    return String.fromCharCode(parseInt(str.substring(prefix.length), 16));\n  } else {\n    return str;\n  }\n}\n\nexport function unescapeStrFromHex(str: string, prefix?: string): string {\n  prefix = typeof prefix === \"string\" ? prefix : \"\\\\u\";\n\n  function unescapeChar(s) {\n    return unescapeCharFromHex(s, prefix);\n  }\n  const regexp = new RegExp(`${escapeRegExp(prefix)}[0-9a-fA-F]{4}`, \"g\");\n  return str.replace(regexp, unescapeChar);\n}\n\n/**\n * Function good is defined for ints from 0 to high-1. It is such that for\n * each i between 1 and high-1 !good(i-1) || good(i) is true. In other words,\n * it goes like false ... false true ... true.\n * Find i such that (i == 0 || !good(i-1)) && (i == h || good(i))\n * In other words, good(i) is the \"first\" good = true.\n */\nexport function binarySearch(\n  high: number,\n  good: (p1: number) => boolean,\n): number {\n  let l = 0;\n  let h = high;\n  while (true) {\n    Asserts.assert(l <= h);\n    Asserts.assert(l == 0 || !good(l - 1));\n    Asserts.assert(h == high || good(h));\n    if (l == h) {\n      return l;\n    }\n    const m = (l + h) >> 1;\n    if (good(m)) {\n      h = m;\n    } else {\n      l = m + 1;\n    }\n  }\n}\n\n/**\n * Function to sort numbers low to high\n */\nexport function numberCompare(a: number, b: number): number {\n  return a - b;\n}\n\nexport const base64Chars =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nexport function appendBase64(sb: StringBuffer, data: string): void {\n  const length = data.length;\n  const length3 = Math.floor(length / 3) * 3;\n  for (let i = 0; i < length3; i += 3) {\n    const c1 = data.charCodeAt(i) & 255;\n    const c2 = data.charCodeAt(i + 1) & 255;\n    const c3 = data.charCodeAt(i + 2) & 255;\n    sb.append(base64Chars.charAt(c1 >> 2));\n    sb.append(base64Chars.charAt(((c1 << 4) | (c2 >> 4)) & 63));\n    sb.append(base64Chars.charAt(((c2 << 2) | (c3 >> 6)) & 63));\n    sb.append(base64Chars.charAt(c3 & 63));\n  }\n  switch (length - length3) {\n    case 1: {\n      const p1 = data.charCodeAt(length3) & 255;\n      sb.append(base64Chars.charAt(p1 >> 2));\n      sb.append(base64Chars.charAt((p1 << 4) & 63));\n      sb.append(\"==\");\n      break;\n    }\n    case 2: {\n      const q1 = data.charCodeAt(length3) & 255;\n      const q2 = data.charCodeAt(length3 + 1) & 255;\n      sb.append(base64Chars.charAt(q1 >> 2));\n      sb.append(base64Chars.charAt(((q1 << 4) | (q2 >> 4)) & 63));\n      sb.append(base64Chars.charAt((q2 << 2) & 63));\n      sb.append(\"=\");\n      break;\n    }\n  }\n}\n\n/**\n * Index array using key function. First encountered item wins on collision.\n * Elements with empty and null keys are dropped.\n */\nexport function indexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T } {\n  const map: { [key: string]: T } = {};\n  for (const v of arr) {\n    const k: string | null = key(v);\n    if (k && !map[k]) {\n      map[k] = v;\n    }\n  }\n  return map;\n}\n\n/**\n * Convert array of strings to an object with the values in the array set to\n * true.\n */\nexport function arrayToSet(arr: string[]): { [key: string]: boolean } {\n  const set: { [key: string]: boolean } = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n/**\n * Index array using key function. Repeated indices are all combined into\n * arrays. Elements with empty and null keys are dropped. Ordering of the\n * elements in arrays is preserved.\n */\nexport function multiIndexArray<T>(\n  arr: T[],\n  key: (p1: T) => string | null,\n): { [key: string]: T[] } {\n  const map: { [key: string]: T[] } = {};\n  for (const v of arr) {\n    const k = key(v);\n    if (k) {\n      if (map[k]) {\n        map[k].push(v);\n      } else {\n        map[k] = [v];\n      }\n    }\n  }\n  return map;\n}\n\n/**\n * Apply function to each value of the object\n * @param fn second parameter is the key\n */\nexport function mapObj<P, R>(\n  obj: { [key: string]: P },\n  fn: (p1: P, p2: string) => R,\n): { [key: string]: R } {\n  const res: { [key: string]: R } = {};\n  for (const n in obj) {\n    res[n] = fn(obj[n], n);\n  }\n  return res;\n}\n\nexport function mapSize(obj: object): number {\n  let n = 0;\n  for (const key in obj) {\n    n++;\n  }\n  return n;\n}\n\nexport type Event = {\n  type: string;\n  target?;\n  currentTarget?;\n  preventDefault?;\n  newPage?;\n  anchorElement?;\n  href?;\n  content?;\n};\n\nexport type EventListener = (p1: Event) => void;\n\n/**\n * Extemely simple-minded EventTarget implementation. Consider using\n * goog.events.EventTarget if you are using Closure library.\n */\nexport class SimpleEventTarget {\n  listeners: { [key: string]: EventListener[] } = {};\n\n  dispatchEvent(evt: Event): void {\n    const list = this.listeners[evt.type];\n    if (list) {\n      evt.target = this;\n      evt.currentTarget = this;\n      for (let i = 0; i < list.length; i++) {\n        list[i](evt);\n      }\n    }\n  }\n\n  addEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      list.push(listener);\n    } else {\n      this.listeners[type] = [listener];\n    }\n  }\n\n  removeEventListener(\n    type: string,\n    listener: EventListener,\n    capture?: boolean,\n  ): void {\n    if (capture) {\n      return;\n    }\n    const list = this.listeners[type];\n    if (list) {\n      const index = list.indexOf(listener);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n    }\n  }\n}\nexport type EventTarget = SimpleEventTarget;\n\nexport let hasLShapeFloatBug: boolean | null = null;\n\n/**\n * Check if there is a bug with L-shape floats overlapping text.\n */\nexport function checkLShapeFloatBug(body: HTMLElement): boolean {\n  if (hasLShapeFloatBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    body.appendChild(container);\n    const f1 = doc.createElement(\"div\") as HTMLElement;\n    f1.style.width = \"0px\";\n    f1.style.height = \"14px\";\n    f1.style.cssFloat = \"left\";\n    container.appendChild(f1);\n    const f2 = doc.createElement(\"div\") as HTMLElement;\n    f2.style.width = \"50px\";\n    f2.style.height = \"50px\";\n    f2.style.cssFloat = \"left\";\n    f2.style.clear = \"left\";\n    container.appendChild(f2);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const leftEdge = range.getBoundingClientRect().left;\n    hasLShapeFloatBug = leftEdge < 40;\n    body.removeChild(container);\n  }\n  return hasLShapeFloatBug;\n}\n\nexport let hasVerticalBBoxBug: boolean | null = null;\n\n/**\n * Check if there is a bug with the bounding boxes of vertical text characters.\n * Though method used to be used check Chrome bug, it seems that the bug has\n * been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method to check Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function checkVerticalBBoxBug(body: HTMLElement): boolean {\n  if (hasVerticalBBoxBug == null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"100px\";\n    container.style.height = \"100px\";\n    container.style.overflow = \"hidden\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    setCSSProperty(container, \"writing-mode\", \"vertical-rl\");\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a a a a a a a a a a a a a a a\");\n    container.appendChild(t);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 1);\n    const box = range.getBoundingClientRect();\n    hasVerticalBBoxBug = box.right - box.left < 10;\n    body.removeChild(container);\n  }\n  return hasVerticalBBoxBug;\n}\n\nexport let hasInlineBlockJustificationBug: boolean | null = null;\n\nexport function checkInlineBlockJustificationBug(body: HTMLElement): boolean {\n  if (hasInlineBlockJustificationBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"30px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a | \");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"30px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 0);\n    range.setEnd(t, 3);\n    const box = range.getBoundingClientRect();\n    hasInlineBlockJustificationBug = box.right < 27;\n    body.removeChild(container);\n  }\n  return hasInlineBlockJustificationBug;\n}\n\nexport let hasSoftWrapOpportunityAfterHyphenBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityAfterHyphenBug(\n  body: HTMLElement,\n): boolean {\n  if (hasSoftWrapOpportunityAfterHyphenBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityAfterHyphenBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityAfterHyphenBug;\n}\n\nexport let hasSoftWrapOpportunityByWbrBug: boolean | null = null;\n\nexport function checkSoftWrapOpportunityByWbrBug(body: HTMLElement): boolean {\n  if (hasSoftWrapOpportunityByWbrBug === null) {\n    const doc = body.ownerDocument;\n    const container = doc.createElement(\"div\") as HTMLElement;\n    container.style.position = \"absolute\";\n    container.style.top = \"0px\";\n    container.style.left = \"0px\";\n    container.style.width = \"40px\";\n    container.style.height = \"100px\";\n    container.style.lineHeight = \"16px\";\n    container.style.fontSize = \"16px\";\n    container.style.textAlign = \"justify\";\n    body.appendChild(container);\n    const t = doc.createTextNode(\"a a-\");\n    container.appendChild(t);\n    container.appendChild(doc.createElement(\"wbr\"));\n    const inlineBlock = doc.createElement(\"span\");\n    inlineBlock.style.display = \"inline-block\";\n    inlineBlock.style.width = \"40px\";\n    container.appendChild(inlineBlock);\n    const range = doc.createRange();\n    range.setStart(t, 2);\n    range.setEnd(t, 4);\n    const box = range.getBoundingClientRect();\n    hasSoftWrapOpportunityByWbrBug = box.right < 37;\n    body.removeChild(container);\n  }\n  return hasSoftWrapOpportunityByWbrBug;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Cfi - Support for EPUB Canonical Fragment Identifiers.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\nexport type Position = {\n  node: Node;\n  offset: number;\n  after: boolean;\n  sideBias: string | null;\n  ref: Fragment;\n};\n\nexport function getId(node: Node): string | null {\n  if (node.nodeType == 1) {\n    const idtxt = (node as Element).getAttribute(\"id\");\n    if (idtxt) {\n      return idtxt;\n    }\n  }\n  return null;\n}\n\nexport function escapeChar(ch: string): string {\n  return `^${ch}`;\n}\n\nexport function escape(str: string): string {\n  return str.replace(/[\\[\\]\\(\\),=;^]/g, escapeChar);\n}\n\nexport function unescapeChar(str: string): string {\n  return str.substr(1);\n}\n\nexport function unescape(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\^[\\[\\]\\(\\),=;^]/g, unescapeChar);\n}\n\nexport function parseExtVal(extstr: string): string | string[] {\n  const result = [];\n  do {\n    const r = extstr.match(/^(\\^,|[^,])*/);\n    const p = unescape(r[0]);\n    extstr = extstr.substr(r[0].length + 1);\n    if (!extstr && !result.length) {\n      return p;\n    }\n    result.push(p);\n  } while (extstr);\n  return result;\n}\n\nexport function parseExt(extstr: string): { [key: string]: string | string[] } {\n  const ext = {};\n  while (extstr) {\n    const r = extstr.match(/^;([^;=]+)=(([^;]|\\^;)*)/);\n    if (!r) {\n      return ext;\n    }\n    ext[r[1]] = parseExtVal(r[2]);\n    extstr = extstr.substr(r[0].length);\n  }\n  return ext;\n}\n\nexport interface Step {\n  appendTo(sb: Base.StringBuffer): void;\n\n  applyTo(pos: Position): boolean;\n}\n\nexport class RefStep implements Step {\n  appendTo(sb: Base.StringBuffer) {\n    sb.append(\"!\");\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    return false;\n  }\n}\n\nexport class ChildStep implements Step {\n  constructor(\n    public readonly index: number,\n    public readonly id: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\"/\");\n    sb.append(this.index.toString());\n    if (this.id || this.sideBias) {\n      sb.append(\"[\");\n      if (this.id) {\n        sb.append(this.id);\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  applyTo(pos: Position): boolean {\n    if (pos.node.nodeType != 1) {\n      throw new Error(\"E_CFI_NOT_ELEMENT\");\n    }\n    const elem = pos.node as Element;\n    const childElements = elem.children;\n    const childElementCount = childElements.length;\n    let child: Node;\n    const childIndex = Math.floor(this.index / 2) - 1;\n    if (childIndex < 0 || childElementCount == 0) {\n      child = elem.firstChild;\n      pos.node = child || elem;\n    } else {\n      child = childElements[Math.min(childIndex, childElementCount - 1)];\n      if (this.index & 1) {\n        const next = child.nextSibling;\n        if (!next || next.nodeType == 1) {\n          pos.after = true;\n        } else {\n          child = next;\n        }\n      }\n      pos.node = child;\n    }\n    if (this.id && (pos.after || this.id != getId(pos.node))) {\n      const movedNode = elem.ownerDocument.getElementById(this.id);\n      if (movedNode) {\n        pos.node = movedNode;\n      } else {\n        Logging.logger.warn(\"E_CFI_ID_MISMATCH:\", this.id);\n      }\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n}\n\nexport class OffsetStep implements Step {\n  constructor(\n    public readonly offset: number,\n    public readonly textBefore: string | null,\n    public readonly textAfter: string | null,\n    public readonly sideBias: string | null,\n  ) {}\n\n  applyTo(pos: Position): boolean {\n    if (this.offset > 0 && !pos.after) {\n      let offset = this.offset;\n      let node = pos.node;\n      while (true) {\n        const nodeType = node.nodeType;\n        if (nodeType == 1) {\n          break;\n        }\n        const next = node.nextSibling;\n        if (3 <= nodeType && nodeType <= 5) {\n          const textLength = node.textContent.length;\n          if (offset <= textLength) {\n            break;\n          }\n          if (!next) {\n            offset = textLength;\n            break;\n          }\n          offset -= textLength;\n        }\n        if (!next) {\n          offset = 0;\n          break;\n        }\n        node = next;\n      }\n      pos.node = node;\n      pos.offset = offset;\n    }\n    pos.sideBias = this.sideBias;\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(sb: Base.StringBuffer): void {\n    sb.append(\":\");\n    sb.append(this.offset.toString());\n    if (this.textBefore || this.textAfter || this.sideBias) {\n      sb.append(\"[\");\n      if (this.textBefore || this.textAfter) {\n        if (this.textBefore) {\n          sb.append(escape(this.textBefore));\n        }\n        sb.append(\",\");\n        if (this.textAfter) {\n          sb.append(escape(this.textAfter));\n        }\n      }\n      if (this.sideBias) {\n        sb.append(\";s=\");\n        sb.append(this.sideBias);\n      }\n      sb.append(\"]\");\n    }\n  }\n}\n\nexport class Fragment {\n  steps: Step[] = null;\n\n  fromString(fragstr: string): void {\n    let r = fragstr.match(/^#?epubcfi\\((.*)\\)$/);\n    if (!r) {\n      throw new Error(\"E_CFI_NOT_CFI\");\n    }\n    const str = decodeURIComponent(r[1]);\n    let i = 0;\n    const steps = [];\n    while (true) {\n      let ext: {\n        [key: string]: string | string[];\n      };\n      switch (str.charAt(i)) {\n        case \"/\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(/^(0|[1-9][0-9]*)(\\[(.*?)(;([^\\]]|\\^\\])*)?\\])?/);\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const index = parseInt(r[1], 10);\n          const id = r[3];\n          ext = parseExt(r[4]);\n          steps.push(new ChildStep(index, id, Base.asString(ext[\"s\"])));\n          break;\n        }\n        case \":\": {\n          i++;\n          r = str\n            .substr(i)\n            .match(\n              /^(0|[1-9][0-9]*)(\\[((([^\\];,]|\\^[\\];,])*)(,(([^\\];,]|\\^[\\];,])*))?)(;([^]]|\\^\\])*)?\\])?/,\n            );\n          if (!r) {\n            throw new Error(\"E_CFI_NUMBER_EXPECTED\");\n          }\n          i += r[0].length;\n          const offset = parseInt(r[1], 10);\n          let textBefore = r[4];\n          if (textBefore) {\n            textBefore = unescape(textBefore);\n          }\n          let textAfter = r[7];\n          if (textAfter) {\n            textAfter = unescape(textAfter);\n          }\n          ext = parseExt(r[10]);\n          steps.push(\n            new OffsetStep(\n              offset,\n              textBefore,\n              textAfter,\n              Base.asString(ext[\"s\"]),\n            ),\n          );\n          break;\n        }\n        case \"!\":\n          i++;\n          steps.push(new RefStep());\n          break;\n        case \"~\":\n        case \"@\":\n\n        // Time/space terminus; only useful for highlights/selections which are\n        // not yet supported, skip for now. fall through\n        case \"\":\n          this.steps = steps;\n          return;\n        default:\n          throw new Error(\"E_CFI_PARSE_ERROR\");\n      }\n    }\n  }\n\n  navigate(doc: Document): Position {\n    const pos = {\n      node: doc.documentElement,\n      offset: 0,\n      after: false,\n      sideBias: null,\n      ref: null,\n    };\n    for (let i = 0; i < this.steps.length; i++) {\n      if (!this.steps[i].applyTo(pos)) {\n        pos.ref = new Fragment();\n        pos.ref.steps = this.steps.slice(i + 1);\n        break;\n      }\n    }\n    return pos;\n  }\n\n  trim(text: string, after: boolean): string {\n    return text\n      .replace(/\\s+/g, \" \")\n      .match(\n        after\n          ? /^[ -\\uD7FF\\uE000-\\uFFFF]{0,8}/\n          : /[ -\\uD7FF\\uE000-\\uFFFF]{0,8}$/,\n      )[0]\n      .replace(/^\\s/, \"\")\n      .replace(/\\s$/, \"\");\n  }\n\n  /**\n   * Initialize from a node and an offset.\n   */\n  prependPathFromNode(\n    node: Node,\n    offset: number,\n    after: boolean,\n    sideBias: string | null,\n  ) {\n    const steps = [];\n    let parent = node.parentNode;\n    let textBefore = \"\";\n    let textAfter = \"\";\n    while (node) {\n      switch (node.nodeType) {\n        case 3: // Text nodes\n        case 4:\n        case 5: {\n          const text = node.textContent;\n          const textLength = text.length;\n          if (after) {\n            offset += textLength;\n            if (!textBefore) {\n              textBefore = text;\n            }\n          } else {\n            if (offset > textLength) {\n              offset = textLength;\n            }\n            after = true;\n            textBefore = text.substr(0, offset);\n            textAfter = text.substr(offset);\n          }\n          node = node.previousSibling;\n          continue;\n        }\n        case 8: // Comment Node\n          node = node.previousSibling;\n          continue;\n      }\n      break;\n    }\n    if (offset > 0 || textBefore || textAfter) {\n      textBefore = this.trim(textBefore, false);\n      textAfter = this.trim(textAfter, true);\n      steps.push(new OffsetStep(offset, textBefore, textAfter, sideBias));\n      sideBias = null;\n    }\n    while (parent) {\n      if (!parent || parent.nodeType == 9) {\n        break;\n      }\n      const id = after ? null : getId(node);\n      let index = after ? 1 : 0;\n      while (node) {\n        if (node.nodeType == 1) {\n          index += 2;\n        }\n        node = node.previousSibling;\n      }\n      steps.push(new ChildStep(index, id, sideBias));\n      sideBias = null;\n      node = parent;\n      parent = parent.parentNode;\n      after = false;\n    }\n    steps.reverse();\n    if (this.steps) {\n      steps.push(new RefStep());\n      this.steps = steps.concat(this.steps);\n    } else {\n      this.steps = steps;\n    }\n  }\n\n  toString(): string {\n    if (!this.steps) {\n      return \"\";\n    }\n    const sb = new Base.StringBuffer();\n    sb.append(\"epubcfi(\");\n    for (let i = 0; i < this.steps.length; i++) {\n      this.steps[i].appendTo(sb);\n    }\n    sb.append(\")\");\n    return sb.toString().replace(/%/g, \"%25\");\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Exprs - `-epubx-expr` Adaptive Layout expressions.\n */\nimport * as Base from \"./base\";\n\nexport type Preferences = {\n  fontFamily: string;\n  lineHeight: number;\n  margin: number;\n  hyphenate: boolean;\n  columnWidth: number;\n  horizontal: boolean;\n  nightMode: boolean;\n  spreadView: boolean;\n  pageBorder: number;\n  enabledMediaTypes: { [key: string]: boolean };\n  defaultPaperSize?: { [key: string]: number };\n};\n\nexport function defaultPreferences(): Preferences {\n  return {\n    fontFamily: \"serif\",\n    lineHeight: 1.25,\n    margin: 8,\n    hyphenate: false,\n    columnWidth: 25,\n    horizontal: false,\n    nightMode: false,\n    spreadView: false,\n    pageBorder: 1,\n    enabledMediaTypes: { vivliostyle: true, print: true },\n    defaultPaperSize: undefined,\n  };\n}\n\nexport function clonePreferences(pref: Preferences): Preferences {\n  return {\n    fontFamily: pref.fontFamily,\n    lineHeight: pref.lineHeight,\n    margin: pref.margin,\n    hyphenate: pref.hyphenate,\n    columnWidth: pref.columnWidth,\n    horizontal: pref.horizontal,\n    nightMode: pref.nightMode,\n    spreadView: pref.spreadView,\n    pageBorder: pref.pageBorder,\n    enabledMediaTypes: Object.assign({}, pref.enabledMediaTypes),\n    defaultPaperSize: pref.defaultPaperSize\n      ? Object.assign({}, pref.defaultPaperSize)\n      : undefined,\n  };\n}\n\nexport const defaultPreferencesInstance = defaultPreferences();\n\ninterface Pending {}\ntype Special = Pending;\n\n/**\n * Special marker value that indicates that the expression result is being\n * calculated.\n */\n// eslint-disable-next-line no-redeclare\nexport const Special = {\n  PENDING: {} as Pending,\n};\n\nexport type Result = string | number | boolean | undefined;\n\nexport type PendingResult = Special | Result;\n\nexport function letterbox(\n  viewW: number,\n  viewH: number,\n  objW: number,\n  objH: number,\n): string {\n  const scale = Math.min((viewW - 0) / objW, (viewH - 0) / objH);\n  return `matrix(${scale},0,0,${scale},0,0)`;\n}\n\n/**\n * @return string that can be parsed as CSS string with value str\n */\nexport function cssString(str: string): string {\n  return `\"${Base.escapeCSSStr(`${str}`)}\"`;\n}\n\n/**\n * @return string that can be parsed as CSS name\n */\nexport function cssIdent(name: string): string {\n  return Base.escapeCSSIdent(`${name}`);\n}\n\nexport function makeQualifiedName(\n  objName: string | null,\n  memberName: string,\n): string {\n  if (objName) {\n    return `${Base.escapeCSSIdent(objName)}.${Base.escapeCSSIdent(memberName)}`;\n  }\n  return Base.escapeCSSIdent(memberName);\n}\n\nexport let nextKeyIndex: number = 0;\n\n/**\n * Lexical scope of the expression.\n */\nexport class LexicalScope {\n  scopeKey: string;\n  children: LexicalScope[] = [];\n  zero: Const;\n  one: Const;\n  _true: Const;\n  _false: Const;\n  values: { [key: string]: Val } = {};\n  funcs: { [key: string]: Val } = {};\n  builtIns: { [key: string]: (...p1: Result[]) => Result } = {};\n\n  constructor(\n    public parent: LexicalScope,\n    public resolver?: (p1: string, p2: boolean) => Val,\n  ) {\n    this.scopeKey = `S${nextKeyIndex++}`;\n    this.zero = new Const(this, 0);\n    this.one = new Const(this, 1);\n    this._true = new Const(this, true);\n    this._false = new Const(this, false);\n    if (parent) {\n      parent.children.push(this);\n    }\n    if (!parent) {\n      // root scope\n      const builtIns = this.builtIns;\n      builtIns[\"floor\"] = Math.floor;\n      builtIns[\"ceil\"] = Math.ceil;\n      builtIns[\"round\"] = Math.round;\n      builtIns[\"sqrt\"] = Math.sqrt;\n      builtIns[\"min\"] = Math.min;\n      builtIns[\"max\"] = Math.max;\n      builtIns[\"letterbox\"] = letterbox;\n      builtIns[\"css-string\"] = cssString;\n      builtIns[\"css-name\"] = cssIdent;\n      builtIns[\"typeof\"] = (x) => typeof x;\n      this.defineBuiltInName(\"page-width\", function () {\n        return this.pageWidth();\n      });\n      this.defineBuiltInName(\"page-height\", function () {\n        return this.pageHeight();\n      });\n      this.defineBuiltInName(\"pref-font-family\", function () {\n        return this.pref.fontFamily;\n      });\n      this.defineBuiltInName(\"pref-night-mode\", function () {\n        return this.pref.nightMode;\n      });\n      this.defineBuiltInName(\"pref-hyphenate\", function () {\n        return this.pref.hyphenate;\n      });\n      this.defineBuiltInName(\"pref-margin\", function () {\n        return this.pref.margin;\n      });\n      this.defineBuiltInName(\"pref-line-height\", function () {\n        return this.pref.lineHeight;\n      });\n      this.defineBuiltInName(\"pref-column-width\", function () {\n        return this.pref.columnWidth * this.fontSize;\n      });\n      this.defineBuiltInName(\"pref-horizontal\", function () {\n        return this.pref.horizontal;\n      });\n      this.defineBuiltInName(\"pref-spread-view\", function () {\n        return this.pref.spreadView;\n      });\n\n      // For env(pub-title) and env(doc-title)\n      this.defineBuiltInName(\"pub-title\", function () {\n        return cssString(this.pubTitle ? this.pubTitle : \"\");\n      });\n      this.defineBuiltInName(\"doc-title\", function () {\n        return cssString(this.docTitle ? this.docTitle : \"\");\n      });\n    }\n  }\n\n  defineBuiltInName(name: string, fn: () => Result) {\n    this.values[name] = new Native(this, fn, name);\n  }\n\n  defineName(qualifiedName: string, val: Val): void {\n    this.values[qualifiedName] = val;\n  }\n\n  defineFunc(qualifiedName: string, val: Val): void {\n    this.funcs[qualifiedName] = val;\n  }\n\n  defineBuiltIn(qualifiedName: string, fn: (...p1: Result[]) => Result): void {\n    this.builtIns[qualifiedName] = fn;\n  }\n}\n\nexport function isAbsoluteLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"px\":\n    case \"in\":\n    case \"pt\":\n    case \"pc\":\n    case \"cm\":\n    case \"mm\":\n    case \"q\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isViewportRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"vw\":\n    case \"vh\":\n    case \"vi\":\n    case \"vb\":\n    case \"vmin\":\n    case \"vmax\":\n    case \"pvw\":\n    case \"pvh\":\n    case \"pvi\":\n    case \"pvb\":\n    case \"pvmin\":\n    case \"pvmax\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isFontRelativeLengthUnit(unit: string): boolean {\n  switch (unit.toLowerCase()) {\n    case \"em\":\n    case \"ex\":\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport const defaultUnitSizes: { [key: string]: number } = {\n  px: 1,\n  in: 96,\n  pt: 4 / 3,\n  pc: 96 / 6,\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  q: 96 / 2.54 / 40,\n  em: 16,\n  rem: 16,\n  ex: 8,\n  // <resolution>\n  dppx: 1,\n  dpi: 1 / 96,\n  dpcm: 2.54 / 96,\n};\n\n/**\n * Returns if a unit should be converted to px before applied to the raw DOM.\n */\nexport function needUnitConversion(unit: string): boolean {\n  switch (unit) {\n    case \"q\":\n      return !CSS.supports(\"font-size\", \"1q\");\n    case \"rem\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type ScopeContext = {\n  [key: string]: Result;\n};\n\n/**\n * Run-time instance of a scope and its children.\n */\nexport class Context {\n  protected actualPageWidth: number | null = null;\n  pageWidth: () => number;\n  protected actualPageHeight: number | null = null;\n  pageHeight: () => number;\n  initialFontSize: number;\n  rootFontSize: number | null = null;\n  isRelativeRootFontSize: boolean | null = null;\n  fontSize: () => number;\n  pref: Preferences;\n  scopes: { [key: string]: ScopeContext } = {};\n  pageAreaWidth: number | null = null;\n  pageAreaHeight: number | null = null;\n  pageVertical: boolean | null = null;\n  pubTitle: string | null = null;\n  docTitle: string | null = null;\n\n  constructor(\n    public readonly rootScope: LexicalScope,\n    public readonly viewportWidth: number,\n    public readonly viewportHeight: number,\n    fontSize: number,\n  ) {\n    this.pageWidth = function () {\n      if (this.actualPageWidth) {\n        return this.actualPageWidth;\n      } else {\n        return this.pref.spreadView\n          ? Math.floor(viewportWidth / 2) - this.pref.pageBorder\n          : viewportWidth;\n      }\n    };\n    this.pageHeight = function () {\n      if (this.actualPageHeight) {\n        return this.actualPageHeight;\n      } else {\n        return viewportHeight;\n      }\n    };\n    this.initialFontSize = fontSize;\n    this.fontSize = function () {\n      if (this.rootFontSize) {\n        return this.rootFontSize;\n      } else {\n        return fontSize;\n      }\n    };\n    this.pref = defaultPreferencesInstance;\n  }\n\n  private getScopeContext(scope: LexicalScope): ScopeContext {\n    let s = this.scopes[scope.scopeKey];\n    if (!s) {\n      s = {};\n      this.scopes[scope.scopeKey] = s;\n    }\n    return s;\n  }\n\n  clearScope(scope: LexicalScope): void {\n    this.scopes[scope.scopeKey] = {};\n    for (let k = 0; k < scope.children.length; k++) {\n      this.clearScope(scope.children[k]);\n    }\n  }\n\n  queryUnitSize(unit: string, isRoot: boolean): number {\n    if (isViewportRelativeLengthUnit(unit)) {\n      const pvw = this.pageWidth() / 100;\n      const pvh = this.pageHeight() / 100;\n      const vw = this.pageAreaWidth != null ? this.pageAreaWidth / 100 : pvw;\n      const vh = this.pageAreaHeight != null ? this.pageAreaHeight / 100 : pvh;\n\n      switch (unit) {\n        case \"vw\":\n          return vw;\n        case \"vh\":\n          return vh;\n        case \"vi\":\n          return this.pageVertical ? vh : vw;\n        case \"vb\":\n          return this.pageVertical ? vw : vh;\n        case \"vmin\":\n          return vw < vh ? vw : vh;\n        case \"vmax\":\n          return vw > vh ? vw : vh;\n        case \"pvw\":\n          return pvw;\n        case \"pvh\":\n          return pvh;\n        case \"pvi\":\n          return this.pageVertical ? pvh : pvw;\n        case \"pvb\":\n          return this.pageVertical ? pvw : pvh;\n        case \"pvmin\":\n          return pvw < pvh ? pvw : pvh;\n        case \"pvmax\":\n          return pvw > pvh ? pvw : pvh;\n      }\n    }\n    if (unit == \"em\" || unit == \"rem\") {\n      return isRoot ? this.initialFontSize : this.fontSize();\n    }\n    if (unit == \"ex\") {\n      return (\n        (defaultUnitSizes[\"ex\"] *\n          (isRoot ? this.initialFontSize : this.fontSize())) /\n        defaultUnitSizes[\"em\"]\n      );\n    }\n    return defaultUnitSizes[unit];\n  }\n\n  evalName(scope: LexicalScope, qualifiedName: string): Val {\n    do {\n      let val = scope.values[qualifiedName];\n      if (val) {\n        return val;\n      }\n      if (scope.resolver) {\n        val = scope.resolver.call(this, qualifiedName, false);\n        if (val) {\n          return val;\n        }\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Name '${qualifiedName}' is undefined`);\n  }\n\n  /**\n   * @param noBuiltInEval don't evaluate built-ins (for dependency calculations)\n   */\n  evalCall(\n    scope: LexicalScope,\n    qualifiedName: string,\n    params: Val[],\n    noBuiltInEval: boolean,\n  ): Val {\n    do {\n      let body = scope.funcs[qualifiedName];\n      if (body) {\n        return body; // will be expanded by callee\n      }\n      if (scope.resolver) {\n        body = scope.resolver.call(this, qualifiedName, true);\n        if (body) {\n          return body;\n        }\n      }\n      const fn = scope.builtIns[qualifiedName];\n      if (fn) {\n        if (noBuiltInEval) {\n          return scope.zero;\n        }\n        const args = Array(params.length);\n        for (let i = 0; i < params.length; i++) {\n          args[i] = params[i].evaluate(this);\n        }\n        return new Const(scope, fn.apply(this, args));\n      }\n      scope = scope.parent;\n    } while (scope);\n    throw new Error(`Function '${qualifiedName}' is undefined`);\n  }\n\n  evalMediaName(name: string, not: boolean): boolean {\n    const enabled = name === \"all\" || !!this.pref.enabledMediaTypes[name];\n    return not ? !enabled : enabled;\n  }\n\n  evalMediaTest(feature: string, value: Val): boolean {\n    let prefix = \"\";\n    const r = feature.match(/^(min|max)-(.*)$/);\n    if (r) {\n      prefix = r[1];\n      feature = r[2];\n    }\n    let req: Result | null = null;\n    let actual: number | null = null;\n    switch (feature) {\n      case \"width\":\n      case \"height\":\n      case \"device-width\":\n      case \"device-height\":\n      case \"color\":\n        if (value) {\n          req = value.evaluate(this);\n        }\n        break;\n    }\n    switch (feature) {\n      case \"width\":\n        actual = this.pageWidth();\n        break;\n      case \"height\":\n        actual = this.pageHeight();\n        break;\n      case \"device-width\":\n        actual = window.screen.availWidth;\n        break;\n      case \"device-height\":\n        actual = window.screen.availHeight;\n        break;\n      case \"color\":\n        actual = window.screen.pixelDepth;\n        break;\n    }\n    if (actual != null && req != null) {\n      switch (prefix) {\n        case \"min\":\n          return actual >= req;\n        case \"max\":\n          return actual <= req;\n        default:\n          return actual == req;\n      }\n    } else if (actual != null && value == null) {\n      return actual !== 0;\n    }\n    return false;\n  }\n\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    return false;\n  }\n\n  queryVal(scope: LexicalScope, key: string): Result | undefined {\n    const s = this.scopes[scope.scopeKey];\n    return s ? s[key] : undefined;\n  }\n\n  storeVal(scope: LexicalScope, key: string, val: Result): void {\n    this.getScopeContext(scope)[key] = val;\n  }\n}\n\n//---------- name resolution --------------\nexport type DependencyCache = {\n  [key: string]: boolean | Special;\n};\n\nexport class Val {\n  key: string;\n\n  constructor(public scope: LexicalScope) {\n    this.scope = scope;\n    this.key = `_${nextKeyIndex++}`;\n  }\n\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, 0);\n    return buf.toString();\n  }\n\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  protected evaluateCore(context: Context): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  expand(context: Context, params: Val[]): Val {\n    return this;\n  }\n\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return other === this;\n  }\n\n  dependOuter(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    const cached = dependencyCache[this.key];\n    if (cached != null) {\n      if (cached === Special.PENDING) {\n        return false;\n      }\n      return cached as boolean;\n    } else {\n      dependencyCache[this.key] = Special.PENDING;\n      const result = this.dependCore(other, context, dependencyCache);\n      dependencyCache[this.key] = result;\n      return result;\n    }\n  }\n\n  depend(other: Val, context: Context): boolean {\n    return this.dependOuter(other, context, {});\n  }\n\n  evaluate(context: Context): Result {\n    let result = context.queryVal(this.scope, this.key);\n    if (typeof result != \"undefined\") {\n      return result;\n    }\n    result = this.evaluateCore(context);\n    context.storeVal(this.scope, this.key, result);\n    return result;\n  }\n\n  isMediaName(): boolean {\n    return false;\n  }\n}\n\nexport class Prefix extends Val {\n  constructor(scope: LexicalScope, public val: Val) {\n    super(scope);\n  }\n\n  protected getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalPrefix(val: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const val = this.val.evaluate(context);\n    return this.evalPrefix(val);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.val.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (10 < priority) {\n      buf.append(\"(\");\n    }\n    buf.append(this.getOp());\n    this.val.appendTo(buf, 10);\n    if (10 < priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const val = this.val.expand(context, params);\n    if (val === this.val) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, val);\n    return r;\n  }\n}\n\nexport class Infix extends Val {\n  constructor(scope: LexicalScope, public lhs: Val, public rhs: Val) {\n    super(scope);\n  }\n\n  getPriority(): number {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  getOp(): string {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  evalInfix(lhs: Result, rhs: Result): Result {\n    throw new Error(\"F_ABSTRACT\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const lhs = this.lhs.evaluate(context);\n    const rhs = this.rhs.evaluate(context);\n    return this.evalInfix(lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.lhs.dependOuter(other, context, dependencyCache) ||\n      this.rhs.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    const thisPriority = this.getPriority();\n    if (thisPriority <= priority) {\n      buf.append(\"(\");\n    }\n    this.lhs.appendTo(buf, thisPriority);\n    buf.append(this.getOp());\n    this.rhs.appendTo(buf, thisPriority);\n    if (thisPriority <= priority) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const lhs = this.lhs.expand(context, params);\n    const rhs = this.rhs.expand(context, params);\n    if (lhs === this.lhs && rhs === this.rhs) {\n      return this;\n    }\n    const r = new (this.constructor as any)(this.scope, lhs, rhs);\n    return r;\n  }\n}\n\nexport class Logical extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class Comparison extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class Additive extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n}\n\nexport class Multiplicative extends Infix {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class Not extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return !val;\n  }\n}\n\nexport class NotMedia extends Not {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"not \";\n  }\n}\n\nexport class Negate extends Prefix {\n  constructor(scope: LexicalScope, val: Val) {\n    super(scope, val);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"-\";\n  }\n\n  /**\n   * @override\n   */\n  evalPrefix(val: Result): Result {\n    return -val;\n  }\n}\n\nexport class And extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"&&\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) && this.rhs.evaluate(context);\n  }\n}\n\nexport class AndMedia extends And {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" and \";\n  }\n}\n\nexport class Or extends Logical {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"||\";\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.lhs.evaluate(context) || this.rhs.evaluate(context);\n  }\n}\n\nexport class Comma extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \", \";\n  }\n}\n\nexport class OrMedia extends Or {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" or \";\n  }\n}\n\nexport class Lt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs < rhs;\n  }\n}\n\nexport class Le extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"<=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs <= rhs;\n  }\n}\n\nexport class Gt extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs > rhs;\n  }\n}\n\nexport class Ge extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \">=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs >= rhs;\n  }\n}\n\nexport class Eq extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"==\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs == rhs;\n  }\n}\n\nexport class Ne extends Comparison {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"!=\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return lhs != rhs;\n  }\n}\n\nexport class Add extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"+\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) + rhs;\n  }\n}\n\nexport class Subtract extends Additive {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \" - \";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) - (rhs as any);\n  }\n}\n\nexport class Multiply extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"*\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) * (rhs as any);\n  }\n}\n\nexport class Divide extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"/\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) / (rhs as any);\n  }\n}\n\nexport class Modulo extends Multiplicative {\n  constructor(scope: LexicalScope, lhs: Val, rhs: Val) {\n    super(scope, lhs, rhs);\n  }\n\n  /**\n   * @override\n   */\n  getOp(): string {\n    return \"%\";\n  }\n\n  /**\n   * @override\n   */\n  evalInfix(lhs: Result, rhs: Result): Result {\n    return (lhs as any) % (rhs as any);\n  }\n}\n\n/**\n * Numerical value with a unit.\n */\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(scope: LexicalScope, public num: number, unit: string) {\n    super(scope);\n    this.unit = unit.toLowerCase();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.num.toString());\n    buf.append(Base.escapeCSSIdent(this.unit));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.num * context.queryUnitSize(this.unit, false);\n  }\n}\n\n/**\n * Named value.\n * @param qualifiedName CSS-escaped name sequence separated by dots.\n */\nexport class Named extends Val {\n  constructor(scope: LexicalScope, public qualifiedName: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalName(this.scope, this.qualifiedName).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      context\n        .evalName(this.scope, this.qualifiedName)\n        .dependOuter(other, context, dependencyCache)\n    );\n  }\n}\n\n/**\n * Named value.\n */\nexport class MediaName extends Val {\n  constructor(scope: LexicalScope, public not: boolean, public name: string) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.not) {\n      buf.append(\"not \");\n    }\n    buf.append(Base.escapeCSSIdent(this.name));\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaName(this.name, this.not);\n  }\n\n  /**\n   * @override\n   */\n  isMediaName(): boolean {\n    return true;\n  }\n}\n\n/**\n * A value that is calculated by calling a JavaScript function. Note that the\n * result is cached and this function will be called only once between any\n * clears for its scope in the context.\n * @param fn function to call.\n * @param str a way to represent this value in toString() call.\n */\nexport class Native extends Val {\n  constructor(\n    scope: LexicalScope,\n    public fn: () => Result,\n    public str: string,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.str);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.fn.call(context);\n  }\n}\n\nexport function appendValArray(buf: Base.StringBuffer, arr: Val[]): void {\n  buf.append(\"(\");\n  for (let i = 0; i < arr.length; i++) {\n    if (i) {\n      buf.append(\",\");\n    }\n    arr[i].appendTo(buf, 0);\n  }\n  buf.append(\")\");\n}\n\nexport function expandValArray(\n  context: Context,\n  arr: Val[],\n  params: Val[],\n): Val[] {\n  let expanded: Val[] = arr;\n  for (let i = 0; i < arr.length; i++) {\n    const p = arr[i].expand(context, params);\n    if (arr !== expanded) {\n      expanded[i] = p;\n    } else if (p !== arr[i]) {\n      expanded = Array(arr.length);\n      for (let j = 0; j < i; j++) {\n        expanded[j] = arr[j];\n      }\n      expanded[i] = p;\n    }\n  }\n  return expanded;\n}\n\nexport function evalValArray(context: Context, arr: Val[]): Result[] {\n  const result: Result[] = Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    result[i] = arr[i].evaluate(context);\n  }\n  return result;\n}\n\nexport class Call extends Val {\n  constructor(\n    scope: LexicalScope,\n    public qualifiedName: string,\n    public params: Val[],\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(this.qualifiedName);\n    appendValArray(buf, this.params);\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      false,\n    );\n    return body.expand(context, this.params).evaluate(context);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    if (other === this) {\n      return true;\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i].dependOuter(other, context, dependencyCache)) {\n        return true;\n      }\n    }\n    const body = context.evalCall(\n      this.scope,\n      this.qualifiedName,\n      this.params,\n      true,\n    );\n\n    // No expansion here!\n    return body.dependOuter(other, context, dependencyCache);\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const expandedParams = expandValArray(context, this.params, params);\n    if (expandedParams === this.params) {\n      return this;\n    }\n    return new Call(this.scope, this.qualifiedName, expandedParams);\n  }\n}\n\nexport class Cond extends Val {\n  constructor(\n    scope: LexicalScope,\n    public cond: Val,\n    public ifTrue: Val,\n    public ifFalse: Val,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (priority > 0) {\n      buf.append(\"(\");\n    }\n    this.cond.appendTo(buf, 0);\n    buf.append(\"?\");\n    this.ifTrue.appendTo(buf, 0);\n    buf.append(\":\");\n    this.ifFalse.appendTo(buf, 0);\n    if (priority > 0) {\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    if (this.cond.evaluate(context)) {\n      return this.ifTrue.evaluate(context);\n    } else {\n      return this.ifFalse.evaluate(context);\n    }\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this ||\n      this.cond.dependOuter(other, context, dependencyCache) ||\n      this.ifTrue.dependOuter(other, context, dependencyCache) ||\n      this.ifFalse.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const cond = this.cond.expand(context, params);\n    const ifTrue = this.ifTrue.expand(context, params);\n    const ifFalse = this.ifFalse.expand(context, params);\n    if (\n      cond === this.cond &&\n      ifTrue === this.ifTrue &&\n      ifFalse === this.ifFalse\n    ) {\n      return this;\n    }\n    const r = new Cond(this.scope, cond, ifTrue, ifFalse);\n    return r;\n  }\n}\n\nexport class Const extends Val {\n  constructor(scope: LexicalScope, public val: Result) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    switch (typeof this.val) {\n      case \"number\":\n      case \"boolean\":\n        buf.append(this.val.toString());\n        break;\n      case \"string\":\n        buf.append('\"');\n        buf.append(Base.escapeCSSStr(this.val));\n        buf.append('\"');\n        break;\n      default:\n        throw new Error(\"F_UNEXPECTED_STATE\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return this.val;\n  }\n}\n\nexport class MediaTest extends Val {\n  constructor(scope: LexicalScope, public name: MediaName, public value: Val) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"(\");\n    buf.append(Base.escapeCSSStr(this.name.name));\n    buf.append(\":\");\n    this.value.appendTo(buf, 0);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalMediaTest(this.name.name, this.value);\n  }\n\n  /**\n   * @override\n   */\n  dependCore(\n    other: Val,\n    context: Context,\n    dependencyCache: DependencyCache,\n  ): boolean {\n    return (\n      other === this || this.value.dependOuter(other, context, dependencyCache)\n    );\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const value = this.value.expand(context, params);\n    if (value === this.value) {\n      return this;\n    }\n    const r = new MediaTest(this.scope, this.name, value);\n    return r;\n  }\n}\n\nexport class SupportsTest extends Val {\n  constructor(\n    scope: LexicalScope,\n    public name: string,\n    public value: string,\n    public isFunc: boolean,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    if (this.isFunc) {\n      buf.append(this.name);\n    }\n    buf.append(\"(\");\n    if (!this.isFunc && this.name) {\n      buf.append(this.name);\n      buf.append(\":\");\n    }\n    buf.append(this.value);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  evaluateCore(context: Context): Result {\n    return context.evalSupportsTest(this.name, this.value, this.isFunc);\n  }\n}\n\nexport class Param extends Val {\n  constructor(scope: LexicalScope, public index: number) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, priority: number): void {\n    buf.append(\"$\");\n    buf.append(this.index.toString());\n  }\n\n  /**\n   * @override\n   */\n  expand(context: Context, params: Val[]): Val {\n    const v = params[this.index];\n    if (!v) {\n      throw new Error(`Parameter missing: ${this.index}`);\n    }\n    return v as Val;\n  }\n}\n\nexport function and(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (\n    v1 === scope._false ||\n    v1 === scope.zero ||\n    v2 == scope._false ||\n    v2 == scope.zero\n  ) {\n    return scope._false;\n  }\n  if (v1 === scope._true || v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope._true || v2 === scope.one) {\n    return v1;\n  }\n  return new And(scope, v1, v2);\n}\n\nexport function add(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return v2;\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Add(scope, v1, v2);\n}\n\nexport function sub(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return new Negate(scope, v2);\n  }\n  if (v2 === scope.zero) {\n    return v1;\n  }\n  return new Subtract(scope, v1, v2);\n}\n\nexport function mul(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero || v2 === scope.zero) {\n    return scope.zero;\n  }\n  if (v1 === scope.one) {\n    return v2;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Multiply(scope, v1, v2);\n}\n\nexport function div(scope: LexicalScope, v1: Val, v2: Val): Val {\n  if (v1 === scope.zero) {\n    return scope.zero;\n  }\n  if (v2 === scope.one) {\n    return v1;\n  }\n  return new Divide(scope, v1, v2);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Css - CSS Values and utilities to handle them.\n */\nimport * as Base from \"./base\";\nimport * as Exprs from \"./exprs\";\n\nexport class Visitor {\n  visitValues(values: Val[]): Val[] {\n    for (let i = 0; i < values.length; i++) {\n      values[i].visit(this);\n    }\n    return null;\n  }\n\n  visitEmpty(empty: Val): Val {\n    return null;\n  }\n\n  visitSlash(slash: Val): Val {\n    return null;\n  }\n\n  visitStr(str: Str): Val {\n    return null;\n  }\n\n  visitIdent(ident: Ident): Val {\n    return null;\n  }\n\n  visitNumeric(numeric: Numeric): Val {\n    return null;\n  }\n\n  visitNum(num: Num): Val {\n    return null;\n  }\n\n  visitInt(num: Int): Val {\n    return this.visitNum(num);\n  }\n\n  visitHexColor(color: HexColor): Val {\n    return null;\n  }\n\n  visitURL(url: URL): Val {\n    return null;\n  }\n\n  visitURange(urange: URange): Val {\n    return null;\n  }\n\n  visitSpaceList(list: SpaceList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitCommaList(list: CommaList): Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  visitFunc(func: Func): Val {\n    this.visitValues(func.values);\n    return null;\n  }\n\n  visitExpr(expr: Expr): Val {\n    return null;\n  }\n}\n\nexport class FilterVisitor extends Visitor {\n  error: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitValues(values: Val[]): Val[] {\n    let arr: Val[] = null;\n    for (let i = 0; i < values.length; i++) {\n      const before = values[i];\n      const after = before.visit(this);\n      if (this.error) {\n        return [];\n      }\n      if (arr) {\n        arr[i] = after;\n      } else if (before !== after) {\n        arr = new Array(values.length);\n        for (let k = 0; k < i; k++) {\n          arr[k] = values[k];\n        }\n        arr[i] = after;\n      }\n    }\n    return arr || values;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Val): Val {\n    return empty;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Str): Val {\n    return str;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Ident): Val {\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Val): Val {\n    return slash;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Numeric): Val {\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Num): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Int): Val {\n    return num;\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: HexColor): Val {\n    return color;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: URL): Val {\n    return url;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: URange): Val {\n    return urange;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: SpaceList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new SpaceList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: CommaList): Val {\n    const values = this.visitValues(list.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === list.values) {\n      return list;\n    }\n    return new CommaList(values);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Func): Val {\n    const values = this.visitValues(func.values);\n    if (this.error) {\n      return empty;\n    }\n    if (values === func.values) {\n      return func;\n    }\n    return new Func(func.name, values);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Expr): Val {\n    return expr;\n  }\n}\n\nexport class Val {\n  /**\n   * @override\n   */\n  toString(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, true);\n    return buf.toString();\n  }\n\n  stringValue(): string {\n    const buf = new Base.StringBuffer();\n    this.appendTo(buf, false);\n    return buf.toString();\n  }\n\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return null;\n  }\n\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"[error]\");\n  }\n\n  isExpr(): boolean {\n    return false;\n  }\n\n  isNumeric(): boolean {\n    return false;\n  }\n\n  isNum(): boolean {\n    return false;\n  }\n\n  isIdent(): boolean {\n    return false;\n  }\n\n  isSpaceList(): boolean {\n    return false;\n  }\n\n  visit(visitor: Visitor): Val {\n    return this;\n  }\n}\n\nexport class Empty extends Val {\n  private static empty: Empty;\n\n  public static get instance(): Empty {\n    if (!this.empty) {\n      this.empty = new Empty();\n    }\n    return this.empty;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {}\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitEmpty(this);\n  }\n}\n\nexport const empty: Empty = Empty.instance;\n\nexport class Slash extends Val {\n  private static slash: Slash;\n\n  public static get instance(): Slash {\n    if (!this.slash) {\n      this.slash = new Slash();\n    }\n    return this.slash;\n  }\n\n  private constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, \"/\");\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"/\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitSlash(this);\n  }\n}\n\nexport const slash: Slash = Slash.instance;\n\nexport class Str extends Val {\n  constructor(public str: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.str);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append('\"');\n      buf.append(Base.escapeCSSStr(this.str));\n      buf.append('\"');\n    } else {\n      buf.append(this.str);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitStr(this);\n  }\n}\n\nconst nameTable: { [key: string]: Ident } = {};\n\nexport class Ident extends Val {\n  constructor(public name: string) {\n    super();\n    if (nameTable[name]) {\n      throw new Error(\"E_INVALID_CALL\");\n    }\n    nameTable[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    return new Exprs.Const(scope, this.name);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (toString) {\n      buf.append(Base.escapeCSSIdent(this.name));\n    } else {\n      buf.append(this.name);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitIdent(this);\n  }\n\n  /**\n   * @override\n   */\n  isIdent(): boolean {\n    return true;\n  }\n}\n\nexport function getName(name: string): Ident {\n  let r = nameTable[name];\n  if (!r) {\n    r = new Ident(name);\n  }\n  return r;\n}\n\nexport class Numeric extends Val {\n  unit: string;\n\n  constructor(public num: number, unit: string) {\n    super();\n    this.unit = unit.toLowerCase(); // units are case-insensitive in CSS\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (ref && this.unit == \"%\") {\n      if (this.num == 100) {\n        return ref;\n      }\n      return new Exprs.Multiply(\n        scope,\n        ref,\n        new Exprs.Const(scope, this.num / 100),\n      );\n    }\n    return new Exprs.Numeric(scope, this.num, this.unit);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n    buf.append(this.unit);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitNumeric(this);\n  }\n\n  /**\n   * @override\n   */\n  isNumeric(): boolean {\n    return true;\n  }\n}\n\nexport class Num extends Val {\n  constructor(public num: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(scope: Exprs.LexicalScope, ref: Exprs.Val): Exprs.Val {\n    if (this.num == 0) {\n      return scope.zero;\n    }\n    if (this.num == 1) {\n      return scope.one;\n    }\n    return new Exprs.Const(scope, this.num);\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.num.toString());\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitNum(this);\n  }\n\n  /**\n   * @override\n   */\n  isNum(): boolean {\n    return true;\n  }\n}\n\nexport class Int extends Num {\n  constructor(num: number) {\n    super(num);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitInt(this);\n  }\n}\n\nexport class HexColor extends Val {\n  constructor(public hex: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(\"#\");\n    buf.append(this.hex);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitHexColor(this);\n  }\n}\n\nexport class URL extends Val {\n  constructor(public url: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append('url(\"');\n    buf.append(Base.escapeCSSStr(this.url));\n    buf.append('\")');\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitURL(this);\n  }\n}\n\nexport class URange extends Val {\n  constructor(public urangeText: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.urangeText);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitURange(this);\n  }\n}\n\nexport function appendList(\n  buf: Base.StringBuffer,\n  values: Val[],\n  separator: string,\n  toString: boolean,\n): void {\n  const length = values.length;\n  if (length > 0) {\n    values[0]?.appendTo(buf, toString);\n    for (let i = 1; i < length; i++) {\n      buf.append(separator);\n      values[i]?.appendTo(buf, toString);\n    }\n  }\n}\n\nexport class SpaceList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \" \", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitSpaceList(this);\n  }\n\n  /**\n   * @override\n   */\n  isSpaceList(): boolean {\n    return true;\n  }\n}\n\nexport class CommaList extends Val {\n  constructor(public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    appendList(buf, this.values, \",\", toString);\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitCommaList(this);\n  }\n}\n\nexport class Func extends Val {\n  constructor(public name: string, public values: Val[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(Base.escapeCSSIdent(this.name));\n    buf.append(\"(\");\n    appendList(buf, this.values, \",\", toString);\n    buf.append(\")\");\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitFunc(this);\n  }\n}\n\nexport class Expr extends Val {\n  constructor(public expr: Exprs.Val) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  toExpr(): Exprs.Val {\n    return this.expr;\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    if (\n      this.expr instanceof Exprs.Const ||\n      this.expr instanceof Exprs.Numeric\n    ) {\n      this.expr.appendTo(buf, 0);\n    } else {\n      buf.append(\"-epubx-expr(\");\n      this.expr.appendTo(buf, 0);\n      buf.append(\")\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visit(visitor: Visitor): Val {\n    return visitor.visitExpr(this);\n  }\n\n  /**\n   * @override\n   */\n  isExpr(): boolean {\n    return true;\n  }\n}\n\n/**\n * Custom property value, may be arbitrary token\n */\nexport class AnyToken extends Val {\n  constructor(public text: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  appendTo(buf: Base.StringBuffer, toString: boolean): void {\n    buf.append(this.text || \" \");\n  }\n}\n\nexport function toNumber(val: Val, context: Exprs.Context): number {\n  if (val) {\n    if (val.isNumeric()) {\n      const numeric = val as Numeric;\n      return context.queryUnitSize(numeric.unit, false) * numeric.num;\n    }\n    if (val.isNum()) {\n      return (val as Num).num;\n    }\n  }\n  return 0;\n}\n\n/**\n * Convert numeric value to px\n */\nexport function convertNumericToPx(val: Val, context: Exprs.Context): Numeric {\n  return new Numeric(toNumber(val, context), \"px\");\n}\n\nexport const ident: { [key: string]: Ident } = {\n  absolute: getName(\"absolute\"),\n  all: getName(\"all\"),\n  always: getName(\"always\"),\n  anywhere: getName(\"anywhere\"),\n  auto: getName(\"auto\"),\n  avoid: getName(\"avoid\"),\n  balance: getName(\"balance\"),\n  balance_all: getName(\"balance-all\"),\n  block: getName(\"block\"),\n  block_end: getName(\"block-end\"),\n  block_start: getName(\"block-start\"),\n  both: getName(\"both\"),\n  bottom: getName(\"bottom\"),\n  border_box: getName(\"border-box\"),\n  break_all: getName(\"break-all\"),\n  break_word: getName(\"break-word\"),\n  crop: getName(\"crop\"),\n  cross: getName(\"cross\"),\n  column: getName(\"column\"),\n  exclusive: getName(\"exclusive\"),\n  _false: getName(\"false\"),\n  fixed: getName(\"fixed\"),\n  flex: getName(\"flex\"),\n  footnote: getName(\"footnote\"),\n  footer: getName(\"footer\"),\n  header: getName(\"header\"),\n  hidden: getName(\"hidden\"),\n  horizontal_tb: getName(\"horizontal-tb\"),\n  inherit: getName(\"inherit\"),\n  initial: getName(\"initial\"),\n  inline: getName(\"inline\"),\n  inline_block: getName(\"inline-block\"),\n  inline_end: getName(\"inline-end\"),\n  inline_start: getName(\"inline-start\"),\n  landscape: getName(\"landscape\"),\n  left: getName(\"left\"),\n  line: getName(\"line\"),\n  list_item: getName(\"list-item\"),\n  ltr: getName(\"ltr\"),\n  manual: getName(\"manual\"),\n  none: getName(\"none\"),\n  normal: getName(\"normal\"),\n  oeb_page_foot: getName(\"oeb-page-foot\"),\n  oeb_page_head: getName(\"oeb-page-head\"),\n  page: getName(\"page\"),\n  relative: getName(\"relative\"),\n  revert: getName(\"revert\"),\n  right: getName(\"right\"),\n  same: getName(\"same\"),\n  scale: getName(\"scale\"),\n  snap_block: getName(\"snap-block\"),\n  spread: getName(\"spread\"),\n  _static: getName(\"static\"),\n  rtl: getName(\"rtl\"),\n  table: getName(\"table\"),\n  table_caption: getName(\"table-caption\"),\n  table_cell: getName(\"table-cell\"),\n  table_footer_group: getName(\"table-footer-group\"),\n  table_header_group: getName(\"table-header-group\"),\n  table_row: getName(\"table-row\"),\n  top: getName(\"top\"),\n  transparent: getName(\"transparent\"),\n  unset: getName(\"unset\"),\n  vertical_lr: getName(\"vertical-lr\"),\n  vertical_rl: getName(\"vertical-rl\"),\n  visible: getName(\"visible\"),\n  _true: getName(\"true\"),\n};\n\nexport const hundredPercent: Numeric = new Numeric(100, \"%\");\n\nexport const fullWidth: Numeric = new Numeric(100, \"pvw\");\n\nexport const fullHeight: Numeric = new Numeric(100, \"pvh\");\n\nexport const numericZero: Numeric = new Numeric(0, \"px\");\n\nexport const fullURange: URange = new URange(\"U+0-10FFFF\");\n\nexport const processingOrder = {\n  \"font-size\": 1,\n  color: 2,\n};\n\nexport function isDefaultingValue(value: Val): boolean {\n  return (\n    value === ident.inherit ||\n    value === ident.initial ||\n    value === ident.revert ||\n    value === ident.unset\n  );\n}\n\n/**\n * Function to sort property names in the order they should be processed\n */\nexport function processingOrderFn(name1: string, name2: string): number {\n  const n1 = processingOrder[name1] || Number.MAX_VALUE;\n  const n2 = processingOrder[name2] || Number.MAX_VALUE;\n  return n1 - n2;\n}\n\nexport function isCustomPropName(name: string): boolean {\n  return name?.length > 2 && name.startsWith(\"--\");\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview GeometryUtil - Geometric utilities.\n */\nimport * as Logging from \"./logging\";\n\nexport class Rect {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n  ) {}\n}\n\nexport class Point {\n  constructor(public x: number, public y: number) {}\n}\n\nexport class Insets {\n  constructor(\n    public left: number,\n    public top: number,\n    public right: number,\n    public bottom: number,\n  ) {}\n}\n\nexport class Segment {\n  constructor(\n    public low: Point,\n    public high: Point,\n    public winding: number,\n    public shapeId: number,\n  ) {}\n}\n\n/**\n * A single band for exclusion result. Left float is from the left box edge\n * to x1. Right float is from x2 to the right box edge.\n */\nexport class Band {\n  /** Left float. */\n  left: Element | null = null;\n\n  /** Right float. */\n  right: Element | null = null;\n\n  constructor(\n    public y1: number,\n    public y2: number,\n    public x1: number,\n    public x2: number,\n  ) {}\n}\n\nexport function segmentCompare(s1: Segment, s2: Segment): number {\n  return s1.low.y - s2.low.y || s1.low.x - s2.low.x;\n}\n\nexport class Shape {\n  constructor(public points: Point[]) {}\n\n  /**\n   * Converts this shape to a sequence of Segments and adds segments to the\n   * given array.\n   * @param arr array to add segments.\n   * @param id shapeId to write into segments.\n   */\n  addSegments(arr: Segment[], id: number): void {\n    const points = this.points;\n    const length = points.length;\n    let prev = points[length - 1];\n    for (let i = 0; i < length; i++) {\n      const curr = points[i];\n      let s: Segment;\n      if (prev.y < curr.y) {\n        s = new Segment(prev, curr, 1, id);\n      } else {\n        s = new Segment(curr, prev, -1, id);\n      }\n      arr.push(s);\n      prev = curr;\n    }\n  }\n\n  withOffset(offsetX: number, offsetY: number): Shape {\n    const points = [];\n    for (const p of this.points) {\n      points.push(new Point(p.x + offsetX, p.y + offsetY));\n    }\n    return new Shape(points);\n  }\n}\n\nexport function shapeForEllipse(\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n): Shape {\n  const count = 20;\n  const points: Point[] = [];\n  for (let i = 0; i < count; i++) {\n    const a = (i * 2 * Math.PI) / count;\n    points.push(new Point(cx + rx * Math.sin(a), cy + ry * Math.cos(a)));\n  }\n  return new Shape(points);\n}\n\nexport function shapeForRect(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n): Shape {\n  return new Shape([\n    new Point(x1, y1),\n    new Point(x2, y1),\n    new Point(x2, y2),\n    new Point(x1, y2),\n  ]);\n}\n\nexport function shapeForRectObj(r: Rect): Shape {\n  return new Shape([\n    new Point(r.x1, r.y1),\n    new Point(r.x2, r.y1),\n    new Point(r.x2, r.y2),\n    new Point(r.x1, r.y2),\n  ]);\n}\n\nexport class BandIntersection {\n  constructor(\n    public x: number,\n    public winding: number,\n    public shapeId: number,\n    public lowOrHigh: number,\n  ) {}\n}\n\nexport function intersectY(s: Segment, y: number): number {\n  const x =\n    s.low.x + ((s.high.x - s.low.x) * (y - s.low.y)) / (s.high.y - s.low.y);\n  if (isNaN(x)) {\n    throw new Error(\"Bad intersection\");\n  }\n  return x;\n}\n\nexport function addBandIntersections(\n  intersections: BandIntersection[],\n  s: Segment,\n  y1: number,\n  y2: number,\n): void {\n  let x1: number;\n  let w1: number;\n  let x2: number;\n  let w2: number;\n  if (s.high.y < y1) {\n    Logging.logger.warn(\"Error: inconsistent segment (1)\");\n  }\n  if (s.low.y <= y1) {\n    // outside\n    x1 = intersectY(s, y1);\n    w1 = s.winding;\n  } else {\n    x1 = s.low.x;\n    w1 = 0;\n  }\n  if (s.high.y >= y2) {\n    // outside\n    x2 = intersectY(s, y2);\n    w2 = s.winding;\n  } else {\n    x2 = s.high.x;\n    w2 = 0;\n  }\n  if (x1 < x2) {\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, -1));\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, 1));\n  } else {\n    intersections.push(new BandIntersection(x2, w2, s.shapeId, -1));\n    intersections.push(new BandIntersection(x1, w1, s.shapeId, 1));\n  }\n}\n\nexport function mergeIntersections(\n  intersections: BandIntersection[],\n  includeCount: number,\n  excludeCount: number,\n): number[] {\n  const shapeCount = includeCount + excludeCount;\n  const windings1: number[] = Array(shapeCount);\n  const windings2: number[] = Array(shapeCount);\n  let i: number;\n  for (i = 0; i <= shapeCount; i++) {\n    windings1[i] = 0;\n    windings2[i] = 0;\n  }\n  const xranges: number[] = [];\n  let inside: boolean = false;\n  const intersectionCount = intersections.length;\n  for (let k = 0; k < intersectionCount; k++) {\n    const intersection = intersections[k];\n    windings1[intersection.shapeId] += intersection.winding;\n    windings2[intersection.shapeId] += intersection.lowOrHigh;\n    let stillInside = false;\n    for (i = 0; i < includeCount; i++) {\n      if (windings1[i] && !windings2[i]) {\n        stillInside = true;\n        break;\n      }\n    }\n    if (stillInside) {\n      for (i = includeCount; i <= shapeCount; i++) {\n        if (windings1[i] || windings2[i]) {\n          stillInside = false;\n          break;\n        }\n      }\n    }\n    if (inside != stillInside) {\n      xranges.push(intersection.x);\n      inside = stillInside;\n    }\n  }\n  return xranges;\n}\n\n/**\n * Round v up to make it a multiple of unit. If unit is zero, return v.\n */\nexport function ceil(v: number, unit: number): number {\n  return unit ? Math.ceil(v / unit) * unit : v;\n}\n\n/**\n * Round v down to make it a multiple of unit. If unit is zero, return v.\n */\nexport function floor(v: number, unit: number): number {\n  return unit ? Math.floor(v / unit) * unit : v;\n}\n\nexport function rotatePoint(point: Point): Point {\n  return new Point(point.y, -point.x);\n}\n\n/**\n * Vertical box to pseudo-horizontal coords.\n */\nexport function rotateBox(box: Rect): Rect {\n  return new Rect(box.y1, -box.x2, box.y2, -box.x1);\n}\n\n/**\n * Pseudo-horizontal coords to vertical.\n */\nexport function unrotateBox(box: Rect): Rect {\n  return new Rect(-box.y2, box.x1, -box.y1, box.x2);\n}\n\nexport function rotateShape(shape: Shape): Shape {\n  return new Shape(shape.points.map((point) => rotatePoint(point)));\n}\n\nexport function shapesToBands(\n  box: Rect,\n  include: Shape[],\n  exclude: Shape[],\n  granularity: number,\n  snapHeight: number,\n  vertical: boolean,\n): Band[] {\n  if (vertical) {\n    box = rotateBox(box);\n    include = include.map((shape) => rotateShape(shape));\n    exclude = exclude.map((shape) => rotateShape(shape));\n  }\n  const includeCount = include.length;\n  const excludeCount = exclude ? exclude.length : 0;\n  const result: Band[] = [];\n  const segments: Segment[] = [];\n  let i: number;\n  let k: number;\n  let segment: Segment;\n  for (i = 0; i < includeCount; i++) {\n    include[i].addSegments(segments, i);\n  }\n  for (i = 0; i < excludeCount; i++) {\n    exclude[i].addSegments(segments, i + includeCount);\n  }\n  const segmentCount = segments.length;\n  segments.sort(segmentCompare);\n  let lowestIncludeIndex = 0;\n  while (segments[lowestIncludeIndex].shapeId >= includeCount) {\n    lowestIncludeIndex++;\n  }\n  let y = segments[lowestIncludeIndex].low.y;\n  if (y > box.y1) {\n    result.push(new Band(box.y1, y, box.x2, box.x2));\n  }\n  let segmentIndex = 0;\n  const activeSegments: Segment[] = [];\n  while (\n    segmentIndex < segmentCount &&\n    (segment = segments[segmentIndex]).low.y < y\n  ) {\n    if (segment.high.y > y) {\n      activeSegments.push(segment);\n    }\n    segmentIndex++;\n  }\n\n  // process the segments from low to high y values\n  while (segmentIndex < segmentCount || activeSegments.length > 0) {\n    // calculate the height of the band to work with\n    let y2 = box.y2; // band bottom\n    // min possible y2\n    const y2min = Math.min(\n      ceil(Math.ceil(y + granularity), snapHeight),\n      box.y2,\n    );\n    for (k = 0; k < activeSegments.length && y2 > y2min; k++) {\n      segment = activeSegments[k];\n      if (segment.low.x == segment.high.x) {\n        // vertical\n        if (segment.high.y < y2) {\n          y2 = Math.max(floor(segment.high.y, snapHeight), y2min);\n        }\n      } else if (segment.low.x != segment.high.x) {\n        // TODO: should we compare y???\n        // slanted (not horizontal)\n        y2 = y2min;\n      }\n    }\n    if (y2 > box.y2) {\n      y2 = box.y2;\n    }\n\n    // include new segments, decreasing y2 if needed\n    while (\n      segmentIndex < segmentCount &&\n      (segment = segments[segmentIndex]).low.y < y2\n    ) {\n      if (segment.high.y < y) {\n        segmentIndex++;\n        continue;\n      }\n      if (segment.low.y < y2min) {\n        if (segment.low.y == segment.high.y && segment.low.y == y) {\n          // Horizontal segment that goes right at y is not active,\n          // but consume it anyway\n        } else {\n          activeSegments.push(segment);\n          y2 = y2min;\n        }\n        segmentIndex++;\n      } else {\n        // Do not consume it, consider bottom edge \"outside\"\n        const yn = floor(segment.low.y, snapHeight);\n        if (yn < y2) {\n          y2 = yn;\n        }\n        break;\n      }\n    }\n\n    // now look at the band with top at y and bottom at y2\n    // activeSegments should list all segments that intersect that band\n\n    // find all intersections with the band\n    const bandIntersections: BandIntersection[] = [];\n    for (k = 0; k < activeSegments.length; k++) {\n      addBandIntersections(bandIntersections, activeSegments[k], y, y2);\n    }\n    bandIntersections.sort(\n      (bi1, bi2) => bi1.x - bi2.x || bi1.lowOrHigh - bi2.lowOrHigh,\n    );\n    const xranges = mergeIntersections(\n      bandIntersections,\n      includeCount,\n      excludeCount,\n    );\n    if (xranges.length == 0) {\n      result.push(new Band(y, y2, box.x2, box.x2));\n    } else {\n      // get the widest\n      let width = 0;\n      let x = box.x1;\n      for (k = 0; k < xranges.length; k += 2) {\n        const rx = Math.max(box.x1, xranges[k]);\n        const rw = Math.min(box.x2, xranges[k + 1]) - rx;\n        if (rw > width) {\n          width = rw;\n          x = rx;\n        }\n      }\n      if (width == 0) {\n        // no space left\n        result.push(new Band(y, y2, box.x2, box.x2));\n      } else {\n        result.push(\n          new Band(y, y2, Math.max(x, box.x1), Math.min(x + width, box.x2)),\n        );\n      }\n    }\n    if (y2 == box.y2) {\n      break;\n    }\n    y = y2;\n    for (k = activeSegments.length - 1; k >= 0; k--) {\n      if (activeSegments[k].high.y <= y2) {\n        activeSegments.splice(k, 1);\n      }\n    }\n  }\n  normalize(box, result);\n  return result;\n}\n\nexport function normalize(box: Rect, bands: Band[]): void {\n  let k = bands.length - 1;\n\n  // Merge bands with the same x1, x2 and remove unneeded bands at the end.\n  // Create fictious last band to merge unneeded bands at the end\n  let currBand = new Band(box.y2, box.y2, box.x1, box.x2);\n  while (k >= 0) {\n    const prevBand = currBand; // result[k+1]\n    currBand = bands[k];\n    if (\n      currBand.y2 - currBand.y1 < 1 || // Remove bands with height less than 1px\n      (currBand.x1 == prevBand.x1 && currBand.x2 == prevBand.x2)\n    ) {\n      prevBand.y1 = currBand.y1; // merge\n      bands.splice(k, 1);\n      currBand = prevBand;\n    }\n    k--;\n  }\n}\n\n/**\n * Find the index of the bottommost band so that y < band.y2\n */\nexport function findBand(bands: Band[], y: number): number {\n  let low = 0;\n  let high = bands.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    if (y >= bands[mid].y2) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Find the uppermost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findUppermostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let topEdge = rect.y1;\n  let band: Band;\n  let i: number;\n  for (i = 0; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y2 > rect.y1 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = Math.max(topEdge, band.y2);\n    }\n  }\n  let bottomEdge = topEdge;\n  for (; i < bands.length; i++) {\n    band = bands[i];\n    if (\n      band.y1 >= rect.y2 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = band.y2;\n    }\n  }\n  if (i === bands.length) {\n    bottomEdge = rect.y2;\n  } else {\n    bottomEdge = Math.min(bottomEdge, rect.y2);\n  }\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * Find the bottommost rectangle contained in the specified rect which occupies\n * full width of the rect without overlapping with any band in the specified\n * bands.\n * @returns Returns null if such rectangle does not exist.\n */\nexport function findBottommostFullyOpenRect(\n  bands: Band[],\n  rect: Rect,\n): Rect | null {\n  if (!bands.length) {\n    return rect;\n  }\n  let bottomEdge = rect.y2;\n  let band: Band;\n  let i: number;\n  for (i = bands.length - 1; i >= 0; i--) {\n    band = bands[i];\n    if (i === bands.length - 1 && band.y2 < rect.y2) {\n      break;\n    } else if (\n      band.y1 < rect.y2 &&\n      band.x1 - 0.1 <= rect.x1 &&\n      band.x2 + 0.1 >= rect.x2\n    ) {\n      break;\n    } else {\n      bottomEdge = Math.min(bottomEdge, band.y1);\n    }\n  }\n  let topEdge = Math.min(bottomEdge, band.y2);\n  for (; i >= 0; i--) {\n    band = bands[i];\n    if (\n      band.y2 <= rect.y1 ||\n      band.x1 - 0.1 > rect.x1 ||\n      band.x2 + 0.1 < rect.x2\n    ) {\n      break;\n    } else {\n      topEdge = band.y1;\n    }\n  }\n  topEdge = Math.max(topEdge, rect.y1);\n  if (bottomEdge <= topEdge) {\n    return null;\n  } else {\n    return new Rect(rect.x1, topEdge, rect.x2, bottomEdge);\n  }\n}\n\n/**\n * @param side either \"left\" or \"right\"\n */\nexport function positionFloat(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  side: string,\n): boolean {\n  let y = floatBox.y1;\n  const floatWidth = floatBox.x2 - floatBox.x1;\n  const floatHeight = floatBox.y2 - floatBox.y1;\n  let index = findBand(bands, y);\n  while (true) {\n    // Check if it fits\n    const floatBottom = y + floatHeight;\n    if (floatBottom > box.y2) {\n      return false;\n    }\n\n    // does not fit vertically\n    let x1 = box.x1;\n    let x2 = box.x2;\n    for (let i = index; i < bands.length && bands[i].y1 < floatBottom; i++) {\n      const band = bands[i];\n      if (band.x1 > x1) {\n        x1 = band.x1;\n      }\n      if (band.x2 < x2) {\n        x2 = band.x2;\n      }\n    }\n    if (x1 + floatWidth <= x2 || index >= bands.length) {\n      if (side == \"left\") {\n        floatBox.x1 = x1;\n        floatBox.x2 = x1 + floatWidth;\n      } else {\n        floatBox.x1 = x2 - floatWidth;\n        floatBox.x2 = x2;\n      }\n      floatBox.y2 += y - floatBox.y1;\n      floatBox.y1 = y;\n      return true;\n    }\n    y = bands[index].y2;\n    index++;\n  }\n}\n\nexport function addFloatToBands(\n  box: Rect,\n  bands: Band[],\n  floatBox: Rect,\n  floatBands: Band[],\n  side: string,\n): void {\n  if (!floatBands) {\n    floatBands = [new Band(floatBox.y1, floatBox.y2, floatBox.x1, floatBox.x2)];\n  }\n  while (floatBands.length > 0 && floatBands[0].y2 <= box.y1) {\n    floatBands.shift();\n  }\n  if (floatBands.length == 0) {\n    return;\n  }\n  if (floatBands[0].y1 < box.y1) {\n    floatBands[0].y1 = box.y1;\n  }\n  let band: Band;\n  const lastY = bands.length == 0 ? box.y1 : bands[bands.length - 1].y2;\n  if (lastY < box.y2) {\n    // add the tail band that we typically don't keep, it will be cleared by\n    // normalize()\n    bands.push(new Band(lastY, box.y2, box.x1, box.x2));\n  }\n  let index = findBand(bands, floatBands[0].y1);\n  for (const floatBand of floatBands) {\n    if (index == bands.length) {\n      break;\n    }\n    if (bands[index].y1 < floatBand.y1) {\n      // split it\n      band = bands[index];\n      index++;\n      bands.splice(index, 0, new Band(floatBand.y1, band.y2, band.x1, band.x2));\n      band.y2 = floatBand.y1;\n    }\n    while (index < bands.length) {\n      band = bands[index++];\n      if (band.y2 > floatBand.y2) {\n        // split it\n        bands.splice(\n          index,\n          0,\n          new Band(floatBand.y2, band.y2, band.x1, band.x2),\n        );\n        band.y2 = floatBand.y2;\n      }\n      if (floatBand.x1 != floatBand.x2) {\n        // non-empty floatBand\n        if (side == \"left\") {\n          band.x1 = Math.min(floatBand.x2, box.x2);\n        } else {\n          band.x2 = Math.max(floatBand.x1, box.x1);\n        }\n      }\n      if (band.y2 == floatBand.y2) {\n        break;\n      }\n    }\n  }\n  normalize(box, bands);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssProp - Support utilities to extract information\n * from various (parsed) CSS values.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\n\n//---------------------- value parsers ----------------------------------\nexport class SetVisitor extends Css.Visitor {\n  propSet: { [key: string]: boolean } = {};\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.propSet[ident.name] = true;\n    return ident;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toSet(val: Css.Val): { [key: string]: boolean } {\n  if (val) {\n    const visitor = new SetVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.propSet;\n    } catch (err) {\n      Logging.logger.warn(err, \"toSet:\");\n    }\n  }\n  return {};\n}\n\nexport class IntVisitor extends Css.Visitor {\n  constructor(public value: number) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    this.value = num.num;\n    return num;\n  }\n}\n\nexport function toInt(val: Css.Val, def: number): number {\n  if (val) {\n    const visitor = new IntVisitor(def);\n    try {\n      val.visit(visitor);\n      return visitor.value;\n    } catch (err) {\n      Logging.logger.warn(err, \"toInt: \");\n    }\n  }\n  return def;\n}\n\nexport class ShapeVisitor extends Css.Visitor {\n  collect: boolean = false;\n  coords: Css.Numeric[] = [];\n  name: string | null = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (this.collect) {\n      this.coords.push(numeric);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (this.collect && num.num == 0) {\n      this.coords.push(new Css.Numeric(0, \"px\"));\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (!this.collect) {\n      this.collect = true;\n      this.visitValues(func.values);\n      this.collect = false;\n      this.name = func.name.toLowerCase();\n    }\n    return null;\n  }\n\n  getShape(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    if (this.coords.length > 0) {\n      const numbers: number[] = [];\n      this.coords.forEach((coord, i) => {\n        if (coord.unit == \"%\") {\n          let ref = i % 2 == 0 ? width : height;\n          if (i == 3 && this.name == \"circle\") {\n            ref = Math.sqrt((width * width + height * height) / 2);\n          }\n          numbers.push((coord.num * ref) / 100);\n        } else {\n          numbers.push(coord.num * context.queryUnitSize(coord.unit, false));\n        }\n      });\n      switch (this.name) {\n        case \"polygon\":\n          if (numbers.length % 2 == 0) {\n            const points: GeometryUtil.Point[] = [];\n            for (let k = 0; k < numbers.length; k += 2) {\n              points.push(\n                new GeometryUtil.Point(x + numbers[k], y + numbers[k + 1]),\n              );\n            }\n            return new GeometryUtil.Shape(points);\n          }\n          break;\n        case \"rectangle\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForRect(\n              x + numbers[0],\n              y + numbers[1],\n              x + numbers[0] + numbers[2],\n              y + numbers[1] + numbers[3],\n            );\n          }\n          break;\n        case \"ellipse\":\n          if (numbers.length == 4) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[3],\n            );\n          }\n          break;\n        case \"circle\":\n          if (numbers.length == 3) {\n            return GeometryUtil.shapeForEllipse(\n              x + numbers[0],\n              y + numbers[1],\n              numbers[2],\n              numbers[2],\n            );\n          }\n          break;\n      }\n    }\n    return null;\n  }\n}\n\nexport function toShape(\n  val: Css.Val,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  context: Exprs.Context,\n): GeometryUtil.Shape {\n  if (val) {\n    const visitor = new ShapeVisitor();\n    try {\n      val.visit(visitor);\n      return visitor.getShape(x, y, width, height, context);\n    } catch (err) {\n      Logging.logger.warn(err, \"toShape:\");\n    }\n  }\n  return GeometryUtil.shapeForRect(x, y, x + width, y + height);\n}\n\nexport class CountersVisitor extends Css.Visitor {\n  counters: { [key: string]: number } = {};\n  name: string | null = null;\n\n  constructor(public readonly reset: boolean) {\n    super();\n  }\n\n  /** @override */\n  visitIdent(ident: Css.Ident): Css.Val {\n    this.name = ident.toString();\n    if (this.reset) {\n      this.counters[this.name] = 0;\n    } else {\n      this.counters[this.name] = (this.counters[this.name] || 0) + 1;\n    }\n    return ident;\n  }\n\n  /** @override */\n  visitInt(num: Css.Int): Css.Val {\n    if (this.name) {\n      this.counters[this.name] += num.num - (this.reset ? 0 : 1);\n    }\n    return num;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return list;\n  }\n}\n\nexport function toCounters(\n  val: Css.Val,\n  reset: boolean,\n): { [key: string]: number } {\n  const visitor = new CountersVisitor(reset);\n  try {\n    val.visit(visitor);\n  } catch (err) {\n    Logging.logger.warn(err, \"toCounters:\");\n  }\n  return visitor.counters;\n}\n\nexport class UrlTransformVisitor extends Css.FilterVisitor {\n  constructor(\n    public baseUrl: string,\n    public transformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    return new Css.URL(this.transformer.transformURL(url.url, this.baseUrl));\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Counters and named strings\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\n/**\n * Clone counter values.\n */\nfunction cloneCounterValues(\n  counters: CssCascade.CounterValues,\n): CssCascade.CounterValues {\n  const result = {};\n  Object.keys(counters).forEach((name) => {\n    result[name] = Array.from(counters[name]);\n  });\n  return result;\n}\n\n/**\n * Class representing a reference by target-counter(s).\n * @param targetId ID of the referenced element (transformed by\n *     DocumentURLTransformer to handle a reference across multiple source\n *     documents)\n * @param resolved If the reference is already resolved or not\n */\nexport class TargetCounterReference {\n  pageCounters: CssCascade.CounterValues = null;\n  spineIndex: number = -1;\n  pageIndex: number = -1;\n\n  constructor(public readonly targetId: string, public resolved: boolean) {}\n\n  equals(other: TargetCounterReference): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other) {\n      return false;\n    }\n    return (\n      this.targetId === other.targetId &&\n      this.resolved === other.resolved &&\n      this.spineIndex === other.spineIndex &&\n      this.pageIndex === other.pageIndex\n    );\n  }\n\n  /**\n   * Returns if the reference is resolved or not.\n   */\n  isResolved(): boolean {\n    return this.resolved;\n  }\n\n  /**\n   * Marks that this reference is resolved.\n   */\n  resolve() {\n    this.resolved = true;\n  }\n\n  /**\n   * Marks that this reference is unresolved.\n   */\n  unresolve() {\n    this.resolved = false;\n  }\n}\n\nclass CounterListener implements CssCascade.CounterListener {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n  ) {}\n\n  /**\n   * @override\n   */\n  countersOfId(id: string, counters: CssCascade.CounterValues) {\n    id = this.counterStore.documentURLTransformer.transformFragment(\n      id,\n      this.baseURL,\n    );\n    this.counterStore.countersById[id] = counters;\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.counterStore.getExprContentListener();\n  }\n}\n\n/**\n * Map for named string name, element offset, and the string value\n */\ntype NamedStringValues = {\n  [name: string]: { [elementOffset: number]: string };\n};\n\nclass CounterResolver implements CssCascade.CounterResolver {\n  styler: CssStyler.Styler | null = null;\n  namedStringValues: NamedStringValues = {};\n\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly baseURL: string,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n  ) {}\n\n  setStyler(styler: CssStyler.Styler): void {\n    this.styler = styler;\n  }\n\n  private getFragment(url: string): string | null {\n    const r = url.match(/^[^#]*#(.*)$/);\n    return r ? r[1] : null;\n  }\n\n  private getTransformedId(url: string): string {\n    let transformedId = this.counterStore.documentURLTransformer.transformURL(\n      Base.resolveURL(url, this.baseURL),\n      this.baseURL,\n    );\n    if (transformedId.charAt(0) === \"#\") {\n      transformedId = transformedId.substring(1);\n    }\n    return transformedId;\n  }\n\n  /**\n   * @override\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const getCounterNumber = () => {\n      const values = this.counterStore.currentPageCounters[name];\n      return values && values.length ? values[values.length - 1] : null;\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumber()),\n      `page-counter-${name}`,\n    );\n\n    const arrayFormat = (arr) => {\n      return format(arr[0]);\n    };\n\n    this.counterStore.registerPageCounterExpr(name, arrayFormat, expr);\n    return expr;\n  }\n\n  /**\n   * @override\n   */\n  getPageCountersVal(\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const getCounterNumbers = () => {\n      return this.counterStore.currentPageCounters[name] || [];\n    };\n\n    const expr = new Exprs.Native(\n      this.pageScope,\n      () => format(getCounterNumbers()),\n      `page-counters-${name}`,\n    );\n    this.counterStore.registerPageCounterExpr(name, format, expr);\n    return expr;\n  }\n\n  /**\n   * Returns (non page-based) counter values for an element with the specified\n   * ID. Returns null if the style of the elements has not been calculated yet\n   * (i.e. the element does not exit or it is in a source document which is not\n   * loaded yet).\n   * @param id Original ID value\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   * @param lookForElement If true, look ahead for an element with the ID in the\n   *     current source document when such an element has not appeared yet. Do\n   *     not set to true during Styler.styleUntil is being called, since in that\n   *     case Styler.styleUntil can be called again and may lead to internal\n   *     inconsistency.\n   */\n  private getTargetCounters(\n    id: string | null,\n    transformedId: string,\n    lookForElement: boolean,\n  ): CssCascade.CounterValues | null {\n    let targetCounters = this.counterStore.countersById[transformedId];\n    if (!targetCounters && lookForElement && id) {\n      this.styler.styleUntilIdIsReached(id);\n      targetCounters = this.counterStore.countersById[transformedId];\n    }\n    return targetCounters || null;\n  }\n\n  /**\n   * Returns page-based counter values for an element with the specified ID.\n   * Returns null if the element has not been laid out yet.\n   * @param transformedId ID transformed by DocumentURLTransformer to handle a\n   *     reference across multiple source documents\n   */\n  private getTargetPageCounters(\n    transformedId: string,\n  ): CssCascade.CounterValues | null {\n    if (this.counterStore.currentPage.elementsById[transformedId]) {\n      return this.counterStore.currentPageCounters;\n    } else {\n      return this.counterStore.pageCountersById[transformedId] || null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n\n    // Since this method is executed during Styler.styleUntil is being called,\n    // set false to lookForElement argument.\n    let counters = this.getTargetCounters(id, transformedId, false);\n    if (counters && counters[name]) {\n      // Since an element-based counter is defined, any page-based counter is\n      // obscured even if it exists.\n      const countersOfName = counters[name];\n      return new Exprs.Const(\n        this.rootScope,\n        format(countersOfName[countersOfName.length - 1] || null),\n      );\n    }\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        // Since This block is evaluated during layout, lookForElement\n        // argument can be set to true.\n        counters = this.getTargetCounters(id, transformedId, true);\n\n        if (counters) {\n          if (counters[name]) {\n            // Since an element-based counter is defined, any page-based\n            // counter is obscured even if it exists.\n            const countersOfName = counters[name];\n            return format(countersOfName[countersOfName.length - 1] || null);\n          } else {\n            const pageCounters = this.getTargetPageCounters(transformedId);\n            if (pageCounters) {\n              // The target element has already been laid out.\n              this.counterStore.resolveReference(transformedId);\n              if (pageCounters[name]) {\n                const pageCountersOfName = pageCounters[name];\n                return format(\n                  pageCountersOfName[pageCountersOfName.length - 1] || null,\n                );\n              } else {\n                // No corresponding counter with the name.\n                return format(0);\n              }\n            } else {\n              // The target element has not been laid out yet.\n              this.counterStore.saveReferenceOfCurrentPage(\n                transformedId,\n                false,\n              );\n              return \"??\"; // TODO more reasonable placeholder?\n            }\n          }\n        } else {\n          // The style of target element has not been calculated yet.\n          // (The element is in another source document that is not parsed\n          // yet)\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        }\n      },\n      `target-counter-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * @override\n   */\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val {\n    const id = this.getFragment(url);\n    const transformedId = this.getTransformedId(url);\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const pageCounters = this.getTargetPageCounters(transformedId);\n\n        if (!pageCounters) {\n          // The target element has not been laid out yet.\n          this.counterStore.saveReferenceOfCurrentPage(transformedId, false);\n          return \"??\"; // TODO more reasonable placeholder?\n        } else {\n          this.counterStore.resolveReference(transformedId);\n          const pageCountersOfName = pageCounters[name] || [];\n          const elementCounters = this.getTargetCounters(\n            id,\n            transformedId,\n            true,\n          );\n          const elementCountersOfName = elementCounters[name] || [];\n          return format(pageCountersOfName.concat(elementCountersOfName));\n        }\n      },\n      `target-counters-${name}-of-${url}`,\n    );\n  }\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val {\n    return new Exprs.Native(\n      this.pageScope,\n      () => {\n        const stringValues = this.namedStringValues[name];\n        if (!stringValues) {\n          return \"\";\n        }\n        const offsets = Object.keys(stringValues)\n          .map((a) => parseInt(a, 10))\n          .sort(Base.numberCompare);\n\n        const currentPage = this.counterStore.currentPage;\n        const pageStartOffset = currentPage.isBlankPage\n          ? currentPage.offset - 1\n          : currentPage.offset;\n        const pageLastOffset = currentPage.isBlankPage\n          ? pageStartOffset\n          : Math.max(\n              pageStartOffset,\n              ...Array.from(\n                currentPage.container.querySelectorAll(\n                  `[${Base.ELEMENT_OFFSET_ATTR}]`,\n                ),\n              ).map((e) =>\n                parseInt(e.getAttribute(Base.ELEMENT_OFFSET_ATTR), 10),\n              ),\n            );\n\n        let firstOffset = -1;\n        let startOffset = -1;\n        let lastOffset = -1;\n        let firstExceptOffset = -1;\n\n        for (let i = 0; i < offsets.length; i++) {\n          const offset = offsets[i];\n          const offsetPrev = i > 0 ? offsets[i - 1] : -1;\n          const offsetNext = i < offsets.length - 1 ? offsets[i + 1] : -1;\n          if (offset > pageLastOffset) {\n            break;\n          }\n          if (offset >= pageStartOffset) {\n            if (firstOffset < 0) {\n              firstOffset = offset;\n              firstExceptOffset = -1;\n            }\n            if (startOffset < 0) {\n              if (offset === pageStartOffset) {\n                startOffset = offset;\n              } else {\n                if (offsetPrev < firstOffset) {\n                  startOffset = offsetPrev;\n                }\n                // Check if the element at the offset is at beginning of the page\n                const elementAtOffset = currentPage.container.querySelector(\n                  `[${Base.ELEMENT_OFFSET_ATTR}=\"${offset}\"]`,\n                );\n                if (!elementAtOffset) {\n                  // title or meta elements are not output, but should be treated as start\n                  if (startOffset < 0) {\n                    startOffset = offset;\n                  }\n                } else {\n                  let elementAtPageStartOffset =\n                    currentPage.container.querySelector(\n                      `[${Base.ELEMENT_OFFSET_ATTR}=\"${pageStartOffset}\"]`,\n                    );\n                  if (!elementAtPageStartOffset) {\n                    // The element at pageStartOffset is not found when page break occured\n                    // within an element, so use the ancestor element with offset 0 instead.\n                    elementAtPageStartOffset =\n                      currentPage.container.querySelector(\n                        `[${Base.ELEMENT_OFFSET_ATTR}=\"0\"]`,\n                      );\n                  }\n                  if (elementAtPageStartOffset) {\n                    // Find if the element at the offset is (the first child of)* the element at page start\n                    for (\n                      let element = elementAtPageStartOffset;\n                      element;\n                      element = element.firstElementChild\n                    ) {\n                      if (element === elementAtOffset) {\n                        startOffset = offset;\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            lastOffset = offset;\n          } else if (offsetNext > pageLastOffset || offsetNext < 0) {\n            firstOffset = startOffset = lastOffset = firstExceptOffset = offset;\n          }\n        }\n\n        const stringValue =\n          stringValues[\n            {\n              first: firstOffset,\n              start: startOffset,\n              last: lastOffset,\n              \"first-except\": firstExceptOffset,\n            }[retrievePosition]\n          ] || \"\";\n\n        return stringValue;\n      },\n      `named-string-${retrievePosition}-${name}`,\n    );\n  }\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CssCascade.CascadeInstance,\n  ): void {\n    const values =\n      this.namedStringValues[name] || (this.namedStringValues[name] = {});\n    values[cascadeInstance.currentElementOffset] = stringValue;\n  }\n}\n\nexport class CounterStore {\n  countersById: { [key: string]: CssCascade.CounterValues } = {};\n  pageCountersById: { [key: string]: CssCascade.CounterValues } = {};\n  currentPageCounters: CssCascade.CounterValues = {};\n  previousPageCounters: CssCascade.CounterValues = {};\n  currentPageCountersStack: CssCascade.CounterValues[] = [];\n  pageIndicesById: {\n    [key: string]: { spineIndex: number; pageIndex: number };\n  } = {};\n  currentPage: Vtree.Page = null;\n  newReferencesOfCurrentPage: TargetCounterReference[] = [];\n  referencesToSolve: TargetCounterReference[] = [];\n  referencesToSolveStack: TargetCounterReference[][] = [];\n  unresolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  resolvedReferences: { [key: string]: TargetCounterReference[] } = {};\n  private pagesCounterExprs: {\n    expr: Exprs.Val;\n    format: (p1: number[]) => string;\n  }[] = [];\n\n  constructor(\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    this.currentPageCounters[\"page\"] = [0];\n  }\n\n  createCounterListener(baseURL: string): CssCascade.CounterListener {\n    return new CounterListener(this, baseURL);\n  }\n\n  createCounterResolver(\n    baseURL: string,\n    rootScope: Exprs.LexicalScope,\n    pageScope: Exprs.LexicalScope,\n  ): CssCascade.CounterResolver {\n    return new CounterResolver(this, baseURL, rootScope, pageScope);\n  }\n\n  setCurrentPage(page: Vtree.Page) {\n    this.currentPage = page;\n  }\n\n  private definePageCounter(counterName: string, value: number) {\n    if (this.currentPageCounters[counterName]) {\n      this.currentPageCounters[counterName].push(value);\n    } else {\n      this.currentPageCounters[counterName] = [value];\n    }\n  }\n\n  /**\n   * Forcefully set the `page` page-based counter to the specified value.\n   */\n  forceSetPageCounter(pageNumber: number) {\n    const counters = this.currentPageCounters[\"page\"];\n    if (!counters || !counters.length) {\n      this.currentPageCounters[\"page\"] = [pageNumber];\n    } else {\n      counters[counters.length - 1] = pageNumber;\n    }\n  }\n\n  /**\n   * Update the page-based counters with 'counter-reset' and 'counter-increment'\n   * properties within the page context. Call before starting layout of the\n   * page.\n   */\n  updatePageCounters(\n    cascadedPageStyle: CssCascade.ElementStyle,\n    context: Exprs.Context,\n  ) {\n    // Save page counters to previousPageCounters before updating\n    this.previousPageCounters = cloneCounterValues(this.currentPageCounters);\n    let resetMap: { [key: string]: number };\n    const reset = cascadedPageStyle[\"counter-reset\"] as CssCascade.CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.definePageCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    let incrementMap: { [key: string]: number };\n    const increment = cascadedPageStyle[\n      \"counter-increment\"\n    ] as CssCascade.CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n\n    // If 'counter-increment' for the builtin 'page' counter is absent, add it\n    // with value 1.\n    if (incrementMap) {\n      if (!(\"page\" in incrementMap)) {\n        incrementMap[\"page\"] = 1;\n      }\n    } else {\n      incrementMap = {};\n      incrementMap[\"page\"] = 1;\n    }\n    for (const incrementCounterName in incrementMap) {\n      if (!this.currentPageCounters[incrementCounterName]) {\n        this.definePageCounter(incrementCounterName, 0);\n      }\n      const counterValues = this.currentPageCounters[incrementCounterName];\n      counterValues[counterValues.length - 1] +=\n        incrementMap[incrementCounterName];\n    }\n  }\n\n  /**\n   * Save current page-based counters values and set them to the values passed\n   * in. The saved counter values can be restored by popPageCounters method.\n   */\n  pushPageCounters(counters: CssCascade.CounterValues) {\n    this.currentPageCountersStack.push(this.currentPageCounters);\n    this.currentPageCounters = cloneCounterValues(counters);\n  }\n\n  /**\n   * Restore previously saved page-based counter values.\n   */\n  popPageCounters() {\n    this.currentPageCounters = this.currentPageCountersStack.pop();\n  }\n\n  /**\n   * Resolve a reference with the specified ID.\n   */\n  resolveReference(id: string) {\n    const unresolvedRefs = this.unresolvedReferences[id];\n    let resolvedRefs = this.resolvedReferences[id];\n    if (!resolvedRefs) {\n      resolvedRefs = this.resolvedReferences[id] = [];\n    }\n    let pushed = false;\n    for (let i = 0; i < this.referencesToSolve.length; ) {\n      const ref = this.referencesToSolve[i];\n      if (ref.targetId === id) {\n        ref.resolve();\n        this.referencesToSolve.splice(i, 1);\n        if (unresolvedRefs) {\n          const j = unresolvedRefs.indexOf(ref);\n          if (j >= 0) {\n            unresolvedRefs.splice(j, 1);\n          }\n        }\n        resolvedRefs.push(ref);\n        pushed = true;\n      } else {\n        i++;\n      }\n    }\n    if (!pushed) {\n      this.saveReferenceOfCurrentPage(id, true);\n    }\n  }\n\n  /**\n   * Save a reference appeared in the current page.\n   * @param resolved If the reference is already resolved or not.\n   */\n  saveReferenceOfCurrentPage(id: string, resolved: boolean) {\n    if (!this.newReferencesOfCurrentPage.some((ref) => ref.targetId === id)) {\n      const ref = new TargetCounterReference(id, resolved);\n      this.newReferencesOfCurrentPage.push(ref);\n    }\n  }\n\n  /**\n   * Finish the current page; elements with ID are collected and saved with\n   * current page-based counter values internally.\n   * @param spineIndex Index of the currently laid out spine item\n   * @param pageIndex Index of the currently laid out page in its spine item\n   */\n  finishPage(spineIndex: number, pageIndex: number) {\n    const ids = Object.keys(this.currentPage.elementsById);\n    if (ids.length > 0) {\n      const currentPageCounters = cloneCounterValues(this.currentPageCounters);\n      ids.forEach((id) => {\n        this.pageCountersById[id] = currentPageCounters;\n        const oldPageIndex = this.pageIndicesById[id];\n        if (oldPageIndex && oldPageIndex.pageIndex < pageIndex) {\n          const resolvedRefs = this.resolvedReferences[id];\n          if (resolvedRefs) {\n            let unresolvedRefs = this.unresolvedReferences[id];\n            if (!unresolvedRefs) {\n              unresolvedRefs = this.unresolvedReferences[id] = [];\n            }\n            let ref: TargetCounterReference;\n            while ((ref = resolvedRefs.shift())) {\n              ref.unresolve();\n              unresolvedRefs.push(ref);\n            }\n          }\n        }\n        this.pageIndicesById[id] = { spineIndex, pageIndex };\n      });\n    }\n    const prevPageCounters = this.previousPageCounters;\n    let ref: TargetCounterReference;\n    while ((ref = this.newReferencesOfCurrentPage.shift())) {\n      ref.pageCounters = prevPageCounters;\n      ref.spineIndex = spineIndex;\n      ref.pageIndex = pageIndex;\n      let arr: TargetCounterReference[];\n      if (ref.isResolved()) {\n        arr = this.resolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.resolvedReferences[ref.targetId] = [];\n        }\n      } else {\n        arr = this.unresolvedReferences[ref.targetId];\n        if (!arr) {\n          arr = this.unresolvedReferences[ref.targetId] = [];\n        }\n      }\n      if (arr.every((r) => !ref.equals(r))) {\n        arr.push(ref);\n      }\n    }\n    this.currentPage = null;\n  }\n\n  /**\n   * Returns unresolved references pointing to the specified page.\n   */\n  getUnresolvedRefsToPage(page: Vtree.Page): {\n    spineIndex: number;\n    pageIndex: number;\n    pageCounters: CssCascade.CounterValues;\n    refs: TargetCounterReference[];\n  }[] {\n    let refs: TargetCounterReference[] = [];\n    const ids = Object.keys(page.elementsById);\n    ids.forEach((id) => {\n      const idRefs = this.unresolvedReferences[id];\n      if (idRefs) {\n        refs = refs.concat(idRefs);\n      }\n    });\n    refs.sort(\n      (r1, r2) => r1.spineIndex - r2.spineIndex || r1.pageIndex - r2.pageIndex,\n    );\n    const result: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    }[] = [];\n    let o: {\n      spineIndex: number;\n      pageIndex: number;\n      pageCounters: CssCascade.CounterValues;\n      refs: TargetCounterReference[];\n    } = null;\n    refs.forEach((ref) => {\n      if (\n        !o ||\n        o.spineIndex !== ref.spineIndex ||\n        o.pageIndex !== ref.pageIndex\n      ) {\n        o = {\n          spineIndex: ref.spineIndex,\n          pageIndex: ref.pageIndex,\n          pageCounters: ref.pageCounters,\n          refs: [ref],\n        };\n        result.push(o);\n      } else {\n        o.refs.push(ref);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Save current references to solve and set them to the values passed in.\n   * The saved references can be restored by popReferencesToSolve method.\n   */\n  pushReferencesToSolve(refs: TargetCounterReference[]) {\n    this.referencesToSolveStack.push(this.referencesToSolve);\n    this.referencesToSolve = refs;\n  }\n\n  /**\n   * Restore previously saved references to solve.\n   */\n  popReferencesToSolve() {\n    this.referencesToSolve = this.referencesToSolveStack.pop();\n  }\n\n  registerPageCounterExpr(\n    name: string,\n    format: (p1: number[]) => string,\n    expr: Exprs.Val,\n  ) {\n    if (name === \"pages\") {\n      this.pagesCounterExprs.push({ expr, format });\n    }\n  }\n\n  getExprContentListener(): Vtree.ExprContentListener {\n    return this.exprContentListener.bind(this);\n  }\n\n  private exprContentListener(expr, val, document) {\n    const found = this.pagesCounterExprs.findIndex((o) => o.expr === expr) >= 0;\n    if (found) {\n      const node = document.createElement(\"span\");\n      node.textContent = val;\n      node.setAttribute(PAGES_COUNTER_ATTR, expr.key);\n      return node;\n    } else {\n      return null;\n    }\n  }\n\n  finishLastPage(viewport: Vgen.Viewport) {\n    const nodes = viewport.root.querySelectorAll(`[${PAGES_COUNTER_ATTR}]`);\n    const pages = this.currentPageCounters[\"page\"][0];\n    for (const node of nodes) {\n      const key = node.getAttribute(PAGES_COUNTER_ATTR);\n      const i = this.pagesCounterExprs.findIndex((o) => o.expr.key === key);\n      Asserts.assert(i >= 0);\n      node.textContent = this.pagesCounterExprs[i].format([pages]);\n    }\n  }\n\n  createLayoutConstraint(pageIndex: number): Layout.LayoutConstraint {\n    return new LayoutConstraint(this, pageIndex);\n  }\n}\n\nexport const PAGES_COUNTER_ATTR = \"data-vivliostyle-pages-counter\";\n\nclass LayoutConstraint implements Layout.LayoutConstraint {\n  constructor(\n    public readonly counterStore: CounterStore,\n    public readonly pageIndex: number,\n  ) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext || nodeContext.after) {\n      return true;\n    }\n    const viewNode = nodeContext.viewNode;\n    if (!viewNode || viewNode.nodeType !== 1) {\n      return true;\n    }\n    const id =\n      (viewNode as Element).getAttribute(\"data-vivliostyle-id\") ||\n      (viewNode as Element).getAttribute(\"id\") ||\n      (viewNode as Element).getAttribute(\"name\");\n    if (!id) {\n      return true;\n    }\n    if (\n      !this.counterStore.resolvedReferences[id] &&\n      !this.counterStore.unresolvedReferences[id]\n    ) {\n      return true;\n    }\n    const pageIndex = this.counterStore.pageIndicesById[id];\n    if (!pageIndex) {\n      return true;\n    }\n    return this.pageIndex >= pageIndex.pageIndex;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssTokenizer - CSS Tokenizer.\n */\n\nexport interface TokenizerHandler {\n  error(mnemonics: string, token: Token): void;\n}\n\nexport function escapeParseSingle(str: string): string {\n  str = str.substr(1);\n  if (str.match(/^[^0-9a-fA-F\\n\\r]$/)) {\n    return str;\n  }\n  const code = parseInt(str, 16);\n  if (isNaN(code)) {\n    return \"\";\n  }\n  if (code === 0 || (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}\n\nexport function escapeParse(str: string): string {\n  return str.replace(\n    /\\\\([0-9a-fA-F]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])/g,\n    escapeParseSingle,\n  );\n}\n\n/**\n * @enum {number}\n */\nexport enum TokenType {\n  EOF,\n  IDENT,\n  STR,\n  NUMERIC,\n  NUM,\n  INT,\n  FUNC,\n  HASH,\n  URL,\n  CLASS,\n  O_PAR,\n  C_PAR,\n  O_BRC,\n  C_BRC,\n  O_BRK,\n  C_BRK,\n  COMMA,\n  SEMICOL,\n  COLON,\n  SLASH,\n  AT,\n  PERCENT,\n  QMARK,\n  PLUS,\n  MINUS,\n  BAR_BAR,\n  AMP_AMP,\n  URANGE,\n\n  // those can have \"=\" at the end\n  BANG = 31,\n  DOLLAR,\n  HAT,\n  BAR,\n  TILDE,\n  STAR,\n  GT,\n  LT,\n  EQ,\n\n  // tokens above plus \"=\" at the end, order must be the same\n  BANG_EQ = 41,\n  DOLLAR_EQ,\n  HAT_EQ,\n  BAR_EQ,\n  TILDE_EQ,\n  STAR_EQ,\n  GT_EQ,\n  LT_EQ,\n  EQ_EQ,\n  COL_COL,\n  CDO,\n  CDC,\n  UNKNOWN,\n  INVALID,\n  LAST = 54,\n}\n\nexport class Token {\n  type: TokenType;\n  precededBySpace: boolean = false;\n  num: number = 0;\n  text: string = \"\";\n  position: number = 0;\n\n  constructor() {\n    this.type = TokenType.EOF;\n  }\n\n  toString(): string {\n    switch (this.type) {\n      case TokenType.O_PAR:\n        return \"(\";\n      case TokenType.C_PAR:\n        return \")\";\n      case TokenType.O_BRC:\n        return \"{\";\n      case TokenType.C_BRC:\n        return \"}\";\n      case TokenType.O_BRK:\n        return \"[\";\n      case TokenType.C_BRK:\n        return \"]\";\n      case TokenType.COMMA:\n        return \",\";\n      case TokenType.SEMICOL:\n        return \";\";\n      case TokenType.COLON:\n        return \":\";\n      case TokenType.SLASH:\n        return \"/\";\n      case TokenType.AT:\n        return \"@\";\n      case TokenType.PERCENT:\n        return \"%\";\n      case TokenType.QMARK:\n        return \"Q\";\n      case TokenType.PLUS:\n        return \"+\";\n      case TokenType.MINUS:\n        return \"-\";\n      case TokenType.BAR_BAR:\n        return \"||\";\n      case TokenType.AMP_AMP:\n        return \"&&\";\n      case TokenType.BANG:\n        return \"!\";\n      case TokenType.DOLLAR:\n        return \"$\";\n      case TokenType.HAT:\n        return \"^\";\n      case TokenType.BAR:\n        return \"|\";\n      case TokenType.TILDE:\n        return \"~\";\n      case TokenType.STAR:\n        return \"*\";\n      case TokenType.GT:\n        return \">\";\n      case TokenType.LT:\n        return \"<\";\n      case TokenType.EQ:\n        return \"=\";\n      case TokenType.BANG_EQ:\n        return \"!=\";\n      case TokenType.DOLLAR_EQ:\n        return \"$=\";\n      case TokenType.HAT_EQ:\n        return \"^=\";\n      case TokenType.BAR_EQ:\n        return \"|=\";\n      case TokenType.TILDE_EQ:\n        return \"~=\";\n      case TokenType.STAR_EQ:\n        return \"*=\";\n      case TokenType.GT_EQ:\n        return \">=\";\n      case TokenType.LT_EQ:\n        return \"<=\";\n      case TokenType.EQ_EQ:\n        return \"==\";\n      case TokenType.COL_COL:\n        return \"::\";\n      case TokenType.CDO:\n        return \"<!--\";\n      case TokenType.CDC:\n        return \"-->\";\n      case TokenType.NUMERIC:\n        return this.num.toString() + this.text;\n      case TokenType.NUM:\n      case TokenType.INT:\n        return this.num.toString();\n      case TokenType.HASH:\n        return \"#\" + this.text;\n      case TokenType.FUNC:\n        return this.text + \"(\";\n      case TokenType.CLASS:\n        return \".\" + this.text;\n      default:\n        return this.text;\n    }\n  }\n}\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SPACE = 1,\n  INT,\n  IDENT,\n  BANG,\n  HASH = 6,\n  DOLLAR,\n  PERCENT,\n  AMP,\n  O_PAR,\n  C_PAR,\n  STAR,\n  PLUS,\n  COMMA,\n  MINUS,\n  DOT,\n  SLASH,\n  COLON,\n  SEMICOL,\n  LT,\n  EQ,\n  GT,\n  QMARK,\n  AT,\n  O_BRK,\n  C_BRK,\n  O_BRC,\n  C_BRC,\n  BSLASH,\n  HAT,\n  BAR,\n  TILDE,\n  STR1,\n  STR2,\n  END,\n  EQTAIL,\n  ENDINT,\n  ENDNUM,\n  CONT,\n  UNIT,\n  PCUNIT,\n  NUMBER,\n  ENDIDNT,\n  IDNTESC,\n  ENDIDES,\n\n  // end of identifier with escapes\n  ENDSTR,\n  ENDESTR,\n\n  // end of string with escapes\n  STR1ESC,\n  STR2ESC,\n  BAR_BAR,\n  AMP_AMP,\n  FUNC,\n  FUNCES,\n  COMMENT,\n  COMMST,\n  ENDNOTK,\n  MINMIN,\n  TOINT,\n  TONUM,\n  TOIDENT,\n  TOIDES,\n  KILL1,\n  KILL2,\n  URL,\n  URL1,\n  URL2,\n  ENDURL,\n  TERMURL,\n  FINURL,\n  LT_BG,\n  LT_BG_M,\n  INVALID,\n  CHKPOSS,\n  CHKPOSN,\n  URLESC,\n  IDESCH,\n  COL_COL,\n  TOCLASS,\n  CHKSP,\n  EOF,\n  CDO,\n  CDC,\n}\n\nexport function makeActions(def: Action, spec: Action[]): Action[] {\n  const a: number[] = Array(128);\n  let i: number;\n  for (i = 0; i < 128; i++) {\n    a[i] = def;\n  }\n  a[NaN] = def == Action.END ? Action.END : Action.INVALID;\n  for (i = 0; i < spec.length; i += 2) {\n    a[spec[i]] = spec[i + 1];\n  }\n  return a;\n}\n\n/**\n * Start of the token.\n */\nexport const actionsNormal: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.SPACE,\n  Action.SPACE,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.SPACE,\n  Action.BANG,\n  Action.STR2,\n  Action.HASH,\n  Action.DOLLAR,\n  Action.PERCENT,\n  Action.AMP,\n  Action.STR1, // 0x20-0x27\n  Action.O_PAR,\n  Action.C_PAR,\n  Action.STAR,\n  Action.PLUS,\n  Action.COMMA,\n  Action.MINUS,\n  Action.DOT,\n  Action.SLASH, // 0x28-0x2F\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT,\n  Action.INT, // 0x30-0x37\n  Action.INT,\n  Action.INT,\n  Action.COLON,\n  Action.SEMICOL,\n  Action.LT,\n  Action.EQ,\n  Action.GT,\n  Action.QMARK, // 0x38-0x3F\n  Action.AT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x40-0x47\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x48-0x4F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x50-0x57\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRK,\n  Action.BSLASH,\n  Action.C_BRK,\n  Action.HAT,\n  Action.IDENT, // 0x58-0x5F\n  Action.INVALID,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x60-0x67\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x68-0x6F\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT, // 0x70-0x77\n  Action.IDENT,\n  Action.IDENT,\n  Action.IDENT,\n  Action.O_BRC,\n  Action.BAR,\n  Action.C_BRC,\n  Action.TILDE,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsNormal[NaN] = Action.EOF;\n\n/**\n * Inside identifier.\n */\nexport const actionsIdent: Action[] = [\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x00-0x07\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x08-0x0F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x10-0x17\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x18-0x1F\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x20-0x27\n  Action.FUNC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x38-0x3F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.IDNTESC,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDNT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT,\n  Action.ENDIDNT, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * After dot (either .class or .123)\n */\nexport const actionsNumOrClass: Action[] = [\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x00-0x07\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x08-0x0F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x10-0x17\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x18-0x1F\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x20-0x27\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TONUM,\n  Action.INVALID, // 0x28-0x2F\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM,\n  Action.TONUM, // 0x30-0x37\n  Action.TONUM,\n  Action.TONUM,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x38-0x3F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x40-0x47\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x48-0x4F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x50-0x57\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.TOIDES,\n  Action.INVALID,\n  Action.INVALID,\n  Action.TOCLASS, // 0x58-0x5F\n  Action.INVALID,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x60-0x67\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x68-0x6F\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS, // 0x70-0x77\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.TOCLASS,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID,\n  Action.INVALID, // 0x78-0x7F\n];\n\nactionsIdent[NaN] = Action.ENDIDNT;\n\n/**\n * after '-'\n */\nexport const actionsMinus: Action[] = [\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x00-0x07\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x08-0x0F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x10-0x17\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x18-0x1F\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x20-0x27\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.MINMIN,\n  Action.TONUM,\n  Action.END, // 0x28-0x2F\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT,\n  Action.TOINT, // 0x30-0x37\n  Action.TOINT,\n  Action.TOINT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x38-0x3F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x40-0x47\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x48-0x4F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x50-0x57\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.TOIDES,\n  Action.END,\n  Action.END,\n  Action.TOIDENT, // 0x58-0x5F\n  Action.END,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x60-0x67\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x68-0x6F\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT, // 0x70-0x77\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.TOIDENT,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END,\n  Action.END, // 0x78-0x7F\n];\n\nactionsMinus[NaN] = Action.END;\n\n/**\n * Inside identifier with escape sequence\n */\nexport const actionsIdentEsc: Action[] = [\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x00-0x07\n  Action.ENDIDES,\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x08-0x0F\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x10-0x17\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x18-0x1F\n  Action.CHKPOSS,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x20-0x27\n  Action.FUNCES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x38-0x3F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x40-0x47\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x48-0x4F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x50-0x57\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.IDNTESC,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.CONT, // 0x58-0x5F\n  Action.ENDIDES,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x60-0x67\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x68-0x6F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x70-0x77\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES,\n  Action.ENDIDES, // 0x78-0x7F\n];\n\nactionsIdentEsc[NaN] = Action.ENDIDES;\n\n/**\n * Inside integer\n */\nexport const actionsInt: Action[] = [\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x00-0x07\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x08-0x0F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x10-0x17\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x18-0x1F\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.PCUNIT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x20-0x27\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.NUMBER,\n  Action.ENDINT, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x38-0x3F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDINT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT,\n  Action.ENDINT, // 0x78-0x7F\n];\n\nactionsInt[NaN] = Action.ENDINT;\n\n/**\n * inside real, after dot\n */\nexport const actionsNumber: Action[] = [\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x00-0x07\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x08-0x0F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x10-0x17\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x18-0x1F\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.PCUNIT,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x20-0x27\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x28-0x2F\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT,\n  Action.CONT, // 0x30-0x37\n  Action.CONT,\n  Action.CONT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x38-0x3F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x40-0x47\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x48-0x4F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x50-0x57\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.UNIT, // 0x58-0x5F\n  Action.ENDNUM,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x60-0x67\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x68-0x6F\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT, // 0x70-0x77\n  Action.UNIT,\n  Action.UNIT,\n  Action.UNIT,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM,\n  Action.ENDNUM, // 0x78-0x7F\n];\n\nactionsNumber[NaN] = Action.ENDNUM;\n\nexport const actionsCheckEq: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n]);\n\nexport const actionsColon: Action[] = makeActions(Action.END, [\n  58 /*:*/,\n  Action.COL_COL,\n]);\n\nexport const actionsBar: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  124 /*|*/,\n  Action.BAR_BAR,\n]);\n\nexport const actionsAmp: Action[] = makeActions(Action.END, [\n  38 /*&*/,\n  Action.AMP_AMP,\n]);\n\nexport const actionsSlash: Action[] = makeActions(Action.END, [\n  42 /* * */,\n  Action.COMMENT,\n]);\n\nexport const actionsComment: Action[] = makeActions(Action.CONT, [\n  42 /* * */,\n  Action.COMMST,\n]);\n\nexport const actionsCommentStar: Action[] = makeActions(Action.COMMENT, [\n  42 /* * */,\n  Action.COMMST,\n  47 /* / */,\n  Action.ENDNOTK,\n]);\n\nexport const actionsMinusMinus: Action[] = makeActions(Action.KILL1, [\n  62 /* > */,\n  Action.CDC,\n]);\n\nexport const actionsLt: Action[] = makeActions(Action.END, [\n  61 /*=*/,\n  Action.EQTAIL,\n  33 /*!*/,\n  Action.LT_BG,\n]);\n\nexport const actionsLtBang: Action[] = makeActions(Action.KILL1, [\n  45 /*-*/,\n  Action.LT_BG_M,\n]);\n\nexport const actionsLtBangMinus: Action[] = makeActions(Action.KILL2, [\n  45 /*-*/,\n  Action.CDO,\n]);\n\nexport const actionsIdentEscChr: Action[] = makeActions(Action.IDESCH, [\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n]);\n\nexport const actionsStr1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDSTR,\n  10 /*LF*/,\n  Action.INVALID,\n  13 /*CR*/,\n  Action.INVALID,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsStr1Esc: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR1ESC,\n]);\n\nexport const actionsStr2Esc: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.ENDESTR,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.STR2ESC,\n]);\n\nexport const actionsURL: Action[] = makeActions(Action.URL, [\n  9 /*tab*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  34 /*\"*/,\n  Action.URL2,\n  39 /*'*/,\n  Action.URL1,\n  41 /*)*/,\n  Action.INVALID,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n]);\n\nexport const actionsURLInside: Action[] = makeActions(Action.CONT, [\n  41 /*)*/,\n  Action.ENDURL,\n  9 /*TAB*/,\n  Action.CHKSP,\n  10 /*LF*/,\n  Action.CHKSP,\n  13 /*CR*/,\n  Action.CHKSP,\n  32 /*sp*/,\n  Action.CHKSP,\n  92 /*\\*/,\n  Action.URLESC,\n  40 /*(*/,\n  Action.INVALID,\n  91 /*[*/,\n  Action.INVALID,\n  93 /*]*/,\n  Action.INVALID,\n  123 /*{*/,\n  Action.INVALID,\n  125 /*}*/,\n  Action.INVALID,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside1: Action[] = makeActions(Action.CONT, [\n  39 /*'*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLInside2: Action[] = makeActions(Action.CONT, [\n  34 /*\"*/,\n  Action.TERMURL,\n  10 /*LF*/,\n  Action.CHKPOSN,\n  13 /*CR*/,\n  Action.CHKPOSN,\n  92 /*\\*/,\n  Action.URLESC,\n  NaN,\n  Action.ENDURL,\n]);\n\nexport const actionsURLTail: Action[] = makeActions(Action.INVALID, [\n  9 /*tab*/,\n  Action.CONT,\n  10 /*LF*/,\n  Action.CONT,\n  13 /*CR*/,\n  Action.CONT,\n  32 /*sp*/,\n  Action.CONT,\n  41 /*)*/,\n  Action.FINURL,\n]);\n\nexport const INITIAL_INDEX_MASK = 15;\n\nexport class Tokenizer {\n  indexMask: number;\n  buffer: Token[];\n  head: number = -1; // saved, occupied if >= 0\n  tail: number = 0; // available, ready to write\n  curr: number = 0; // ready to read\n  position: number = 0;\n\n  constructor(public input: string, public readonly handler: TokenizerHandler) {\n    this.indexMask = INITIAL_INDEX_MASK;\n    this.buffer = Array(this.indexMask + 1);\n    for (let i = 0; i <= this.indexMask; i++) {\n      this.buffer[i] = new Token();\n    }\n  }\n\n  token(): Token {\n    if (this.tail == this.curr) {\n      this.fillBuffer();\n    }\n    return this.buffer[this.curr];\n  }\n\n  nthToken(n: number): Token {\n    if (((this.tail - this.curr) & this.indexMask) <= n) {\n      this.fillBuffer();\n    }\n    return this.buffer[(this.curr + n) & this.indexMask];\n  }\n\n  consume(): void {\n    this.curr = (this.curr + 1) & this.indexMask;\n  }\n\n  mark(): void {\n    if (this.head >= 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL mark\");\n    }\n    this.head = this.curr;\n  }\n\n  reset(): void {\n    if (this.head < 0) {\n      throw new Error(\"F_CSSTOK_BAD_CALL reset\");\n    }\n    this.curr = this.head;\n    this.head = -1;\n  }\n\n  unmark(): void {\n    this.head = -1;\n  }\n\n  hasMark(): boolean {\n    return this.head >= 0;\n  }\n\n  private reallocate(): void {\n    const newIndexMask = 2 * (this.indexMask + 1) - 1;\n    const newBuffer: Token[] = Array(newIndexMask + 1);\n    let oldIndex = this.head;\n    let newIndex = 0;\n    while (oldIndex != this.tail) {\n      newBuffer[newIndex] = this.buffer[oldIndex];\n      oldIndex = (oldIndex + 1) & this.indexMask;\n      newIndex++;\n    }\n    this.head = 0;\n    this.curr = newIndex;\n    this.tail = newIndex;\n    this.indexMask = newIndexMask;\n    this.buffer = newBuffer;\n    while (newIndex <= newIndexMask) {\n      newBuffer[newIndex++] = new Token();\n    }\n  }\n\n  private error(position, token, mnemonics) {\n    if (this.handler) {\n      this.handler.error(mnemonics, token);\n    }\n  }\n\n  private fillBuffer(): void {\n    let tail = this.tail;\n    let head = this.head >= 0 ? this.head : this.curr;\n    let indexMask = this.indexMask;\n    if (tail >= head) {\n      head += indexMask;\n    } else {\n      head--;\n    }\n    if (head == tail) {\n      // only expect to get here when mark is in effect\n      if (this.head < 0) {\n        throw new Error(\"F_CSSTOK_INTERNAL\");\n      }\n      this.reallocate();\n      tail = this.tail;\n      indexMask = this.indexMask;\n      head = indexMask; // this.head is zero\n    }\n    let actions = actionsNormal;\n    const input = this.input;\n    let position = this.position;\n    const buffer = this.buffer;\n    let tokenType: TokenType = TokenType.EOF;\n    let tokenPosition: number = 0;\n    let tokenText: string = \"\";\n    let tokenNum: number = 0;\n    let seenSpace = false;\n    let token: Token = buffer[tail];\n    let backslashPos = -9; // far enough before the start of the string\n    while (true) {\n      const charCode = input.charCodeAt(position);\n      switch (actions[charCode] || actions[65] /*A*/) {\n        case Action.INVALID:\n          tokenType = TokenType.INVALID;\n          if (isNaN(charCode)) {\n            tokenText = \"E_CSS_UNEXPECTED_EOF\";\n          } else {\n            tokenText = \"E_CSS_UNEXPECTED_CHAR\";\n          }\n          actions = actionsNormal;\n          position++;\n          break;\n        case Action.SPACE:\n          position++;\n          seenSpace = true;\n          continue;\n        case Action.INT:\n          tokenPosition = position++;\n          actions = actionsInt;\n          continue;\n        case Action.IDENT:\n          tokenType = TokenType.IDENT;\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.BANG:\n          tokenPosition = position++;\n          tokenType = TokenType.BANG;\n          actions = actionsCheckEq;\n          continue;\n        case Action.STR1:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr1;\n          continue;\n        case Action.STR2:\n          tokenType = TokenType.STR;\n          tokenPosition = ++position; // after quote\n          actions = actionsStr2;\n          continue;\n        case Action.HASH:\n          tokenPosition = ++position; // after hash\n          tokenType = TokenType.HASH;\n          actions = actionsIdent;\n          continue;\n        case Action.DOLLAR:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PERCENT:\n          tokenPosition = position++;\n          tokenType = TokenType.PERCENT;\n          break;\n        case Action.AMP:\n          tokenPosition = position++;\n          tokenType = TokenType.DOLLAR;\n          actions = actionsAmp;\n          continue;\n        case Action.O_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.O_PAR;\n          break;\n        case Action.C_PAR:\n          tokenPosition = position++;\n          tokenType = TokenType.C_PAR;\n          break;\n        case Action.STAR:\n          tokenPosition = position++;\n          tokenType = TokenType.STAR;\n          actions = actionsCheckEq;\n          continue;\n        case Action.PLUS:\n          tokenPosition = position++;\n          tokenType = TokenType.PLUS;\n          break;\n        case Action.COMMA:\n          tokenPosition = position++;\n          tokenType = TokenType.COMMA;\n          break;\n        case Action.MINUS:\n          tokenType = TokenType.MINUS;\n          tokenPosition = position++;\n          actions = actionsMinus;\n          continue;\n        case Action.DOT:\n          tokenPosition = position++;\n          actions = actionsNumOrClass;\n          continue;\n        case Action.TOCLASS:\n          tokenPosition = position++;\n          tokenType = TokenType.CLASS;\n          actions = actionsIdent;\n          continue;\n        case Action.SLASH:\n          tokenPosition = position++;\n          tokenType = TokenType.SLASH;\n          actions = actionsSlash;\n          continue;\n        case Action.COLON:\n          tokenPosition = position++;\n          tokenType = TokenType.COLON;\n          actions = actionsColon;\n          continue;\n        case Action.COL_COL:\n          position++;\n          tokenType = TokenType.COL_COL;\n          break;\n        case Action.SEMICOL:\n          tokenPosition = position++;\n          tokenType = TokenType.SEMICOL;\n          break;\n        case Action.LT:\n          tokenPosition = position++;\n          tokenType = TokenType.LT;\n          actions = actionsLt;\n          continue;\n        case Action.EQ:\n          tokenPosition = position++;\n          tokenType = TokenType.EQ;\n          actions = actionsCheckEq;\n          continue;\n        case Action.GT:\n          tokenPosition = position++;\n          tokenType = TokenType.GT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.QMARK:\n          tokenPosition = position++;\n          tokenType = TokenType.QMARK;\n          break;\n        case Action.AT:\n          tokenPosition = ++position; // after \"at\" sign\n          tokenType = TokenType.AT;\n          actions = actionsIdent;\n          continue;\n        case Action.O_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRK;\n          break;\n        case Action.C_BRK:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRK;\n          break;\n        case Action.O_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.O_BRC;\n          break;\n        case Action.C_BRC:\n          tokenPosition = position++;\n          tokenType = TokenType.C_BRC;\n          break;\n        case Action.BSLASH:\n          tokenPosition = position++;\n          backslashPos = tokenPosition;\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.HAT:\n          tokenPosition = position++;\n          tokenType = TokenType.HAT;\n          actions = actionsCheckEq;\n          continue;\n        case Action.BAR:\n          tokenPosition = position++;\n          tokenType = TokenType.BAR;\n          actions = actionsBar;\n          continue;\n        case Action.TILDE:\n          tokenPosition = position++;\n          tokenType = TokenType.TILDE;\n          actions = actionsCheckEq;\n          continue;\n        case Action.END:\n          // don't consume current char\n          break;\n        case Action.EQTAIL:\n          position++;\n          tokenType = (tokenType +\n            TokenType.BANG_EQ -\n            TokenType.BANG) as TokenType;\n          break;\n        case Action.ENDINT:\n          // don't consume current char\n          tokenType = TokenType.INT;\n          tokenNum = parseInt(input.substring(tokenPosition, position), 10);\n          break;\n        case Action.ENDNUM:\n          // don't consume current char\n          tokenType = TokenType.NUM;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          break;\n        case Action.CONT:\n          // just consume current char\n          position++;\n          continue;\n        case Action.UNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenPosition = position++;\n          actions = actionsIdent;\n          continue;\n        case Action.PCUNIT:\n          tokenType = TokenType.NUMERIC;\n          tokenNum = parseFloat(input.substring(tokenPosition, position));\n          tokenText = \"%\";\n          tokenPosition = position++; // for consistency with alphabetic units\n          break;\n        case Action.NUMBER:\n          position++;\n          actions = actionsNumber;\n          continue;\n        case Action.ENDIDNT:\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n\n          // unicode-range support\n          if (\n            (tokenType === TokenType.URANGE && charCode === 63) ||\n            (tokenType === TokenType.IDENT &&\n              tokenText.toLowerCase() === \"u\" &&\n              /^(\\bu\\+[?0-9a-f]+(-[?0-9a-f]+)?|,|\\s+|\\/\\*([^*]|\\*[^/])*\\*\\/)+[;}]/i.test(\n                input.substring(position - 1),\n              ))\n          ) {\n            tokenType = TokenType.URANGE;\n            position++;\n            continue;\n          }\n          break;\n        case Action.IDNTESC:\n          backslashPos = position++;\n          actions = actionsIdentEscChr;\n          continue;\n        case Action.ENDIDES:\n          // end of identifier with escapes\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.ENDSTR:\n          tokenText = input.substring(tokenPosition, position); // consume closing quote\n          position++;\n          break;\n        case Action.ENDESTR:\n          tokenText = escapeParse(input.substring(tokenPosition, position)); // consume closing quote\n          position++;\n          break;\n        case Action.STR1ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr1Esc;\n          continue;\n        case Action.STR2ESC:\n          backslashPos = position;\n          position += 2; // consume character after backslash in any case\n          actions = actionsStr2Esc;\n          continue;\n        case Action.BAR_BAR:\n          position++;\n          tokenType = TokenType.BAR_BAR;\n          break;\n        case Action.AMP_AMP:\n          position++;\n          tokenType = TokenType.AMP_AMP;\n          break;\n        case Action.FUNC:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, TokenType.NUMERIC\n          tokenText = input.substring(tokenPosition, position);\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.FUNCES:\n          // tokenType can be TokenType.IDENT,\n          // TokenType.CLASS, TokenType.AT,\n          // TokenType.HASH, T_NUMERIC\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          if (tokenType == TokenType.IDENT) {\n            position++; // consume\n            if (tokenText.toLowerCase() == \"url\") {\n              actions = actionsURL;\n              continue;\n            }\n            tokenType = TokenType.FUNC;\n          }\n          break;\n        case Action.COMMENT:\n          actions = actionsComment;\n          position++;\n          continue;\n        case Action.COMMST:\n          actions = actionsCommentStar;\n          position++;\n          continue;\n        case Action.ENDNOTK:\n          actions = actionsNormal;\n          position++;\n          continue;\n        case Action.MINMIN:\n          actions = actionsMinusMinus;\n          position++;\n          if (input[position] !== \">\") {\n            // dashed-ident (custom property name)\n            tokenType = TokenType.IDENT;\n            actions = actionsIdent;\n          }\n          continue;\n        case Action.CDO:\n          tokenType = TokenType.CDO;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.CDC:\n          tokenType = TokenType.CDC;\n          tokenText = input.substring(tokenPosition, ++position);\n          actions = actionsNormal;\n          break;\n        case Action.TOINT:\n          tokenType = TokenType.INT;\n          actions = actionsInt;\n          position++;\n          continue;\n        case Action.TONUM:\n          tokenType = TokenType.NUM;\n          actions = actionsNumber;\n          position++;\n          continue;\n        case Action.TOIDENT:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdent;\n          position++;\n          continue;\n        case Action.TOIDES:\n          tokenType = TokenType.IDENT;\n          actions = actionsIdentEscChr;\n          backslashPos = position++;\n          continue;\n        case Action.KILL1:\n          position--;\n          break;\n        case Action.KILL2:\n          position -= 2;\n          break;\n        case Action.URL:\n          tokenPosition = position++;\n          actions = actionsURLInside;\n          continue;\n        case Action.URL1:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside1;\n          continue;\n        case Action.URL2:\n          tokenPosition = ++position; // skip quote\n          actions = actionsURLInside2;\n          continue;\n        case Action.ENDURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip ')'\n          break;\n        case Action.FINURL:\n          position++; // skip ')'\n          break;\n        case Action.LT_BG:\n          actions = actionsLtBang;\n          position++;\n          continue;\n        case Action.LT_BG_M:\n          actions = actionsLtBangMinus;\n          position++;\n          continue;\n        case Action.CHKSP:\n          // newline in non-quoted URL - check if end of url\n          if (position - backslashPos < 8) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])|[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              continue;\n            }\n          }\n\n        // end of url\n        // fall through\n        case Action.TERMURL:\n          tokenType = TokenType.URL;\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          position++; // skip quote (or newline)\n          actions = actionsURLTail;\n          continue;\n        case Action.CHKPOSN:\n          // newline in string or quoted URL - check validity\n          position++;\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position)\n                .match(/^[0-9a-fA-F]{0,6}(\\r\\n|[\\n\\r])$/)\n            ) {\n              // valid, keep going\n              continue;\n            }\n          }\n\n          // invalid token\n          tokenType = TokenType.INVALID;\n          tokenText = \"E_CSS_UNEXPECTED_NEWLINE\";\n          actions = actionsNormal;\n          break;\n        case Action.CHKPOSS:\n          // space in identifier - check validity\n          if (position - backslashPos < 9) {\n            // close enough: may be valid\n            if (\n              input\n                .substring(backslashPos + 1, position + 1)\n                .match(/^[0-9a-fA-F]{0,6}[ \\t]$/)\n            ) {\n              // valid, keep going\n              position++;\n              actions = actionsIdent;\n              continue;\n            }\n          }\n\n          // end of identifier\n          // don't consume current char\n          // tokenType should be set already\n          tokenText = escapeParse(input.substring(tokenPosition, position));\n          break;\n        case Action.URLESC:\n          backslashPos = position++;\n          continue;\n        case Action.IDESCH:\n          position++;\n          actions = actionsIdentEsc;\n          continue;\n        default:\n          // EOF\n          if (actions !== actionsNormal) {\n            tokenType = TokenType.INVALID;\n            tokenText = \"E_CSS_UNEXPECTED_STATE\";\n            break;\n          }\n          tokenPosition = position;\n          tokenType = TokenType.EOF;\n      }\n      token.type = tokenType;\n      token.precededBySpace = seenSpace;\n      token.num = tokenNum;\n      token.text = tokenText;\n      token.position = tokenPosition;\n      tail++;\n      if (tail >= head) {\n        break;\n      }\n      actions = actionsNormal;\n      seenSpace = false;\n      token = buffer[tail & indexMask];\n    }\n    this.position = position;\n    this.tail = tail & indexMask;\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Task - Support for asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\n\n/**\n * External timer. Only needed for testing.\n */\nexport interface Timer {\n  /**\n   * @return current time in milliseconds.\n   */\n  currentTime(): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param fn function to call.\n   * @param delay timeout in milliseconds.\n   * @return unique number that can be used to clear the timeout.\n   */\n  setTimeout(fn: () => void, delay: number): number;\n\n  /**\n   * Calls function after a given timeout.\n   * @param token timeout token.\n   * @return.\n   */\n  clearTimeout(token: number): void;\n}\n\n/**\n * Result of an asynchronous function that may be available immediately or\n * some time later. Similar to Deferred.\n * @template T\n */\nexport interface Result<T> {\n  /**\n   * Call the given function when asynchronous function is finished. Callback\n   * is executed in the task's context.\n   */\n  then(callback: (p1: T) => void): void;\n\n  /**\n   * Call the given asynchronous function when some asynchronous function is\n   * finished. Callback is executed in the task's context.\n   * @template T1\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1>;\n\n  /**\n   * Produce a Result that resolves to the given value when this Result is\n   * resolved.\n   * @template T1\n   */\n  thenReturn<T1>(result: T1): Result<T1>;\n\n  /**\n   * Finish given frame with the result value when result becomes ready.\n   */\n  thenFinish(frame: Frame<T>): void;\n\n  /**\n   * Check if this Result is still pending.\n   */\n  isPending(): boolean;\n\n  /**\n   * If this Result is resolved, return the value that it holds.\n   */\n  get(): T | null;\n}\n\nexport let privateCurrentTask: Task | null = null;\n\nexport let primaryScheduler: Scheduler | null = null;\n\n/**\n * Returns current task.\n */\nexport function currentTask(): Task | null {\n  return privateCurrentTask;\n}\n\n/**\n * Create and return a new frame with the given name.\n */\nexport function newFrame<T>(name: string): Frame<T> {\n  if (!privateCurrentTask) {\n    throw new Error(\"E_TASK_NO_CONTEXT\");\n  }\n  if (!privateCurrentTask.name) {\n    privateCurrentTask.name = name;\n  }\n  const task = privateCurrentTask;\n  const frame = new Frame<T>(task, task.top, name);\n  task.top = frame;\n  frame.state = FrameState.ACTIVE;\n  return frame;\n}\n\nexport function newEventSource(): EventSource {\n  return new EventSource();\n}\n\nexport function newScheduler(opt_timer?: Timer): Scheduler {\n  return new Scheduler(opt_timer || new TimerImpl());\n}\n\n/**\n * @template T\n */\nexport function newResult<T>(opt_value: T): Result<T> {\n  return new SyncResultImpl<T>(opt_value);\n}\n\n/**\n * Creates a new frame and runs code in its context, catching synchronous and\n * asynchronous errors. If an error occurs, onErr is run (in the context of\n * the same frame). As usual, onErr is supposed either produce a result or raise\n * an exception.\n */\nexport function handle<T>(\n  name: any,\n  code: (p1: Frame<T>) => void,\n  onErr: (p1: Frame<T>, p2: Error) => void,\n): Result<T> {\n  const frame = newFrame<T>(name);\n  frame.handler = onErr;\n  try {\n    code(frame);\n  } catch (err) {\n    // synchronous exception\n    frame.task.raise(err as Error, frame);\n  }\n  return frame.result();\n}\n\nexport function start<T>(func: () => Result<T>, opt_name?: string): Task {\n  const scheduler = privateCurrentTask\n    ? privateCurrentTask.getScheduler()\n    : primaryScheduler || newScheduler();\n  return scheduler.run(func, opt_name);\n}\n\n/**\n * Frame state.\n * @enum {number}\n */\nexport enum FrameState {\n  INIT, // before newFrame call\n  ACTIVE, // before finish call\n  FINISHED, // before callback complete\n  DEAD, // when callback is complete\n}\nexport class TimerImpl implements Timer {\n  /**\n   * @override\n   */\n  currentTime(): number {\n    return new Date().valueOf();\n  }\n\n  /**\n   * @override\n   */\n  setTimeout(fn: () => void, delay: number) {\n    // HACK: casting to unknown type to prevent TypeScript error\n    // [TS2352] Conversion of type 'Timer' to type 'number' may be a mistake because neither type sufficiently overlaps with the other.\n    const timer: unknown = setTimeout(fn, delay);\n    return timer as number;\n  }\n\n  /**\n   * @override\n   */\n  clearTimeout(token: number): void {\n    clearTimeout(token);\n  }\n}\n\n/**\n * A class to create tasks.\n */\nexport class Scheduler {\n  timeout: number = 1;\n  slice: number = 25;\n  sliceOverTime: number = 0;\n  queue: Base.PriorityQueue;\n  wakeupTime: number | null = null;\n  timeoutToken: number | null = null;\n  inTimeSlice: boolean = false;\n  order: number = 0;\n\n  constructor(public timer: Timer) {\n    this.queue = new Base.PriorityQueue();\n    if (!primaryScheduler) {\n      primaryScheduler = this;\n    }\n  }\n\n  /**\n   * Sets time slice length.\n   * @param slice length in milliseconds.\n   */\n  setSlice(slice: number) {\n    this.slice = slice;\n  }\n\n  /**\n   * Sets timeout between time slices.\n   * @param timeout in milliseconds.\n   */\n  setTimeout(timeout: number) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Checks if the current time slice is over.\n   */\n  isTimeSliceOver(): boolean {\n    const now = this.timer.currentTime();\n    return now >= this.sliceOverTime;\n  }\n\n  private arm(): void {\n    if (this.inTimeSlice) {\n      return;\n    }\n    const nextInQueue = this.queue.peek() as Continuation<any>;\n    const newTime = nextInQueue.scheduledTime;\n    const now = this.timer.currentTime();\n    if (this.timeoutToken != null) {\n      if (now + this.timeout > this.wakeupTime) {\n        return; // no use re-arming\n      }\n      this.timer.clearTimeout(this.timeoutToken);\n    }\n    let timeout = newTime - now;\n    if (timeout <= this.timeout) {\n      timeout = this.timeout;\n    }\n    this.wakeupTime = now + timeout;\n    this.timeoutToken = this.timer.setTimeout(() => {\n      this.timeoutToken = null;\n      this.doTimeSlice();\n    }, timeout);\n  }\n\n  schedule(continuation: Continuation<any>, opt_delay?: number): void {\n    const c = continuation as Continuation<any>;\n    const now = this.timer.currentTime();\n    c.order = this.order++;\n    c.scheduledTime = now + (opt_delay || 0);\n    this.queue.add(c);\n    this.arm();\n  }\n\n  private doTimeSlice(): void {\n    if (this.timeoutToken != null) {\n      this.timer.clearTimeout(this.timeoutToken);\n      this.timeoutToken = null;\n    }\n    this.inTimeSlice = true;\n    try {\n      let now = this.timer.currentTime();\n      this.sliceOverTime = now + this.slice;\n      while (this.queue.length()) {\n        const continuation = this.queue.peek() as Continuation<any>;\n        if (continuation.scheduledTime > now) {\n          break; // too early\n        }\n        this.queue.remove();\n        if (!continuation.canceled) {\n          continuation.resumeInternal();\n        }\n        now = this.timer.currentTime();\n        if (now >= this.sliceOverTime) {\n          break;\n        }\n      }\n    } catch (err) {\n      Logging.logger.error(err);\n    }\n    this.inTimeSlice = false;\n    if (this.queue.length()) {\n      this.arm();\n    }\n  }\n\n  run(func: () => Result<any>, opt_name?: string): Task {\n    const task = new Task(this, opt_name || \"\");\n    task.top = new Frame<any>(task, null, \"bootstrap\");\n    task.top.state = FrameState.ACTIVE;\n    task.top.then(() => {\n      const done = () => {\n        task.running = false;\n        for (const callback of task.callbacks) {\n          try {\n            callback();\n          } catch (err) {\n            Logging.logger.error(err);\n          }\n        }\n      };\n      try {\n        func().then((result) => {\n          task.result = result;\n          done();\n        });\n      } catch (err) {\n        task.raise(err as Error);\n        done();\n      }\n    });\n    const savedTask = privateCurrentTask;\n    privateCurrentTask = task;\n    this.schedule(task.top.suspend(\"bootstrap\"));\n    privateCurrentTask = savedTask;\n    return task;\n  }\n}\n\n/**\n * Task suspension point.\n * @template T\n */\nexport class Continuation<T> implements Base.Comparable {\n  scheduledTime: number = 0;\n  order: number = 0;\n  result: T = null;\n  canceled: boolean = false;\n\n  constructor(public task: Task) {}\n\n  /**\n   * @override\n   */\n  compare(otherComp: Base.Comparable): number {\n    // earlier wins\n    const other = otherComp as Continuation<any>;\n    return other.scheduledTime - this.scheduledTime || other.order - this.order;\n  }\n\n  /**\n   * Continuation's task\n   */\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * Schedule task continuation after the given (optional) delay.\n   * @param opt_delay optional delay in milliseconds.\n   */\n  schedule(result: T, opt_delay?: number) {\n    this.result = result;\n    this.task.scheduler.schedule(this, opt_delay);\n  }\n\n  resumeInternal(): boolean {\n    const task = this.task;\n    this.task = null;\n    if (task && task.continuation == this) {\n      task.continuation = null;\n      const savedTask = privateCurrentTask;\n      privateCurrentTask = task;\n      task.top.finish(this.result);\n      privateCurrentTask = savedTask;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Cancel continuation\n   */\n  cancel() {\n    this.canceled = true;\n  }\n}\n\n/**\n * An asynchronous, time-sliced task.\n */\nexport class Task {\n  callbacks: (() => void)[] = [];\n  exception: Error | null = null;\n  running: boolean = true;\n  result: any = null;\n  waitTarget: string | null = null;\n  top: Frame<any> | null = null;\n  continuation: Continuation<any> | null = null;\n\n  constructor(public scheduler: Scheduler, public name: string) {}\n\n  /**\n   * @return task name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param err exception to throw in the task's context.\n   */\n  interrupt(err: Error): void {\n    this.raise(err || new Error(\"E_TASK_INTERRUPT\"));\n    if (this !== privateCurrentTask && this.continuation) {\n      // blocked on something\n      this.continuation.cancel();\n      const continuation = new Continuation(this);\n      this.waitTarget = \"interrupt\";\n      this.continuation = continuation;\n      this.scheduler.schedule(continuation);\n    }\n  }\n\n  /**\n   * @return this task's scheduler.\n   */\n  getScheduler(): Scheduler {\n    return this.scheduler;\n  }\n\n  /**\n   * @return true if task is still running.\n   */\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  /**\n   * Register a callback to be called when the task is done. Callback is not\n   * executed in any task context. Multiple callbacks can be registered and\n   * they will be called in the registration order.\n   */\n  whenDone(callback: () => void): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Wait for task to finish (from another task).\n   */\n  join(): Result<any> {\n    const frame = newFrame<any>(\"Task.join\");\n    if (!this.running) {\n      frame.finish(this.result);\n    } else {\n      const continuation = frame.suspend(this);\n      this.whenDone(() => {\n        continuation.schedule(this.result);\n      });\n    }\n    return frame.result();\n  }\n\n  /**\n   * Unwind the stack. We have two stacks: async (maintained by frame\n   * parent link) and sync (regular JavaScript stack).\n   */\n  unwind() {\n    // We have a sequence of frames on the stack.\n    while (this.top && !this.top.handler) {\n      this.top = this.top.parent;\n    }\n    if (this.top && this.top.handler && this.exception) {\n      // found a handler\n      const err = this.exception;\n      this.exception = null;\n      this.top.handler(this.top, err);\n    } else {\n      if (this.exception) {\n        Logging.logger.error(\n          this.exception,\n          \"Unhandled exception in task\",\n          this.name,\n        );\n      }\n    }\n  }\n\n  raise(err: Error, opt_frame?: Frame<any>): void {\n    this.fillStack(err);\n    if (opt_frame) {\n      let f = this.top;\n      while (f && f != opt_frame) {\n        f = f.parent;\n      }\n      if (f == opt_frame) {\n        this.top = f;\n      }\n    }\n    this.exception = err;\n    this.unwind();\n  }\n\n  /**\n   * Fill the stack trace in the exception\n   * @param err exception\n   */\n  fillStack(err: Error) {\n    let out = err[\"frameTrace\"];\n    if (!out) {\n      out = err[\"stack\"] ? `${err[\"stack\"]}\\n\\t---- async ---\\n` : \"\";\n      for (let f = this.top; f; f = f.parent) {\n        out += \"\\t\";\n        out += f.getName();\n        out += \"\\n\";\n      }\n      err[\"frameTrace\"] = out;\n    }\n  }\n}\n\n/**\n * @template T\n */\nexport class SyncResultImpl<T> implements Result<T> {\n  constructor(public value: T) {}\n\n  /**\n   * @override\n   */\n  then(callback: (T: any) => void) {\n    callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>) {\n    return callback(this.value);\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    return new SyncResultImpl(result);\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    frame.finish(this.value);\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    return this.value;\n  }\n}\n\n/**\n * @template T\n */\nexport class ResultImpl<T> implements Result<T> {\n  constructor(public readonly frame: Frame<T>) {}\n\n  /**\n   * @override\n   */\n  then(callback: (p1: T) => void): void {\n    this.frame.then(callback);\n  }\n\n  /**\n   * @override\n   */\n  thenAsync<T1>(callback: (p1: T) => Result<T1>): Result<T1> {\n    if (this.isPending()) {\n      // thenAsync is special, do the trick with the context\n      const frame = new Frame<T | T1>(\n        this.frame.task,\n        this.frame.parent,\n        \"AsyncResult.thenAsync\",\n      );\n      frame.state = FrameState.ACTIVE;\n      this.frame.parent = frame as Frame<T>;\n      this.frame.then((res1) => {\n        callback(res1).then((res2) => {\n          frame.finish(res2);\n        });\n      });\n      return frame.result() as Result<T1>;\n    } else {\n      return callback(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenReturn<T1>(result: T1) {\n    if (this.isPending()) {\n      return this.thenAsync(() => new SyncResultImpl(result));\n    } else {\n      return new SyncResultImpl(result);\n    }\n  }\n\n  /**\n   * @override\n   */\n  thenFinish(frame: Frame<T>): void {\n    if (this.isPending()) {\n      this.then((res) => {\n        frame.finish(res);\n      });\n    } else {\n      frame.finish(this.frame.res);\n    }\n  }\n\n  /**\n   * @override\n   */\n  isPending(): boolean {\n    return this.frame.state == FrameState.ACTIVE;\n  }\n\n  /**\n   * @override\n   */\n  get(): T | null {\n    if (this.isPending()) {\n      throw new Error(\"Result is pending\");\n    }\n    return this.frame.res;\n  }\n}\n\n/**\n * Asynchronous execution frame. Corresponds to an asynchronous function\n * invocation.\n * @template T\n */\nexport class Frame<T> {\n  res: T = null;\n  state: FrameState;\n  callback: ((p1: any) => void) | null = null;\n  handler: ((p1: Frame<any>, p2: Error) => void) | null = null;\n\n  constructor(public task: Task, public parent: Frame<T>, public name: string) {\n    this.state = FrameState.INIT;\n  }\n\n  private checkEnvironment(): void {\n    if (!privateCurrentTask) {\n      throw new Error(\"F_TASK_NO_CONTEXT\");\n    }\n    if (this !== privateCurrentTask.top) {\n      throw new Error(\"F_TASK_NOT_TOP_FRAME\");\n    }\n  }\n\n  /**\n   * @return to be returned as this asynchronous function return value.\n   */\n  result(): Result<T> {\n    return new ResultImpl<T>(this);\n  }\n\n  finish(res: T) {\n    this.checkEnvironment();\n    if (privateCurrentTask && !privateCurrentTask.exception) {\n      this.res = res;\n    }\n    this.state = FrameState.FINISHED;\n    const frame = this.parent;\n    if (privateCurrentTask) {\n      privateCurrentTask.top = frame;\n    }\n    if (this.callback) {\n      try {\n        this.callback(res);\n      } catch (err) {\n        this.task.raise(err as Error, frame);\n      }\n\n      // callback was called\n      this.state = FrameState.DEAD;\n    }\n  }\n\n  getTask(): Task {\n    return this.task;\n  }\n\n  /**\n   * @return frame name.\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  getScheduler(): Scheduler {\n    return this.task.scheduler;\n  }\n\n  then(callback: (p1: T) => void): void {\n    // legal to call when currentTask is null\n    switch (this.state) {\n      case FrameState.ACTIVE:\n        if (this.callback) {\n          throw new Error(\"F_TASK_FRAME_ALREADY_HAS_CALLBACK\");\n        } else {\n          this.callback = callback;\n        }\n        break;\n      case FrameState.FINISHED: {\n        const task = this.task;\n        const frame = this.parent;\n        try {\n          callback(this.res);\n          this.state = FrameState.DEAD;\n        } catch (err) {\n          this.state = FrameState.DEAD;\n          task.raise(err as Error, frame);\n        }\n        break;\n      }\n      case FrameState.DEAD:\n        throw new Error(\"F_TASK_DEAD_FRAME\");\n      default:\n        throw new Error(`F_TASK_UNEXPECTED_FRAME_STATE ${this.state}`);\n    }\n  }\n\n  /**\n   * If this task was executed longer than task's slice parameter.\n   * @return holds true\n   */\n  timeSlice(): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.timeSlice\");\n    const scheduler = frame.getScheduler();\n    if (scheduler.isTimeSliceOver()) {\n      Logging.logger.debug(\"-- time slice --\");\n      frame.suspend().schedule(true);\n    } else {\n      frame.finish(true);\n    }\n    return frame.result();\n  }\n\n  /**\n   * Yield to other tasks for the specified time.\n   * @param delay in milliseconds.\n   * @return holds true\n   */\n  sleep(delay: number): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.sleep\");\n    frame.suspend().schedule(true, delay);\n    return frame.result();\n  }\n\n  /**\n   * Repeatedly execute the given function asynchronously until it returns\n   * false.\n   * @return holds true.\n   */\n  loop(func: () => Result<boolean>): Result<boolean> {\n    const frame = newFrame<boolean>(\"Frame.loop\");\n    const step = (more) => {\n      try {\n        while (more) {\n          const result = func();\n          if (result.isPending()) {\n            result.then(step);\n            return;\n          } else {\n            result.then((m) => {\n              more = m;\n            });\n          }\n        }\n        frame.finish(true);\n      } catch (err) {\n        frame.task.raise(err as Error, frame);\n      }\n    };\n    step(true);\n    return frame.result();\n  }\n\n  /**\n   * Similar to loop(), but provides a Frame for loop body function.\n   * @return holds true.\n   */\n  loopWithFrame(func: (p1: LoopBodyFrame) => void): Result<boolean> {\n    const task = privateCurrentTask;\n    if (!task) {\n      throw new Error(\"E_TASK_NO_CONTEXT\");\n    }\n    return this.loop(() => {\n      let result: Result<boolean>;\n      do {\n        const frame = new LoopBodyFrame(task as Task, task.top);\n        task.top = frame;\n        frame.state = FrameState.ACTIVE;\n        func(frame);\n        result = frame.result();\n      } while (!result.isPending() && result.get());\n      return result;\n    });\n  }\n\n  suspend(opt_waitTarget?: any): Continuation<T> {\n    this.checkEnvironment();\n    if (this.task.continuation) {\n      throw new Error(\"E_TASK_ALREADY_SUSPENDED\");\n    }\n    const continuation: Continuation<T> = new Continuation(this.task);\n    this.task.continuation = continuation;\n    privateCurrentTask = null;\n    this.task.waitTarget = opt_waitTarget || null;\n    return continuation;\n  }\n}\n\nexport class LoopBodyFrame extends Frame<boolean> {\n  constructor(task: Task, parent: Frame<boolean>) {\n    super(task, parent, \"loop\");\n  }\n\n  continueLoop(): void {\n    this.finish(true);\n  }\n\n  breakLoop(): void {\n    this.finish(false);\n  }\n}\n\nexport class EventItem {\n  next: EventItem = null;\n\n  constructor(public event: Base.Event) {}\n}\n\n/**\n * An class to listen to evens and present them as a readable asynchronous\n * stream to tasks.\n */\nexport class EventSource {\n  continuation: Continuation<boolean> = null;\n  listeners: {\n    target: Base.EventTarget;\n    type: string;\n    listener: Base.EventListener;\n  }[] = [];\n  head: EventItem;\n  tail: EventItem;\n\n  constructor() {\n    this.head = new EventItem(null);\n    this.tail = this.head;\n  }\n\n  /**\n   * Attaches as an event listener to an EventTarget.\n   */\n  attach(\n    target: Base.EventTarget,\n    type: string,\n    opt_preventDefault?: boolean,\n  ): void {\n    const listener = (event) => {\n      if (opt_preventDefault) {\n        event.preventDefault();\n      }\n      if (this.tail.event) {\n        this.tail.next = new EventItem(event);\n        this.tail = this.tail.next;\n      } else {\n        this.tail.event = event;\n        const continuation = this.continuation;\n        if (continuation) {\n          this.continuation = null;\n          continuation.schedule(true);\n        }\n      }\n    };\n    target.addEventListener(type, listener, false);\n    this.listeners.push({ target, type, listener });\n  }\n\n  detach(target: Base.EventTarget, type: string): void {\n    let i = 0;\n    let item: {\n      target: Base.SimpleEventTarget;\n      type: string;\n      listener: Base.EventListener;\n    } = null;\n    while (i < this.listeners.length) {\n      item = this.listeners[i];\n      if (item.type == type && item.target === target) {\n        this.listeners.splice(i, 1);\n        item.target.removeEventListener(item.type, item.listener, false);\n        return;\n      }\n      i++;\n    }\n    throw new Error(\"E_TASK_EVENT_SOURCE_NOT_ATTACHED\");\n  }\n\n  /**\n   * Read next dispatched event, blocking the current task if needed.\n   */\n  nextEvent(): Result<Base.Event> {\n    const frame: Frame<Base.Event> = newFrame(\"EventSource.nextEvent\");\n    const readEvent = () => {\n      if (this.head.event) {\n        const event = this.head.event;\n        if (this.head.next) {\n          this.head = this.head.next;\n        } else {\n          this.head.event = null;\n        }\n        frame.finish(event);\n      } else if (this.continuation) {\n        throw new Error(\"E_TASK_EVENT_SOURCE_OTHER_TASK_WAITING\");\n      } else {\n        const frameInternal: Frame<boolean> = newFrame(\n          \"EventSource.nextEventInternal\",\n        );\n        this.continuation = frameInternal.suspend(this);\n        frameInternal.result().then(readEvent);\n      }\n    };\n    readEvent();\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TaskUtil - Utilities asynchronous execution and cooperative\n * multitasking.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\n\n/**\n * A class that can fetch or compute a resource that may be needed by multiple\n * tasks. The first time a resource is requested, it is fetched and then given\n * to everyone requesting it.\n * @template T\n * @param fetch function that fetches/computes\n *    a resource; it will be run in a separate task.\n */\nexport class Fetcher<T> {\n  name: string;\n  arrived: boolean = false;\n  resource: T = null;\n  task: Task.Task = null;\n  piggybacks: ((p1: any) => void)[] | null = [];\n\n  constructor(public readonly fetch: () => Task.Result<T>, opt_name?: string) {\n    this.name = opt_name;\n  }\n\n  /**\n   * Start fetching/computing a resource, don't block current task.\n   */\n  start(): void {\n    if (!this.task) {\n      this.task = Task.currentTask()\n        .getScheduler()\n        .run(() => {\n          const frame = Task.newFrame(\"Fetcher.run\");\n          this.fetch().then((resource) => {\n            const piggibacks = this.piggybacks;\n            this.arrived = true;\n            this.resource = resource;\n            this.task = null;\n            this.piggybacks = [];\n            if (piggibacks) {\n              for (let i = 0; i < piggibacks.length; i++) {\n                try {\n                  piggibacks[i](resource);\n                } catch (err) {\n                  Logging.logger.error(err, \"Error:\");\n                }\n              }\n            }\n            frame.finish(resource);\n          });\n          return frame.result();\n        }, this.name);\n    }\n  }\n\n  piggyback(fn: (p1: T) => void): void {\n    if (this.arrived) {\n      fn(this.resource);\n    } else {\n      this.piggybacks.push(fn);\n    }\n  }\n\n  /**\n   * Fetches the resource, waits for it to arrive if it is already being\n   * fetched.\n   */\n  get(): Task.Result<T> {\n    if (this.arrived) {\n      return Task.newResult(this.resource);\n    }\n    this.start();\n    return this.task.join() as Task.Result<T>;\n  }\n\n  hasArrived(): boolean {\n    return this.arrived;\n  }\n}\n\n/**\n * Wait for all Fetcher objects in the array to arrive\n */\nexport const waitForFetchers = <T>(\n  fetchers: Fetcher<T>[],\n): Task.Result<boolean> => {\n  if (fetchers.length == 0) {\n    return Task.newResult(true);\n  }\n  if (fetchers.length == 1) {\n    return fetchers[0].get().thenReturn(true);\n  }\n  const frame = Task.newFrame<boolean>(\"waitForFetches\");\n  let i = 0;\n  frame\n    .loop(() => {\n      while (i < fetchers.length) {\n        const fetcher = fetchers[i++];\n        if (!fetcher.hasArrived()) {\n          return fetcher.get().thenReturn(true);\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n};\n\n/**\n * @return holding event type (load/error/abort)\n */\nexport function loadElement(elem: Element, src?: string): Fetcher<string> {\n  const fetcher = new Fetcher(() => {\n    const frame: Task.Frame<string> = Task.newFrame(\"loadElement\");\n    const continuation = frame.suspend(elem);\n    let done = false;\n    const handler = (evt: Event) => {\n      if (done) {\n        return;\n      } else {\n        done = true;\n      }\n      continuation.schedule(evt ? evt.type : \"timeout\");\n    };\n    elem.addEventListener(\"load\", handler, false);\n    elem.addEventListener(\"error\", handler, false);\n    elem.addEventListener(\"abort\", handler, false);\n    if (elem.namespaceURI == Base.NS.SVG) {\n      if (src) {\n        elem.setAttributeNS(Base.NS.XLINK, \"xlink:href\", src);\n      }\n      // SVG handlers are not reliable\n      setTimeout(handler, 300);\n    } else if (elem.localName === \"script\") {\n      setTimeout(handler, 3000);\n    } else if (src) {\n      (elem as any).src = src;\n    }\n    return frame.result();\n  }, `loadElement ${src || elem.localName}`);\n  fetcher.start();\n  return fetcher;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Net - Fetch resource from a URL.\n */\nimport * as Base from \"./base\";\nimport * as Logging from \"./logging\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport { Net, XmlDoc } from \"./types\";\nimport { UserAgentXml } from \"./assets\";\n\n/**\n * @enum {string}\n */\nexport enum XMLHttpRequestResponseType {\n  DEFAULT = \"\",\n  ARRAYBUFFER = \"arraybuffer\",\n  BLOB = \"blob\",\n  DOCUMENT = \"document\",\n  JSON = \"json\",\n  TEXT = \"text\",\n}\n\nexport type Response = Net.Response;\n\nexport function ajax(\n  url: string,\n  opt_type?: XMLHttpRequestResponseType,\n  opt_method?: string,\n  opt_data?: string,\n  opt_contentType?: string,\n): Task.Result<Response> {\n  const frame: Task.Frame<Response> = Task.newFrame(\"ajax\");\n  const request = new XMLHttpRequest();\n  const continuation = frame.suspend(request);\n  const response: Response = {\n    status: 0,\n    statusText: \"\",\n    url,\n    contentType: null,\n    responseText: null,\n    responseXML: null,\n    responseBlob: null,\n  };\n  request.open(opt_method || \"GET\", url, true);\n  if (opt_type) {\n    request.responseType = opt_type;\n  }\n  request.onreadystatechange = () => {\n    if (request.readyState === 4) {\n      response.status = request.status;\n      response.statusText =\n        request.statusText || (request.status == 404 && \"Not Found\") || \"\";\n      if (response.status == 200 || response.status == 0) {\n        if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.responseXML &&\n          request.responseXML.documentElement.localName != \"parsererror\"\n        ) {\n          response.responseXML = request.responseXML;\n          response.contentType = (request.responseXML as any).contentType;\n        } else if (\n          (!opt_type || opt_type === XMLHttpRequestResponseType.DOCUMENT) &&\n          request.response instanceof HTMLDocument\n        ) {\n          response.responseXML = request.response;\n          response.contentType = (request.response as any).contentType;\n        } else {\n          const text = request.response;\n          if (\n            (!opt_type || opt_type === XMLHttpRequestResponseType.TEXT) &&\n            typeof text == \"string\"\n          ) {\n            response.responseText = text;\n          } else if (!text) {\n            Logging.logger.warn(\"Unexpected empty success response for\", url);\n          } else {\n            if (typeof text == \"string\") {\n              response.responseBlob = makeBlob([text]);\n            } else {\n              response.responseBlob = text as Blob;\n            }\n          }\n          const contentTypeHeader = request.getResponseHeader(\"Content-Type\");\n          if (contentTypeHeader) {\n            response.contentType = contentTypeHeader.replace(/(.*);.*$/, \"$1\");\n          }\n        }\n      }\n      continuation.schedule(response);\n    }\n  };\n  try {\n    if (opt_data) {\n      request.setRequestHeader(\n        \"Content-Type\",\n        opt_contentType || \"text/plain; charset=UTF-8\",\n      );\n      request.send(opt_data);\n    } else {\n      if (\n        /^file:|^https?:\\/\\/[^/]+\\.githubusercontent\\.com|\\.(xhtml|xht|opf)$/i.test(\n          url,\n        )\n      ) {\n        // File or GitHub raw URL or .xht(ml) or .opf\n        if (\n          /\\/aozorabunko\\/[^/]+\\/cards\\/[^/]+\\/files\\/[^/.]+\\.html$/.test(url)\n        ) {\n          // Aozorabunko's (X)HTML support\n          request.overrideMimeType(\"text/html; charset=Shift_JIS\");\n        } else if (/\\.(html|htm)$/i.test(url)) {\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        } else if (/\\.(xhtml|xht|xml|opf)$/i.test(url)) {\n          request.overrideMimeType(\"application/xml; charset=UTF-8\");\n        } else if (/\\.(txt|css)$/i.test(url)) {\n          request.overrideMimeType(\"text/plain; charset=UTF-8\");\n        } else {\n          // fallback to HTML\n          request.overrideMimeType(\"text/html; charset=UTF-8\");\n        }\n      } else if (/^data:,(<|%3c)/i.test(url)) {\n        request.overrideMimeType(\"text/html; charset=UTF-8\");\n      } else if (/^data:,/i.test(url)) {\n        request.overrideMimeType(\"text/plain; charset=UTF-8\");\n      }\n      request.send(null);\n    }\n  } catch (e) {\n    Logging.logger.warn(e, `Error fetching ${url}`);\n    continuation.schedule(response);\n  }\n  return frame.result();\n}\n\n/**\n * @return Blob\n */\nexport function makeBlob(\n  parts: (string | Blob | ArrayBuffer | ArrayBufferView)[],\n  opt_type?: string,\n): any {\n  const type = opt_type || \"application/octet-stream\";\n  const builderCtr = window[\"WebKitBlobBuilder\"] || window[\"MSBlobBuilder\"]; // deprecated\n  if (builderCtr) {\n    const builder = new builderCtr();\n    for (let i = 0; i < parts.length; i++) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(type);\n  }\n  return new Blob(parts, { type });\n}\n\n/**\n * @return Task.Result.<ArrayBuffer>\n */\nexport function readBlob(blob: Blob): any {\n  const frame: Task.Frame<ArrayBuffer> = Task.newFrame(\"readBlob\");\n  const fileReader = new FileReader();\n  const continuation = frame.suspend(fileReader);\n  fileReader.addEventListener(\n    \"load\",\n    () => {\n      continuation.schedule(fileReader.result as ArrayBuffer);\n    },\n    false,\n  );\n  fileReader.readAsArrayBuffer(blob);\n  return frame.result();\n}\n\nexport function revokeObjectURL(url: string): void {\n  (window[\"URL\"] || window[\"webkitURL\"]).revokeObjectURL(url);\n}\n\n/**\n * @return url\n */\nexport function createObjectURL(blob: Blob): string {\n  return (window[\"URL\"] || window[\"webkitURL\"]).createObjectURL(blob);\n}\n\n/**\n * @template Resource\n */\nexport class ResourceStore<Resource> implements Net.ResourceStore<Resource> {\n  resources: { [key: string]: Resource } = {};\n  fetchers: { [key: string]: TaskUtil.Fetcher<Resource> } = {};\n\n  constructor(\n    public readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>,\n    public readonly type: XMLHttpRequestResponseType,\n  ) {}\n\n  /**\n   * @return resource for the given URL\n   */\n  load(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (typeof resource != \"undefined\") {\n      return Task.newResult(resource);\n    }\n    return this.fetch(url, opt_required, opt_message).get();\n  }\n\n  private fetchInner(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Resource> {\n    const frame: Task.Frame<Resource> = Task.newFrame(\"fetch\");\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n    if (isTocBox) {\n      url = url.replace(\"?viv-toc-box\", \"\");\n    }\n    const userAgentXmlUrl = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const isUserAgentXml = !isTocBox && url === userAgentXmlUrl;\n    if (isUserAgentXml) {\n      // Change \"user-agent.xml\" URL to data URL\n      url = `data:application/xml,${encodeURIComponent(UserAgentXml)}`;\n    }\n\n    ajax(url, this.type).then((response) => {\n      if (response.status >= 400) {\n        if (opt_required) {\n          throw new Error(\n            (opt_message || `Failed to fetch required resource: ${url}`) +\n              ` (${response.status}${\n                response.statusText ? \" \" + response.statusText : \"\"\n              })`,\n          );\n        }\n      }\n      if (isTocBox) {\n        // Hack for TOCView.showTOC()\n        url += \"?viv-toc-box\";\n        response.url += \"?viv-toc-box\";\n      } else if (isUserAgentXml) {\n        // Restore \"user-agent.xml\" URL\n        response.url = url = userAgentXmlUrl;\n      }\n      this.parser(response, this).then((resource) => {\n        delete this.fetchers[url];\n        this.resources[url] = resource;\n        frame.finish(resource);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return fetcher for the resource for the given URL\n   */\n  fetch(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): TaskUtil.Fetcher<Resource> {\n    url = Base.stripFragment(url);\n    const resource = this.resources[url];\n    if (resource) {\n      return null;\n    }\n    let fetcher = this.fetchers[url];\n    if (!fetcher) {\n      fetcher = new TaskUtil.Fetcher(\n        () => this.fetchInner(url, opt_required, opt_message),\n        `Fetch ${url}`,\n      );\n      this.fetchers[url] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  get(url: string): XmlDoc.XMLDocHolder {\n    const resource: unknown = this.resources[Base.stripFragment(url)];\n    return resource as XmlDoc.XMLDocHolder;\n  }\n\n  delete(url: string) {\n    delete this.resources[Base.stripFragment(url)];\n  }\n}\n\nexport type JSONStore = ResourceStore<Base.JSON>;\n\nexport function parseJSONResource(\n  response: Response,\n  store: JSONStore,\n): Task.Result<Base.JSON> {\n  const text = response.responseText;\n  return Task.newResult(text ? Base.stringToJSON(text) : null);\n}\n\nexport function newJSONStore(): JSONStore {\n  return new ResourceStore(parseJSONResource, XMLHttpRequestResponseType.TEXT);\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Assets - Bundle resources\n */\n\n// vivliostyle-viewport-screen.css\nexport const VivliostyleViewportScreenCss = `\n@media screen {\n  [data-vivliostyle-viewer-viewport] {\n    background: #aaaaaa;\n  }\n\n  [data-vivliostyle-page-container] {\n    background: white;\n    z-index: 0;\n  }\n\n  [data-vivliostyle-viewer-viewport] {\n    display: flex;\n    overflow: auto;\n    position: relative;\n  }\n\n  [data-vivliostyle-outer-zoom-box] {\n    margin: auto;\n    overflow: hidden;\n    flex: none;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-spread-container] {\n    display: -webkit-flex;\n    display: flex;\n    flex: none;\n    justify-content: center;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"ltr\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-page-progression=\"rtl\"]\n    [data-vivliostyle-spread-container] {\n    flex-direction: row-reverse;\n  }\n\n  [data-vivliostyle-viewer-viewport] [data-vivliostyle-page-container] {\n    margin: 0 auto;\n    flex: none;\n    transform-origin: center top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"left\"] {\n    margin-right: 1px;\n    transform-origin: right top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-page-side=\"right\"] {\n    margin-left: 1px;\n    transform-origin: left top;\n  }\n\n  [data-vivliostyle-viewer-viewport][data-vivliostyle-spread-view=\"true\"]\n    [data-vivliostyle-page-container][data-vivliostyle-unpaired-page=\"true\"] {\n    margin-left: auto;\n    margin-right: auto;\n    transform-origin: center top;\n  }\n}\n`;\n\n// vivliostyle-viewport.css\nexport const VivliostyleViewportCss = `\n[data-vivliostyle-layout-box] {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  z-index: -1;\n}\n\n[data-vivliostyle-debug] [data-vivliostyle-layout-box] {\n  right: auto;\n  bottom: auto;\n  overflow: visible;\n  z-index: auto;\n}\n\n[data-vivliostyle-page-container] {\n  position: relative;\n  overflow: hidden;\n}\n\n[data-vivliostyle-bleed-box] {\n  position: absolute;\n  /* overflow: hidden; ** removed to fix issue #945 */\n  box-sizing: border-box;\n}\n\n[data-vivliostyle-page-box] ~ [data-vivliostyle-page-box] {\n  display: none;\n}\n\n[data-vivliostyle-toc-box] {\n  position: absolute;\n  left: 3px;\n  top: 3px;\n  overflow: scroll;\n  overflow-x: hidden;\n  background: rgba(248, 248, 248, 0.9);\n  border-radius: 2px;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n}\n\n@media print {\n  [data-vivliostyle-toc-box] {\n    display: none;\n  }\n\n  [data-vivliostyle-outer-zoom-box],\n  [data-vivliostyle-spread-container] {\n    width: 100% !important;\n    height: 100% !important;\n  }\n\n  [data-vivliostyle-spread-container],\n  [data-vivliostyle-page-container] {\n    transform: none !important;\n  }\n\n  [data-vivliostyle-page-container] {\n    display: block !important;\n    max-height: 100vh;\n    break-after: page;\n  }\n\n  [data-vivliostyle-bleed-box] > div > div::before {\n    display: block;\n    content: \"\";\n    padding-top: 0.015625px;\n    margin-bottom: -0.015625px;\n  }\n\n  /* Gecko-only hack, see https://bugzilla.mozilla.org/show_bug.cgi?id=267029#c17 */\n  @-moz-document url-prefix()  {\n    [data-vivliostyle-page-container]:nth-last-child(n + 2) {\n      top: -1px;\n      margin-top: 1px;\n      margin-bottom: -1px;\n    }\n    /* Workaround Gecko problem on page break */\n    [data-vivliostyle-page-container] {\n      break-after: auto;\n      height: 100% !important;\n    }\n  }\n}\n`;\n\n// validation.txt\nexport const ValidationTxt = `\n/*\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * CSS property validation.\n */\nNUM = POS_NUM | ZERO | NEGATIVE;\nNNEG_NUM = POS_NUM | ZERO;\nINT = POS_INT | ZERO | NEGATIVE;\nNNEG_INT = POS_INT | ZERO;\nPERCENTAGE = POS_PERCENTAGE | ZERO | NEGATIVE;\nSTRICT_PERCENTAGE = POS_PERCENTAGE | ZERO_PERCENTAGE | NEGATIVE;\nNNEG_PERCENTAGE = POS_PERCENTAGE | ZERO;\nLENGTH = POS_LENGTH | ZERO | NEGATIVE;\nNNEG_LENGTH = POS_LENGTH | ZERO | NEGATIVE;\nPLENGTH = LENGTH | PERCENTAGE;\nPPLENGTH = POS_LENGTH | ZERO | POS_PERCENTAGE;\nALENGTH = LENGTH | auto;\nAPLENGTH = PLENGTH | auto;\nPAPLENGTH = PPLENGTH | auto;\nANGLE = POS_ANGLE | ZERO | NEGATIVE;\nLENGTH_OR_NUM = LENGTH | NUM;\nANGLE_OR_NUM = ANGLE | NUM;\nMIN_MAX_FIT_CONTENT = min-content | max-content | fit-content;\nBG_POSITION_TERM = PLENGTH | left | center | right | top | bottom;\nURI_OR_NONE = URI | none;\nIMAGE = URI | IMAGE_FUNCTION | none;\nbackground-attachment = COMMA( [scroll | fixed | local]+ );\nbackground-color = COLOR;\nbackground-image = COMMA( IMAGE+ );\nbackground-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\nbackground-repeat = COMMA( [repeat | repeat-x | repeat-y | no-repeat]+ );\nborder-collapse = collapse | separate;\nBORDER_SIDE_COLOR = COLOR;\nBORDER_SIDE_STYLE = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset;\nBORDER_SIDE_WIDTH = thin: 1px | medium: 3px | thick: 5px | NNEG_LENGTH;\nborder-spacing = LENGTH LENGTH?;\nborder-top-color = BORDER_SIDE_COLOR;\nborder-right-color = BORDER_SIDE_COLOR;\nborder-bottom-color = BORDER_SIDE_COLOR;\nborder-left-color = BORDER_SIDE_COLOR;\nborder-top-style = BORDER_SIDE_STYLE;\nborder-right-style = BORDER_SIDE_STYLE;\nborder-bottom-style = BORDER_SIDE_STYLE;\nborder-left-style = BORDER_SIDE_STYLE;\nborder-top-width = BORDER_SIDE_WIDTH;\nborder-right-width = BORDER_SIDE_WIDTH;\nborder-bottom-width = BORDER_SIDE_WIDTH;\nborder-left-width = BORDER_SIDE_WIDTH;\nBORDER_RADIUS = PLENGTH{1,2};\nborder-top-left-radius = BORDER_RADIUS;\nborder-top-right-radius = BORDER_RADIUS;\nborder-bottom-right-radius = BORDER_RADIUS;\nborder-bottom-left-radius = BORDER_RADIUS;\nborder-image-source = IMAGE;\nborder-image-slice = [NUM | PERCENTAGE]{1,4} || fill; /* relaxed */\nborder-image-width = [NUM | PLENGTH | auto]{1,4};\nborder-image-outset = [NUM | LENGTH]{1,4};\nborder-image-repeat = [ stretch | repeat | round | space ]{1,2};\nbottom = APLENGTH;\ncaption-side = top | bottom;\nclear = none | left | right | top | bottom | both | all | same;\nclip = rect(ALENGTH{4}) | rect(SPACE(ALENGTH{4})) | auto;\ncolor = COLOR;\nLIST_STYLE_TYPE = disc | circle | square | decimal | decimal-leading-zero | lower-roman |\n    upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha |\n    upper-alpha | russian | upper-russian | lower-russian | cjk-ideographic | trad-chinese-informal |\n    hebrew | none;\nTYPE_OR_UNIT_IN_ATTR = string | color | url | integer | number | length | angle | time | frequency;\nATTR = attr(SPACE(IDENT TYPE_OR_UNIT_IN_ATTR?) [ STRING | IDENT | COLOR | INT | NUM | PLENGTH | ANGLE | POS_TIME | FREQUENCY]?);\nCONTENT_LIST = [ STRING | URI | counter(IDENT LIST_STYLE_TYPE?) |\n    counters(IDENT STRING LIST_STYLE_TYPE?) | ATTR |\n    target-counter([ STRING | URI ] IDENT LIST_STYLE_TYPE?) |\n    target-counter(ATTR IDENT LIST_STYLE_TYPE?) |\n    target-counters([ STRING | URI ] IDENT STRING LIST_STYLE_TYPE?) |\n    target-counters(ATTR IDENT STRING LIST_STYLE_TYPE?) |\n    open-quote | close-quote | no-open-quote | no-close-quote |\n    content([ text | before | after | first-letter ]?) |\n    string(IDENT [first | start | last | first-except]?) ]+;\nCONTENT = normal | none | CONTENT_LIST;\ncontent = CONTENT;\nCOUNTER = [ IDENT INT? ]+ | none;\ncounter-increment = COUNTER;\ncounter-reset = COUNTER;\ncounter-set = COUNTER;\ncursor = COMMA(URI* [ auto | crosshair | default | pointer | move | e-resize | ne-resize | nw-resize |\n    n-resize | se-resize | sw-resize | s-resize | w-resize | text | wait | help | progress ]);\ndirection = ltr | rtl;\ndisplay = inline | block | list-item | inline-block | table | inline-table | table-row-group |\n    table-header-group | table-footer-group | table-row | table-column-group | table-column |\n    table-cell | table-caption | none | oeb-page-head | oeb-page-foot | flex | inline-flex |\n    ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | run-in | compact | marker;\nempty-cells = show | hide;\nFAMILY = SPACE(IDENT+) | STRING;\nFAMILY_LIST = COMMA( FAMILY+ );\nfont-family = FAMILY_LIST;\nfont-size = xx-small | x-small | small | medium | large | x-large | xx-large | larger | smaller | PPLENGTH | POS_NUM;\nfont-style = normal | italic | oblique;\nfont-weight = normal | bold | bolder | lighter | POS_NUM;\nheight = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nleft = APLENGTH;\nletter-spacing = normal | LENGTH_OR_NUM;\nline-height = normal | POS_NUM | PPLENGTH;\nlist-style-image = IMAGE;\nlist-style-position = inside | outside;\nlist-style-type = LIST_STYLE_TYPE;\nmargin-right = APLENGTH;\nmargin-left = APLENGTH;\nmargin-top = APLENGTH;\nmargin-bottom = APLENGTH;\nNPLENGTH = none | PLENGTH;\nmax-height = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-width = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-height = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-width = APLENGTH | MIN_MAX_FIT_CONTENT;\norphans = POS_INT;\noutline-offset = LENGTH;\noutline-color = COLOR | invert;\noutline-style = BORDER_SIDE_STYLE;\noutline-width = BORDER_SIDE_WIDTH;\noverflow = visible | hidden | scroll | auto;\npadding-right = PPLENGTH;\npadding-left = PPLENGTH;\npadding-top = PPLENGTH;\npadding-bottom = PPLENGTH;\nPAGE_BREAK = auto | always | avoid | left | right | recto | verso;\npage-break-after = PAGE_BREAK;\npage-break-before = PAGE_BREAK;\npage-break-inside = avoid | auto;\nposition = static | relative | absolute | fixed;\nquotes = [STRING STRING]+ | none | auto;\nright = APLENGTH;\ntable-layout = auto | fixed;\ntext-align = left | right | center | justify | start | end;\ntext-decoration = none | [ underline || overline || line-through || blink ];\ntext-indent = PLENGTH;\ntext-transform = capitalize | uppercase | lowercase | none;\ntop = APLENGTH;\nvertical-align = baseline | sub | super | top | text-top | middle | bottom | text-bottom | PLENGTH;\nvisibility = visible | hidden | collapse;\nwhite-space = normal | pre | nowrap | pre-wrap | pre-line | break-spaces;\nwidows = POS_INT;\nwidth = PAPLENGTH | POS_NUM | MIN_MAX_FIT_CONTENT;\nword-spacing = normal | LENGTH_OR_NUM;\nz-index = auto | INT;\n\n[epub,moz,webkit]hyphens = auto | manual | none;\n[webkit]hyphenate-character = auto | STRING;\n\n/* css-logical */\nmargin-block-start = APLENGTH;\nmargin-block-end = APLENGTH;\nmargin-inline-start = APLENGTH;\nmargin-inline-end = APLENGTH;\npadding-block-start = APLENGTH;\npadding-block-end = APLENGTH;\npadding-inline-start = APLENGTH;\npadding-inline-end = APLENGTH;\nborder-block-start-color = BORDER_SIDE_COLOR;\nborder-block-end-color = BORDER_SIDE_COLOR;\nborder-inline-start-color = BORDER_SIDE_COLOR;\nborder-inline-end-color = BORDER_SIDE_COLOR;\nborder-block-start-style = BORDER_SIDE_STYLE;\nborder-block-end-style = BORDER_SIDE_STYLE;\nborder-inline-start-style = BORDER_SIDE_STYLE;\nborder-inline-end-style = BORDER_SIDE_STYLE;\nborder-block-start-width = BORDER_SIDE_WIDTH;\nborder-block-end-width = BORDER_SIDE_WIDTH;\nborder-inline-start-width = BORDER_SIDE_WIDTH;\nborder-inline-end-width = BORDER_SIDE_WIDTH;\nblock-start = APLENGTH;\nblock-end = APLENGTH;\ninline-start = APLENGTH;\ninline-end = APLENGTH;\nblock-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\ninline-size = PAPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-block-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmax-inline-size = NPLENGTH | MIN_MAX_FIT_CONTENT;\nmin-block-size = APLENGTH | MIN_MAX_FIT_CONTENT;\nmin-inline-size = APLENGTH | MIN_MAX_FIT_CONTENT;\n\nSHAPE = auto | rectangle( PLENGTH{4} ) |  ellipse( PLENGTH{4} ) |  circle( PLENGTH{3} ) |\n    polygon( SPACE(PLENGTH+)+ );\n[epubx]shape-inside = SHAPE;\n[epubx,webkit]shape-outside = SHAPE;\n[epubx]wrap-flow = auto | both | start | end | maximum | clear | around /* epub al */;\n\nTRANSFORM_FUNCTION = matrix(NUM{6}) | translate(PLENGTH{1,2}) | translateX(PLENGTH) | translateY(PLENGTH) |\n scale(NUM{1,2}) | scaleX(NUM) | scaleY(NUM) | rotate(ANGLE) | skewX(ANGLE) | skewY(ANGLE);\n[epub]transform = none | TRANSFORM_FUNCTION+;\n[epub]transform-origin = [[[ top | bottom | left | right] PLENGTH?] | center | PLENGTH]{1,2}; /* relaxed */\n\nBOX = border-box | padding-box | content-box;\nSHADOW = SPACE(inset || LENGTH{2,4} || COLOR); /* relaxed */\n[webkit]background-size = COMMA( SPACE( [PLENGTH | auto ]{1,2} | cover | contain)+ );\n[webkit]background-origin = COMMA( BOX+ );\n[webkit]background-clip = COMMA( BOX+ );\n[webkit]box-shadow = none | COMMA( SHADOW+ );\ntext-shadow = none |  COMMA( SHADOW+ );\n[webkit]box-decoration-break = slice | clone;\nFILTER_FUNCTION = blur(LENGTH) | brightness(NUM | PERCENTAGE) | contrast(NUM | PERCENTAGE) | drop-shadow(SPACE(LENGTH{2,3} COLOR?))\n                | grayscale(NUM | PERCENTAGE) | hue-rotate(ANGLE) | invert(NUM | PERCENTAGE) | opacity(NUM | PERCENTAGE)\n                | saturate(NUM | PERCENTAGE) | sepia(NUM | PERCENTAGE);\nFILTER_FUNCTION_LIST = FILTER_FUNCTION+;\n[webkit]filter = none | FILTER_FUNCTION_LIST;\n\nopacity = NUM;\n\n[moz,webkit]column-width = LENGTH | auto;\n[moz,webkit]column-count = INT | auto;\n[moz,webkit]column-gap = LENGTH | normal;\n[moz,webkit]column-rule-color = COLOR;\n[moz,webkit]column-rule-style = BORDER_SIDE_STYLE;\n[moz,webkit]column-rule-width = BORDER_SIDE_WIDTH;\nBREAK = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region;\nbreak-before = BREAK;\nbreak-after = BREAK;\nbreak-inside = auto | avoid | avoid-page | avoid-column | avoid-region;\n[webkit]column-span = none | auto | all;\n[moz]column-fill = auto | balance | balance-all;\n\nsrc = COMMA([SPACE(URI format(STRING+)?) | local(FAMILY)]+); /* for font-face */\n\n[epubx,webkit]flow-from = IDENT;\n[epubx,webkit]flow-into = IDENT;\n[epubx]flow-linger = INT | none;\n[epubx]flow-priority = INT;\n[epubx]flow-options = none | [ exclusive || last || static ];\n[epubx]page = INT | auto | IDENT; /* page: IDENT is for CSS Paged Media */\n[epubx]min-page-width = LENGTH;\n[epubx]min-page-height = LENGTH;\n[epubx]required = true | false;\n[epubx]enabled = true | false;\n[epubx]conflicting-partitions = COMMA(IDENT+);\n[epubx]required-partitions = COMMA(IDENT+);\n[epubx]snap-height = LENGTH | none;\n[epubx]snap-width = LENGTH | none;\n[epubx]flow-consume = all | some;\n[epubx]utilization = NUM;\n[epubx]text-zoom = font-size | scale;\n\n[adapt]template = URI_OR_NONE;\n[adapt]behavior = IDENT;\n\n/* CSS Fonts */\nCOMMON_LIG_VALUES        = [ common-ligatures | no-common-ligatures ];\nDISCRETIONARY_LIG_VALUES = [ discretionary-ligatures | no-discretionary-ligatures ];\nHISTORICAL_LIG_VALUES    = [ historical-ligatures | no-historical-ligatures ];\nCONTEXTUAL_ALT_VALUES    = [ contextual | no-contextual ];\nfont-variant-ligatures = normal | none | [ COMMON_LIG_VALUES || DISCRETIONARY_LIG_VALUES || HISTORICAL_LIG_VALUES || CONTEXTUAL_ALT_VALUES ];\nfont-variant-caps = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps;\nNUMERIC_FIGURE_VALUES   = [ lining-nums | oldstyle-nums ];\nNUMERIC_SPACING_VALUES  = [ proportional-nums | tabular-nums ];\nNUMERIC_FRACTION_VALUES = [ diagonal-fractions | stacked-fractions ];\nfont-variant-numeric = normal | [ NUMERIC_FIGURE_VALUES || NUMERIC_SPACING_VALUES || NUMERIC_FRACTION_VALUES || ordinal || slashed-zero ];\nEAST_ASIAN_VARIANT_VALUES = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ];\nEAST_ASIAN_WIDTH_VALUES   = [ full-width | proportional-width ];\nfont-variant-east-asian = normal | [ EAST_ASIAN_VARIANT_VALUES || EAST_ASIAN_WIDTH_VALUES || ruby ];\nfont-variant_css2 = normal | small-caps; /* for font shorthand */\nfont-size-adjust = none | NNEG_NUM;\n[webkit]font-kerning = auto | normal | none;\nfont-feature-settings = COMMA( normal | SPACE( STRING [ on | off | INT ]? )+ );\nFONT_STRETCH_CSS3_VALUES = normal | wider | narrower | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded;\nfont-stretch = FONT_STRETCH_CSS3_VALUES | PERCENTAGE;\nfont-stretch_css3 = FONT_STRETCH_CSS3_VALUES; /* for font shorthand */\nfont-display = [ auto | block | swap | fallback | optional ];\nunicode-range = COMMA( URANGE+ );\n\n/* CSS Images */\nimage-resolution = RESOLUTION;\nobject-fit = fill | contain | cover | none | scale-down;\nobject-position = COMMA( SPACE(BG_POSITION_TERM{1,4})+ ); /* relaxed */\n\n/* CSS Paged Media */\nPAGE_SIZE = a10 | a9 | a8 | a7 | a6 | a5 | a4 | a3 | a2 | a1 | a0\n          | b10 | b9 | b8 | b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0\n          | c10 | c9 | c8 | c7 | c6 | c5 | c4 | c3 | c2 | c1 | c0\n          | jis-b10 | jis-b9 | jis-b8 | jis-b7 | jis-b6 | jis-b5 | jis-b4 | jis-b3 | jis-b2 | jis-b1 | jis-b0\n          | letter | legal | ledger;\nbleed = auto | LENGTH;\nmarks = none | [ crop || cross ];\nsize = POS_LENGTH{1,2} | auto | [ PAGE_SIZE || [ portrait | landscape ] ];\ncrop-offset = auto | LENGTH;\n\n/* CSS Page Floats */\nfloat-reference = inline | column | region | page;\nfloat = block-start | block-end | inline-start | inline-end | snap-block | snap-inline | left | right | top | bottom | none | footnote;\nfloat-min-wrap-block = PPLENGTH;\n\n/* CSS Ruby */\nruby-align = start | center | space-between | space-around;\nruby-position = over | under | inter-character;\n\n/* CSS Size Adjust */\n[moz]text-size-adjust = auto | none | POS_PERCENTAGE;\n\n/* CSS Text */\n[webkit]line-break = auto | loose | normal | strict | anywhere;\noverflow-wrap = normal | break-word | anywhere;\n[moz]tab-size = NNEG_INT | NNEG_LENGTH;\n[moz]text-align-last = auto | start | end | left | right | center | justify;\ntext-justify = auto | none | inter-word | inter-character;\nword-break = normal | keep-all | break-all | break-word;\ntext-spacing = normal | none | auto | [[ trim-start | space-start | space-first ] ||\n    [ trim-end | space-end | allow-end ] || [ trim-adjacent | space-adjacent ] ||\n    no-compress || ideograph-alpha || ideograph-numeric || punctuation];\nhanging-punctuation = none | [ first || [ force-end | allow-end ] || last ];\n\n/* CSS Text Decoration */\n[webkit]text-decoration-color = COLOR;\n[webkit]text-decoration-line = none | [ underline || overline || line-through || blink ];\n[webkit]text-decoration-skip = none | [ objects || spaces || ink || edges || box-decoration ];\n[webkit]text-decoration-style = solid | double | dotted | dashed | wavy;\n[epub,webkit]text-emphasis-color = COLOR;\n[webkit]text-emphasis-position = [ over | under ] [ right | left ];\n[epub,webkit]text-emphasis-style = none | [[ filled | open ] || [ dot | circle | double-circle | triangle | sesame ]] | STRING;\n[webkit]text-underline-position = auto | [ under || [ left | right ]];\n\n/* CSS Transforms */\n[webkit]backface-visibility = visible | hidden;\n\n/* CSS UI */\nbox-sizing = content-box | padding-box | border-box;\ntext-overflow = [clip | ellipsis | STRING]{1,2};\n\n/* CSS Writing Modes */\n[epub,webkit]text-combine = none | horizontal;\ntext-combine-upright = none | all; /* relaxed */\n[epub,webkit]text-orientation = mixed | upright | sideways-right | sideways-left | sideways | use-glyph-orientation /* the following values are kept for backward-compatibility */ | vertical-right | rotate-right | rotate-left | rotate-normal | auto;\nunicode-bidi = normal | embed | isolate | bidi-override | isolate-override | plaintext;\n[epub,webkit]writing-mode = horizontal-tb | vertical-rl | lr-tb | rl-tb | tb-rl | lr | rl | tb;\n\n/* CSS Flex box */\nFLEX_BASIS = content | PAPLENGTH;\nflex-direction = row | row-reverse | column | column-reverse;\nflex-wrap = nowrap | wrap | wrap-reverse;\norder = INT;\nflex-grow = NNEG_NUM;\nflex-shrink = NNEG_NUM;\nflex-basis = FLEX_BASIS;\nflex = none | [ [ NNEG_NUM NNEG_NUM? ] || FLEX_BASIS ];\njustify-content = flex-start | flex-end | center | space-between | space-around;\nalign-items = flex-start | flex-end | center | baseline | stretch;\nalign-self = auto | flex-start | flex-end | center | baseline | stretch;\nalign-content = flex-start | flex-end | center | space-between | space-around | stretch;\n\n/* Pointer Events */\ntouch-action = auto | none | [ pan-x || pan-y ] | manipulation;\n\n/* SVG 2 */\nOPACITY_VALUE = NUM | PERCENTAGE;\nDASH_ARRAY = COMMA( SPACE( [ LENGTH | PERCENTAGE | NUM ]+ )+ );\nPAINT = none | child | child(INT) | COLOR | SPACE( URI [none | COLOR]? ) | context-fill | context-stroke;\ncolor-interpolation = auto | sRGB | linearRGB;\ncolor-rendering = auto | optimizeSpeed | optimizeQuality;\nfill = PAINT;\nfill-opacity = OPACITY_VALUE;\nfill-rule = nonzero | evenodd;\nglyph-orientation-vertical = auto | NUM | ANGLE;\nimage-rendering = auto | optimizeSpeed | optimizeQuality | crisp-edges | pixelated;\nmarker-start = none | URI;\nmarker-mid = none | URI;\nmarker-end = none | URI;\npointer-events = bounding-box | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | none;\npaint-order = normal | [ fill || stroke || markers ];\nshape-rendering = auto | optimizeSpeed | crispEdges | geometricPrecision;\nstop-color = COLOR;\nstop-opacity = OPACITY_VALUE;\nstroke = PAINT;\nstroke-dasharray = none | DASH_ARRAY;\nstroke-dashoffset = PERCENTAGE | LENGTH_OR_NUM;\nstroke-linecap = butt | round | square;\nstroke-linejoin = miter | round | bevel;\nstroke-miterlimit = NUM;\nstroke-opacity = OPACITY_VALUE;\nstroke-width = PERCENTAGE | LENGTH_OR_NUM;\ntext-anchor = start | middle | end;\ntext-rendering = auto | optimizeSpeed | optimizeLegibility | geometricPrecision;\nvector-effect = none | SPACE( [ non-scaling-stroke | non-scaling-size | non-rotation | fixed-position ]+ [ viewport | screen ]? );\n\n/* SVG 1.1 */\nalignment-baseline = auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical;\nbaseline-shift = baseline | sub | super | PERCENTAGE | LENGTH_OR_NUM;\ndominant-baseline = auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge;\nmask = none | URI;\n\n/* css-masking-1 */\nSHAPE_RADIUS = PLENGTH | closest-side | farthest-side;\nFILL_RULE = nonzero | evenodd;\nSHAPE_BOX = BOX | margin-box;\nGEOMETRY_BOX = SHAPE_BOX | fill-box | stroke-box | view-box;\nBASIC_SHAPE =\n    inset( SPACE( PLENGTH{1,4} [ round PLENGTH{1,4} [ SLASH PLENGTH{1,4} ]? ]? ) )\n  | circle(  SPACE( [SHAPE_RADIUS]?    [at BG_POSITION_TERM{1,4}]? ) )\n  | ellipse( SPACE( SHAPE_RADIUS{2}? [at BG_POSITION_TERM{1,4}]? ) )\n  | polygon( FILL_RULE? COMMA( SPACE( PLENGTH{2} )+ )+ );\n[webkit]clip-path = none | URI | [ BASIC_SHAPE || GEOMETRY_BOX ];\nclip-rule = nonzero | evenodd;\n\n/* filters */\nflood-color = COLOR;\nflood-opacity = OPACITY_VALUE;\nlighting-color = COLOR;\n\n/* compositing-1 */\nBLEND_MODE = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity;\nmix-blend-mode = BLEND_MODE;\nisolation = auto | isolate;\nbackground-blend-mode = COMMA( BLEND_MODE+ );\n\n/* CSS GCPM */\nstring-set = COMMA( SPACE( IDENT CONTENT_LIST )+ | none );\nfootnote-policy = auto | line;\n\n/* CSS Repeated Headers and Footers */\n[viv]repeat-on-break = auto | none | header | footer;\n\nDEFAULTS\n\nbackground-attachment: scroll;\nbackground-color: transparent;\nbackground-image: none;\nbackground-repeat: repeat;\nbackground-position: 0% 0%;\nbackground-clip: border-box;\nbackground-origin: padding-box;\nbackground-size: auto;\nborder-top-color: currentColor;\nborder-right-color: currentColor;\nborder-bottom-color: currentColor;\nborder-left-color: currentColor;\nborder-top-style: none;\nborder-right-style: none;\nborder-bottom-style: none;\nborder-left-style: none;\nborder-top-width: 3px;\nborder-right-width: 3px;\nborder-bottom-width: 3px;\nborder-left-width: 3px;\nborder-top-left-radius: 0;\nborder-top-right-radius: 0;\nborder-bottom-right-radius: 0;\nborder-bottom-left-radius: 0;\nborder-image-source: none;\nborder-image-slice: 100%;\nborder-image-width: 1;\nborder-image-outset: 0;\nborder-image-repeat: stretch;\ncolumn-count: auto;\ncolumn-gap: normal;\ncolumn-width: auto;\ncolumn-rule-color: currentColor;\ncolumn-rule-style: none;\ncolumn-rule-width: 3px;\ncolumn-fill: balance;\noutline-color: currentColor;\noutline-style: none;\noutline-width: 3px;\nflex-direction: row;\nflex-wrap: nowrap;\nfont-family: serif;\nfont-style: normal;\nfont-size: medium;\nfont-size-adjust: none;\nfont-kerning: auto;\nfont-feature-settings: normal;\nfont-variant-ligatures: normal;\nfont-variant-caps: normal;\nfont-variant-numeric: normal;\nfont-variant-east-asian: normal;\nfont-weight: normal;\nfont-stretch: normal;\nline-height: normal;\nlist-style-image: none;\nlist-style-position: outside;\nlist-style-type: disc;\nmargin-bottom: auto;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: auto;\npadding-bottom: auto;\npadding-left: auto;\npadding-right: auto;\npadding-top: auto;\ntext-emphasis-color: currentColor;\ntext-emphasis-style: none;\nmarker-start: none;\nmarker-mid: none;\nmarker-end: none;\n\n/* css-logical */\nborder-block-start-color: currentColor;\nborder-block-end-color: currentColor;\nborder-inline-start-color: currentColor;\nborder-inline-end-color: currentColor;\nborder-block-start-style: none;\nborder-block-end-style: none;\nborder-inline-start-style: none;\nborder-inline-end-style: none;\nborder-block-start-width: 3px;\nborder-block-end-width: 3px;\nborder-inline-start-width: 3px;\nborder-inline-end-width: 3px;\n\nSHORTHANDS\n\nall = ALL;\nbackground = COMMA background-image [background-position [ / background-size ]] background-repeat\n     background-attachment [background-origin background-clip] background-color; /* background-color is a special case, see the code */\nborder-top = border-top-width border-top-style border-top-color;\nborder-right = border-right-width border-right-style border-right-color;\nborder-bottom = border-bottom-width border-bottom-style border-bottom-color;\nborder-left = border-left-width border-left-style border-left-color;\nborder-width = INSETS border-top-width border-right-width border-bottom-width border-left-width;\nborder-style = INSETS border-top-style border-right-style border-bottom-style border-left-style;\nborder-color = INSETS border-top-color border-right-color border-bottom-color border-left-color;\nborder = border-width border-style border-color;\nborder-image = border-image-source border-image-slice [ / border-image-width [ / border-image-outset ] ]\n     border-image-repeat;\nborder-radius = INSETS_SLASH border-top-left-radius border-top-right-radius\n     border-bottom-right-radius border-bottom-left-radius;\n[moz,webkit]columns = column-width column-count;\n[moz,webkit]column-rule = column-rule-width column-rule-style column-rule-color;\nflex-flow = flex-direction flex-wrap;\noeb-column-number = column-count;\noutline = outline-width outline-style outline-color;\nlist-style = list-style-type list-style-position list-style-image;\nmargin = INSETS margin-top margin-right margin-bottom margin-left;\npadding = INSETS padding-top padding-right padding-bottom padding-left;\nfont = FONT font-style font-variant_css2 font-weight font-stretch_css3 /* font-size line-height font-family are special-cased */;\nfont-variant = font-variant-ligatures font-variant-caps font-variant-numeric font-variant-east-asian;\n[epub,webkit]text-emphasis = text-emphasis-style text-emphasis-color;\nmarker = INSETS marker-start marker-mid marker-end;\n\n/* css-logical */\nmargin-block = INSETS margin-block-start margin-block-end;\nmargin-inline = INSETS margin-inline-start margin-inline-end;\npadding-block = INSETS padding-block-start padding-block-end;\npadding-inline = INSETS padding-inline-start padding-inline-end;\nborder-block-width = INSETS border-block-start-width border-block-end-width;\nborder-block-style = INSETS border-block-start-style border-block-end-style;\nborder-block-color = INSETS border-block-start-color border-block-end-color;\nborder-inline-width = INSETS border-inline-start-width border-inline-end-width;\nborder-inline-style = INSETS border-inline-start-style border-inline-end-style;\nborder-inline-color = INSETS border-inline-start-color border-inline-end-color;\nborder-block = border-block-width border-block-style border-block-color;\nborder-inline = border-inline-width border-inline-style border-inline-color;\nborder-block-start = border-block-start-width border-block-start-style border-block-start-color;\nborder-block-end = border-block-end-width border-block-end-style border-block-end-color;\nborder-inline-start = border-inline-start-width border-inline-start-style border-inline-start-color;\nborder-inline-end = border-inline-end-width border-inline-end-style border-inline-end-color;\ninset-block-start = block-start;\ninset-block-end = block-end;\ninset-inline-start = inline-start;\ninset-inline-end = inline-end;\ninset-block = INSETS block-start block-end;\ninset-inline = INSETS inline-start inline-end;\ninset = INSETS top right bottom left;\n\n/* old names  */\nword-wrap = overflow-wrap;\n[adapt,webkit]margin-before = margin-block-start;\n[adapt,webkit]margin-after = margin-block-end;\n[adapt,webkit]margin-start = margin-inline-start;\n[adapt,webkit]margin-end = margin-inline-end;\n[adapt,webkit]padding-before = padding-block-start;\n[adapt,webkit]padding-after = padding-block-end;\n[adapt,webkit]padding-start = padding-inline-start;\n[adapt,webkit]padding-end = padding-inline-end;\n[adapt,webkit]border-before-color = border-block-start-color;\n[adapt,webkit]border-after-color = border-block-end-color;\n[adapt,webkit]border-start-color = border-inline-start-color;\n[adapt,webkit]border-end-color = border-inline-end-color;\n[adapt,webkit]border-before-style = border-block-start-style;\n[adapt,webkit]border-after-style = border-block-end-style;\n[adapt,webkit]border-start-style = border-inline-start-style;\n[adapt,webkit]border-end-style = border-inline-end-style;\n[adapt,webkit]border-before-width = border-block-start-width;\n[adapt,webkit]border-after-width = border-block-end-width;\n[adapt,webkit]border-start-width = border-inline-start-width;\n[adapt,webkit]border-end-width = border-inline-end-width;\n[adapt,webkit]before = block-start;\n[adapt,webkit]after = block-end;\n[adapt,webkit]start = inline-start;\n[adapt,webkit]end = inline-end;\n\n`;\n\n// user-agent.xml\nexport const UserAgentXml = `\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:s=\"http://www.pyroxy.com/ns/shadow\">\n<head>\n<style><![CDATA[\n\n.footnote-content {\n  float: footnote;\n}\n\n.table-cell-container {\n  display: block;\n}\n\n]]></style>\n</head>\n<body>\n\n<s:template id=\"footnote\"><s:content/><s:include class=\"footnote-content\"/></s:template>\n\n<s:template id=\"table-cell\"><div data-vivliostyle-flow-root=\"true\" class=\"table-cell-container\"><s:content/></div></s:template>\n\n</body>\n</html>`;\n\n// user-agent-page.css\nexport const UserAgentPageCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\n:root {\n  hyphens: -epubx-expr(pref-hyphenate? \"auto\": \"manual\");\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-left\"] {\n  break-before: left;\n}\n:root[data-vivliostyle-epub-spine-properties~=\"page-spread-right\"] {\n  break-before: right;\n}\n\n@-adapt-footnote-area {\n  display: block;\n  margin-block-start: 0.5em;\n  margin-block-end: 0.5em;\n}\n\n@-adapt-footnote-area ::before {\n  display: block;\n  border-block-start-width: 1px;\n  border-block-start-style: solid;\n  border-block-start-color: black;\n  margin-block-end: 0.4em;\n  margin-inline-start: 0;\n  margin-inline-end: 60%;\n}\n\n/* default page master */\n@-epubx-page-master :background-host {\n  @-epubx-partition :layout-host {\n    -epubx-flow-from: body;\n    top: -epubx-expr(header.margin-bottom-edge);\n    bottom: -epubx-expr(page-height - footer.margin-top-edge);\n    left: 0px;\n    right: 0px;\n    column-width: 25em;\n  }\n  @-epubx-partition footer :oeb-page-foot {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-foot;\n    bottom: 0px;\n    left: 0px;\n    right: 0px;\n  }\n  @-epubx-partition header :oeb-page-head {\n    writing-mode: horizontal-tb;\n    -epubx-flow-from: oeb-page-head;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n  }\n}\n\n@page {\n  @top-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @top-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @top-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @top-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @left-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @left-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @left-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @right-top {\n    text-align: center;\n    vertical-align: top;\n  }\n  @right-middle {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @right-bottom {\n    text-align: center;\n    vertical-align: bottom;\n  }\n  @bottom-left-corner {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-left {\n    text-align: left;\n    vertical-align: middle;\n  }\n  @bottom-center {\n    text-align: center;\n    vertical-align: middle;\n  }\n  @bottom-right {\n    text-align: right;\n    vertical-align: middle;\n  }\n  @bottom-right-corner {\n    text-align: left;\n    vertical-align: middle;\n  }\n}\n\n@media print {\n  @page {\n    margin: 10%;\n  }\n}\n`;\n\n// user-agent-base.css\nexport const UserAgentBaseCss = `\n@namespace html \"http://www.w3.org/1999/xhtml\";\n\nhtml|html,\nhtml|address,\nhtml|blockquote,\nhtml|body,\nhtml|dd,\nhtml|div,\nhtml|dl,\nhtml|dt,\nhtml|fieldset,\nhtml|form,\nhtml|frame,\nhtml|frameset,\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|noframes,\nhtml|ol,\nhtml|p,\nhtml|ul,\nhtml|center,\nhtml|dir,\nhtml|hr,\nhtml|menu,\nhtml|pre,\nhtml|article,\nhtml|section,\nhtml|nav,\nhtml|aside,\nhtml|hgroup,\nhtml|footer,\nhtml|header,\nhtml|figure,\nhtml|figcaption,\nhtml|main {\n  display: block;\n  unicode-bidi: normal;\n}\nhtml|li {\n  display: list-item;\n}\nhtml|head {\n  display: none !important;\n}\nhtml|table {\n  display: table;\n}\nhtml|tr {\n  display: table-row;\n}\nhtml|thead {\n  display: table-header-group;\n  break-after: avoid;\n}\nhtml|tbody {\n  display: table-row-group;\n}\nhtml|tfoot {\n  display: table-footer-group;\n  break-before: avoid;\n}\nhtml|col {\n  display: table-column;\n}\nhtml|colgroup {\n  display: table-column-group;\n}\nhtml|td,\nhtml|th {\n  display: table-cell;\n}\nhtml|caption {\n  display: table-caption;\n  text-align: center;\n}\nhtml|th {\n  font-weight: bolder;\n  text-align: center;\n}\nhtml|*[hidden],\nhtml|link,\nhtml|style,\nhtml|script {\n  display: none;\n}\nhtml|h1 {\n  font-size: 2em;\n  margin-block-start: 0.67em;\n  margin-block-end: 0.67em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h2 {\n  font-size: 1.5em;\n  margin-block-start: 0.75em;\n  margin-block-end: 0.75em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h3 {\n  font-size: 1.17em;\n  margin-block-start: 0.83em;\n  margin-block-end: 0.83em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h4,\nhtml|p,\nhtml|blockquote,\nhtml|ul,\nhtml|fieldset,\nhtml|form,\nhtml|ol,\nhtml|dl,\nhtml|dir,\nhtml|menu,\nhtml|h5,\nhtml|h6 {\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0em;\n  margin-inline-end: 0em;\n}\nhtml|h5 {\n  font-size: 0.83em;\n}\nhtml|h6 {\n  font-size: 0.75em;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6,\nhtml|b,\nhtml|strong {\n  font-weight: bolder;\n}\nhtml|h1,\nhtml|h2,\nhtml|h3,\nhtml|h4,\nhtml|h5,\nhtml|h6 {\n  break-after: avoid;\n}\nhtml|blockquote {\n  margin-block-start: 0px;\n  margin-block-end: 0px;\n  margin-inline-start: 40px;\n  margin-inline-end: 40px;\n}\nhtml|i,\nhtml|cite,\nhtml|em,\nhtml|var,\nhtml|address {\n  font-style: italic;\n}\nhtml|pre,\nhtml|tt,\nhtml|code,\nhtml|kbd,\nhtml|samp {\n  font-family: monospace;\n}\nhtml|pre {\n  white-space: pre;\n}\nhtml|button,\nhtml|textarea,\nhtml|input,\nhtml|select {\n  display: inline-block;\n}\nhtml|big {\n  font-size: 1.17em;\n}\nhtml|small,\nhtml|sub,\nhtml|sup {\n  font-size: 0.83em;\n}\nhtml|sub {\n  vertical-align: sub;\n}\nhtml|sup {\n  vertical-align: super;\n}\nhtml|table {\n  border-spacing: 2px;\n}\nhtml|thead,\nhtml|tbody,\nhtml|tfoot {\n  vertical-align: middle;\n}\n/* for XHTML tables without tbody */\nhtml|table > html|tr {\n  vertical-align: middle;\n}\nhtml|td,\nhtml|th {\n  vertical-align: inherit;\n}\nhtml|s,\nhtml|strike,\nhtml|del {\n  text-decoration: line-through;\n}\nhtml|hr {\n  border: 1px inset;\n}\nhtml|ol,\nhtml|ul,\nhtml|dir,\nhtml|menu,\nhtml|dd {\n  margin: 0px;\n  margin-inline-start: 40px;\n}\nhtml|ol html|ul,\nhtml|ul html|ol,\nhtml|ul html|ul,\nhtml|ol html|ol {\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\nhtml|u,\nhtml|ins {\n  text-decoration: underline;\n}\nhtml|center {\n  text-align: center;\n}\nhtml|q:before {\n  content: open-quote;\n}\nhtml|q:after {\n  content: close-quote;\n}\n\nhtml|audio,\nhtml|video {\n  break-inside: avoid;\n}\n\nhtml|ruby {\n  display: ruby;\n}\nhtml|rp {\n  display: none;\n}\nhtml|rbc {\n  display: ruby-base-container;\n}\nhtml|rtc {\n  display: ruby-text-container;\n}\nhtml|rb {\n  display: ruby-base;\n  white-space: nowrap;\n}\nhtml|rt {\n  display: ruby-text;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-variant-east-asian: ruby;\n  text-emphasis: none;\n  white-space: nowrap;\n  line-height: 1;\n}\n\nhtml|rtc:lang(zh),\nhtml|rt:lang(zh) {\n  ruby-align: center;\n}\n\nhtml|rtc,\nhtml|rt {\n  font-size: 50%;\n}\n\nhtml|rtc:lang(zh-TW),\nhtml|rt:lang(zh-TW) {\n  font-size: 30%;\n}\n\nhtml|rtc > html|rt,\nhtml|rtc > html|rt:lang(zh-TW) {\n  font-size: 100%;\n}\n\n/* Bidi settings */\nhtml|bdo[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n}\nhtml|bdo[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: bidi-override;\n}\nhtml|*[dir=\"ltr\"] {\n  direction: ltr;\n  unicode-bidi: embed;\n}\nhtml|*[dir=\"rtl\"] {\n  direction: rtl;\n  unicode-bidi: embed;\n}\n\n/*------------------ epub-specific ---------------------*/\n\n@namespace epub \"http://www.idpf.org/2007/ops\";\n\nhtml|a[epub|type=\"noteref\"] {\n  font-size: 0.75em;\n  vertical-align: super;\n  line-height: 0.01;\n}\n\nhtml|a[epub|type=\"noteref\"]:href-epub-type(footnote) {\n  -adapt-template: url(user-agent.xml#footnote);\n  text-decoration: none;\n}\n\nhtml|aside[epub|type=\"footnote\"] {\n  display: none;\n}\n\nhtml|aside[epub|type=\"footnote\"]:footnote-content {\n  display: block;\n  margin: 0.25em;\n  font-size: 1.2em;\n  line-height: 1.2;\n}\n\nepub|trigger {\n  display: none;\n}\n\nepub|switch {\n  display: inline;\n}\n\nepub|default {\n  display: inline;\n}\n\nepub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] {\n  display: inline;\n}\n\nepub|case[required-namespace::supported] ~ epub|case {\n  display: none;\n}\n\nepub|case[required-namespace::supported] ~ epub|default {\n  display: none;\n}\n\n/*--------------- ncx and toc ----------------------*/\n\n@namespace ncx \"http://www.daisy.org/z3986/2005/ncx/\";\n\nncx|ncx {\n  display: block;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\nncx|content {\n  display: none;\n}\n\nbody > * {\n  -adapt-behavior: body-child;\n}\n\n[role=\"doc-toc\"],\n[role=\"directory\"],\nnav,\n.toc,\n#toc,\n#table-of-contents,\n#contents {\n  -adapt-behavior: toc-root;\n}\n\n[role=\"doc-toc\"] a,\n[role=\"directory\"] a,\nnav a,\n.toc a,\n#toc a,\nncx|navLabel {\n  -adapt-behavior: toc-node-anchor;\n}\n\n[role=\"doc-toc\"] li,\n[role=\"directory\"] li,\nnav li,\n.toc li,\n#toc li,\nncx|navPoint {\n  -adapt-behavior: toc-node;\n}\n\n[role=\"doc-toc\"] li > *:first-child,\n[role=\"directory\"] li > *:first-child,\nnav li > *:first-child,\n.toc li > *:first-child,\n#toc li > *:first-child {\n  -adapt-behavior: toc-node-first-child;\n}\n\n[role=\"doc-toc\"] ol,\n[role=\"directory\"] ol,\nnav ol,\n.toc ol,\n#toc ol,\n[role=\"doc-toc\"] ul,\n[role=\"directory\"] ul,\nnav ul,\n.toc ul,\n#toc ul,\nol[role=\"doc-toc\"],\nol[role=\"directory\"],\nol.toc,\nol#toc,\nul[role=\"doc-toc\"],\nul[role=\"directory\"],\nul.toc,\nul#toc {\n  -adapt-behavior: toc-container;\n}\n`;\n\n// text-polyfill.css\nexport const TextPolyfillCss = `\nviv-ts-open.viv-ts-auto > viv-ts-inner,\nviv-ts-open.viv-ts-trim > viv-ts-inner {\n  margin-inline-start: -0.5em;\n}\nviv-ts-close.viv-ts-auto > viv-ts-inner,\nviv-ts-close.viv-ts-trim > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-close.viv-hang-end > viv-ts-inner,\nviv-ts-close.viv-hang-last > viv-ts-inner {\n  letter-spacing: -1em;\n}\nviv-ts-open.viv-ts-auto::before,\nviv-ts-close.viv-ts-auto::after,\nviv-ts-close.viv-hang-end::after {\n  content: \" \";\n  font-family: Courier, monospace;\n  word-spacing: normal;\n  letter-spacing: -0.11em;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\nviv-ts-close.viv-hang-end:not(.viv-hang-hw)::after {\n  letter-spacing: 0.4em;\n}\nviv-ts-close.viv-hang-hw > viv-ts-inner {\n  letter-spacing: -0.5em;\n}\nviv-ts-open.viv-hang-first > viv-ts-inner {\n  display: inline-block;\n  line-height: 1;\n  inline-size: 1em;\n  text-indent: 0;\n  text-align: end;\n  text-align-last: end;\n  margin-inline-start: -1em;\n}\nviv-ts-thin-sp::after {\n  content: \" \";\n  font-family: Times, serif;\n  font-size: 66.6%;\n  word-spacing: normal;\n  letter-spacing: normal;\n  line-height: 0;\n  text-orientation: mixed;\n  visibility: hidden;\n}\n`;\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssParser - CSS Parser.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\n\n/**\n * User agent stylesheet base specificity.\n */\nexport const SPECIFICITY_USER_AGENT: number = 0;\n\n/**\n * User stylesheet base specificity.\n */\nexport const SPECIFICITY_USER: number = 0x1000000;\n\n/**\n * Author stylesheet (\"normal\" stylesheet) base specificity.\n */\nexport const SPECIFICITY_AUTHOR: number = 0x2000000;\n\n/**\n * Style attribute base specificity.\n */\nexport const SPECIFICITY_STYLE: number = 0x3000000;\n\n/**\n * Style attribute base specificity when !important is used.\n */\nexport const SPECIFICITY_STYLE_IMPORTANT: number = 0x4000000;\n\n/**\n * Author stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_AUTHOR_IMPORTANT: number = 0x5000000;\n\n/**\n * User stylesheet base specificity when !important is used.\n */\nexport const SPECIFICITY_USER_IMPORTANT: number = 0x6000000;\n\n/**\n * @enum {string}\n */\nexport enum StylesheetFlavor {\n  USER_AGENT = \"UA\",\n  USER = \"User\",\n  AUTHOR = \"Author\",\n}\n\nexport class ParserHandler implements CssTokenizer.TokenizerHandler {\n  flavor: StylesheetFlavor;\n\n  constructor(public scope: Exprs.LexicalScope) {\n    this.flavor = StylesheetFlavor.AUTHOR;\n  }\n\n  getCurrentToken(): CssTokenizer.Token {\n    return null;\n  }\n\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n\n  error(mnemonics: string, token: CssTokenizer.Token): void {}\n\n  startStylesheet(flavor: StylesheetFlavor): void {\n    this.flavor = flavor;\n  }\n\n  tagSelector(ns: string | null, name: string | null): void {}\n\n  classSelector(name: string): void {}\n\n  pseudoclassSelector(name: string, params: (number | string)[]): void {}\n\n  pseudoelementSelector(name: string, params: (number | string)[]): void {}\n\n  idSelector(id: string): void {}\n\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {}\n\n  descendantSelector(): void {}\n\n  childSelector(): void {}\n\n  adjacentSiblingSelector(): void {}\n\n  followingSiblingSelector(): void {}\n\n  nextSelector(): void {}\n\n  startSelectorRule(): void {}\n\n  startFontFaceRule(): void {}\n\n  startFootnoteRule(pseudoelem: string | null): void {}\n\n  startViewportRule(): void {}\n\n  startDefineRule(): void {}\n\n  startRegionRule(): void {}\n\n  startPageRule(): void {}\n\n  startPageMarginBoxRule(name: string): void {}\n\n  startWhenRule(expr: Css.Expr): void {}\n\n  startMediaRule(expr: Css.Expr): void {\n    this.startWhenRule(expr);\n  }\n\n  startFlowRule(flowName: string): void {}\n\n  startPageTemplateRule(): void {}\n\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {}\n\n  startRuleBody(): void {}\n\n  property(name: string, value: Css.Val, important: boolean): void {}\n\n  endRule(): void {}\n\n  /**\n   * @param funcName The name of the function taking a selector list as an\n   *     argument\n   */\n  startFuncWithSelector(funcName: string): void {}\n\n  endFuncWithSelector(): void {}\n\n  getImportantSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER_IMPORTANT;\n      default:\n        return SPECIFICITY_AUTHOR_IMPORTANT;\n    }\n  }\n\n  getBaseSpecificity(): number {\n    switch (this.flavor) {\n      case StylesheetFlavor.USER_AGENT:\n        return SPECIFICITY_USER_AGENT;\n      case StylesheetFlavor.USER:\n        return SPECIFICITY_USER;\n      default:\n        return SPECIFICITY_AUTHOR;\n    }\n  }\n}\n\nexport class DispatchParserHandler extends ParserHandler {\n  stack: ParserHandler[] = [];\n  tokenizer: CssTokenizer.Tokenizer = null;\n  slave: ParserHandler = null;\n\n  constructor() {\n    super(null);\n  }\n\n  pushHandler(slave: ParserHandler): void {\n    this.stack.push(this.slave);\n    this.slave = slave;\n  }\n\n  popHandler(): void {\n    this.slave = this.stack.pop();\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    if (this.tokenizer) {\n      return this.tokenizer.token();\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.slave.getScope();\n  }\n\n  /**\n   * Forwards call to slave.\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.slave.error(mnemonics, token);\n  }\n\n  /**\n   * Called by a slave.\n   */\n  errorMsg(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(mnemonics);\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    if (this.stack.length > 0) {\n      // This can occur as a result of an error\n      this.slave = this.stack[0];\n      this.stack = [];\n    }\n    this.slave.startStylesheet(flavor);\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    this.slave.tagSelector(ns, name);\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    this.slave.classSelector(name);\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoclassSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    this.slave.pseudoelementSelector(name, params);\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.slave.idSelector(id);\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.slave.attributeSelector(ns, name, op, value);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    this.slave.descendantSelector();\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    this.slave.childSelector();\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    this.slave.adjacentSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    this.slave.followingSiblingSelector();\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.slave.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.slave.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.slave.startFontFaceRule();\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.slave.startFootnoteRule(pseudoelem);\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.slave.startViewportRule();\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.slave.startDefineRule();\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.slave.startRegionRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.slave.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    this.slave.startPageMarginBoxRule(name);\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.slave.startWhenRule(expr);\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.slave.startFlowRule(flowName);\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.slave.startPageTemplateRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPageMasterRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.slave.startPartitionGroupRule(name, pseudoName, classes);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.slave.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.slave.property(name, value, important);\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    this.slave.endRule();\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.slave.startFuncWithSelector(funcName);\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.slave.endFuncWithSelector();\n  }\n}\n\nexport class SkippingParserHandler extends ParserHandler {\n  depth: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public owner: DispatchParserHandler,\n    public readonly topLevel,\n  ) {\n    super(scope);\n    if (owner) {\n      this.flavor = owner.flavor;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getCurrentToken(): CssTokenizer.Token {\n    return this.owner.getCurrentToken();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    this.owner.errorMsg(mnemonics, token);\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.depth++;\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    if (--this.depth == 0 && !this.topLevel) {\n      this.owner.popHandler();\n    }\n  }\n}\n\nexport class SlaveParserHandler extends SkippingParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: DispatchParserHandler,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n  }\n\n  report(message: string): void {\n    this.error(message, this.getCurrentToken());\n  }\n\n  reportAndSkip(message: string): void {\n    this.report(message);\n    this.owner.pushHandler(\n      new SkippingParserHandler(this.scope, this.owner, false),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FONT_FACE\");\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FOOTNOTE\");\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_VIEWPORT\");\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_DEFINE\");\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_REGION\");\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE\");\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_WHEN\");\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_FLOW\");\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_TEMPLATE\");\n  }\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PAGE_MASTER\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION\");\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_PARTITION_GROUP\");\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_END_SELECTOR_FUNC\");\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.error(\"E_CSS_UNEXPECTED_PROPERTY\", this.getCurrentToken());\n  }\n}\n\nexport const actionsBase: Action[] = [];\n\nexport const actionsStyleAttribute: Action[] = [];\n\nexport const actionsSelector: Action[] = [];\n\nexport const actionsSelectorInFunc: Action[] = [];\n\nexport const actionsSelectorCont: Action[] = [];\n\nexport const actionsSelectorStart: Action[] = [];\n\nexport const actionsPropVal: Action[] = [];\n\nexport const actionsExprVal: Action[] = [];\n\nexport const actionsExprOp: Action[] = [];\n\nexport const actionsError: Action[] = [];\n\nexport const actionsErrorDecl: Action[] = [];\n\nexport const actionsErrorSelector: Action[] = [];\n\nexport const priority: number[] = [];\n\n/**\n * @enum {number}\n */\nexport enum Action {\n  SELECTOR_NAME_1 = 1,\n  SELECTOR_NAME,\n  SELECTOR_ANY_1,\n  SELECTOR_ANY,\n  SELECTOR_ID_1,\n  SELECTOR_ID,\n  SELECTOR_CLASS_1,\n  SELECTOR_CLASS,\n  SELECTOR_ATTR_1,\n  SELECTOR_ATTR,\n  SELECTOR_CHILD,\n  SELECTOR_SIBLING,\n  SELECTOR_BODY,\n  SELECTOR_PSEUDOCLASS,\n  VAL_IDENT,\n  VAL_HASH,\n  VAL_NUM,\n  VAL_INT,\n  VAL_NUMERIC,\n  VAL_STR,\n  VAL_URL,\n  VAL_COMMA,\n  VAL_SLASH,\n  VAL_FUNC,\n  VAL_C_PAR,\n  VAL_END,\n  RULE_END,\n  IDENT,\n  SELECTOR_START,\n  AT,\n  EXPR_IDENT,\n  EXPR_NUM,\n  EXPR_NUMERIC,\n  EXPR_STR,\n  EXPR_PARAM,\n  EXPR_PREFIX,\n  EXPR_INFIX,\n  EXPR_FUNC,\n  EXPR_C_PAR,\n  EXPR_O_PAR,\n  SELECTOR_NEXT,\n  SELECTOR_PSEUDOELEM,\n  EXPR_O_BRC,\n  VAL_FINISH,\n  EXPR_INFIX_NAME,\n  PROP,\n  VAL_BANG,\n  VAL_BRC,\n  EXPR_SEMICOL,\n  ERROR_PUSH,\n  ERROR_POP,\n  ERROR_POP_DECL,\n  ERROR_SEMICOL,\n  VAL_PLUS,\n  SELECTOR_PSEUDOCLASS_1,\n  SELECTOR_FOLLOWING_SIBLING,\n  VAL_URANGE,\n  DONE = 200,\n}\n\nexport const OP_MEDIA_AND: number = CssTokenizer.TokenType.LAST + 1;\nexport const OP_MEDIA_OR: number = CssTokenizer.TokenType.LAST + 2;\nexport const OP_MEDIA_NOT: number = CssTokenizer.TokenType.LAST + 3;\n\n(() => {\n  actionsBase[CssTokenizer.TokenType.IDENT] = Action.IDENT;\n  actionsBase[CssTokenizer.TokenType.STAR] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.HASH] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.COLON] = Action.SELECTOR_START;\n  actionsBase[CssTokenizer.TokenType.AT] = Action.AT;\n  actionsBase[CssTokenizer.TokenType.C_BRC] = Action.RULE_END;\n  actionsBase[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsStyleAttribute[CssTokenizer.TokenType.IDENT] = Action.PROP;\n  actionsStyleAttribute[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsSelectorStart[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorStart[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorStart[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorStart[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorStart[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorStart[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n\n  actionsSelector[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelector[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelector[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelector[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelector[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelector[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelector[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsSelector[CssTokenizer.TokenType.COLON] = Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelector[CssTokenizer.TokenType.COL_COL] = Action.SELECTOR_PSEUDOELEM;\n  actionsSelector[CssTokenizer.TokenType.COMMA] = Action.SELECTOR_NEXT;\n  actionsSelectorInFunc[CssTokenizer.TokenType.GT] = Action.SELECTOR_CHILD;\n  actionsSelectorInFunc[CssTokenizer.TokenType.PLUS] = Action.SELECTOR_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.TILDE] =\n    Action.SELECTOR_FOLLOWING_SIBLING;\n  actionsSelectorInFunc[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR_1;\n  actionsSelectorInFunc[CssTokenizer.TokenType.C_PAR] = Action.DONE;\n  actionsSelectorInFunc[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS_1;\n  actionsSelectorCont[CssTokenizer.TokenType.IDENT] = Action.SELECTOR_NAME;\n  actionsSelectorCont[CssTokenizer.TokenType.STAR] = Action.SELECTOR_ANY;\n  actionsSelectorCont[CssTokenizer.TokenType.HASH] = Action.SELECTOR_ID;\n  actionsSelectorCont[CssTokenizer.TokenType.CLASS] = Action.SELECTOR_CLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COLON] =\n    Action.SELECTOR_PSEUDOCLASS;\n  actionsSelectorCont[CssTokenizer.TokenType.COL_COL] =\n    Action.SELECTOR_PSEUDOELEM;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRK] = Action.SELECTOR_ATTR;\n  actionsSelectorCont[CssTokenizer.TokenType.O_BRC] = Action.SELECTOR_BODY;\n  actionsPropVal[CssTokenizer.TokenType.IDENT] = Action.VAL_IDENT;\n  actionsPropVal[CssTokenizer.TokenType.HASH] = Action.VAL_HASH;\n  actionsPropVal[CssTokenizer.TokenType.NUM] = Action.VAL_NUM;\n  actionsPropVal[CssTokenizer.TokenType.INT] = Action.VAL_INT;\n  actionsPropVal[CssTokenizer.TokenType.NUMERIC] = Action.VAL_NUMERIC;\n  actionsPropVal[CssTokenizer.TokenType.STR] = Action.VAL_STR;\n  actionsPropVal[CssTokenizer.TokenType.URL] = Action.VAL_URL;\n  actionsPropVal[CssTokenizer.TokenType.URANGE] = Action.VAL_URANGE;\n  actionsPropVal[CssTokenizer.TokenType.COMMA] = Action.VAL_COMMA;\n  actionsPropVal[CssTokenizer.TokenType.SLASH] = Action.VAL_SLASH;\n  actionsPropVal[CssTokenizer.TokenType.FUNC] = Action.VAL_FUNC;\n  actionsPropVal[CssTokenizer.TokenType.C_PAR] = Action.VAL_C_PAR;\n  actionsPropVal[CssTokenizer.TokenType.SEMICOL] = Action.VAL_END;\n  actionsPropVal[CssTokenizer.TokenType.C_BRC] = Action.VAL_BRC;\n  actionsPropVal[CssTokenizer.TokenType.BANG] = Action.VAL_BANG;\n  actionsPropVal[CssTokenizer.TokenType.PLUS] = Action.VAL_PLUS;\n  actionsPropVal[CssTokenizer.TokenType.EOF] = Action.VAL_FINISH;\n  actionsExprVal[CssTokenizer.TokenType.IDENT] = Action.EXPR_IDENT;\n  actionsExprVal[CssTokenizer.TokenType.NUM] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.INT] = Action.EXPR_NUM;\n  actionsExprVal[CssTokenizer.TokenType.NUMERIC] = Action.EXPR_NUMERIC;\n  actionsExprVal[CssTokenizer.TokenType.STR] = Action.EXPR_STR;\n  actionsExprVal[CssTokenizer.TokenType.O_PAR] = Action.EXPR_O_PAR;\n  actionsExprVal[CssTokenizer.TokenType.FUNC] = Action.EXPR_FUNC;\n  actionsExprVal[CssTokenizer.TokenType.BANG] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.MINUS] = Action.EXPR_PREFIX;\n  actionsExprVal[CssTokenizer.TokenType.DOLLAR] = Action.EXPR_PARAM;\n  actionsExprOp[CssTokenizer.TokenType.IDENT] = Action.EXPR_INFIX_NAME;\n  actionsExprOp[CssTokenizer.TokenType.COMMA] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.GT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.LT_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.EQ_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BANG_EQ] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.AMP_AMP] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.BAR_BAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PLUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.MINUS] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.SLASH] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.PERCENT] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.STAR] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.COLON] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.QMARK] = Action.EXPR_INFIX;\n  actionsExprOp[CssTokenizer.TokenType.C_PAR] = Action.EXPR_C_PAR;\n  actionsExprOp[CssTokenizer.TokenType.O_BRC] = Action.EXPR_O_BRC;\n  actionsExprOp[CssTokenizer.TokenType.SEMICOL] = Action.EXPR_SEMICOL;\n  actionsError[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsError[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsError[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsError[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorDecl[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP_DECL;\n  actionsErrorDecl[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorDecl[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  actionsErrorDecl[CssTokenizer.TokenType.SEMICOL] = Action.ERROR_SEMICOL;\n  actionsErrorSelector[CssTokenizer.TokenType.EOF] = Action.DONE;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRC] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRC] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_BRK] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_BRK] = Action.ERROR_POP;\n  actionsErrorSelector[CssTokenizer.TokenType.O_PAR] = Action.ERROR_PUSH;\n  actionsErrorSelector[CssTokenizer.TokenType.C_PAR] = Action.ERROR_POP;\n  priority[CssTokenizer.TokenType.C_PAR] = 0;\n  priority[CssTokenizer.TokenType.COMMA] = 0;\n  priority[CssTokenizer.TokenType.QMARK] = 1;\n  priority[CssTokenizer.TokenType.COLON] = 1;\n  priority[CssTokenizer.TokenType.AMP_AMP] = 2;\n  priority[CssTokenizer.TokenType.BAR_BAR] = 2;\n  priority[CssTokenizer.TokenType.LT] = 3;\n  priority[CssTokenizer.TokenType.GT] = 3;\n  priority[CssTokenizer.TokenType.LT_EQ] = 3;\n  priority[CssTokenizer.TokenType.GT_EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ] = 3;\n  priority[CssTokenizer.TokenType.EQ_EQ] = 3;\n  priority[CssTokenizer.TokenType.BANG_EQ] = 3;\n  priority[CssTokenizer.TokenType.PLUS] = 4;\n  priority[CssTokenizer.TokenType.MINUS] = 4;\n  priority[CssTokenizer.TokenType.STAR] = 5;\n  priority[CssTokenizer.TokenType.SLASH] = 5;\n  priority[CssTokenizer.TokenType.PERCENT] = 5;\n  priority[CssTokenizer.TokenType.EOF] = 6;\n  priority[OP_MEDIA_AND] = 2;\n  priority[OP_MEDIA_OR] = 2;\n})();\n\n/**\n * @enum {number}\n */\nexport enum ExprContext {\n  PROP,\n  WHEN,\n  MEDIA,\n  IMPORT,\n  SUPPORTS,\n}\n\nexport class Parser {\n  valStack: any[] = [];\n  namespacePrefixToURI: { [key: string]: string } = {};\n  defaultNamespaceURI: string | null = null;\n  propName: string | null = null;\n  propImportant: boolean = false;\n  exprContext: ExprContext;\n  result: Css.Val = null;\n  importReady: boolean = false;\n  importURL: string | null = null;\n  importCondition: Css.Expr = null;\n  errorBrackets: number[] = [];\n  ruleStack: string[] = [];\n  regionRule: boolean = false;\n  pageRule: boolean = false;\n\n  constructor(\n    public actions: Action[],\n    public tokenizer: CssTokenizer.Tokenizer,\n    public readonly handler: ParserHandler,\n    public baseURL: string,\n  ) {\n    this.exprContext = ExprContext.MEDIA;\n  }\n\n  extractVals(sep: string, index: number): Css.Val[] {\n    const arr: Css.Val[] = [];\n    const valStack = this.valStack;\n    while (index < valStack.length) {\n      arr.push(valStack[index++] as Css.Val);\n      if (index === valStack.length) {\n        break;\n      }\n      if (valStack[index++] !== sep) {\n        throw new Error(\"Unexpected state\");\n      }\n      if (index === valStack.length) {\n        // keep last comma in `var(--b , )`\n        arr.push(Css.empty);\n      }\n    }\n    return arr;\n  }\n\n  valStackReduce(sep: string, token: CssTokenizer.Token): Css.Val {\n    const valStack = this.valStack;\n    let index = valStack.length;\n    let v;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && typeof v != \"string\");\n    let count = valStack.length - (index + 1);\n    if (count > 1) {\n      valStack.splice(\n        index + 1,\n        count,\n        new Css.SpaceList(valStack.slice(index + 1, valStack.length)),\n      );\n    }\n    if (sep == \",\") {\n      return null;\n    }\n    index++;\n    do {\n      v = valStack[--index];\n    } while (typeof v != \"undefined\" && (typeof v != \"string\" || v == \",\"));\n    count = valStack.length - (index + 1);\n    if (v == \"(\") {\n      if (sep != \")\") {\n        this.handler.error(\"E_CSS_MISMATCHED_C_PAR\", token);\n        this.actions = actionsErrorDecl;\n        // return null;\n      }\n      const func = new Css.Func(\n        valStack[index - 1] as string,\n        this.extractVals(\",\", index + 1),\n      );\n      valStack.splice(index - 1, count + 2, func);\n      return func;\n    }\n    if (sep != \";\" || index >= 0) {\n      this.handler.error(\"E_CSS_UNEXPECTED_VAL_END\", token);\n      this.actions = actionsErrorDecl;\n      return null;\n    }\n    if (count > 1) {\n      return new Css.CommaList(this.extractVals(\",\", index + 1));\n    }\n    const val = valStack[0];\n    if (val instanceof Css.Val) {\n      return val;\n    } else if (!val) {\n      return Css.empty;\n    } else {\n      // custom property value can be arbitrary token e.g. \",\"\n      return new Css.AnyToken(val.toString());\n    }\n  }\n\n  exprError(mnemonics: string, token: CssTokenizer.Token) {\n    this.actions = this.propName ? actionsErrorDecl : actionsError;\n    // this.handler.error(mnemonics, token);\n    // (should not throw error by expression syntax errors)\n    Logging.logger.warn(mnemonics, token);\n  }\n\n  exprStackReduce(op: number, token: CssTokenizer.Token): boolean {\n    const valStack = this.valStack;\n    const handler = this.handler;\n    let val = valStack.pop() as Exprs.Val;\n    let val2: Exprs.Val;\n    while (true) {\n      let tok = valStack.pop();\n      if (op == CssTokenizer.TokenType.C_PAR) {\n        const args: Exprs.Val[] = [val];\n        while (tok == CssTokenizer.TokenType.COMMA) {\n          args.unshift(valStack.pop());\n          tok = valStack.pop();\n        }\n        if (typeof tok == \"string\") {\n          if (tok == \"{\") {\n            // reached CSS portion of the stack\n            while (args.length >= 2) {\n              const e1 = args.shift();\n              const e2 = args.shift();\n              const er = new Exprs.Comma(handler.getScope(), e1, e2);\n              args.unshift(er);\n            }\n            valStack.push(new Css.Expr(args[0]));\n            return true;\n          } else if (tok == \"(\") {\n            // call\n            const name2 = valStack.pop() as string;\n            const name1 = valStack.pop() as string | null;\n            val = new Exprs.Call(\n              handler.getScope(),\n              Exprs.makeQualifiedName(name1, name2),\n              args,\n            );\n            op = CssTokenizer.TokenType.EOF;\n            continue;\n          }\n        }\n        if (tok == CssTokenizer.TokenType.O_PAR) {\n          if (val.isMediaName()) {\n            val = new Exprs.MediaTest(\n              handler.getScope(),\n              val as Exprs.MediaName,\n              null,\n            );\n          }\n          op = CssTokenizer.TokenType.EOF;\n          continue;\n        }\n      } else {\n        if (typeof tok == \"string\") {\n          // reached CSS portion of the stack or a call\n          valStack.push(tok);\n          break;\n        }\n      }\n      if ((tok as number) < 0) {\n        // prefix\n        if (tok == -CssTokenizer.TokenType.BANG) {\n          val = new Exprs.Not(handler.getScope(), val);\n        } else if (tok == -CssTokenizer.TokenType.MINUS) {\n          val = new Exprs.Negate(handler.getScope(), val);\n        } else if (tok == -OP_MEDIA_NOT) {\n          // `not` operator in `@media` or `@supports`\n          val = new Exprs.NotMedia(handler.getScope(), val);\n        } else {\n          this.exprError(\"F_UNEXPECTED_STATE\", token);\n          return false;\n        }\n      } else {\n        // infix\n        if (priority[op] > priority[tok as number]) {\n          valStack.push(tok);\n          break;\n        }\n        val2 = valStack.pop() as Exprs.Val;\n        switch (tok) {\n          case CssTokenizer.TokenType.AMP_AMP:\n            val = new Exprs.And(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_AND:\n            // `and` operator in `@media` or `@supports`\n            val = new Exprs.AndMedia(handler.getScope(), val2, val);\n            break;\n          case OP_MEDIA_OR:\n            // `or` operator in `@media` or `@supports`\n            val = new Exprs.OrMedia(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            val = new Exprs.Or(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT:\n            val = new Exprs.Lt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT:\n            val = new Exprs.Gt(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.LT_EQ:\n            val = new Exprs.Le(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.GT_EQ:\n            val = new Exprs.Ge(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.EQ:\n          case CssTokenizer.TokenType.EQ_EQ:\n            val = new Exprs.Eq(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.BANG_EQ:\n            val = new Exprs.Ne(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            val = new Exprs.Add(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.MINUS:\n            val = new Exprs.Subtract(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.STAR:\n            val = new Exprs.Multiply(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            val = new Exprs.Divide(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.PERCENT:\n            val = new Exprs.Modulo(handler.getScope(), val2, val);\n            break;\n          case CssTokenizer.TokenType.COLON:\n            if (valStack.length > 1) {\n              switch (valStack[valStack.length - 1]) {\n                case CssTokenizer.TokenType.QMARK:\n                  valStack.pop();\n                  val = new Exprs.Cond(\n                    handler.getScope(),\n                    valStack.pop() as Exprs.Val,\n                    val2,\n                    val,\n                  );\n                  break;\n                case CssTokenizer.TokenType.O_PAR:\n                  if (val2.isMediaName()) {\n                    val = new Exprs.MediaTest(\n                      handler.getScope(),\n                      val2 as Exprs.MediaName,\n                      val,\n                    );\n                  } else {\n                    this.exprError(\"E_CSS_MEDIA_TEST\", token);\n                    return false;\n                  }\n                  break;\n              }\n            } else {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (op != CssTokenizer.TokenType.COLON) {\n              this.exprError(\"E_CSS_EXPR_COND\", token);\n              return false;\n            }\n\n          // fall through\n          case CssTokenizer.TokenType.O_PAR:\n            // don't reduce\n            valStack.push(val2);\n            valStack.push(tok);\n            valStack.push(val);\n            return false;\n          default:\n            this.exprError(\"F_UNEXPECTED_STATE\", token);\n            return false;\n        }\n      }\n    }\n    valStack.push(val);\n    return false;\n  }\n\n  readSupportsTest(token: CssTokenizer.Token): Exprs.SupportsTest {\n    // `@supports (prop-name:...)`\n    // `@supports func-name(...)`\n    const isFunc = token.type === CssTokenizer.TokenType.FUNC;\n    const tokenizer = this.tokenizer;\n    let startPosition: number;\n    let name: string;\n    if (isFunc) {\n      name = token.text;\n      startPosition = token.position + name.length + 1;\n    } else if (token.type === CssTokenizer.TokenType.O_PAR) {\n      const token1 = tokenizer.nthToken(1);\n      const token2 = tokenizer.nthToken(2);\n      if (\n        token1.type === CssTokenizer.TokenType.IDENT &&\n        token2.type === CssTokenizer.TokenType.COLON\n      ) {\n        tokenizer.consume();\n        tokenizer.consume();\n        name = token1.text;\n        startPosition = token2.position + 1;\n      } else if (\n        token1.type === CssTokenizer.TokenType.O_PAR ||\n        token1.type === CssTokenizer.TokenType.FUNC ||\n        (token1.type === CssTokenizer.TokenType.IDENT &&\n          token1.text.toLowerCase() === \"not\" &&\n          (token2.type === CssTokenizer.TokenType.O_PAR ||\n            token2.type === CssTokenizer.TokenType.FUNC))\n      ) {\n        return null;\n      } else {\n        // Unknown `(...)` syntax, read until `)` and evaluate to false\n        startPosition = token.position + 1;\n      }\n    } else {\n      return null;\n    }\n    let parLevel = 0;\n    let tokenN: CssTokenizer.Token;\n    while (parLevel >= 0) {\n      tokenizer.consume();\n      tokenN = tokenizer.token();\n      switch (tokenN.type) {\n        case CssTokenizer.TokenType.C_PAR:\n          parLevel--;\n          break;\n        case CssTokenizer.TokenType.O_PAR:\n        case CssTokenizer.TokenType.FUNC:\n          parLevel++;\n          break;\n        case CssTokenizer.TokenType.INVALID:\n        case CssTokenizer.TokenType.EOF:\n          this.exprError(\"E_CSS_UNEXPECTED_EOF\", tokenN);\n          return null;\n      }\n    }\n    tokenizer.consume();\n    const endPosition = tokenN.position;\n    const value = tokenizer.input.substring(startPosition, endPosition).trim();\n    const supportsTest = new Exprs.SupportsTest(\n      this.handler.getScope(),\n      name,\n      value,\n      isFunc,\n    );\n    return supportsTest;\n  }\n\n  readPseudoParams(): (number | string)[] {\n    const arr = [];\n    while (true) {\n      const token = this.tokenizer.token();\n      switch (token.type) {\n        case CssTokenizer.TokenType.IDENT:\n          arr.push(token.text);\n          break;\n        case CssTokenizer.TokenType.PLUS:\n          arr.push(\"+\");\n          break;\n        case CssTokenizer.TokenType.NUM:\n        case CssTokenizer.TokenType.INT:\n          arr.push(token.num);\n          break;\n        default:\n          return arr;\n      }\n      this.tokenizer.consume();\n    }\n  }\n\n  /**\n   * Read `an+b` argument of pseudoclasses. Roughly based on the algorithm at\n   * https://drafts.csswg.org/css-syntax/#the-anb-type\n   */\n  private readNthPseudoParams(): number[] | null {\n    let hasLeadingPlus = false;\n    let token = this.tokenizer.token();\n    if (token.type === CssTokenizer.TokenType.PLUS) {\n      // '+'\n      hasLeadingPlus = true;\n      this.tokenizer.consume();\n      token = this.tokenizer.token();\n    } else if (\n      token.type === CssTokenizer.TokenType.IDENT &&\n      (token.text === \"even\" || token.text === \"odd\")\n    ) {\n      // 'even' or 'odd'\n      this.tokenizer.consume();\n      return [2, token.text === \"odd\" ? 1 : 0];\n    }\n    switch (token.type) {\n      case CssTokenizer.TokenType.NUMERIC:\n        if (hasLeadingPlus && token.num < 0) {\n          // reject '+-an'\n          return null;\n        }\n\n      // FALLTHROUGH\n      case CssTokenizer.TokenType.IDENT:\n        if (hasLeadingPlus && token.text.charAt(0) === \"-\") {\n          // reject '+-n'\n          return null;\n        }\n        if (token.text === \"n\" || token.text === \"-n\") {\n          // 'an', 'an +b', 'an -b', 'n', 'n +b', 'n -b', '-n', '-n +b' '-n -b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an'\n            return null;\n          }\n          let a = token.text === \"-n\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          let b = 0;\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          const hasMinusSign = token.type === CssTokenizer.TokenType.MINUS;\n          const hasSign =\n            token.type === CssTokenizer.TokenType.PLUS || hasMinusSign;\n          if (hasSign) {\n            // 'an +b', 'an - b'\n            this.tokenizer.consume();\n            token = this.tokenizer.token();\n          }\n          if (token.type === CssTokenizer.TokenType.INT) {\n            b = token.num;\n\n            if (1 / b === 1 / -0) {\n              // negative zero: 'an -0'\n              b = 0;\n              if (hasSign) {\n                return null; // reject 'an + -0', 'an - -0'\n              }\n            } else if (b < 0) {\n              // negative: 'an -b'\n              if (hasSign) {\n                return null; // reject 'an + -b', 'an - -b'\n              }\n            } else if (b >= 0) {\n              // positive or positive zero: 'an +b'\n              if (!hasSign) {\n                return null;\n              }\n            }\n            this.tokenizer.consume();\n          } else if (hasSign) {\n            // reject 'an + (non-integer)'\n            return null;\n          }\n          return [a, hasMinusSign && b > 0 ? -b : b];\n        } else if (token.text === \"n-\" || token.text === \"-n-\") {\n          // 'an- b', '-n- b'\n          if (hasLeadingPlus && token.precededBySpace) {\n            // reject '+ an- b'\n            return null;\n          }\n          let a = token.text === \"-n-\" ? -1 : 1;\n          if (token.type === CssTokenizer.TokenType.NUMERIC) {\n            a = token.num;\n          }\n          this.tokenizer.consume();\n          token = this.tokenizer.token();\n          if (token.type === CssTokenizer.TokenType.INT) {\n            if (token.num < 0 || 1 / token.num === 1 / -0) {\n              // reject 'an- -b', 'an- -0'\n              return null;\n            } else {\n              this.tokenizer.consume();\n              return [a, token.num];\n            }\n          }\n        } else {\n          let r = token.text.match(/^n(-[0-9]+)$/);\n          if (r) {\n            // 'n-b', 'an-b'\n            if (hasLeadingPlus && token.precededBySpace) {\n              // reject '+ an-b'\n              return null;\n            }\n            this.tokenizer.consume();\n            return [\n              token.type === CssTokenizer.TokenType.NUMERIC ? token.num : 1,\n              parseInt(r[1], 10),\n            ];\n          }\n          r = token.text.match(/^-n(-[0-9]+)$/);\n\n          // '-n-b'\n          if (r) {\n            this.tokenizer.consume();\n            return [-1, parseInt(r[1], 10)];\n          }\n        }\n        return null;\n      case CssTokenizer.TokenType.INT:\n        if (hasLeadingPlus && (token.precededBySpace || token.num < 0)) {\n          return null;\n        }\n        this.tokenizer.consume();\n        return [0, token.num];\n    }\n    return null;\n  }\n\n  makeCondition(classes: string | null, condition: Exprs.Val): Css.Expr {\n    const scope = this.handler.getScope();\n    if (!scope) {\n      return null;\n    }\n    condition = condition || scope._true;\n    if (classes) {\n      const classList = classes.split(/\\s+/);\n      for (const className of classList) {\n        switch (className) {\n          case \"vertical\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-horizontal\")),\n            );\n            break;\n          case \"horizontal\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-horizontal\"),\n            );\n            break;\n          case \"day\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Not(scope, new Exprs.Named(scope, \"pref-night-mode\")),\n            );\n            break;\n          case \"night\":\n            condition = Exprs.and(\n              scope,\n              condition,\n              new Exprs.Named(scope, \"pref-night-mode\"),\n            );\n            break;\n          default:\n            condition = scope._false;\n        }\n      }\n    }\n    if (condition === scope._true) {\n      return null;\n    }\n    return new Css.Expr(condition);\n  }\n\n  isInsidePropertyOnlyRule(): boolean {\n    switch (this.ruleStack[this.ruleStack.length - 1]) {\n      case \"[selector]\":\n      case \"font-face\":\n      case \"-epubx-flow\":\n      case \"-epubx-viewport\":\n      case \"-epubx-define\":\n      case \"-adapt-footnote-area\":\n        return true;\n    }\n    return false;\n  }\n\n  runParser(\n    count: number,\n    parsingValue: boolean,\n    parsingStyleAttr: boolean,\n    parsingMediaQuery: boolean,\n    parsingFunctionParam: boolean,\n  ): boolean {\n    const handler = this.handler;\n    const tokenizer = this.tokenizer;\n    const valStack = this.valStack;\n    let token: CssTokenizer.Token;\n    let token1: CssTokenizer.Token;\n    let ns: string | null;\n    let text: string | null;\n    let num: number;\n    let val: Css.Val;\n    let params: (number | string)[];\n    if (parsingMediaQuery) {\n      this.exprContext = ExprContext.MEDIA;\n      this.valStack.push(\"{\");\n    }\n    parserLoop: for (; count > 0; --count) {\n      token = tokenizer.token();\n\n      // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n      if (\n        this.propName &&\n        this.errorBrackets.length > 0 &&\n        (token.type === this.errorBrackets[this.errorBrackets.length - 1] ||\n          token.type === CssTokenizer.TokenType.SEMICOL ||\n          token.type === CssTokenizer.TokenType.BANG)\n      ) {\n        if (token.type === this.errorBrackets[this.errorBrackets.length - 1]) {\n          this.errorBrackets.pop();\n        }\n        valStack.push(new Css.AnyToken(token.toString()));\n        tokenizer.consume();\n        continue;\n      }\n\n      switch (this.actions[token.type]) {\n        case Action.IDENT:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            if (this.isInsidePropertyOnlyRule()) {\n              handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsSelectorStart;\n              handler.startSelectorRule();\n            }\n            continue;\n          }\n          token1 = tokenizer.nthToken(2);\n          if (\n            token1.precededBySpace ||\n            (token1.type != CssTokenizer.TokenType.IDENT &&\n              token1.type != CssTokenizer.TokenType.FUNC)\n          ) {\n            // cannot be a selector\n          } else {\n            // can be either a selector or a property assignment\n            tokenizer.mark();\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.PROP:\n          // figure out if this is a property assignment or selector\n          if (tokenizer.nthToken(1).type != CssTokenizer.TokenType.COLON) {\n            // cannot be property assignment\n            this.actions = actionsErrorDecl;\n            handler.error(\"E_CSS_COLON_EXPECTED\", tokenizer.nthToken(1));\n            continue;\n          }\n          this.propName = token.text;\n          this.propImportant = false;\n          tokenizer.consume();\n          tokenizer.consume();\n          this.actions = actionsPropVal;\n          valStack.splice(0, valStack.length);\n          continue;\n        case Action.SELECTOR_START:\n          // don't consume, process again\n          this.actions = actionsSelectorStart;\n          handler.startSelectorRule();\n          continue;\n        case Action.SELECTOR_NAME_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_NAME:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            ns = this.namespacePrefixToURI[token.text];\n            if (ns != null) {\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  handler.tagSelector(ns, token.text);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                case CssTokenizer.TokenType.STAR:\n                  handler.tagSelector(ns, null);\n                  if (parsingFunctionParam) {\n                    this.actions = actionsSelectorInFunc;\n                  } else {\n                    this.actions = actionsSelector;\n                  }\n                  tokenizer.consume();\n                  break;\n                default:\n                  this.actions = actionsError;\n                  handler.error(\"E_CSS_NAMESPACE\", token);\n              }\n            } else {\n              this.actions = actionsError;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, token.text);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ANY_1:\n          if (!token.precededBySpace) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_SPACE_EXPECTED\", token);\n            continue;\n          }\n          handler.descendantSelector();\n\n        // fall through\n        case Action.SELECTOR_ANY:\n          if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.BAR) {\n            tokenizer.consume();\n            tokenizer.consume();\n            token = tokenizer.token();\n            switch (token.type) {\n              case CssTokenizer.TokenType.IDENT:\n                handler.tagSelector(null, token.text);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              case CssTokenizer.TokenType.STAR:\n                handler.tagSelector(null, null);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                break;\n              default:\n                this.actions = actionsError;\n                handler.error(\"E_CSS_NAMESPACE\", token);\n            }\n          } else {\n            handler.tagSelector(this.defaultNamespaceURI, null);\n            if (parsingFunctionParam) {\n              this.actions = actionsSelectorInFunc;\n            } else {\n              this.actions = actionsSelector;\n            }\n            tokenizer.consume();\n          }\n          continue;\n        case Action.SELECTOR_ID_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ID:\n          handler.idSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_CLASS:\n          handler.classSelector(token.text);\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_PSEUDOCLASS_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_PSEUDOCLASS:\n          tokenizer.consume();\n          token = tokenizer.token();\n          pseudoclassType: switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoclassSelector(token.text, null);\n              tokenizer.consume();\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              switch (text) {\n                case \"not\":\n                  this.actions = actionsSelectorStart;\n                  handler.startFuncWithSelector(\"not\");\n                  if (\n                    this.runParser(\n                      Number.POSITIVE_INFINITY,\n                      false,\n                      false,\n                      false,\n                      true,\n                    )\n                  ) {\n                    this.actions = actionsSelector;\n                  } else {\n                    this.actions = actionsErrorSelector;\n                  }\n                  break parserLoop;\n                case \"lang\":\n                case \"href-epub-type\":\n                  token = tokenizer.token();\n                  if (token.type === CssTokenizer.TokenType.IDENT) {\n                    params = [token.text];\n                    tokenizer.consume();\n                    break;\n                  } else {\n                    break pseudoclassType;\n                  }\n                case \"nth-child\":\n                case \"nth-of-type\":\n                case \"nth-last-child\":\n                case \"nth-last-of-type\":\n                case \"nth\":\n                  params = this.readNthPseudoParams();\n                  if (!params) {\n                    break pseudoclassType;\n                  } else {\n                    break;\n                  }\n                default:\n                  // TODO\n                  params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoclassSelector(text as string, params);\n                tokenizer.consume();\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOCLASS_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_PSEUDOELEM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n              handler.pseudoelementSelector(token.text, null);\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            case CssTokenizer.TokenType.FUNC:\n              text = token.text;\n              tokenizer.consume();\n              if (text == \"nth-fragment\") {\n                params = this.readNthPseudoParams();\n                if (params === null) {\n                  break;\n                }\n              } else {\n                params = this.readPseudoParams();\n              }\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.C_PAR) {\n                handler.pseudoelementSelector(text as string, params);\n                if (parsingFunctionParam) {\n                  this.actions = actionsSelectorInFunc;\n                } else {\n                  this.actions = actionsSelector;\n                }\n                tokenizer.consume();\n                continue;\n              }\n              break;\n          }\n          handler.error(\"E_CSS_PSEUDOELEM_SYNTAX\", token);\n          this.actions = actionsError;\n          continue;\n        case Action.SELECTOR_ATTR_1:\n          if (token.precededBySpace) {\n            handler.descendantSelector();\n          }\n\n        // fall through\n        case Action.SELECTOR_ATTR:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.IDENT) {\n            text = token.text;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.STAR) {\n            text = null;\n            tokenizer.consume();\n          } else if (token.type == CssTokenizer.TokenType.BAR) {\n            text = \"\";\n          } else {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            tokenizer.consume();\n            continue;\n          }\n          token = tokenizer.token();\n          if (token.type == CssTokenizer.TokenType.BAR) {\n            ns = text ? this.namespacePrefixToURI[text] : text;\n            if (ns == null) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_UNDECLARED_PREFIX\", token);\n              tokenizer.consume();\n              continue;\n            }\n            tokenizer.consume();\n            token = tokenizer.token();\n            if (token.type != CssTokenizer.TokenType.IDENT) {\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_NAME_EXPECTED\", token);\n              continue;\n            }\n            text = token.text;\n            tokenizer.consume();\n            token = tokenizer.token();\n          } else {\n            ns = \"\";\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.EQ:\n            case CssTokenizer.TokenType.TILDE_EQ:\n            case CssTokenizer.TokenType.BAR_EQ:\n            case CssTokenizer.TokenType.HAT_EQ:\n            case CssTokenizer.TokenType.DOLLAR_EQ:\n            case CssTokenizer.TokenType.STAR_EQ:\n            case CssTokenizer.TokenType.COL_COL:\n              num = token.type;\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            case CssTokenizer.TokenType.C_BRK:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                CssTokenizer.TokenType.EOF,\n                null,\n              );\n              if (parsingFunctionParam) {\n                this.actions = actionsSelectorInFunc;\n              } else {\n                this.actions = actionsSelector;\n              }\n              tokenizer.consume();\n              continue;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_OP_EXPECTED\", token);\n              continue;\n          }\n          switch (token.type) {\n            case CssTokenizer.TokenType.IDENT:\n            case CssTokenizer.TokenType.STR:\n              handler.attributeSelector(\n                ns as string,\n                text as string,\n                num,\n                token.text,\n              );\n              tokenizer.consume();\n              token = tokenizer.token();\n              break;\n            default:\n              this.actions = actionsErrorSelector;\n              handler.error(\"E_CSS_ATTR_VAL_EXPECTED\", token);\n              continue;\n          }\n          if (token.type != CssTokenizer.TokenType.C_BRK) {\n            this.actions = actionsErrorSelector;\n            handler.error(\"E_CSS_ATTR\", token);\n            continue;\n          }\n          if (parsingFunctionParam) {\n            this.actions = actionsSelectorInFunc;\n          } else {\n            this.actions = actionsSelector;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_CHILD:\n          handler.childSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_SIBLING:\n          handler.adjacentSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_FOLLOWING_SIBLING:\n          handler.followingSiblingSelector();\n          this.actions = actionsSelectorCont;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_BODY:\n          if (this.regionRule) {\n            this.ruleStack.push(\"-epubx-region\");\n            this.regionRule = false;\n          } else if (this.pageRule) {\n            this.ruleStack.push(\"page\");\n            this.pageRule = false;\n          } else {\n            this.ruleStack.push(\"[selector]\");\n          }\n          handler.startRuleBody();\n          this.actions = actionsBase;\n          tokenizer.consume();\n          continue;\n        case Action.SELECTOR_NEXT:\n          handler.nextSelector();\n          this.actions = actionsSelectorStart;\n          tokenizer.consume();\n          continue;\n        case Action.VAL_IDENT:\n          valStack.push(Css.getName(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_HASH:\n          num = parseInt(token.text, 16);\n          valStack.push(new Css.HexColor(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUM:\n          valStack.push(new Css.Num(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_INT:\n          valStack.push(new Css.Int(token.num));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_NUMERIC:\n          if (Exprs.isViewportRelativeLengthUnit(token.text)) {\n            // Treat numeric value with viewport unit as numeric in expr.\n            valStack.push(\n              new Css.Expr(\n                new Exprs.Numeric(handler.getScope(), token.num, token.text),\n              ),\n            );\n          } else {\n            valStack.push(new Css.Numeric(token.num, token.text));\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_STR:\n          valStack.push(new Css.Str(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URL:\n          valStack.push(new Css.URL(Base.resolveURL(token.text, this.baseURL)));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_URANGE:\n          valStack.push(new Css.URange(token.text));\n          tokenizer.consume();\n          continue;\n        case Action.VAL_COMMA:\n          this.valStackReduce(\",\", token);\n          valStack.push(\",\");\n          tokenizer.consume();\n          continue;\n        case Action.VAL_SLASH:\n          valStack.push(Css.slash);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_FUNC:\n          text = token.text.toLowerCase();\n          if (text == \"-epubx-expr\" || text == \"env\") {\n            // special case\n            this.actions = actionsExprVal;\n            this.exprContext = ExprContext.PROP;\n            valStack.push(\"{\");\n          } else {\n            valStack.push(text);\n            valStack.push(\"(\");\n          }\n          tokenizer.consume();\n          continue;\n        case Action.VAL_C_PAR:\n          this.valStackReduce(\")\", token);\n          tokenizer.consume();\n          continue;\n        case Action.VAL_BANG:\n          tokenizer.consume();\n          token = tokenizer.token();\n          token1 = tokenizer.nthToken(1);\n          if (\n            token.type == CssTokenizer.TokenType.IDENT &&\n            token.text.toLowerCase() == \"important\" &&\n            (token1.type == CssTokenizer.TokenType.SEMICOL ||\n              token1.type == CssTokenizer.TokenType.EOF ||\n              token1.type == CssTokenizer.TokenType.C_BRC)\n          ) {\n            tokenizer.consume();\n            this.propImportant = true;\n            continue;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.VAL_PLUS:\n          token1 = tokenizer.nthToken(1);\n          switch (token1.type) {\n            case CssTokenizer.TokenType.NUM:\n            case CssTokenizer.TokenType.NUMERIC:\n            case CssTokenizer.TokenType.INT:\n              if (!token1.precededBySpace) {\n                // Plus before number, ignore\n                tokenizer.consume();\n                continue;\n              }\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          } else {\n            // this.exprError(\"E_CSS_UNEXPECTED_PLUS\", token);\n            valStack.push(new Css.AnyToken(\"+\"));\n            tokenizer.consume();\n            continue;\n          }\n        case Action.VAL_END:\n          tokenizer.consume();\n\n        // fall through\n        case Action.VAL_BRC:\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (val && this.propName) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          this.actions = parsingStyleAttr ? actionsStyleAttribute : actionsBase;\n          continue;\n        case Action.VAL_FINISH:\n          tokenizer.consume();\n          tokenizer.unmark();\n          val = this.valStackReduce(\";\", token);\n          if (parsingValue) {\n            this.result = val;\n            return true;\n          }\n          if (this.propName && val) {\n            handler.property(this.propName as string, val, this.propImportant);\n          }\n          if (parsingStyleAttr) {\n            return true;\n          }\n          this.exprError(\"E_CSS_SYNTAX\", token);\n          continue;\n        case Action.EXPR_IDENT:\n          token1 = tokenizer.nthToken(1);\n          if (token1.type == CssTokenizer.TokenType.CLASS) {\n            if (\n              tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_PAR &&\n              !tokenizer.nthToken(2).precededBySpace\n            ) {\n              valStack.push(token.text, token1.text, \"(\");\n              tokenizer.consume();\n            } else {\n              valStack.push(\n                new Exprs.Named(\n                  handler.getScope(),\n                  Exprs.makeQualifiedName(token.text, token1.text),\n                ),\n              );\n              this.actions = actionsExprOp;\n            }\n            tokenizer.consume();\n          } else {\n            if (\n              this.exprContext == ExprContext.MEDIA ||\n              this.exprContext == ExprContext.IMPORT\n            ) {\n              if (token.text.toLowerCase() == \"not\") {\n                tokenizer.consume();\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), true, token1.text),\n                );\n              } else {\n                if (token.text.toLowerCase() == \"only\") {\n                  tokenizer.consume();\n                  token = token1;\n                }\n                valStack.push(\n                  new Exprs.MediaName(handler.getScope(), false, token.text),\n                );\n              }\n            } else if (\n              this.exprContext === ExprContext.SUPPORTS &&\n              token.text.toLowerCase() === \"not\" &&\n              valStack[valStack.length - 1] !== OP_MEDIA_AND &&\n              valStack[valStack.length - 1] !== OP_MEDIA_OR &&\n              (token1.type === CssTokenizer.TokenType.O_PAR ||\n                token1.type === CssTokenizer.TokenType.FUNC)\n            ) {\n              // for `@supports not (...)`\n              valStack.push(-OP_MEDIA_NOT);\n              tokenizer.consume();\n              continue;\n            } else {\n              valStack.push(new Exprs.Named(handler.getScope(), token.text));\n            }\n            this.actions = actionsExprOp;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_FUNC:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports selector(...)`\n            valStack.push(this.readSupportsTest(token));\n            this.actions = actionsExprOp;\n            continue;\n          }\n          valStack.push(null, token.text, \"(\");\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_NUM:\n          valStack.push(new Exprs.Const(handler.getScope(), token.num));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_NUMERIC:\n          text = token.text;\n          if (text == \"%\") {\n            if (this.propName && this.propName.match(/height|^(top|bottom)$/)) {\n              text = \"vh\";\n            } else {\n              text = \"vw\";\n            }\n          }\n          valStack.push(new Exprs.Numeric(handler.getScope(), token.num, text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_STR:\n          valStack.push(new Exprs.Const(handler.getScope(), token.text));\n          tokenizer.consume();\n          this.actions = actionsExprOp;\n          continue;\n        case Action.EXPR_PARAM:\n          tokenizer.consume();\n          token = tokenizer.token();\n          if (\n            token.type != CssTokenizer.TokenType.INT ||\n            token.precededBySpace\n          ) {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          } else {\n            valStack.push(new Exprs.Param(handler.getScope(), token.num));\n            tokenizer.consume();\n            this.actions = actionsExprOp;\n          }\n          continue;\n        case Action.EXPR_PREFIX:\n          valStack.push(-token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX:\n          this.actions = actionsExprVal;\n          this.exprStackReduce(token.type, token);\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_INFIX_NAME:\n          // `and` or `or` operator in `@media` or `@supports`\n          if (\n            token.text.toLowerCase() === \"and\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_OR &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_AND, token);\n            valStack.push(OP_MEDIA_AND);\n            tokenizer.consume();\n          } else if (\n            token.text.toLowerCase() === \"or\" &&\n            valStack[valStack.length - 2] !== OP_MEDIA_AND &&\n            valStack[valStack.length - 2] !== -OP_MEDIA_NOT\n          ) {\n            this.actions = actionsExprVal;\n            this.exprStackReduce(OP_MEDIA_OR, token);\n            valStack.push(OP_MEDIA_OR);\n            tokenizer.consume();\n          } else {\n            this.exprError(\"E_CSS_SYNTAX\", token);\n          }\n          continue;\n        case Action.EXPR_C_PAR:\n          if (this.exprStackReduce(token.type, token)) {\n            this.actions = actionsPropVal;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_BRC:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext == ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_BRC\", token);\n            } else {\n              if (this.exprContext == ExprContext.WHEN) {\n                handler.startWhenRule(valStack.pop() as Css.Expr);\n              } else {\n                handler.startMediaRule(valStack.pop() as Css.Expr);\n              }\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_SEMICOL:\n          if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n            if (this.propName || this.exprContext != ExprContext.IMPORT) {\n              this.exprError(\"E_CSS_UNEXPECTED_SEMICOL\", token);\n              // `@media ...;` and `@supports ...;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              this.importCondition = valStack.pop() as Css.Expr;\n              this.importReady = true;\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            }\n          }\n          tokenizer.consume();\n          continue;\n        case Action.EXPR_O_PAR:\n          if (this.exprContext === ExprContext.SUPPORTS) {\n            // `@supports (...)`\n            const supportsTest = this.readSupportsTest(token);\n            if (supportsTest) {\n              valStack.push(supportsTest);\n              this.actions = actionsExprOp;\n              continue;\n            }\n          }\n          valStack.push(token.type);\n          tokenizer.consume();\n          continue;\n        case Action.RULE_END:\n          this.actions = actionsBase;\n          tokenizer.consume();\n          handler.endRule();\n          if (this.ruleStack.length) {\n            this.ruleStack.pop();\n          }\n          continue;\n        case Action.AT:\n          text = token.text.toLowerCase();\n          switch (text) {\n            case \"import\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR ||\n                token.type == CssTokenizer.TokenType.URL\n              ) {\n                this.importURL = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n                if (\n                  token.type == CssTokenizer.TokenType.SEMICOL ||\n                  token.type == CssTokenizer.TokenType.EOF\n                ) {\n                  this.importReady = true;\n                  tokenizer.consume();\n                  return false;\n                } else {\n                  this.propName = null; // signals @ rule\n                  this.exprContext = ExprContext.IMPORT;\n                  this.actions = actionsExprVal;\n                  valStack.push(\"{\");\n                  continue;\n                }\n              }\n              handler.error(\"E_CSS_IMPORT_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"namespace\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.IDENT:\n                  text = token.text; // Prefix\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    (token.type == CssTokenizer.TokenType.STR ||\n                      token.type == CssTokenizer.TokenType.URL) &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.namespacePrefixToURI[text] = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n                case CssTokenizer.TokenType.STR:\n                case CssTokenizer.TokenType.URL:\n                  if (\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n                  ) {\n                    this.defaultNamespaceURI = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    continue;\n                  }\n                  break;\n              }\n              handler.error(\"E_CSS_NAMESPACE_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"charset\":\n              // Useless in EPUB (only UTF-8 or UTF-16 is allowed anyway and\n              // we are at the mercy of the browser charset handling anyway).\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (\n                token.type == CssTokenizer.TokenType.STR &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.SEMICOL\n              ) {\n                text = token.text.toLowerCase();\n                if (text != \"utf-8\" && text != \"utf-16\") {\n                  handler.error(`E_CSS_UNEXPECTED_CHARSET ${text}`, token);\n                }\n                tokenizer.consume();\n                tokenizer.consume();\n                continue;\n              }\n              handler.error(\"E_CSS_CHARSET_SYNTAX\", token);\n              this.actions = actionsError;\n              continue;\n            case \"font-face\":\n            case \"-epubx-page-template\":\n            case \"-epubx-define\":\n            case \"-epubx-viewport\":\n              if (tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                tokenizer.consume();\n                switch (text) {\n                  case \"font-face\":\n                    handler.startFontFaceRule();\n                    break;\n                  case \"-epubx-page-template\":\n                    handler.startPageTemplateRule();\n                    break;\n                  case \"-epubx-define\":\n                    handler.startDefineRule();\n                    break;\n                  case \"-epubx-viewport\":\n                    handler.startViewportRule();\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-adapt-footnote-area\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_BRC:\n                  tokenizer.consume();\n                  handler.startFootnoteRule(null);\n                  this.ruleStack.push(text);\n                  handler.startRuleBody();\n                  continue;\n                case CssTokenizer.TokenType.COL_COL:\n                  tokenizer.consume();\n                  token = tokenizer.token();\n                  if (\n                    token.type == CssTokenizer.TokenType.IDENT &&\n                    tokenizer.nthToken(1).type == CssTokenizer.TokenType.O_BRC\n                  ) {\n                    text = token.text;\n                    tokenizer.consume();\n                    tokenizer.consume();\n                    handler.startFootnoteRule(text);\n                    this.ruleStack.push(\"-adapt-footnote-area\");\n                    handler.startRuleBody();\n                    continue;\n                  }\n                  break;\n              }\n              break;\n            case \"-epubx-region\":\n              tokenizer.consume();\n              handler.startRegionRule();\n              this.regionRule = true;\n              this.actions = actionsSelectorStart;\n              continue;\n            case \"page\":\n              tokenizer.consume();\n              handler.startPageRule();\n              this.pageRule = true;\n              this.actions = actionsSelectorCont;\n              continue;\n            case \"top-left-corner\":\n            case \"top-left\":\n            case \"top-center\":\n            case \"top-right\":\n            case \"top-right-corner\":\n            case \"right-top\":\n            case \"right-middle\":\n            case \"right-bottom\":\n            case \"bottom-right-corner\":\n            case \"bottom-right\":\n            case \"bottom-center\":\n            case \"bottom-left\":\n            case \"bottom-left-corner\":\n            case \"left-bottom\":\n            case \"left-middle\":\n            case \"left-top\":\n              tokenizer.consume();\n              token = tokenizer.token();\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                handler.startPageMarginBoxRule(text);\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-when\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.WHEN;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"media\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.MEDIA;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"supports\":\n              tokenizer.consume();\n              this.propName = null; // signals @ rule\n              this.exprContext = ExprContext.SUPPORTS;\n              this.actions = actionsExprVal;\n              valStack.push(\"{\");\n              continue;\n            case \"-epubx-flow\":\n              if (\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.O_BRC\n              ) {\n                handler.startFlowRule(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            case \"-epubx-page-master\":\n            case \"-epubx-partition\":\n            case \"-epubx-partition-group\": {\n              tokenizer.consume();\n              token = tokenizer.token();\n              let ruleName: string | null = null;\n              let rulePseudoName: string | null = null;\n              const classes: string[] = [];\n              if (token.type == CssTokenizer.TokenType.IDENT) {\n                ruleName = token.text;\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (\n                token.type == CssTokenizer.TokenType.COLON &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT\n              ) {\n                rulePseudoName = tokenizer.nthToken(1).text;\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              while (\n                token.type == CssTokenizer.TokenType.FUNC &&\n                token.text.toLowerCase() == \"class\" &&\n                tokenizer.nthToken(1).type == CssTokenizer.TokenType.IDENT &&\n                tokenizer.nthToken(2).type == CssTokenizer.TokenType.C_PAR\n              ) {\n                classes.push(tokenizer.nthToken(1).text);\n                tokenizer.consume();\n                tokenizer.consume();\n                tokenizer.consume();\n                token = tokenizer.token();\n              }\n              if (token.type == CssTokenizer.TokenType.O_BRC) {\n                tokenizer.consume();\n                switch (text) {\n                  case \"-epubx-page-master\":\n                    handler.startPageMasterRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition\":\n                    handler.startPartitionRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                  case \"-epubx-partition-group\":\n                    handler.startPartitionGroupRule(\n                      ruleName,\n                      rulePseudoName,\n                      classes,\n                    );\n                    break;\n                }\n                this.ruleStack.push(text);\n                handler.startRuleBody();\n                continue;\n              }\n              break;\n            }\n            case \"\":\n              // No text after @\n              handler.error(`E_CSS_UNEXPECTED_AT${text}`, token);\n\n              // Error recovery using selector rules.\n              this.actions = actionsErrorSelector;\n              continue;\n            default:\n              handler.error(`E_CSS_AT_UNKNOWN ${text}`, token);\n              this.actions = actionsError;\n              continue;\n          }\n          handler.error(`E_CSS_AT_SYNTAX ${text}`, token);\n          this.actions = actionsError;\n          continue;\n        case Action.ERROR_PUSH:\n          // Open bracket while skipping error syntax\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          this.errorBrackets.push(token.type + 1);\n\n          // Expected closing bracket\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_POP_DECL:\n          // Close bracket while skipping error syntax in declaration\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n\n            // Don't consume closing brace\n            continue;\n          }\n\n        // fall through\n        case Action.ERROR_POP:\n          // Close bracket while skipping error syntax\n          if (\n            this.errorBrackets.length > 0 &&\n            this.errorBrackets[this.errorBrackets.length - 1] == token.type\n          ) {\n            this.errorBrackets.pop();\n          }\n          if (\n            this.errorBrackets.length == 0 &&\n            token.type == CssTokenizer.TokenType.C_BRC\n          ) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.ERROR_SEMICOL:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (this.errorBrackets.length == 0) {\n            this.actions = actionsBase;\n          }\n          tokenizer.consume();\n          continue;\n        case Action.DONE:\n          if (parsingFunctionParam) {\n            tokenizer.consume();\n            handler.endFuncWithSelector();\n          }\n          return true;\n        default:\n          if (parsingValue || parsingStyleAttr) {\n            return true;\n          }\n          if (parsingMediaQuery) {\n            if (this.exprStackReduce(CssTokenizer.TokenType.C_PAR, token)) {\n              this.result = valStack.pop() as Css.Val;\n              return true;\n            }\n            return false;\n          }\n          if (parsingFunctionParam) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            return false;\n          }\n          if (this.actions === actionsPropVal && tokenizer.hasMark()) {\n            tokenizer.reset();\n            this.actions = actionsSelectorStart;\n            handler.startSelectorRule();\n            continue;\n          }\n          if (\n            this.actions !== actionsError &&\n            this.actions !== actionsErrorSelector &&\n            this.actions !== actionsErrorDecl\n          ) {\n            if (token.type == CssTokenizer.TokenType.INVALID) {\n              handler.error(token.text, token);\n            } else if (this.propName) {\n              // Do not stop parsing on invalid property syntax as long as brackets are balanced.\n              switch (token.type) {\n                case CssTokenizer.TokenType.O_PAR:\n                case CssTokenizer.TokenType.O_BRC:\n                case CssTokenizer.TokenType.O_BRK:\n                  this.errorBrackets.push(token.type + 1);\n                  break;\n              }\n              valStack.push(new Css.AnyToken(token.toString()));\n              tokenizer.consume();\n              continue;\n            } else if (\n              token.type === CssTokenizer.TokenType.O_BRC &&\n              valStack.length > 0\n            ) {\n              // `@media {...}` and `@supports {...}` should be ok\n              handler.startMediaRule(valStack.pop() as Css.Expr);\n              this.ruleStack.push(\"media\");\n              handler.startRuleBody();\n              this.actions = actionsBase;\n              tokenizer.consume();\n              continue;\n            } else if (token.type === CssTokenizer.TokenType.SEMICOL) {\n              // `@media;` and `@supports;` should be ok\n              this.actions = actionsBase;\n              tokenizer.consume();\n              return false;\n            } else {\n              handler.error(\"E_CSS_SYNTAX\", token);\n            }\n            if (this.isInsidePropertyOnlyRule()) {\n              this.actions = actionsErrorDecl;\n            } else {\n              this.actions = actionsErrorSelector;\n            }\n            continue; // Let error-recovery to re-process the offending token\n          }\n          tokenizer.consume();\n          continue;\n      }\n    }\n    return false; // Not done yet.\n  }\n}\n\nexport class ErrorHandler extends ParserHandler {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super(null);\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    throw new Error(mnemonics + \" \" + token);\n  }\n\n  /**\n   * @override\n   */\n  getScope(): Exprs.LexicalScope {\n    return this.scope;\n  }\n}\n\nexport function parseStylesheet(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\"parseStylesheet\");\n  const parser = new Parser(actionsBase, tokenizer, handler, baseURL);\n  let condition: Css.Expr = null;\n  if (media) {\n    condition = parseMediaQuery(\n      new CssTokenizer.Tokenizer(media, handler),\n      handler,\n      baseURL,\n    );\n  }\n  condition = parser.makeCondition(classes, condition && condition.toExpr());\n  if (condition) {\n    handler.startMediaRule(condition);\n    handler.startRuleBody();\n  }\n  frame\n    .loop(() => {\n      while (!parser.runParser(100, false, false, false, false)) {\n        if (parser.importReady) {\n          const resolvedURL = Base.resolveURL(\n            parser.importURL as string,\n            baseURL,\n          );\n          if (parser.importCondition) {\n            handler.startMediaRule(parser.importCondition);\n            handler.startRuleBody();\n          }\n          const innerFrame: Task.Frame<boolean> = Task.newFrame(\n            \"parseStylesheet.import\",\n          );\n          parseStylesheetFromURL(resolvedURL, handler, null, null).then(() => {\n            if (parser.importCondition) {\n              handler.endRule();\n            }\n            parser.importReady = false;\n            parser.importURL = null;\n            parser.importCondition = null;\n            innerFrame.finish(true);\n          });\n          return innerFrame.result();\n        }\n        const r = frame.timeSlice();\n        if (r.isPending) {\n          return r;\n        }\n      }\n      return Task.newResult(false);\n    })\n    .then(() => {\n      if (condition) {\n        handler.endRule();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function parseStylesheetFromText(\n  text: string,\n  handler: ParserHandler,\n  baseURL: string,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromText\",\n    (frame) => {\n      const tok = new CssTokenizer.Tokenizer(text, handler);\n      parseStylesheet(tok, handler, baseURL, classes, media).thenFinish(frame);\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, `Failed to parse stylesheet text: ${text}`);\n      frame.finish(false);\n    },\n  );\n}\n\nexport function parseStylesheetFromURL(\n  url: string,\n  handler: ParserHandler,\n  classes: string | null,\n  media: string | null,\n): Task.Result<boolean> {\n  return Task.handle(\n    \"parseStylesheetFromURL\",\n    (frame) => {\n      Net.ajax(url).then((xhr) => {\n        if (!xhr.responseText) {\n          frame.finish(true);\n        } else {\n          parseStylesheetFromText(\n            xhr.responseText,\n            handler,\n            url,\n            classes,\n            media,\n          ).then((result) => {\n            if (!result) {\n              Logging.logger.warn(`Failed to parse stylesheet from ${url}`);\n            }\n            frame.finish(true);\n          });\n        }\n      });\n    },\n    (frame, err) => {\n      Logging.logger.warn(err, \"Exception while fetching and parsing:\", url);\n      frame.finish(true);\n    },\n  );\n}\n\nexport function parseValue(\n  scope: Exprs.LexicalScope,\n  tokenizer: CssTokenizer.Tokenizer,\n  baseURL: string,\n): Css.Val {\n  const parser = new Parser(\n    actionsPropVal,\n    tokenizer,\n    new ErrorHandler(scope),\n    baseURL,\n  );\n  parser.runParser(Number.POSITIVE_INFINITY, true, false, false, false);\n  return parser.result;\n}\n\nexport function parseStyleAttribute(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): void {\n  const parser = new Parser(actionsStyleAttribute, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, true, false, false);\n}\n\nexport function parseMediaQuery(\n  tokenizer: CssTokenizer.Tokenizer,\n  handler: ParserHandler,\n  baseURL: string,\n): Css.Expr {\n  const parser = new Parser(actionsExprVal, tokenizer, handler, baseURL);\n  parser.runParser(Number.POSITIVE_INFINITY, false, false, true, false);\n  return parser.result as Css.Expr;\n}\n\nexport const numProp: { [key: string]: boolean } = {\n  \"z-index\": true,\n  \"column-count\": true,\n  \"flow-linger\": true,\n  opacity: true,\n  page: true,\n  \"flow-priority\": true,\n  utilization: true,\n};\n\nexport function takesOnlyNum(propName: string): boolean {\n  return !!numProp[propName];\n}\n\n/**\n * @return val\n */\nexport function evaluateExprToCSS(\n  context: Exprs.Context,\n  val: Exprs.Val,\n  propName: string,\n): Css.Val {\n  const result = val.evaluate(context);\n  switch (typeof result) {\n    case \"number\":\n      if (!takesOnlyNum(propName)) {\n        return new Css.Numeric(result as number, \"px\");\n      } else if (result == Math.round(result as number)) {\n        return new Css.Int(result as number);\n      } else {\n        return new Css.Num(result as number);\n      }\n    case \"string\":\n      if (!result) {\n        return Css.empty;\n      }\n\n      // TODO: where baseURL should come from???\n      return parseValue(\n        val.scope,\n        new CssTokenizer.Tokenizer(result as string, null),\n        \"\",\n      );\n    case \"boolean\":\n      return result ? Css.ident._true : Css.ident._false;\n    case \"undefined\":\n      return Css.empty;\n  }\n  throw new Error(\"E_UNEXPECTED\");\n}\n\n/**\n * @return val\n */\nexport function evaluateCSSToCSS(\n  context: Exprs.Context,\n  val: Css.Val,\n  propName?: string,\n): Css.Val {\n  if (val.isExpr()) {\n    try {\n      return evaluateExprToCSS(context, (val as Css.Expr).expr, propName);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return Css.empty;\n  }\n  return val;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Matchers - Definitions of Matcher.\n */\nimport * as Asserts from \"./asserts\";\n\n/**\n * Checkes whether given order can be represented as an+b with a non-negative\n * interger n\n */\nexport function matchANPlusB(order: number, a: number, b: number): boolean {\n  order -= b;\n  if (a === 0) {\n    return order === 0;\n  } else {\n    return order % a === 0 && order / a >= 0;\n  }\n}\n\nexport interface Matcher {\n  matches(): boolean;\n}\n\nexport class AnyMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.some((matcher) => matcher.matches());\n  }\n}\n\nexport class AllMatcher implements Matcher {\n  constructor(public readonly matchers: Matcher[]) {}\n\n  /** @override */\n  matches(): boolean {\n    return this.matchers.every((matcher) => matcher.matches());\n  }\n}\n\nexport class NthFragmentMatcher implements Matcher {\n  static fragmentIndices = {};\n\n  static registerFragmentIndex(\n    elementOffset: number,\n    fragmentIndex: number,\n    priority: number,\n  ) {\n    const indices = NthFragmentMatcher.fragmentIndices;\n    if (\n      !indices[elementOffset] ||\n      indices[elementOffset].priority <= priority\n    ) {\n      indices[elementOffset] = { fragmentIndex, priority };\n    }\n  }\n\n  static clearFragmentIndices() {\n    NthFragmentMatcher.fragmentIndices = {};\n  }\n\n  constructor(\n    public readonly elementOffset: number,\n    public readonly a: number,\n    public readonly b: number,\n  ) {}\n\n  /** @override */\n  matches(): boolean {\n    const entry = NthFragmentMatcher.fragmentIndices[this.elementOffset];\n    return (\n      entry != null &&\n      entry.fragmentIndex != null &&\n      matchANPlusB(entry.fragmentIndex, this.a, this.b)\n    );\n  }\n}\n\nexport class MatcherBuilder {\n  static buildViewConditionMatcher(\n    elementOffset: number,\n    viewCondition: string,\n  ): Matcher {\n    const strs = viewCondition.split(\"_\");\n    if (strs[0] == \"NFS\") {\n      return new NthFragmentMatcher(\n        elementOffset,\n        parseInt(strs[1], 10),\n        parseInt(strs[2], 10),\n      );\n    } else {\n      Asserts.fail(`unknown view condition. condition=${viewCondition}`);\n      return null;\n    }\n  }\n\n  static buildAllMatcher(matchers: Matcher[]): Matcher {\n    return new AllMatcher(matchers);\n  }\n\n  static buildAnyMatcher(matchers: Matcher[]): Matcher {\n    return new AnyMatcher(matchers);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Types - Type definiions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport type FormattingContextType =\n  | \"Block\"\n  | \"RepetitiveElementsOwner\"\n  | \"Table\";\n\nexport type FragmentLayoutConstraintType =\n  | \"AfterIfContinue\"\n  | \"EntireTable\"\n  | \"RepetitiveElementsOwner\"\n  | \"TableRow\";\n\nexport namespace CssCascade {\n  export type ElementStyle = { [key: string]: any };\n}\n\nexport namespace CssStyler {\n  export interface AbstractStyler {\n    getStyle(element: Element, deep: boolean): CssCascade.ElementStyle;\n    processContent(\n      element: Element,\n      styles: { [key: string]: Css.Val },\n      viewNode: Node,\n    );\n  }\n}\n\nexport namespace Layout {\n  /**\n   * Represents a constraint on layout\n   */\n  export interface LayoutConstraint {\n    /**\n     * Returns if this constraint allows the node context to be laid out at the\n     * current position.\n     */\n    allowLayout(nodeContext: Vtree.NodeContext): boolean;\n  }\n  /**\n   * Represents constraints on laying out fragments\n   */\n  export interface FragmentLayoutConstraint {\n    flagmentLayoutConstraintType: FragmentLayoutConstraintType;\n    allowLayout(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      column: Column,\n    ): boolean;\n    nextCandidate(nodeContext: Vtree.NodeContext): boolean;\n    postLayout(\n      allowed: boolean,\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Column,\n    );\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      column: Column,\n    ): Task.Result<boolean>;\n    equalsTo(constraint: FragmentLayoutConstraint): boolean;\n    getPriorityOfFinishBreak(): number;\n  }\n\n  /**\n   * Potential breaking position.\n   */\n  export interface BreakPosition {\n    /**\n     * @return break position, if found\n     */\n    findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext;\n    /**\n     * @return penalty for this break position\n     */\n    getMinBreakPenalty(): number;\n    calculateOffset(column: Column): { current: number; minimum: number };\n    breakPositionChosen(column: Column): void;\n  }\n\n  export interface AbstractBreakPosition extends BreakPosition {\n    getNodeContext(): Vtree.NodeContext;\n  }\n\n  export type BreakPositionAndNodeContext = {\n    breakPosition: BreakPosition;\n    nodeContext: Vtree.NodeContext;\n  };\n\n  /**\n   * Potential breaking position inside CSS box (between lines).\n   * @param checkPoints array of breaking points for\n   *    breakable block\n   */\n  export interface BoxBreakPosition extends AbstractBreakPosition {\n    breakNodeContext: Vtree.NodeContext;\n    readonly checkPoints: Vtree.NodeContext[];\n    readonly penalty: number;\n  }\n\n  /**\n   * Potential edge breaking position.\n   */\n  export interface EdgeBreakPosition extends AbstractBreakPosition {\n    overflowIfRepetitiveElementsDropped: boolean;\n    readonly position: Vtree.NodeContext;\n    readonly breakOnEdge: string | null;\n    overflows: boolean;\n    readonly computedBlockSize: number;\n  }\n\n  export interface Column extends Vtree.Container {\n    last: Node;\n    viewDocument: Document;\n    flowRootFormattingContext: Vtree.FormattingContext;\n    isFloat: boolean;\n    isFootnote: boolean;\n    startEdge: number;\n    endEdge: number;\n    beforeEdge: number;\n    afterEdge: number;\n    footnoteEdge: number;\n    box: GeometryUtil.Rect;\n    chunkPositions: Vtree.ChunkPosition[];\n    bands: GeometryUtil.Band[];\n    overflown: boolean;\n    breakPositions: BreakPosition[];\n    pageBreakType: string | null;\n    forceNonfitting: boolean;\n    leftFloatEdge: number;\n    /**\n     * bottom of the bottommost left float\n     */\n    rightFloatEdge: number;\n    /**\n     * bottom of the bottommost right float\n     */\n    bottommostFloatTop: number;\n    /**\n     * Top of the bottommost float\n     */\n    stopAtOverflow: boolean;\n    lastAfterPosition: Vtree.NodePosition | null;\n    fragmentLayoutConstraints: FragmentLayoutConstraint[];\n    pseudoParent: Column;\n    nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null;\n    blockDistanceToBlockEndFloats: number;\n    computedBlockSize: number;\n\n    layoutContext: Vtree.LayoutContext;\n    clientLayout: Vtree.ClientLayout;\n    readonly layoutConstraint: LayoutConstraint;\n    readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n\n    getTopEdge(): number;\n    getBottomEdge(): number;\n    getLeftEdge(): number;\n    getRightEdge(): number;\n    isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    stopByOverflow(nodeContext: Vtree.NodeContext): boolean;\n    isOverflown(edge: number): boolean;\n    getExclusions(): GeometryUtil.Shape[];\n    openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext>;\n    calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number;\n    /**\n     * @param count first-XXX nesting identifier\n     */\n    maybePeelOff(\n      position: Vtree.NodeContext,\n      count: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view until a CSS box edge is reached.\n     * @param position start source position.\n     * @param checkPoints array to append possible breaking points.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildViewToNextBlockEdge(\n      position: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    nextInTree(\n      position: Vtree.NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Builds the view for a single unbreakable element.\n     * @param position start source position.\n     * @return holding box edge position reached or null if the source is exhausted.\n     */\n    buildDeepElementView(\n      position: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n\n    /**\n     * Create a single floating element (for exclusion areas).\n     * @param ref container's child to insert float before (can be null).\n     * @param side float side (\"left\" or \"right\").\n     * @param width float inline dimension.\n     * @param height float box progression dimension.\n     * @return newly created float element.\n     */\n    createFloat(\n      ref: Node,\n      side: string,\n      width: number,\n      height: number,\n    ): Element;\n    /**\n     * Remove all the exclusion floats.\n     */\n    killFloats(): void;\n    /**\n     * Create exclusion floats for a column.\n     */\n    createFloats(): void;\n    /**\n     * @param nodeContext position after the block\n     * @param checkPoints array of possible breaking points.\n     * @param index index of the breaking point\n     * @param boxOffset box offset\n     * @return edge position\n     */\n    calculateEdge(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n      index: number,\n      boxOffset: number,\n    ): number;\n    /**\n     * Parse CSS computed length (in pixels)\n     * @param val CSS length in \"px\" units or a number.\n     * @return value in pixels or 0 if not parsable\n     */\n    parseComputedLength(val: string | number): number;\n    /**\n     * Reads element's computed CSS margin.\n     */\n    getComputedMargin(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed padding + borders.\n     */\n    getComputedPaddingBorder(element: Element): GeometryUtil.Insets;\n    /**\n     * Reads element's computed CSS insets(margins + border + padding or margins :\n     * depends on box-sizing)\n     */\n    getComputedInsets(element: Element): GeometryUtil.Insets;\n    /**\n     * Set element's computed CSS insets to Column Container\n     */\n    setComputedInsets(element: Element, container: Column): void;\n    /**\n     * Set element's computed width and height to Column Container\n     */\n    setComputedWidthAndHeight(element: Element, container: Column): void;\n    /**\n     * Layout a single unbreakable element.\n     */\n    layoutUnbreakable(\n      nodeContextIn: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout a single float element.\n     */\n    layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext>;\n\n    setupFloatArea(\n      area: PageFloatArea,\n      floatReference: PageFloats.FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): boolean;\n    createPageFloatArea(\n      float: PageFloats.PageFloat | null,\n      floatSide: string,\n      anchorEdge: number | null,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      condition: PageFloats.PageFloatPlacementCondition,\n    ): PageFloatArea | null;\n    layoutSinglePageFloatFragment(\n      continuations: PageFloats.PageFloatContinuation[],\n      floatSide: string,\n      clearSide: string | null,\n      allowFragmented: boolean,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment | null,\n    ): Task.Result<SinglePageFloatLayoutResult>;\n    layoutPageFloatInner(\n      continuation: PageFloats.PageFloatContinuation,\n      strategy: PageFloats.PageFloatLayoutStrategy,\n      anchorEdge: number | null,\n      pageFloatFragment?: PageFloats.PageFloatFragment,\n    ): Task.Result<boolean>;\n    setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext;\n    resolveFloatReferenceFromColumnSpan(\n      floatReference: PageFloats.FloatReference,\n      columnSpan: Css.Val,\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<PageFloats.FloatReference>;\n    layoutPageFloat(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    createJustificationAdjustmentElement(\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n      vertical: boolean,\n    ): HTMLElement;\n    addAndAdjustJustificationElement(\n      nodeContext: Vtree.NodeContext,\n      insertAfter: boolean,\n      node: Node,\n      insertionPoint: Node,\n      doc: Document,\n      parentNode: Node,\n    ): HTMLElement;\n    compensateJustificationLineHeight(\n      span: Element,\n      br: Element,\n      nodeContext: Vtree.NodeContext,\n    ): void;\n    /**\n     * Fix justification of the last line of text broken across pages (if\n     * needed).\n     */\n    fixJustificationIfNeeded(\n      nodeContext: Vtree.NodeContext,\n      endOfColumn: boolean,\n    ): void;\n    processLineStyling(\n      nodeContext: Vtree.NodeContext,\n      resNodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): Task.Result<Vtree.NodeContext>;\n    isLoneImage(checkPoints: Vtree.NodeContext[]): boolean;\n    getTrailingMarginEdgeAdjustment(\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): number;\n    /**\n     * Layout a single CSS box.\n     */\n    layoutBreakableBlock(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    postLayoutBlock(\n      nodeContext: Vtree.NodeContext,\n      checkPoints: Vtree.NodeContext[],\n    ): void;\n    findEndOfLine(\n      linePosition: number,\n      checkPoints: Vtree.NodeContext[],\n      isUpdateMaxReachedAfterEdge: boolean,\n    ): {\n      nodeContext: Vtree.NodeContext;\n      index: number;\n      checkPointIndex: number;\n    };\n    findAcceptableBreakInside(\n      checkPoints: Vtree.NodeContext[],\n      edgePosition: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker;\n    /**\n     * Read ranges skipping special elments\n     */\n    getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[];\n    /**\n     * Give block's initial and final nodes, find positions of the line bottoms.\n     * This is, of course, somewhat hacky implementation.\n     * @return position of line breaks\n     */\n    findLinePositions(checkPoints: Vtree.NodeContext[]): number[];\n    calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number;\n    findBoxBreakPosition(\n      bp: BoxBreakPosition,\n      force: boolean,\n    ): Vtree.NodeContext;\n    getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number;\n    findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n      edge: number;\n      checkPoint: Vtree.NodeContext | null;\n    };\n    findEdgeBreakPosition(bp: EdgeBreakPosition): Vtree.NodeContext;\n    /**\n     * Finalize a line break.\n     * @return holing true\n     */\n    finishBreak(\n      nodeContext: Vtree.NodeContext,\n      forceRemoveSelf: boolean,\n      endOfColumn: boolean,\n    ): Task.Result<boolean>;\n    findAcceptableBreakPosition(): BreakPositionAndNodeContext;\n    doFinishBreak(\n      nodeContext: Vtree.NodeContext,\n      overflownNodeContext: Vtree.NodeContext,\n      initialNodeContext: Vtree.NodeContext,\n      initialComputedBlockSize: number,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Determines if a page break is acceptable at this position\n     */\n    isBreakable(flowPosition: Vtree.NodeContext): boolean;\n    /**\n     * Determines if an indent value is zero\n     */\n    zeroIndent(val: string | number): boolean;\n    /**\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdge(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n    ): boolean;\n    /**\n     * Save a possible page break position on a CSS block edge. Check if it\n     * overflows.\n     * @return true if overflows\n     */\n    checkOverflowAndSaveEdgeAndBreakPosition(\n      nodeContext: Vtree.NodeContext,\n      trailingEdgeContexts: Vtree.NodeContext[],\n      saveEvenOverflown: boolean,\n      breakAtTheEdge: string | null,\n    ): boolean;\n    applyClearance(nodeContext: Vtree.NodeContext): boolean;\n    isBFC(formattingContext: Vtree.FormattingContext): boolean;\n    /**\n     * Skips positions until either the start of unbreakable block or inline\n     * content. Also sets breakBefore on the result combining break-before and\n     * break-after properties from all elements that meet at the edge.\n     */\n    skipEdges(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Skips non-renderable positions until it hits the end of the flow or some\n     * renderable content. Returns the nodeContext that was passed in if some\n     * content remains and null if all content could be skipped.\n     */\n    skipTailEdges(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    layoutFloatOrFootnote(\n      nodeContext: Vtree.NodeContext,\n    ): Task.Result<Vtree.NodeContext>;\n    /**\n     * Layout next portion of the source.\n     */\n    layoutNext(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      forcedBreakValue?: string | null,\n    ): Task.Result<Vtree.NodeContext>;\n    clearOverflownViewNodes(\n      nodeContext: Vtree.NodeContext,\n      removeSelf: boolean,\n    ): void;\n    initGeom(): void;\n    init(): void;\n    /**\n     * Save the potential breaking position at the edge. Should, in general, save\n     * \"after\" position but only after skipping all of the \"before\" ones and\n     * getting to the non-empty content (to get breakAtEdge right).\n     */\n    saveEdgeBreakPosition(\n      position: Vtree.NodeContext,\n      breakAtEdge: string | null,\n      overflows: boolean,\n    ): void;\n    /**\n     * @param checkPoints array of breaking points for breakable block\n     */\n    saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void;\n    updateMaxReachedAfterEdge(afterEdge: number): void;\n    /**\n     * @param chunkPosition starting position.\n     * @return holding end position.\n     */\n    layout(\n      chunkPosition: Vtree.ChunkPosition,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<Vtree.ChunkPosition>;\n    isFullWithPageFloats(): boolean;\n    getMaxBlockSizeOfPageFloats(): number;\n    doFinishBreakOfFragmentLayoutConstraints(nodeContext): void;\n    /**\n     * @param nodeContext starting position.\n     * @return holding end position.\n     */\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      leadingEdge: boolean,\n      breakAfter?: string | null,\n    ): Task.Result<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }>;\n    /**\n     * Re-layout already laid-out chunks. Return the position of the last flow if\n     * there is an overflow.\n     * TODO: deal with chunks that did not fit at all.\n     * @return holding end position.\n     */\n    redoLayout(): Task.Result<Vtree.ChunkPosition>;\n    saveDistanceToBlockEndFloats(): void;\n    collectElementsOffset(): RepetitiveElement.ElementsOffset[];\n  }\n\n  export type SinglePageFloatLayoutResult = {\n    floatArea: PageFloatArea | null;\n    pageFloatFragment: PageFloats.PageFloatFragment | null;\n    newPosition: Vtree.ChunkPosition | null;\n  };\n\n  /**\n   * breaking point resolver for Text Node.\n   */\n  export interface TextNodeBreaker {\n    breakTextNode(\n      textNode: Text,\n      nodeContext: Vtree.NodeContext,\n      low: number,\n      checkPoints: Vtree.NodeContext[],\n      checkpointIndex: number,\n      force: boolean,\n    ): Vtree.NodeContext;\n    breakAfterSoftHyphen(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    breakAfterOtherCharacter(\n      textNode: Text,\n      text: string,\n      viewIndex: number,\n      nodeContext: Vtree.NodeContext,\n    ): number;\n    updateNodeContext(\n      nodeContext: Vtree.NodeContext,\n      viewIndex: number,\n      textNode: Text,\n    ): Vtree.NodeContext;\n  }\n\n  export interface LayoutMode {\n    doLayout(\n      nodeContext: Vtree.NodeContext,\n      column: Layout.Column,\n    ): Task.Result<Vtree.NodeContext>;\n    accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean;\n    postLayout(\n      positionAfter: Vtree.NodeContext,\n      initialPosition: Vtree.NodeContext,\n      column: Layout.Column,\n      accepted: boolean,\n    ): boolean;\n  }\n\n  export interface PageFloatArea extends Column {\n    adjustContentRelativeSize: boolean;\n    readonly floatSide: string;\n    readonly parentContainer: Vtree.Container;\n\n    convertPercentageSizesToPx(target: Element): void;\n    fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext): void;\n    getContentInlineSize(): number;\n  }\n}\n\nexport namespace LayoutProcessor {\n  export interface BlockFormattingContext extends Vtree.FormattingContext {}\n\n  export function isInstanceOfBlockFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is BlockFormattingContext {\n    return object && object.formattingContextType === \"Block\";\n  }\n}\n\nexport namespace Net {\n  export type Response = {\n    status: number;\n    statusText: string | null;\n    url: string;\n    contentType: string | null;\n    responseText: string | null;\n    responseXML: Document;\n    responseBlob: Blob;\n  };\n\n  export interface ResourceStore<Resource> {\n    resources: { [key: string]: Resource };\n    fetchers: { [key: string]: TaskUtil.Fetcher<Resource> };\n    readonly parser: (\n      p1: Response,\n      p2: ResourceStore<Resource>,\n    ) => Task.Result<Resource>;\n    readonly type: XMLHttpRequestResponseType;\n\n    /**\n     * @return resource for the given URL\n     */\n    load(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): Task.Result<Resource>;\n    /**\n     * @return fetcher for the resource for the given URL\n     */\n    fetch(\n      url: string,\n      opt_required?: boolean,\n      opt_message?: string,\n    ): TaskUtil.Fetcher<Resource>;\n    get(url: string): XmlDoc.XMLDocHolder;\n    delete(url: string): void;\n  }\n}\n\nexport namespace PageFloats {\n  /**\n   * @enum {string}\n   */\n  export enum FloatReference {\n    INLINE = \"inline\",\n    COLUMN = \"column\",\n    REGION = \"region\",\n    PAGE = \"page\",\n  }\n\n  export type PageFloatID = string;\n\n  export interface PageFloat {\n    order: number | null;\n    id: PageFloatID | null;\n    readonly nodePosition: Vtree.NodePosition;\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly clearSide: string | null;\n    readonly flowName: string;\n    readonly floatMinWrapBlock: Css.Numeric | null;\n\n    getOrder(): number;\n    getId(): PageFloatID;\n    isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean;\n    isAllowedToPrecede(other: PageFloat): boolean;\n  }\n\n  export interface PageFloatFragment {\n    readonly floatReference: FloatReference;\n    readonly floatSide: string;\n    readonly continuations: PageFloatContinuation[];\n    readonly area: Vtree.Container;\n    readonly continues: boolean;\n\n    hasFloat(float: PageFloat): boolean;\n    findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null;\n    getOuterShape(): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n    getOrder(): number;\n    shouldBeStashedBefore(float: PageFloat): boolean;\n    addContinuations(continuations: PageFloatContinuation[]): void;\n    getFlowName(): string;\n  }\n\n  export interface PageFloatContinuation {\n    readonly float: PageFloat;\n    readonly nodePosition: Vtree.NodePosition;\n\n    equals(other: PageFloatContinuation | null): boolean;\n  }\n\n  export type PageFloatPlacementCondition = {\n    [key: string]: boolean;\n  };\n\n  export interface PageFloatLayoutContext {\n    writingMode: Css.Val;\n    direction: Css.Val;\n    floatFragments: PageFloatFragment[];\n    readonly parent: PageFloatLayoutContext;\n    readonly flowName: string | null;\n    readonly generatingNodePosition: Vtree.NodePosition | null;\n\n    getContainer(floatReference?: FloatReference): Vtree.Container;\n    setContainer(container: Vtree.Container);\n    addPageFloat(float: PageFloat): void;\n    getPageFloatLayoutContext(\n      floatReference: FloatReference,\n    ): PageFloatLayoutContext;\n    findPageFloatByNodePosition(\n      nodePosition: Vtree.NodePosition,\n    ): PageFloat | null;\n    isForbidden(float: PageFloat): boolean;\n    addPageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    removePageFloatFragment(\n      floatFragment: PageFloatFragment,\n      dontInvalidate?: boolean,\n    ): void;\n    findPageFloatFragment(float: PageFloat): PageFloatFragment | null;\n    hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean;\n    hasContinuingFloatFragmentsInFlow(flowName: string): boolean;\n    registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node): void;\n    collectPageFloatAnchors(): any;\n    isAnchorAlreadyAppeared(floatId: PageFloatID): boolean;\n    deferPageFloat(continuation: PageFloatContinuation): void;\n    hasPrecedingFloatsDeferredToNext(\n      float: PageFloat,\n      ignoreReference?: boolean,\n    ): boolean;\n    getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null;\n    getDeferredPageFloatContinuations(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getPageFloatContinuationsDeferredToNext(\n      flowName?: string | null,\n    ): PageFloatContinuation[];\n    getFloatsDeferredToNextInChildContexts(): PageFloat[];\n    checkAndForbidNotAllowedFloat(): boolean;\n    checkAndForbidFloatFollowingDeferredFloat(): boolean;\n    finish(): void;\n    hasSameContainerAs(other: PageFloatLayoutContext): boolean;\n    invalidate(): void;\n    detachChildren(): PageFloatLayoutContext[];\n    attachChildren(children: PageFloatLayoutContext[]): void;\n    isInvalidated(): boolean;\n    validate(): void;\n    removeEndFloatFragments(floatSide: string): void;\n    stashEndFloatFragments(float: PageFloat): void;\n    restoreStashedFragments(floatReference: FloatReference): void;\n    discardStashedFragments(floatReference: FloatReference): void;\n    getStashedFloatFragments(\n      floatReference: FloatReference,\n    ): PageFloatFragment[];\n    /**\n     * @param anchorEdge Null indicates that the anchor is not in the current\n     *     container.\n     * @return Logical float side (snap-block is resolved when init=false). Null\n     *     indicates that the float area does not fit inside the container\n     */\n    setFloatAreaDimensions(\n      area: Layout.PageFloatArea,\n      floatReference: FloatReference,\n      floatSide: string,\n      anchorEdge: number | null,\n      init: boolean,\n      force: boolean,\n      condition: PageFloatPlacementCondition,\n    ): string | null;\n    getFloatFragmentExclusions(): GeometryUtil.Shape[];\n    getMaxReachedAfterEdge(): number;\n    getBlockStartEdgeOfBlockEndFloats(): number;\n    getPageFloatClearEdge(clear: string, column: Layout.Column): number;\n    getPageFloatPlacementCondition(\n      float: PageFloat,\n      floatSide: string,\n      clearSide: string | null,\n    ): PageFloatPlacementCondition;\n    getLayoutConstraints(): Layout.LayoutConstraint[];\n    addLayoutConstraint(\n      layoutConstraint: Layout.LayoutConstraint,\n      floatReference: FloatReference,\n    ): void;\n    getMaxBlockSizeOfPageFloats(): number;\n    lock(): void;\n    unlock(): void;\n    isLocked(): boolean;\n  }\n\n  export interface PageFloatLayoutStrategy {\n    appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean;\n    appliesToFloat(float: PageFloat): boolean;\n    createPageFloat(\n      nodeContext: Vtree.NodeContext,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n      column: Layout.Column,\n    ): Task.Result<PageFloat>;\n    createPageFloatFragment(\n      continuations: PageFloatContinuation[],\n      floatSide: string,\n      floatArea: Layout.PageFloatArea,\n      continues: boolean,\n    ): PageFloatFragment;\n    findPageFloatFragment(\n      float: PageFloat,\n      pageFloatLayoutContext: PageFloatLayoutContext,\n    ): PageFloatFragment | null;\n    adjustPageFloatArea(\n      floatArea: Layout.PageFloatArea,\n      floatContainer: Vtree.Container,\n      column: Layout.Column,\n    );\n    forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext);\n  }\n}\n\nexport namespace Selectors {\n  export interface AfterIfContinues {\n    readonly sourceNode: Element;\n    readonly styler: PseudoElement.PseudoelementStyler;\n\n    createElement(\n      column: Layout.Column,\n      parentNodeContext: Vtree.NodeContext,\n    ): Task.Result<Element>;\n  }\n\n  export interface AfterIfContinuesLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    nodeContext: Vtree.NodeContext;\n    afterIfContinues: AfterIfContinues;\n    pseudoElementHeight: number;\n\n    getRepetitiveElements(): AfterIfContinuesElementsOffset;\n  }\n\n  export function isInstanceOfAfterIfContinuesLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is AfterIfContinuesLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType == \"AfterIfContinue\";\n  }\n\n  export interface AfterIfContinuesElementsOffset\n    extends RepetitiveElement.ElementsOffset {\n    nodeContext: Vtree.NodeContext;\n    pseudoElementHeight: number;\n\n    affectTo(nodeContext: Vtree.NodeContext): boolean;\n  }\n}\n\nexport namespace PseudoElement {\n  export interface PseudoelementStyler extends CssStyler.AbstractStyler {\n    contentProcessed: { [key: string]: boolean };\n    readonly element: Element;\n    style: CssCascade.ElementStyle;\n    styler: CssStyler.AbstractStyler;\n    readonly context: Exprs.Context;\n    readonly exprContentListener: Vtree.ExprContentListener;\n  }\n}\n\nexport namespace RepetitiveElement {\n  export interface RepetitiveElementsOwnerFormattingContext\n    extends Vtree.FormattingContext {\n    isRoot: boolean;\n    repetitiveElements: RepetitiveElements;\n    readonly parent: Vtree.FormattingContext;\n    readonly rootSourceNode: Element;\n    getRepetitiveElements(): RepetitiveElements;\n    getRootViewNode(position: Vtree.NodeContext): Element | null;\n    getRootNodeContext(\n      nodeContext: Vtree.NodeContext,\n    ): Vtree.NodeContext | null;\n    initializeRepetitiveElements(vertical: boolean): void;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is RepetitiveElementsOwnerFormattingContext {\n    if (!object) {\n      return false;\n    }\n    const type = object.formattingContextType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableFormattingContext(object)\n    ); // subset\n  }\n\n  export interface ElementsOffset {\n    calculateOffset(nodeContext: Vtree.NodeContext): number;\n    calculateMinimumOffset(nodeContext: Vtree.NodeContext): number;\n  }\n\n  export interface RepetitiveElements extends ElementsOffset {\n    isSkipHeader: boolean;\n    isSkipFooter: boolean;\n    enableSkippingFooter: boolean;\n    enableSkippingHeader: boolean;\n    doneInitialLayout: boolean;\n    firstContentSourceNode: Element | null;\n    lastContentSourceNode: Element | null;\n    allowInsert: boolean;\n    allowInsertRepeatitiveElements: boolean;\n    ownerSourceNode: Element;\n\n    setHeaderNodeContext(nodeContext: Vtree.NodeContext): void;\n    setFooterNodeContext(nodeContext: Vtree.NodeContext): void;\n    updateHeight(column: Layout.Column): void;\n    prepareLayoutFragment(): void;\n    appendHeaderToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendFooterToFragment(\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    appendElementToFragment(\n      nodePosition: Vtree.NodePosition,\n      rootNodeContext: Vtree.NodeContext,\n      firstChild: Node | null,\n      column: Layout.Column,\n    ): Task.Result<boolean>;\n    moveChildren(from: Element, to: Element, firstChild: Node | null): void;\n    isAfterLastContent(nodeContext: Vtree.NodeContext): boolean;\n    isFirstContentNode(nodeContext: Vtree.NodeContext): boolean;\n    isEnableToUpdateState(): boolean;\n    updateState(): void;\n    preventSkippingHeader(): void;\n    preventSkippingFooter(): void;\n    isHeaderRegistered(): boolean;\n    isFooterRegistered(): boolean;\n    isHeaderSourceNode(node: Node): boolean;\n    isFooterSourceNode(node: Node): boolean;\n  }\n\n  export interface RepetitiveElementsOwnerLayoutConstraint\n    extends Layout.FragmentLayoutConstraint {\n    getRepetitiveElements(): RepetitiveElements;\n  }\n\n  export function isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is RepetitiveElementsOwnerLayoutConstraint {\n    if (!object) {\n      return false;\n    }\n    const type = object.flagmentLayoutConstraintType;\n    return (\n      type === \"RepetitiveElementsOwner\" ||\n      Table.isInstanceOfTableRowLayoutConstraint(object)\n    ); // subset\n  }\n}\n\nexport namespace Table {\n  export interface TableFormattingContext\n    extends RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n    // FIXME\n  }\n\n  export function isInstanceOfTableFormattingContext(\n    object: Vtree.FormattingContext,\n  ): object is TableFormattingContext {\n    return object && object.formattingContextType === \"Table\";\n  }\n\n  export interface TableRowLayoutConstraint\n    extends RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint {\n    cellFragmentLayoutConstraints: {\n      constraints: Layout.FragmentLayoutConstraint[];\n      breakPosition: Vtree.NodeContext;\n    }[];\n\n    removeDummyRowNodes(nodeContext: Vtree.NodeContext): void;\n    getElementsOffsetsForTableCell(\n      column: Layout.Column,\n    ): RepetitiveElement.ElementsOffset[];\n  }\n\n  export function isInstanceOfTableRowLayoutConstraint(\n    object: Layout.FragmentLayoutConstraint,\n  ): object is TableRowLayoutConstraint {\n    return object && object.flagmentLayoutConstraintType === \"TableRow\";\n  }\n}\n\nexport namespace Vtree {\n  export type ClientRect = {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    width: number;\n    height: number;\n  };\n\n  /**\n   * Interface to read the position assigned to the elements and ranges by the\n   * browser.\n   */\n  export interface ClientLayout {\n    getRangeClientRects(range: Range): ClientRect[];\n    getElementClientRect(element: Element): ClientRect;\n    /**\n     * @return element's computed style\n     */\n    getElementComputedStyle(element: Element): CSSStyleDeclaration;\n  }\n\n  /**\n   * Styling, creating a single node's view, etc.\n   */\n  export interface LayoutContext {\n    /**\n     * Creates a functionally equivalent, but uninitialized layout context,\n     * suitable for building a separate column.\n     */\n    clone(): LayoutContext;\n    /**\n     * Set the current source node and create a view. Parameter firstTime\n     * is true (and possibly offsetInNode > 0) if node was broken on\n     * the previous page.\n     * @return true if children should be processed as well\n     */\n    setCurrent(\n      nodeContext: NodeContext,\n      firstTime: boolean,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<boolean>;\n    /**\n     * Set the container element that holds view elements produced from the\n     * source.\n     */\n    setViewRoot(viewRoot: Element, isFootnote: boolean);\n    /**\n     * Moves to the next view node, creating it and appending it to the view tree\n     * if needed.\n     * @return that corresponds to the next view node\n     */\n    nextInTree(\n      nodeContext: NodeContext,\n      atUnforcedBreak?: boolean,\n    ): Task.Result<NodeContext>;\n    /**\n     * Apply pseudo-element styles (if any).\n     * @param target element to apply styles to\n     */\n    applyPseudoelementStyle(\n      nodeContext: NodeContext,\n      pseudoName: string,\n      target: Element,\n    ): void;\n    /**\n     * Apply styles to footnote container.\n     * @param target element to apply styles to\n     * @return vertical\n     */\n    applyFootnoteStyle(\n      vertical: boolean,\n      rtl: boolean,\n      target: Element,\n    ): boolean;\n    /**\n     * Peel off innermost first-XXX pseudoelement, create and create view nodes\n     * after the end of that pseudoelement.\n     */\n    peelOff(\n      nodeContext: NodeContext,\n      nodeOffset: number,\n    ): Task.Result<NodeContext>;\n    /**\n     * Process a block-end edge of a fragmented block.\n     */\n    processFragmentedBlockEdge(nodeContext: NodeContext);\n    convertLengthToPx(\n      numeric: Css.Numeric,\n      viewNode: Node,\n      clientLayout: ClientLayout,\n    ): number | Css.Numeric;\n    /**\n     * Returns if two NodePositions represents the same position in the document.\n     */\n    isSameNodePosition(\n      nodePosition1: NodePosition,\n      nodePosition2: NodePosition,\n    ): boolean;\n    addEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    removeEventListener(\n      type: string,\n      listener: Base.EventListener,\n      capture?: boolean,\n    ): void;\n    dispatchEvent(evt: Base.Event): void;\n  }\n\n  /**\n   * Formatting context.\n   */\n  export interface FormattingContext {\n    formattingContextType: FormattingContextType;\n    getName(): string;\n    isFirstTime(nodeContext: NodeContext, firstTime: boolean): boolean;\n    getParent(): FormattingContext;\n    saveState(): any;\n    restoreState(state: any);\n  }\n\n  export type NodePositionStep = {\n    node: Node;\n    shadowType: ShadowType;\n    shadowContext: ShadowContext | null;\n    nodeShadow: ShadowContext | null;\n    shadowSibling: NodePositionStep | null;\n    formattingContext: FormattingContext | null;\n    fragmentIndex: number;\n  };\n\n  export type NodePosition = {\n    steps: NodePositionStep[];\n    offsetInNode: number;\n    after: boolean;\n    preprocessedTextContent: Diff.Change[] | null;\n  };\n\n  /**\n   * Handling of purely whitespace sequences between blocks\n   * @enum {number}\n   */\n  export enum Whitespace {\n    /**\n     * Whitespace sequence between blocks is ignored\n     */\n    IGNORE,\n    /**\n     * Whitespace sequence between blocks is ignored unless it containes newline\n     */\n    NEWLINE,\n    /**\n     * Whitespace sequence between blocks is preserved\n     */\n    PRESERVE,\n  }\n\n  export interface Container {\n    left: number;\n    top: number;\n    marginLeft: number;\n    marginRight: number;\n    marginTop: number;\n    marginBottom: number;\n    borderLeft: number;\n    borderRight: number;\n    borderTop: number;\n    borderBottom: number;\n    paddingLeft: number;\n    paddingRight: number;\n    paddingTop: number;\n    paddingBottom: number;\n    width: number;\n    height: number;\n    originX: number;\n    originY: number;\n    exclusions: GeometryUtil.Shape[];\n    innerShape: GeometryUtil.Shape;\n    computedBlockSize: number;\n    snapWidth: number;\n    snapHeight: number;\n    snapOffsetX: number;\n    snapOffsetY: number;\n    vertical: boolean; // vertical writing\n    element: Element;\n\n    getInsetTop(): number;\n    getInsetBottom(): number;\n    getInsetLeft(): number;\n    getInsetRight(): number;\n    getInsetBefore(): number;\n    getInsetAfter(): number;\n    getInsetStart(): number;\n    getInsetEnd(): number;\n    getBeforeEdge(box: ClientRect): number;\n    getAfterEdge(box: ClientRect): number;\n    getStartEdge(box: ClientRect): number;\n    getEndEdge(box: ClientRect): number;\n    getInlineSize(box: ClientRect): number;\n    getBoxSize(box: ClientRect): number;\n    getBoxDir(): number;\n    getInlineDir(): number;\n    copyFrom(other: Container): void;\n    setVerticalPosition(top: number, height: number): void;\n    setHorizontalPosition(left: number, width: number): void;\n    setBlockPosition(start: number, extent: number): void;\n    setInlinePosition(start: number, extent: number): void;\n    clear(): void;\n    getInnerShape(): GeometryUtil.Shape;\n    getInnerRect(): GeometryUtil.Rect;\n    getPaddingRect(): GeometryUtil.Rect;\n    getOuterShape(\n      outerShapeProp: Css.Val,\n      context: Exprs.Context,\n    ): GeometryUtil.Shape;\n    getOuterRect(): GeometryUtil.Rect;\n  }\n\n  /**\n   * @enum {number}\n   */\n  export enum ShadowType {\n    NONE,\n    CONTENT,\n    ROOTLESS,\n    ROOTED,\n  }\n\n  /**\n   * Data about shadow tree instance.\n   */\n  export interface ShadowContext {\n    readonly owner: Element;\n    readonly root: Element;\n    readonly xmldoc: XmlDoc.XMLDocHolder;\n    readonly parentShadow: ShadowContext;\n    subShadow: ShadowContext;\n    readonly type: Vtree.ShadowType;\n    readonly styler: object;\n\n    equals(other: ShadowContext): boolean;\n  }\n\n  /**\n   * Information about :first-letter or :first-line pseudoelements\n   * @param count 0 - first-letter, 1 or more - first line(s)\n   */\n  export interface FirstPseudo {\n    readonly outer: FirstPseudo;\n    readonly count: number;\n  }\n\n  /**\n   * NodeContext represents a position in the document + layout-related\n   * information attached to it. When after=false and offsetInNode=0, the\n   * position is inside the element (node), but just before its first child.\n   * When offsetInNode>0 it represents offset in the textual content of the\n   * node. When after=true it represents position right after the last child\n   * of the node. boxOffset is incremented by 1 for any valid node position.\n   */\n  export interface NodeContext {\n    // position itself\n    offsetInNode: number;\n    after: boolean;\n    shadowType: ShadowType; // parent's shadow type\n    shadowContext: Vtree.ShadowContext;\n    nodeShadow: Vtree.ShadowContext;\n    shadowSibling: NodeContext; // next \"sibling\" in the shadow tree\n    // other stuff\n    shared: boolean;\n    inline: boolean;\n    overflow: boolean;\n    breakPenalty: number;\n    display: string | null;\n    floatReference: PageFloats.FloatReference;\n    floatSide: string | null;\n    clearSide: string | null;\n    floatMinWrapBlock: Css.Numeric | null;\n    columnSpan: Css.Val | null;\n    verticalAlign: string;\n    captionSide: string;\n    inlineBorderSpacing: number;\n    blockBorderSpacing: number;\n    flexContainer: boolean;\n    whitespace: Whitespace;\n    hyphenateCharacter: string | null;\n    breakWord: boolean;\n    establishesBFC: boolean;\n    containingBlockForAbsolute: boolean;\n    breakBefore: string | null;\n    breakAfter: string | null;\n    viewNode: Node;\n    clearSpacer: Node;\n    inheritedProps: { [key: string]: number | string | Css.Val };\n    vertical: boolean;\n    direction: string;\n    firstPseudo: FirstPseudo;\n    lang: string | null;\n    preprocessedTextContent: Diff.Change[] | null;\n    formattingContext: FormattingContext;\n    repeatOnBreak: string | null;\n    pluginProps: {\n      [key: string]: string | number | undefined | null | (number | null)[];\n    };\n    fragmentIndex: number;\n    afterIfContinues: Selectors.AfterIfContinues;\n    footnotePolicy: Css.Ident | null;\n    pageType: string | null;\n\n    sourceNode: Node;\n    parent: NodeContext;\n    boxOffset: number;\n\n    resetView(): void;\n    modify(): NodeContext;\n    copy(): NodeContext;\n    clone(): NodeContext;\n    toNodePositionStep(): NodePositionStep;\n    toNodePosition(): NodePosition;\n    isInsideBFC(): boolean;\n    getContainingBlockForAbsolute(): NodeContext;\n    /**\n     * Walk up NodeContext tree (starting from itself) and call the callback for\n     * each block.\n     */\n    walkUpBlocks(callback: (p1: NodeContext) => any): void;\n    belongsTo(formattingContext: FormattingContext): boolean;\n  }\n\n  export interface ChunkPosition {\n    floats: NodePosition[];\n    primary: NodePosition;\n\n    clone(): ChunkPosition;\n    isSamePosition(other: ChunkPosition): boolean;\n  }\n\n  export type ExprContentListener = (\n    p1: Exprs.Val,\n    p2: string,\n    p3: Document,\n  ) => Node | null;\n}\n\nexport namespace XmlDoc {\n  export interface XMLDocHolder {\n    lang: string | null;\n    totalOffset: number;\n    root: Element;\n    body: Element;\n    head: Element;\n    last: Element;\n    lastOffset: number;\n    idMap: { [key: string]: Element };\n    readonly store: XMLDocStore;\n    readonly url: string;\n    readonly document: Document;\n\n    doc(): NodeList;\n    getElementOffset(element: Element): number;\n    getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean): number;\n    getTotalOffset(): number;\n    /**\n     * @return last node such that its offset is less or equal to the given\n     */\n    getNodeByOffset(offset: number): Node;\n    /**\n     * Get element by URL in the source document(s). URL must be in either '#id'\n     * or 'url#id' form.\n     */\n    getElement(url: string): Element | null;\n  }\n\n  export interface Predicate {\n    readonly fn: (p1: Node) => boolean;\n\n    check(node: Node): boolean;\n    withAttribute(name: string, value: string): Predicate;\n    withChild(name: string, opt_childPredicate?: Predicate): Predicate;\n  }\n\n  export interface NodeList {\n    readonly nodes: Node[];\n\n    asArray(): Node[];\n    size(): number;\n    /**\n     * Filter with predicate\n     */\n    predicate(pr: Predicate): NodeList;\n    forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList;\n    forEach<T>(fn: (p1: Node) => T): T[];\n    forEachNonNull<T>(fn: (p1: Node) => T): T[];\n    child(tag: string): NodeList;\n    childElements(): NodeList;\n    attribute(name: string): (string | null)[];\n    textContent(): (string | null)[];\n  }\n\n  export type XMLDocStore = Net.ResourceStore<XMLDocHolder>;\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Diff utility\n */\n\nimport fastdiff from \"fast-diff\";\n\nexport type Change = (number | string)[];\n\nexport function diffChars(originalText: string, newText: string): Change[] {\n  return fastdiff(originalText, newText, 0);\n}\n\n/**\n * @returns string\n */\nexport function restoreOriginalText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.INSERT) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\n/**\n * @returns string\n */\nexport function restoreNewText(changes: Change[]): any {\n  return changes.reduce((result, item) => {\n    if (item[0] === fastdiff.DELETE) {\n      return result;\n    }\n    return result + item[1];\n  }, \"\");\n}\n\nexport function resolveNewIndex(changes: Change[], oldIndex: number): number {\n  return resolveIndex(changes, oldIndex, 1);\n}\n\nexport function resolveOriginalIndex(\n  changes: Change[],\n  newIndex: number,\n): number {\n  return resolveIndex(changes, newIndex, -1);\n}\n\nexport function resolveIndex(\n  changes: Change[],\n  index: number,\n  coef: number,\n): number {\n  let diff = 0;\n  let current = 0;\n  changes.some((change) => {\n    for (let i = 0; i < (change[1] as string).length; i++) {\n      switch ((change[0] as number) * coef) {\n        case fastdiff.INSERT:\n          diff++;\n          break;\n        case fastdiff.DELETE:\n          diff--;\n          current++;\n          break;\n        case fastdiff.EQUAL:\n          current++;\n          break;\n      }\n      if (current > index) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return Math.max(Math.min(index, current - 1) + diff, 0);\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vtree - Basic view tree data structures and support utilities.\n */\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Diff from \"./diff\";\nimport * as Exprs from \"./exprs\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as TaskUtil from \"./task-util\";\nimport { assert } from \"./asserts\";\nimport {\n  CssStyler,\n  PageFloats,\n  PseudoElement,\n  Selectors,\n  Vtree,\n  XmlDoc,\n} from \"./types\";\n\nexport const delayedProps = {\n  transform: true,\n  \"transform-origin\": true,\n};\n\nexport const delayedPropsIfRelativePositioned = {\n  top: true,\n  bottom: true,\n  left: true,\n  right: true,\n};\n\nexport class DelayedItem {\n  constructor(\n    public target: Element,\n    public name: string,\n    public value: Css.Val,\n  ) {}\n}\n\nexport type PageHyperlinkEvent = {\n  type: string;\n  target;\n  currentTarget;\n  anchorElement: Element;\n  href: string;\n};\n\nexport type Trigger = {\n  observer: string;\n  event: string;\n  action: string;\n  ref: string;\n};\n\nexport const actions = {\n  show: function (obj) {\n    obj.style.visibility = \"visible\";\n  },\n  hide: function (obj) {\n    obj.style.visibility = \"hidden\";\n  },\n  play: function (obj) {\n    obj.currentTime = 0;\n    obj.play();\n  },\n  pause: function (obj) {\n    obj.pause();\n  },\n  resume: function (obj) {\n    obj.play();\n  },\n  mute: function (obj) {\n    obj.muted = true;\n  },\n  unmute: function (obj) {\n    obj.muted = false;\n  },\n};\n\nexport function makeListener(\n  refs: Element[],\n  action: string,\n): EventListener | null {\n  const actionFn = actions[action];\n  if (actionFn) {\n    return () => {\n      for (let k = 0; k < refs.length; k++) {\n        try {\n          actionFn(refs[k]);\n        } catch (err) {}\n      }\n    };\n  }\n  return null;\n}\n\nexport class Page extends Base.SimpleEventTarget {\n  private static AUTO_PAGE_WIDTH_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-width\";\n  private static AUTO_PAGE_HEIGHT_ATTRIBUTE: string =\n    \"data-vivliostyle-auto-page-height\";\n  pageAreaElement: HTMLElement | null = null;\n  delayedItems: DelayedItem[] = [];\n  hrefHandler: (e: Event) => void;\n  elementsById: { [key: string]: Element[] } = {};\n  dimensions: { width: number; height: number } = { width: 0, height: 0 };\n  isFirstPage: boolean = false;\n  isLastPage: boolean = false;\n  isBlankPage: boolean = false;\n  isAutoPageWidth: boolean = true;\n  isAutoPageHeight: boolean = true;\n  spineIndex: number = 0;\n  position: LayoutPosition = null;\n  offset: number = -1;\n  side: Constants.PageSide | null = null;\n  fetchers: TaskUtil.Fetcher<{}>[] = [];\n  marginBoxes: {\n    top: { [key: string]: Container };\n    bottom: { [key: string]: Container };\n    left: { [key: string]: Container };\n    right: { [key: string]: Container };\n  } = { top: {}, bottom: {}, left: {}, right: {} };\n\n  constructor(\n    public readonly container: HTMLElement,\n    public readonly bleedBox: HTMLElement,\n  ) {\n    super();\n    this.hrefHandler = (e: Event) => {\n      const anchorElement = e.currentTarget as Element;\n      const href =\n        anchorElement.getAttribute(\"href\") ||\n        anchorElement.getAttributeNS(Base.NS.XLINK, \"href\");\n      if (href) {\n        const evt = {\n          type: \"hyperlink\",\n          target: null,\n          currentTarget: null,\n          anchorElement,\n          href,\n          preventDefault() {\n            e.preventDefault();\n          },\n        };\n        this.dispatchEvent(evt);\n      }\n    };\n  }\n\n  setAutoPageWidth(isAuto: boolean) {\n    this.isAutoPageWidth = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_WIDTH_ATTRIBUTE);\n    }\n  }\n\n  setAutoPageHeight(isAuto: boolean) {\n    this.isAutoPageHeight = isAuto;\n    if (isAuto) {\n      this.container.setAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE, \"true\");\n    } else {\n      this.container.removeAttribute(Page.AUTO_PAGE_HEIGHT_ATTRIBUTE);\n    }\n  }\n\n  registerElementWithId(element: Element, id: string) {\n    const arr = this.elementsById[id];\n    if (!arr) {\n      this.elementsById[id] = [element];\n    } else {\n      arr.push(element);\n    }\n  }\n\n  finish(triggers: Trigger[], clientLayout: ClientLayout): void {\n    // Remove ID of elements which eventually did not fit in the page\n    // (Some nodes may have been removed after registration if they did not fit\n    // in the page)\n    Object.keys(this.elementsById).forEach((id) => {\n      const elems = this.elementsById[id];\n      for (let i = 0; i < elems.length; ) {\n        if (this.container.contains(elems[i])) {\n          i++;\n        } else {\n          elems.splice(i, 1);\n        }\n      }\n      if (elems.length === 0) {\n        delete this.elementsById[id];\n      }\n    });\n    const list = this.delayedItems;\n    for (let i = 0; i < list.length; i++) {\n      const item = list[i];\n      if (\n        item.target === this.container &&\n        item.name === \"transform\" &&\n        !this.isAutoPageWidth &&\n        !this.isAutoPageHeight\n      ) {\n        // When fixed page size is specified, cancel the transform property\n        // set at OPFView.makePage() for the specified viewport size\n        // (e.g. `<meta name=\"viewport\" content=\"width=1307, height=1920\"/>`)\n        // to avoid wrong page resizing.\n        continue;\n      }\n      Base.setCSSProperty(item.target, item.name, item.value.toString());\n    }\n\n    // use size of the container of the PageMasterInstance\n    const rect = clientLayout.getElementClientRect(this.container);\n    this.dimensions.width = rect.width;\n    this.dimensions.height = rect.height;\n    for (let i = 0; i < triggers.length; i++) {\n      const trigger = triggers[i];\n      const refs = this.elementsById[trigger.ref];\n      const observers = this.elementsById[trigger.observer];\n      if (refs && observers) {\n        const listener = makeListener(refs, trigger.action);\n        if (listener) {\n          for (let k = 0; k < observers.length; k++) {\n            observers[k].addEventListener(trigger.event, listener, false);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Zoom page.\n   * @param scale Factor to which the page will be scaled.\n   */\n  zoom(scale: number) {\n    Base.setCSSProperty(this.container, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Returns the page area element.\n   */\n  getPageAreaElement(): HTMLElement {\n    return this.pageAreaElement || this.container;\n  }\n}\n\nexport type Spread = {\n  left: Page;\n  right: Page;\n};\n\n/**\n * Marks an element as \"special\". It should not be used in bbox calculations.\n */\nexport const SPECIAL_ATTR = \"data-adapt-spec\";\n\nexport const Whitespace = Vtree.Whitespace;\nexport type Whitespace = Vtree.Whitespace; // eslint-disable-line no-redeclare\n\n/**\n * Resolves Whitespace value from a value of 'white-space' property\n * @param whitespace The value of 'white-space' property\n */\nexport function whitespaceFromPropertyValue(\n  whitespace: string,\n): Whitespace | null {\n  switch (whitespace) {\n    case \"normal\":\n    case \"nowrap\":\n      return Whitespace.IGNORE;\n    case \"pre-line\":\n      return Whitespace.NEWLINE;\n    case \"pre\":\n    case \"pre-wrap\":\n    case \"break-spaces\":\n      return Whitespace.PRESERVE;\n    default:\n      return null;\n  }\n}\n\nexport function canIgnore(node: Node, whitespace: Whitespace): boolean {\n  if (node.nodeType == 1) {\n    return false;\n  }\n  const text = node.textContent;\n  switch (whitespace) {\n    case Whitespace.IGNORE:\n      return !!text.match(/^\\s*$/);\n    case Whitespace.NEWLINE:\n      return !!text.match(/^[ \\t\\f]*$/);\n    case Whitespace.PRESERVE:\n      return text.length == 0;\n  }\n  throw new Error(`Unexpected whitespace: ${whitespace}`);\n}\n\nexport class Flow {\n  forcedBreakOffsets = [] as number[];\n  formattingContext: FormattingContext | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly parentFlowName: string | null,\n  ) {}\n}\n\nexport class FlowChunk {\n  startPage: number = -1;\n\n  constructor(\n    public flowName: string,\n    public element: Element,\n    public startOffset: number,\n    public priority: number,\n    public linger: number,\n    public exclusive: boolean,\n    public repeated: boolean,\n    public last: boolean,\n    public breakBefore: string | null,\n  ) {}\n\n  isBetter(other: FlowChunk): boolean {\n    if (!this.exclusive) {\n      return false;\n    }\n    if (!other.exclusive) {\n      return true;\n    }\n    if (this.priority > other.priority) {\n      return true;\n    }\n    return this.last;\n  }\n}\n\nexport type ClientRect = Vtree.ClientRect;\n\nexport function clientrectIncreasingTop(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r1.top - r2.top;\n}\n\nexport function clientrectDecreasingRight(\n  r1: ClientRect,\n  r2: ClientRect,\n): number {\n  return r2.right - r1.right;\n}\n\n/**\n * Interface to read the position assigned to the elements and ranges by the\n * browser.\n */\nexport type ClientLayout = Vtree.ClientLayout;\n\n/**\n * Styling, creating a single node's view, etc.\n */\nexport type LayoutContext = Vtree.LayoutContext;\n\n/**\n * Formatting context.\n */\nexport type FormattingContext = Vtree.FormattingContext;\n\nexport function eachAncestorFormattingContext(\n  nodeContext: NodeContext,\n  callback: (p1: FormattingContext) => any,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  for (let fc = nodeContext.formattingContext; fc; fc = fc.getParent()) {\n    callback(fc);\n  }\n}\n\nexport type NodePositionStep = Vtree.NodePositionStep;\n\nexport function isSameNodePositionStep(\n  nps1: NodePositionStep,\n  nps2: NodePositionStep,\n): boolean {\n  if (nps1 === nps2) {\n    return true;\n  }\n  if (!nps1 || !nps2) {\n    return false;\n  }\n  return (\n    (nps1.node === nps2.node ||\n      // Fix for issue #869\n      (!!nps1.shadowContext &&\n        !!nps2.shadowContext &&\n        nps1.shadowType === Vtree.ShadowType.ROOTLESS &&\n        nps2.shadowType === Vtree.ShadowType.ROOTLESS &&\n        (nps1.node as Element)?.outerHTML ===\n          (nps2.node as Element)?.outerHTML)) &&\n    nps1.shadowType === nps2.shadowType &&\n    isSameShadowContext(nps1.shadowContext, nps2.shadowContext) &&\n    isSameShadowContext(nps1.nodeShadow, nps2.nodeShadow) &&\n    isSameNodePositionStep(nps1.shadowSibling, nps2.shadowSibling)\n  );\n}\n\nexport type NodePosition = Vtree.NodePosition;\n\nexport function isSameNodePosition(\n  np1: NodePosition | null,\n  np2: NodePosition | null,\n): boolean {\n  if (np1 === np2) {\n    return true;\n  }\n  if (!np1 || !np2) {\n    return false;\n  }\n  if (\n    np1.offsetInNode !== np2.offsetInNode ||\n    np1.after !== np2.after ||\n    np1.steps.length !== np2.steps.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < np1.steps.length; i++) {\n    if (!isSameNodePositionStep(np1.steps[i], np2.steps[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function newNodePositionFromNode(node: Node): NodePosition {\n  const step: NodePositionStep = {\n    node,\n    shadowType: ShadowType.NONE,\n    shadowContext: null,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex: 0,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: null,\n  };\n}\n\nexport function newNodePositionFromNodeContext(\n  nodeContext: Vtree.NodeContext,\n  initialFragmentIndex: number | null,\n): NodePosition {\n  const step: NodePositionStep = {\n    node: nodeContext.sourceNode,\n    shadowType: ShadowType.NONE,\n    shadowContext: nodeContext.shadowContext,\n    nodeShadow: null,\n    shadowSibling: null,\n    formattingContext: null,\n    fragmentIndex:\n      initialFragmentIndex != null\n        ? initialFragmentIndex\n        : nodeContext.fragmentIndex,\n  };\n  return {\n    steps: [step],\n    offsetInNode: 0,\n    after: false,\n    preprocessedTextContent: nodeContext.preprocessedTextContent,\n  };\n}\n\nexport function makeNodeContextFromNodePositionStep(\n  step: NodePositionStep,\n  parent: Vtree.NodeContext,\n): NodeContext {\n  const nodeContext = new NodeContext(step.node, parent as NodeContext, 0);\n  nodeContext.shadowType = step.shadowType;\n  nodeContext.shadowContext = step.shadowContext;\n  nodeContext.nodeShadow = step.nodeShadow;\n  nodeContext.shadowSibling = step.shadowSibling\n    ? makeNodeContextFromNodePositionStep(step.shadowSibling, parent.copy())\n    : null;\n  nodeContext.formattingContext = step.formattingContext;\n  nodeContext.fragmentIndex = step.fragmentIndex + 1;\n  return nodeContext;\n}\n\nexport const ShadowType = Vtree.ShadowType;\nexport type ShadowType = Vtree.ShadowType; // eslint-disable-line no-redeclare\n\n/**\n * Data about shadow tree instance.\n */\nexport class ShadowContext implements Vtree.ShadowContext {\n  subShadow: ShadowContext = null;\n\n  constructor(\n    public readonly owner: Element,\n    public readonly root: Element,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly parentShadow: ShadowContext,\n    superShadow: ShadowContext,\n    public readonly type: ShadowType,\n    public readonly styler: CssStyler.AbstractStyler,\n  ) {\n    if (superShadow) {\n      superShadow.subShadow = this;\n    }\n  }\n\n  equals(other: ShadowContext): boolean {\n    if (!other) {\n      return false;\n    }\n    return (\n      this.owner === other.owner &&\n      this.xmldoc === other.xmldoc &&\n      this.type === other.type &&\n      isSameShadowContext(this.parentShadow, other.parentShadow)\n    );\n  }\n}\n\nexport function isSameShadowContext(\n  sc1: Vtree.ShadowContext,\n  sc2: Vtree.ShadowContext,\n): boolean {\n  return sc1 === sc2 || (!!sc1 && !!sc2 && sc1.equals(sc2));\n}\n\n/**\n * Information about :first-letter or :first-line pseudoelements\n * @param count 0 - first-letter, 1 or more - first line(s)\n */\nexport class FirstPseudo implements Vtree.FirstPseudo {\n  constructor(\n    public readonly outer: FirstPseudo,\n    public readonly count: number,\n  ) {}\n}\n\n/**\n * NodeContext represents a position in the document + layout-related\n * information attached to it. When after=false and offsetInNode=0, the\n * position is inside the element (node), but just before its first child.\n * When offsetInNode>0 it represents offset in the textual content of the\n * node. When after=true it represents position right after the last child\n * of the node. boxOffset is incremented by 1 for any valid node position.\n */\nexport class NodeContext implements Vtree.NodeContext {\n  // position itself\n  offsetInNode: number = 0;\n  after: boolean = false;\n  shadowType: ShadowType;\n\n  // parent's shadow type\n  shadowContext: Vtree.ShadowContext;\n  nodeShadow: Vtree.ShadowContext = null;\n  shadowSibling: NodeContext = null;\n\n  // next \"sibling\" in the shadow tree\n  // other stuff\n  shared: boolean = false;\n  inline: boolean = true;\n  overflow: boolean = false;\n  breakPenalty: number;\n  display: string | null = null;\n  floatReference: PageFloats.FloatReference;\n  floatSide: string | null = null;\n  clearSide: string | null = null;\n  floatMinWrapBlock: Css.Numeric | null = null;\n  columnSpan: Css.Val | null = null;\n  verticalAlign: string = \"baseline\";\n  captionSide: string = \"top\";\n  inlineBorderSpacing: number = 0;\n  blockBorderSpacing: number = 0;\n  flexContainer: boolean = false;\n  whitespace: Whitespace;\n  hyphenateCharacter: string | null;\n  breakWord: boolean;\n  establishesBFC: boolean = false;\n  containingBlockForAbsolute: boolean = false;\n  breakBefore: string | null = null;\n  breakAfter: string | null = null;\n  viewNode: Node = null;\n  clearSpacer: Node = null;\n  inheritedProps: { [key: string]: number | string | Css.Val };\n  vertical: boolean;\n  direction: string;\n  firstPseudo: FirstPseudo;\n  lang: string | null = null;\n  preprocessedTextContent: Diff.Change[] | null = null;\n  formattingContext: FormattingContext;\n  repeatOnBreak: string | null = null;\n  pluginProps: {\n    [key: string]: string | number | undefined | null | (number | null)[];\n  } = {};\n  fragmentIndex: number = 1;\n  afterIfContinues: Selectors.AfterIfContinues = null;\n  footnotePolicy: Css.Ident | null = null;\n  pageType: string | null;\n\n  constructor(\n    public sourceNode: Node,\n    public parent: NodeContext,\n    public boxOffset: number,\n  ) {\n    this.shadowType = ShadowType.NONE;\n    this.shadowContext = parent ? parent.shadowContext : null;\n    this.breakPenalty = parent ? parent.breakPenalty : 0;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.whitespace = parent ? parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = parent ? parent.hyphenateCharacter : null;\n    this.breakWord = parent ? parent.breakWord : false;\n    this.inheritedProps = parent ? parent.inheritedProps : {};\n    this.vertical = parent ? parent.vertical : false;\n    this.direction = parent ? parent.direction : \"ltr\";\n    this.firstPseudo = parent ? parent.firstPseudo : null;\n    this.formattingContext = parent ? parent.formattingContext : null;\n    this.pageType = parent ? parent.pageType : null;\n  }\n\n  resetView(): void {\n    this.inline = true;\n    this.breakPenalty = this.parent ? this.parent.breakPenalty : 0;\n    this.viewNode = null;\n    this.clearSpacer = null;\n    this.offsetInNode = 0;\n    this.after = false;\n    this.display = null;\n    this.floatReference = PageFloats.FloatReference.INLINE;\n    this.floatSide = null;\n    this.clearSide = null;\n    this.floatMinWrapBlock = null;\n    this.columnSpan = null;\n    this.verticalAlign = \"baseline\";\n    this.flexContainer = false;\n    this.whitespace = this.parent ? this.parent.whitespace : Whitespace.IGNORE;\n    this.hyphenateCharacter = this.parent\n      ? this.parent.hyphenateCharacter\n      : null;\n    this.breakWord = this.parent ? this.parent.breakWord : false;\n    this.breakBefore = null;\n    this.breakAfter = null;\n    this.nodeShadow = null;\n    this.establishesBFC = false;\n    this.containingBlockForAbsolute = false;\n    this.vertical = this.parent ? this.parent.vertical : false;\n    this.nodeShadow = null;\n    this.preprocessedTextContent = null;\n    this.formattingContext = this.parent ? this.parent.formattingContext : null;\n    this.repeatOnBreak = null;\n    this.pluginProps = {};\n    this.fragmentIndex = 1;\n    this.afterIfContinues = null;\n    this.footnotePolicy = null;\n  }\n\n  private cloneItem(): NodeContext {\n    const np = new NodeContext(this.sourceNode, this.parent, this.boxOffset);\n    np.offsetInNode = this.offsetInNode;\n    np.after = this.after;\n    np.nodeShadow = this.nodeShadow;\n    np.shadowType = this.shadowType;\n    np.shadowContext = this.shadowContext;\n    np.shadowSibling = this.shadowSibling;\n    np.inline = this.inline;\n    np.breakPenalty = this.breakPenalty;\n    np.display = this.display;\n    np.floatReference = this.floatReference;\n    np.floatSide = this.floatSide;\n    np.clearSide = this.clearSide;\n    np.floatMinWrapBlock = this.floatMinWrapBlock;\n    np.columnSpan = this.columnSpan;\n    np.verticalAlign = this.verticalAlign;\n    np.captionSide = this.captionSide;\n    np.inlineBorderSpacing = this.inlineBorderSpacing;\n    np.blockBorderSpacing = this.blockBorderSpacing;\n    np.establishesBFC = this.establishesBFC;\n    np.containingBlockForAbsolute = this.containingBlockForAbsolute;\n    np.flexContainer = this.flexContainer;\n    np.whitespace = this.whitespace;\n    np.hyphenateCharacter = this.hyphenateCharacter;\n    np.breakWord = this.breakWord;\n    np.breakBefore = this.breakBefore;\n    np.breakAfter = this.breakAfter;\n    np.viewNode = this.viewNode;\n    np.clearSpacer = this.clearSpacer;\n    np.firstPseudo = this.firstPseudo;\n    np.vertical = this.vertical;\n    np.overflow = this.overflow;\n    np.preprocessedTextContent = this.preprocessedTextContent;\n    np.formattingContext = this.formattingContext;\n    np.repeatOnBreak = this.repeatOnBreak;\n    np.pluginProps = Object.create(this.pluginProps);\n    np.fragmentIndex = this.fragmentIndex;\n    np.afterIfContinues = this.afterIfContinues;\n    np.footnotePolicy = this.footnotePolicy;\n    return np;\n  }\n\n  modify(): NodeContext {\n    if (!this.shared) {\n      return this;\n    }\n    return this.cloneItem();\n  }\n\n  copy(): NodeContext {\n    let np: NodeContext = this;\n    do {\n      if (np.shared) {\n        break;\n      }\n      np.shared = true;\n      np = np.parent;\n    } while (np);\n    return this;\n  }\n\n  clone(): NodeContext {\n    const np = this.cloneItem();\n    let npc = np;\n    let npp: NodeContext;\n    while ((npp = npc.parent) != null) {\n      npp = npp.cloneItem();\n      npc.parent = npp;\n      npc = npp;\n    }\n    return np;\n  }\n\n  toNodePositionStep(): NodePositionStep {\n    return {\n      node: this.sourceNode,\n      shadowType: this.shadowType,\n      shadowContext: this.shadowContext,\n      nodeShadow: this.nodeShadow,\n      shadowSibling: this.shadowSibling\n        ? this.shadowSibling.toNodePositionStep()\n        : null,\n      formattingContext: this.formattingContext,\n      fragmentIndex: this.fragmentIndex,\n    };\n  }\n\n  toNodePosition(): NodePosition {\n    let nc: NodeContext = this;\n    const steps = [];\n\n    // Fix for issue #703\n    if (\n      nc.shadowType === Vtree.ShadowType.ROOTLESS &&\n      (nc.floatReference !== PageFloats.FloatReference.INLINE ||\n        nc.floatSide === \"footnote\") &&\n      (nc.shadowContext?.styler as PseudoElement.PseudoelementStyler)?.style?.[\n        \"_pseudos\"\n      ]\n    ) {\n      nc = nc.parent;\n    }\n\n    do {\n      // We need fully \"peeled\" path, so don't record first-XXX pseudoelement\n      // containers\n      if (\n        !nc.firstPseudo ||\n        !nc.parent ||\n        nc.parent.firstPseudo === nc.firstPseudo\n      ) {\n        steps.push(nc.toNodePositionStep());\n      }\n      nc = nc.parent;\n    } while (nc);\n    const actualOffsetInNode = this.preprocessedTextContent\n      ? Diff.resolveOriginalIndex(\n          this.preprocessedTextContent,\n          this.offsetInNode,\n        )\n      : this.offsetInNode;\n    return {\n      steps,\n      offsetInNode: actualOffsetInNode,\n      after: this.after,\n      preprocessedTextContent: this.preprocessedTextContent,\n    };\n  }\n\n  isInsideBFC(): boolean {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.establishesBFC) {\n        return true;\n      }\n      parent = parent.parent;\n    }\n    return false;\n  }\n\n  getContainingBlockForAbsolute(): NodeContext {\n    let parent = this.parent;\n    while (parent) {\n      if (parent.containingBlockForAbsolute) {\n        return parent;\n      }\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Walk up NodeContext tree (starting from itself) and call the callback for\n   * each block.\n   */\n  walkUpBlocks(callback: (p1: NodeContext) => any) {\n    let nodeContext: NodeContext = this;\n    while (nodeContext) {\n      if (!nodeContext.inline) {\n        callback(nodeContext);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  belongsTo(formattingContext: FormattingContext): boolean {\n    return (\n      this.formattingContext === formattingContext &&\n      !!this.parent &&\n      this.parent.formattingContext === formattingContext\n    );\n  }\n}\n\nexport class ChunkPosition implements Vtree.ChunkPosition {\n  floats: NodePosition[] = null;\n\n  constructor(public primary: NodePosition) {}\n\n  clone(): ChunkPosition {\n    const result = new ChunkPosition(this.primary);\n    if (this.floats) {\n      result.floats = [];\n      for (let i = 0; i < this.floats.length; ++i) {\n        result.floats[i] = this.floats[i];\n      }\n    }\n    return result;\n  }\n\n  isSamePosition(other: ChunkPosition): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    if (!isSameNodePosition(this.primary, other.primary)) {\n      return false;\n    }\n    if (this.floats) {\n      if (!other.floats || this.floats.length !== other.floats.length) {\n        return false;\n      }\n      for (let i = 0; i < this.floats.length; i++) {\n        if (!isSameNodePosition(this.floats[i], other.floats[i])) {\n          return false;\n        }\n      }\n    } else if (other.floats) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport class FlowChunkPosition {\n  constructor(\n    public chunkPosition: ChunkPosition,\n    public readonly flowChunk: FlowChunk,\n  ) {}\n\n  clone(): FlowChunkPosition {\n    return new FlowChunkPosition(this.chunkPosition.clone(), this.flowChunk);\n  }\n\n  isSamePosition(other: FlowChunkPosition): boolean {\n    return (\n      !!other &&\n      (this === other || this.chunkPosition.isSamePosition(other.chunkPosition))\n    );\n  }\n}\n\nexport class FlowPosition {\n  positions: FlowChunkPosition[] = [];\n  startSide: string = \"any\";\n  breakAfter: string | null = null;\n\n  clone(): FlowPosition {\n    const newfp = new FlowPosition();\n    const arr = this.positions;\n    const newarr = newfp.positions;\n    for (let i = 0; i < arr.length; i++) {\n      newarr[i] = arr[i].clone();\n    }\n    newfp.startSide = this.startSide;\n    newfp.breakAfter = this.breakAfter;\n    return newfp;\n  }\n\n  isSamePosition(other: FlowPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (!other || this.positions.length !== other.positions.length) {\n      return false;\n    }\n    for (let i = 0; i < this.positions.length; i++) {\n      if (!this.positions[i].isSamePosition(other.positions[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasContent(offset: number): boolean {\n    return (\n      this.positions.length > 0 &&\n      this.positions[0].flowChunk.startOffset <= offset\n    );\n  }\n}\n\nexport class LayoutPosition {\n  /**\n   * One-based, incremented before layout.\n   */\n  page: number = 0;\n  flows: { [key: string]: Flow } = {};\n  flowPositions: { [key: string]: FlowPosition } = {};\n  isBlankPage: boolean = false;\n\n  /**\n   * flowPositions is built up to this offset.\n   */\n  highestSeenOffset: number = 0;\n\n  // FIXME: This properties seem to be not used\n  highestSeenNode: Node;\n  lookupPositionOffset: number;\n\n  clone(): LayoutPosition {\n    const newcp = new LayoutPosition();\n    newcp.page = this.page;\n    newcp.isBlankPage = this.isBlankPage;\n    newcp.highestSeenNode = this.highestSeenNode;\n    newcp.highestSeenOffset = this.highestSeenOffset;\n    newcp.lookupPositionOffset = this.lookupPositionOffset;\n    newcp.flows = this.flows;\n    for (const name in this.flowPositions) {\n      newcp.flowPositions[name] = this.flowPositions[name].clone();\n    }\n    return newcp;\n  }\n\n  isSamePosition(other: LayoutPosition): boolean {\n    if (this === other) {\n      return true;\n    }\n    if (\n      !other ||\n      this.page !== other.page\n      // Removed:\n      //   || this.highestSeenOffset !== other.highestSeenOffset\n      // to prevent unnecessary re-layout (Issue #681-case2)\n    ) {\n      return false;\n    }\n    const thisFlowNames = Object.keys(this.flowPositions);\n    const otherFlowNames = Object.keys(other.flowPositions);\n    if (thisFlowNames.length !== otherFlowNames.length) {\n      return false;\n    }\n    for (const flowName of thisFlowNames) {\n      if (\n        !this.flowPositions[flowName].isSamePosition(\n          other.flowPositions[flowName],\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param name flow name.\n   */\n  hasContent(name: string, offset: number): boolean {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return false;\n    }\n    return flowPos.hasContent(offset);\n  }\n\n  startSideOfFlow(name: string): string {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return \"any\";\n    }\n    return flowPos.startSide;\n  }\n\n  firstFlowChunkOfFlow(name: string): FlowChunk | null {\n    const flowPos = this.flowPositions[name];\n    if (!flowPos) {\n      return null;\n    }\n    const flowChunkPosition = flowPos.positions[0];\n    if (!flowChunkPosition) {\n      return null;\n    }\n    return flowChunkPosition.flowChunk;\n  }\n}\n\nexport class Container implements Vtree.Container {\n  left: number = 0;\n  top: number = 0;\n  marginLeft: number = 0;\n  marginRight: number = 0;\n  marginTop: number = 0;\n  marginBottom: number = 0;\n  borderLeft: number = 0;\n  borderRight: number = 0;\n  borderTop: number = 0;\n  borderBottom: number = 0;\n  paddingLeft: number = 0;\n  paddingRight: number = 0;\n  paddingTop: number = 0;\n  paddingBottom: number = 0;\n  width: number = 0;\n  height: number = 0;\n  originX: number = 0;\n  originY: number = 0;\n  exclusions: GeometryUtil.Shape[] = null;\n  innerShape: GeometryUtil.Shape = null;\n  computedBlockSize: number = 0;\n  snapWidth: number = 0;\n  snapHeight: number = 0;\n  snapOffsetX: number = 0;\n  snapOffsetY: number = 0;\n  vertical: boolean = false; // vertical writing\n\n  constructor(public element: Element) {}\n\n  getInsetTop() {\n    return this.marginTop + this.borderTop + this.paddingTop;\n  }\n\n  getInsetBottom() {\n    return this.marginBottom + this.borderBottom + this.paddingBottom;\n  }\n\n  getInsetLeft() {\n    return this.marginLeft + this.borderLeft + this.paddingLeft;\n  }\n\n  getInsetRight() {\n    return this.marginRight + this.borderRight + this.paddingRight;\n  }\n\n  getInsetBefore() {\n    if (this.vertical) {\n      return this.getInsetRight();\n    } else {\n      return this.getInsetTop();\n    }\n  }\n\n  getInsetAfter() {\n    if (this.vertical) {\n      return this.getInsetLeft();\n    } else {\n      return this.getInsetBottom();\n    }\n  }\n\n  getInsetStart() {\n    if (this.vertical) {\n      return this.getInsetTop();\n    } else {\n      return this.getInsetLeft();\n    }\n  }\n\n  getInsetEnd() {\n    if (this.vertical) {\n      return this.getInsetBottom();\n    } else {\n      return this.getInsetRight();\n    }\n  }\n\n  getBeforeEdge(box: ClientRect): number {\n    return this.vertical ? box.right : box.top;\n  }\n\n  getAfterEdge(box: ClientRect): number {\n    return this.vertical ? box.left : box.bottom;\n  }\n\n  getStartEdge(box: ClientRect): number {\n    return this.vertical ? box.top : box.left;\n  }\n\n  getEndEdge(box: ClientRect): number {\n    return this.vertical ? box.bottom : box.right;\n  }\n\n  getInlineSize(box: ClientRect): number {\n    return this.vertical ? box.bottom - box.top : box.right - box.left;\n  }\n\n  getBoxSize(box: ClientRect): number {\n    return this.vertical ? box.right - box.left : box.bottom - box.top;\n  }\n\n  getBoxDir(): number {\n    return this.vertical ? -1 : 1;\n  }\n\n  getInlineDir(): number {\n    return 1;\n  }\n\n  copyFrom(other: Container): void {\n    this.element = other.element;\n    this.left = other.left;\n    this.top = other.top;\n    this.marginLeft = other.marginLeft;\n    this.marginRight = other.marginRight;\n    this.marginTop = other.marginTop;\n    this.marginBottom = other.marginBottom;\n    this.borderLeft = other.borderLeft;\n    this.borderRight = other.borderRight;\n    this.borderTop = other.borderTop;\n    this.borderBottom = other.borderBottom;\n    this.paddingLeft = other.paddingLeft;\n    this.paddingRight = other.paddingRight;\n    this.paddingTop = other.paddingTop;\n    this.paddingBottom = other.paddingBottom;\n    this.width = other.width;\n    this.height = other.height;\n    this.originX = other.originX;\n    this.originY = other.originY;\n    this.innerShape = other.innerShape;\n    this.exclusions = other.exclusions;\n    this.computedBlockSize = other.computedBlockSize;\n    this.snapWidth = other.snapWidth;\n    this.snapHeight = other.snapHeight;\n    this.vertical = other.vertical;\n  }\n\n  setVerticalPosition(top: number, height: number): void {\n    this.top = top;\n    this.height = height;\n    Base.setCSSProperty(this.element, \"top\", `${top}px`);\n    Base.setCSSProperty(this.element, \"height\", `${height}px`);\n  }\n\n  setHorizontalPosition(left: number, width: number): void {\n    this.left = left;\n    this.width = width;\n    Base.setCSSProperty(this.element, \"left\", `${left}px`);\n    Base.setCSSProperty(this.element, \"width\", `${width}px`);\n  }\n\n  setBlockPosition(start: number, extent: number): void {\n    if (this.vertical) {\n      const outerExtent =\n        extent +\n        this.marginLeft +\n        this.marginRight +\n        this.paddingLeft +\n        this.paddingRight +\n        this.borderLeft +\n        this.borderRight;\n      this.setHorizontalPosition(\n        start + outerExtent * this.getBoxDir(),\n        extent,\n      );\n    } else {\n      this.setVerticalPosition(start, extent);\n    }\n  }\n\n  setInlinePosition(start: number, extent: number): void {\n    if (this.vertical) {\n      this.setVerticalPosition(start, extent);\n    } else {\n      this.setHorizontalPosition(start, extent);\n    }\n  }\n\n  clear() {\n    const parent = this.element;\n    let c: Node;\n    while ((c = parent.lastChild)) {\n      parent.removeChild(c);\n    }\n  }\n\n  getInnerShape(): GeometryUtil.Shape {\n    const rect = this.getInnerRect();\n    if (this.innerShape) {\n      return this.innerShape.withOffset(rect.x1, rect.y1);\n    }\n    return GeometryUtil.shapeForRect(rect.x1, rect.y1, rect.x2, rect.y2);\n  }\n\n  getInnerRect(): GeometryUtil.Rect {\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    return new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n  }\n\n  getPaddingRect(): GeometryUtil.Rect {\n    const paddingX =\n      this.originX + this.left + this.marginLeft + this.borderLeft;\n    const paddingY = this.originY + this.top + this.marginTop + this.borderTop;\n    const paddingWidth = this.paddingLeft + this.width + this.paddingRight;\n    const paddingHeight = this.paddingTop + this.height + this.paddingBottom;\n    return new GeometryUtil.Rect(\n      paddingX,\n      paddingY,\n      paddingX + paddingWidth,\n      paddingY + paddingHeight,\n    );\n  }\n\n  getOuterShape(\n    outerShapeProp: Css.Val,\n    context: Exprs.Context,\n  ): GeometryUtil.Shape {\n    const rect = this.getOuterRect();\n    return CssProp.toShape(\n      outerShapeProp,\n      rect.x1,\n      rect.y1,\n      rect.x2 - rect.x1,\n      rect.y2 - rect.y1,\n      context,\n    );\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    const outerX = this.originX + this.left;\n    const outerY = this.originY + this.top;\n    const outerWidth = this.getInsetLeft() + this.width + this.getInsetRight();\n    const outerHeight =\n      this.getInsetTop() + this.height + this.getInsetBottom();\n    return new GeometryUtil.Rect(\n      outerX,\n      outerY,\n      outerX + outerWidth,\n      outerY + outerHeight,\n    );\n  }\n}\n\nexport type ExprContentListener = Vtree.ExprContentListener;\n\nexport class ContentPropertyHandler extends Css.Visitor {\n  constructor(\n    public readonly elem: Element,\n    public readonly context: Exprs.Context,\n    public readonly rootContentValue: Css.Val,\n    public readonly exprContentListener: ExprContentListener,\n  ) {\n    super();\n  }\n\n  private visitStrInner(str: string, node?: Node | null) {\n    if (!node) {\n      if (this.elem.lastChild instanceof Text) {\n        this.elem.lastChild.textContent += str;\n        return;\n      }\n      node = this.elem.ownerDocument.createTextNode(str);\n    }\n    this.elem.appendChild(node);\n  }\n\n  /** @override */\n  visitStr(str: Css.Str): Css.Val {\n    this.visitStrInner(str.str);\n    return null;\n  }\n\n  /** @override */\n  visitURL(url: Css.URL): Css.Val {\n    if ((this.rootContentValue as any).url) {\n      this.elem.setAttribute(\"src\", url.url);\n    } else {\n      const img = this.elem.ownerDocument.createElementNS(Base.NS.XHTML, \"img\");\n      img.setAttribute(\"src\", url.url);\n      this.elem.appendChild(img);\n    }\n    return null;\n  }\n\n  /** @override */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.visitValues(list.values);\n    return null;\n  }\n\n  /** @override */\n  visitExpr(expr: Css.Expr): Css.Val {\n    const ex = expr.toExpr();\n    let val = ex.evaluate(this.context);\n    if (typeof val === \"string\") {\n      if (ex instanceof Exprs.Named) {\n        // For env(pub-title) and env(doc-title)\n        // Need to unquote the result. To be consistent with cssparse.evaluateExprToCSS()\n        val = CssParser.parseValue(\n          ex.scope,\n          new CssTokenizer.Tokenizer(val, null),\n          \"\",\n        ).stringValue();\n      }\n      assert(this.elem.ownerDocument);\n      const node = this.exprContentListener(ex, val, this.elem.ownerDocument);\n      this.visitStrInner(val, node);\n    }\n    return null;\n  }\n}\n\nexport function nonTrivialContent(val: Css.Val): boolean {\n  return (\n    val != null &&\n    val !== Css.empty &&\n    val !== Css.ident.normal &&\n    val !== Css.ident.none &&\n    !Css.isDefaultingValue(val)\n  );\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssCascade - CSS Cascade.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\nimport { CssCascade, CssStyler } from \"./types\";\n\nexport type ElementStyle = {\n  [key: string]:\n    | CascadeValue\n    | CascadeValue[]\n    | ElementStyleMap\n    | { matcher: Matchers.Matcher; styles: ElementStyle }[];\n};\n\nexport const inheritedProps = {\n  \"border-collapse\": true,\n  \"border-spacing\": true,\n  \"caption-side\": true,\n  \"clip-rule\": true,\n  color: true,\n  \"color-interpolation\": true,\n  \"color-rendering\": true,\n  cursor: true,\n  direction: true,\n  \"empty-cells\": true,\n  fill: true,\n  \"fill-opacity\": true,\n  \"fill-rule\": true,\n  \"font-kerning\": true,\n  \"font-size\": true,\n  \"font-size-adjust\": true,\n  \"font-family\": true,\n  \"font-feature-settings\": true,\n  \"font-style\": true,\n  \"font-stretch\": true,\n  \"font-variant-ligatures\": true,\n  \"font-variant-caps\": true,\n  \"font-variant-numeric\": true,\n  \"font-variant-east-asian\": true,\n  \"font-weight\": true,\n  \"glyph-orientation-vertical\": true,\n  \"hanging-punctuation\": true,\n  hyphens: true,\n  \"hyphenate-character\": true,\n  \"hyphenate-limit-chars\": true,\n  \"hyphenate-limit-last\": true,\n  \"image-rendering\": true,\n  \"image-resolution\": true,\n  \"letter-spacing\": true,\n  \"line-break\": true,\n  \"line-height\": true,\n  \"list-style-image\": true,\n  \"list-style-position\": true,\n  \"list-style-type\": true,\n  marker: true,\n  \"marker-end\": true,\n  \"marker-mid\": true,\n  \"marker-start\": true,\n  orphans: true,\n  \"overflow-wrap\": true,\n  \"paint-order\": true,\n  \"pointer-events\": true,\n  quotes: true,\n  \"ruby-align\": true,\n  \"ruby-position\": true,\n  \"shape-rendering\": true,\n  stroke: true,\n  \"stroke-dasharray\": true,\n  \"stroke-dashoffset\": true,\n  \"stroke-linecap\": true,\n  \"stroke-linejoin\": true,\n  \"stroke-miterlimit\": true,\n  \"stroke-opacity\": true,\n  \"stroke-width\": true,\n  \"tab-size\": true,\n  \"text-align\": true,\n  \"text-align-last\": true,\n  \"text-anchor\": true,\n  \"text-decoration-skip\": true,\n  \"text-emphasis-color\": true,\n  \"text-emphasis-position\": true,\n  \"text-emphasis-style\": true,\n  \"text-combine-upright\": true,\n  \"text-indent\": true,\n  \"text-justify\": true,\n  \"text-orientation\": true,\n  \"text-rendering\": true,\n  \"text-size-adjust\": true,\n  \"text-spacing\": true,\n  \"text-transform\": true,\n  \"text-underline-position\": true,\n  visibility: true,\n  \"white-space\": true,\n  widows: true,\n  \"word-break\": true,\n  \"word-spacing\": true,\n  \"writing-mode\": true,\n};\n\nexport const polyfilledInheritedProps = [\n  \"box-decoration-break\",\n  // TODO: box-decoration-break should not be inherited.\n  // https://github.com/vivliostyle/vivliostyle.js/issues/259\n  \"image-resolution\",\n  \"orphans\",\n  \"widows\",\n];\n\nexport function getPolyfilledInheritedProps(): string[] {\n  const hooks: Plugin.PolyfilledInheritedPropsHook[] = Plugin.getHooksForName(\n    Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n  );\n  return hooks.reduce(\n    (props, f) => props.concat(f()),\n    [].concat(polyfilledInheritedProps),\n  );\n}\n\nexport const supportedNamespaces = {\n  \"http://www.idpf.org/2007/ops\": true,\n  \"http://www.w3.org/1999/xhtml\": true,\n  \"http://www.w3.org/2000/svg\": true,\n};\n\nexport const coupledPatterns = [\n  \"margin-%\",\n  \"padding-%\",\n  \"border-%-width\",\n  \"border-%-style\",\n  \"border-%-color\",\n  \"%\",\n];\n\nexport const coupledExtentPatterns = [\"max-%\", \"min-%\", \"%\"];\n\nexport const geomNames: { [key: string]: boolean } = (() => {\n  const sides = [\"left\", \"right\", \"top\", \"bottom\"];\n  const names = {\n    width: true,\n    height: true,\n    \"max-width\": true,\n    \"max-height\": true,\n    \"min-width\": true,\n    \"min-height\": true,\n  };\n  for (let i = 0; i < coupledPatterns.length; i++) {\n    for (let k = 0; k < sides.length; k++) {\n      const name = coupledPatterns[i].replace(\"%\", sides[k]);\n      names[name] = true;\n    }\n  }\n  return names;\n})();\n\nexport function buildCouplingMap(\n  sideMap: { [key: string]: string },\n  extentMap: { [key: string]: string },\n): { [key: string]: string } {\n  const map: { [key: string]: string } = {};\n  for (const pattern of coupledPatterns) {\n    for (const side in sideMap) {\n      const name1 = pattern.replace(\"%\", side);\n      const name2 = pattern.replace(\"%\", sideMap[side]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  for (const extentPattern of coupledExtentPatterns) {\n    for (const extent in extentMap) {\n      const name1 = extentPattern.replace(\"%\", extent);\n      const name2 = extentPattern.replace(\"%\", extentMap[extent]);\n      map[name1] = name2;\n      map[name2] = name1;\n    }\n  }\n  return map;\n}\n\nexport const couplingMapVert = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"top\",\n    \"inline-end\": \"bottom\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHor = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"left\",\n    \"inline-end\": \"right\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport const couplingMapVertRtl = buildCouplingMap(\n  {\n    \"block-start\": \"right\",\n    \"block-end\": \"left\",\n    \"inline-start\": \"bottom\",\n    \"inline-end\": \"top\",\n  },\n  { \"block-size\": \"width\", \"inline-size\": \"height\" },\n);\n\nexport const couplingMapHorRtl = buildCouplingMap(\n  {\n    \"block-start\": \"top\",\n    \"block-end\": \"bottom\",\n    \"inline-start\": \"right\",\n    \"inline-end\": \"left\",\n  },\n  { \"block-size\": \"height\", \"inline-size\": \"width\" },\n);\n\nexport class CascadeValue {\n  constructor(\n    public readonly value: Css.Val,\n    public readonly priority: number,\n  ) {}\n\n  getBaseValue(): CascadeValue {\n    return this;\n  }\n\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new CascadeValue(value, this.priority);\n  }\n\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new CascadeValue(this.value, this.priority + specificity);\n  }\n\n  evaluate(context: Exprs.Context, propName?: string): Css.Val {\n    if (propName && Css.isCustomPropName(propName)) {\n      return this.value;\n    }\n    return CssParser.evaluateCSSToCSS(context, this.value, propName);\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    return true;\n  }\n}\n\n/**\n * Internal subclass of CascadeValue. Should never be seen outside of the\n * cascade engine.\n */\nexport class ConditionalCascadeValue extends CascadeValue {\n  constructor(\n    value: Css.Val,\n    priority: number,\n    public readonly condition: Exprs.Val,\n  ) {\n    super(value, priority);\n  }\n\n  /**\n   * @override\n   */\n  getBaseValue(): CascadeValue {\n    return new CascadeValue(this.value, this.priority);\n  }\n\n  /**\n   * @override\n   */\n  filterValue(visitor: Css.Visitor): CascadeValue {\n    const value = this.value.visit(visitor);\n    if (value === this.value) {\n      return this;\n    }\n    return new ConditionalCascadeValue(value, this.priority, this.condition);\n  }\n\n  /**\n   * @override\n   */\n  increaseSpecificity(specificity: number): CascadeValue {\n    if (specificity == 0) {\n      return this;\n    }\n    return new ConditionalCascadeValue(\n      this.value,\n      this.priority + specificity,\n      this.condition,\n    );\n  }\n\n  isEnabled(context: Exprs.Context): boolean {\n    try {\n      return !!this.condition.evaluate(context);\n    } catch (err) {\n      Logging.logger.warn(err);\n    }\n    return false;\n  }\n}\n\n/**\n * @param tv current value (cannot be conditional)\n * @param av cascaded value (can be conditional)\n */\nexport function cascadeValues(\n  context: Exprs.Context,\n  tv: CascadeValue,\n  av: CascadeValue,\n): CascadeValue {\n  if ((tv == null || av.priority >= tv.priority) && av.isEnabled(context)) {\n    return av.getBaseValue();\n  }\n  return tv;\n}\n\nexport type ElementStyleMap = {\n  [key: string]: ElementStyle;\n};\n\nexport const SPECIALS = {\n  \"region-id\": true,\n  \"fragment-selector-id\": true,\n};\n\nexport function isSpecialName(name: string): boolean {\n  return !!SPECIALS[name];\n}\n\nexport function isMapName(name: string): boolean {\n  return name.charAt(0) == \"_\";\n}\n\nexport function isPropName(name: string): boolean {\n  return name.charAt(0) != \"_\" && !SPECIALS[name];\n}\n\nexport function isInherited(name: string): boolean {\n  return !!inheritedProps[name] || Css.isCustomPropName(name);\n}\n\nexport function getProp(style: ElementStyle, name: string): CascadeValue {\n  return style[name] as CascadeValue;\n}\n\n/**\n * @return void\n */\nexport function setProp(\n  style: ElementStyle,\n  name: string,\n  value: CascadeValue,\n): void {\n  if (!value) {\n    delete style[name];\n  } else {\n    style[name] = value;\n  }\n}\n\nexport function getStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  return style[name] as ElementStyleMap;\n}\n\nexport function getMutableStyleMap(\n  style: ElementStyle,\n  name: string,\n): ElementStyleMap {\n  let r = style[name] as ElementStyleMap;\n  if (!r) {\n    r = {};\n    style[name] = r;\n  }\n  return r;\n}\n\nexport const getViewConditionalStyleMap = (\n  style: ElementStyle,\n): { matcher: Matchers.Matcher; styles: ElementStyle }[] => {\n  let r = style[\"_viewConditionalStyles\"] as {\n    matcher: Matchers.Matcher;\n    styles: ElementStyle;\n  }[];\n  if (!r) {\n    r = [];\n    style[\"_viewConditionalStyles\"] = r;\n  }\n  return r;\n};\n\nexport function getSpecial(style: ElementStyle, name: string): CascadeValue[] {\n  return style[name] as CascadeValue[];\n}\n\nexport function getMutableSpecial(\n  style: ElementStyle,\n  name: string,\n): CascadeValue[] {\n  let r = style[name] as CascadeValue[];\n  if (!r) {\n    r = [];\n    style[name] = r;\n  }\n  return r;\n}\n\nexport function mergeIn(\n  context: Exprs.Context,\n  target: ElementStyle,\n  style: ElementStyle,\n  specificity: number,\n  pseudoelement: string | null,\n  regionId: string | null,\n  viewConditionMatcher: Matchers.Matcher | null,\n): void {\n  const hierarchy = [\n    { id: pseudoelement, styleKey: \"_pseudos\" },\n    { id: regionId, styleKey: \"_regions\" },\n  ];\n  hierarchy.forEach((item) => {\n    if (item.id) {\n      const styleMap = getMutableStyleMap(target, item.styleKey);\n      target = styleMap[item.id];\n      if (!target) {\n        target = {} as ElementStyle;\n        styleMap[item.id] = target;\n      }\n    }\n  });\n  if (viewConditionMatcher) {\n    const styleMap = getViewConditionalStyleMap(target);\n    target = {} as ElementStyle;\n    styleMap.push({\n      styles: target,\n      matcher: viewConditionMatcher,\n    });\n  }\n  for (const prop in style) {\n    if (isMapName(prop)) {\n      continue;\n    }\n    if (isSpecialName(prop)) {\n      // special properties: list of all assigned values\n      const as = getSpecial(style, prop);\n      const ts = getMutableSpecial(target, prop);\n      Array.prototype.push.apply(ts, as);\n    } else {\n      // regular properties: higher priority wins\n      const av = getProp(style, prop).increaseSpecificity(specificity);\n      const tv = getProp(target, prop);\n      setProp(target, prop, cascadeValues(context, tv, av));\n\n      // Expand shorthand property (its value contains variables).\n      const propListLH = (\n        context as Exprs.Context & {\n          style: { validatorSet: CssValidator.ValidatorSet };\n        }\n      ).style?.validatorSet.shorthands[prop]?.propList;\n      if (propListLH) {\n        for (const propLH of propListLH) {\n          const avLH = new CascadeValue(Css.empty, av.priority);\n          const tvLH = getProp(target, propLH);\n          setProp(target, propLH, cascadeValues(context, tvLH, avLH));\n        }\n      }\n    }\n  }\n}\n\nexport function mergeAll(\n  context: Exprs.Context,\n  styles: ElementStyle[],\n): ElementStyle {\n  const target = {} as ElementStyle;\n  for (let k = 0; k < styles.length; k++) {\n    mergeIn(context, target, styles[k], 0, null, null, null);\n  }\n  return target;\n}\n\nexport function chainActions(\n  chain: ChainedAction[],\n  action: CascadeAction,\n): CascadeAction {\n  if (chain.length > 0) {\n    chain.sort((a, b) => b.getPriority() - a.getPriority());\n    let chained: ChainedAction | null = null;\n    for (let i = chain.length - 1; i >= 0; i--) {\n      chained = chain[i];\n      chained.chained = action;\n      action = chained;\n    }\n    return chained;\n  }\n  return action;\n}\n\nexport class InheritanceVisitor extends Css.FilterVisitor {\n  propName: string = \"\";\n\n  constructor(\n    public readonly props: ElementStyle,\n    public readonly context: Exprs.Context,\n  ) {\n    super();\n  }\n\n  setPropName(name: string): void {\n    this.propName = name;\n  }\n\n  private getFontSize() {\n    const cascval = getProp(this.props, \"font-size\");\n    if (!cascval.value.isNumeric()) {\n      // FIXME: cascval may be Ident value e.g. \"smaller\"\n      return Exprs.defaultUnitSizes[\"em\"];\n    }\n    const n = cascval.value as Css.Numeric;\n    if (!Exprs.isAbsoluteLengthUnit(n.unit)) {\n      throw new Error(\"Unexpected state\");\n    }\n    return n.num * Exprs.defaultUnitSizes[n.unit];\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    Asserts.assert(this.context);\n    if (this.propName === \"font-size\") {\n      return convertFontSizeToPx(numeric, this.getFontSize(), this.context);\n    } else if (\n      numeric.unit == \"em\" ||\n      numeric.unit == \"ex\" ||\n      numeric.unit == \"rem\"\n    ) {\n      return convertFontRelativeLengthToPx(\n        numeric,\n        this.getFontSize(),\n        this.context,\n      );\n    } else if (numeric.unit == \"%\") {\n      if (this.propName === \"line-height\") {\n        return numeric;\n      }\n      const unit = this.propName.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      return new Css.Numeric(numeric.num, unit);\n    }\n    return numeric;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.propName == \"font-size\") {\n      const val = CssParser.evaluateCSSToCSS(this.context, expr, this.propName);\n      return val.visit(this);\n    }\n    return expr;\n  }\n}\n\nexport function convertFontRelativeLengthToPx(\n  numeric: Css.Numeric,\n  baseFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"em\" || unit === \"ex\") {\n    const ratio = Exprs.defaultUnitSizes[unit] / Exprs.defaultUnitSizes[\"em\"];\n    return new Css.Numeric(num * ratio * baseFontSize, \"px\");\n  } else if (unit === \"rem\") {\n    return new Css.Numeric(num * context.fontSize(), \"px\");\n  } else {\n    return numeric;\n  }\n}\n\nexport function convertFontSizeToPx(\n  numeric: Css.Numeric,\n  parentFontSize: number,\n  context: Exprs.Context,\n): Css.Numeric {\n  numeric = convertFontRelativeLengthToPx(numeric, parentFontSize, context);\n  const unit = numeric.unit;\n  const num = numeric.num;\n  if (unit === \"px\") {\n    return numeric;\n  } else if (unit === \"%\") {\n    return new Css.Numeric((num / 100) * parentFontSize, \"px\");\n  } else {\n    return new Css.Numeric(num * context.queryUnitSize(unit, false), \"px\");\n  }\n}\n\nexport type ActionTable = {\n  [key: string]: CascadeAction;\n};\n\nexport class CascadeAction {\n  apply(cascadeInstance: CascadeInstance): void {}\n\n  mergeWith(other: CascadeAction): CascadeAction {\n    return new CompoundAction([this, other]);\n  }\n\n  clone(): CascadeAction {\n    // Mutable actions will override\n    return this;\n  }\n}\n\nexport class ConditionItemAction extends CascadeAction {\n  constructor(public readonly conditionItem: ConditionItem) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    cascadeInstance.pushConditionItem(\n      this.conditionItem.fresh(cascadeInstance),\n    );\n  }\n}\n\nexport class CompoundAction extends CascadeAction {\n  constructor(public readonly list: CascadeAction[]) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    for (let i = 0; i < this.list.length; i++) {\n      this.list[i].apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  mergeWith(other: CascadeAction): CascadeAction {\n    this.list.push(other);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    return new CompoundAction([].concat(this.list));\n  }\n}\n\nexport class ApplyRuleAction extends CascadeAction {\n  constructor(\n    public readonly style: ElementStyle,\n    public readonly specificity: number,\n    public readonly pseudoelement: string | null,\n    public readonly regionId: string | null,\n    public readonly viewConditionId: string | null,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    mergeIn(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      this.pseudoelement,\n      this.regionId,\n      cascadeInstance.buildViewConditionMatcher(this.viewConditionId),\n    );\n  }\n}\n\nexport class ChainedAction extends CascadeAction {\n  chained: CascadeAction = null;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.chained.apply(cascadeInstance);\n  }\n\n  getPriority(): number {\n    return 0;\n  }\n\n  makePrimary(cascade: Cascade): boolean {\n    // cannot be made primary\n    return false;\n  }\n}\n\nexport class CheckClassAction extends ChainedAction {\n  constructor(public readonly className: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentClassNames.includes(this.className)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 10;\n  }\n  // class should be checked after id\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.classes, this.className, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckIdAction extends ChainedAction {\n  constructor(public readonly id: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentId == this.id ||\n      cascadeInstance.currentXmlId == this.id\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 11;\n  }\n  // id should be checked after :root\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.ids, this.id, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckLocalNameAction extends ChainedAction {\n  constructor(public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentLocalName == this.localName) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.tags, this.localName, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckNSTagAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly localName: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentLocalName == this.localName &&\n      cascadeInstance.currentNamespace == this.ns\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 8;\n  }\n  // tag is a pretty good thing to check, after epub:type\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.chained) {\n      let prefix = cascade.nsPrefix[this.ns];\n      if (!prefix) {\n        prefix = `ns${cascade.nsCount++}:`;\n        cascade.nsPrefix[this.ns] = prefix;\n      }\n      const nsTag = prefix + this.localName;\n      cascade.insertInTable(cascade.nstags, nsTag, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class CheckTargetEpubTypeAction extends ChainedAction {\n  constructor(public readonly epubTypePatt: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if (elem && cascadeInstance.currentLocalName == \"a\") {\n      const href = elem.getAttribute(\"href\");\n      if (href && href.match(/^#/)) {\n        const id = href.substring(1);\n        const target = elem.ownerDocument.getElementById(id);\n        if (target) {\n          const epubType = target.getAttributeNS(Base.NS.epub, \"type\");\n          if (epubType && epubType.match(this.epubTypePatt)) {\n            this.chained.apply(cascadeInstance);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class CheckNamespaceAction extends ChainedAction {\n  constructor(public readonly ns: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentNamespace == this.ns) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributePresentAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.hasAttributeNS(this.ns, this.name)\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class CheckAttributeEqAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly value: string,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (\n      cascadeInstance.currentElement &&\n      cascadeInstance.currentElement.getAttributeNS(this.ns, this.name) ==\n        this.value\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      return 9; // epub:type is a pretty good thing to check\n    }\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    if (this.name == \"type\" && this.ns == Base.NS.epub) {\n      if (this.chained) {\n        cascade.insertInTable(cascade.epubtypes, this.value, this.chained);\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class CheckNamespaceSupportedAction extends ChainedAction {\n  constructor(public readonly ns: string, public readonly name: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const ns = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (ns && supportedNamespaces[ns]) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: Cascade): boolean {\n    return false;\n  }\n}\n\nexport class CheckAttributeRegExpAction extends ChainedAction {\n  constructor(\n    public readonly ns: string,\n    public readonly name: string,\n    public readonly regexp: RegExp,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.currentElement) {\n      const attr = cascadeInstance.currentElement.getAttributeNS(\n        this.ns,\n        this.name,\n      );\n      if (attr && attr.match(this.regexp)) {\n        this.chained.apply(cascadeInstance);\n      }\n    }\n  }\n}\n\nexport class CheckLangAction extends ChainedAction {\n  constructor(public readonly langRegExp: RegExp) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.lang.match(this.langRegExp)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n}\n\nexport class IsFirstAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isFirst) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 6;\n  }\n}\n\nexport class IsRootAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.isRoot) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 12; // :root is the first thing to check\n  }\n}\n\nexport class IsNthAction extends ChainedAction {\n  constructor(public readonly a: number, public readonly b: number) {\n    super();\n  }\n\n  /**\n   * Checkes whether given order can be represented as an+b with a non-negative\n   * interger n\n   */\n  protected matchANPlusB(order: number): boolean {\n    return Matchers.matchANPlusB(order, this.a, this.b);\n  }\n}\n\nexport class IsNthSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (this.matchANPlusB(cascadeInstance.currentSiblingOrder)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const order =\n      cascadeInstance.currentSiblingTypeCounts[\n        cascadeInstance.currentNamespace\n      ][cascadeInstance.currentLocalName];\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsNthLastSiblingAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let order = cascadeInstance.currentFollowingSiblingOrder;\n    if (order === null) {\n      order = cascadeInstance.currentFollowingSiblingOrder =\n        cascadeInstance.currentElement.parentNode.childElementCount -\n        cascadeInstance.currentSiblingOrder +\n        1;\n    }\n    if (this.matchANPlusB(order)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsNthLastSiblingOfTypeAction extends IsNthAction {\n  constructor(a: number, b: number) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const counts = cascadeInstance.currentFollowingSiblingTypeCounts;\n    if (!counts[cascadeInstance.currentNamespace]) {\n      let elem = cascadeInstance.currentElement;\n      do {\n        const ns = elem.namespaceURI;\n        const localName = elem.localName;\n        let nsCounts = counts[ns];\n        if (!nsCounts) {\n          nsCounts = counts[ns] = {};\n        }\n        nsCounts[localName] = (nsCounts[localName] || 0) + 1;\n      } while ((elem = elem.nextElementSibling));\n    }\n    if (\n      this.matchANPlusB(\n        counts[cascadeInstance.currentNamespace][\n          cascadeInstance.currentLocalName\n        ],\n      )\n    ) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEmptyAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    let node: Node | null = cascadeInstance.currentElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          return;\n        case Node.TEXT_NODE:\n          if ((node as Text).length > 0) {\n            return;\n          }\n      }\n      node = node.nextSibling;\n    }\n    this.chained.apply(cascadeInstance);\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 4;\n  }\n}\n\nexport class IsEnabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === false) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsDisabledAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).disabled === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class IsCheckedAction extends ChainedAction {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    const elem = cascadeInstance.currentElement;\n    if ((elem as any).selected === true || (elem as any).checked === true) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckConditionAction extends ChainedAction {\n  constructor(public readonly condition: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    if (cascadeInstance.conditions[this.condition]) {\n      try {\n        cascadeInstance.dependentConditions.push(this.condition);\n        this.chained.apply(cascadeInstance);\n      } finally {\n        cascadeInstance.dependentConditions.pop();\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 5;\n  }\n}\n\nexport class CheckAppliedAction extends CascadeAction {\n  applied = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.applied = true;\n  }\n\n  /**\n   * @override\n   */\n  clone(): CascadeAction {\n    const cloned = new CheckAppliedAction();\n    cloned.applied = this.applied;\n    return cloned;\n  }\n}\n\nexport class NegateActionsSet extends ChainedAction {\n  checkAppliedAction: CheckAppliedAction;\n  firstAction: CascadeAction;\n\n  constructor(list: ChainedAction[]) {\n    super();\n    this.checkAppliedAction = new CheckAppliedAction();\n    this.firstAction = chainActions(list, this.checkAppliedAction);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CascadeInstance): void {\n    this.firstAction.apply(cascadeInstance);\n    if (!this.checkAppliedAction.applied) {\n      this.chained.apply(cascadeInstance);\n    }\n    this.checkAppliedAction.applied = false;\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return (this.firstAction as ChainedAction).getPriority();\n  }\n}\n\n/**\n * An object that is notified as elements are pushed and popped and typically\n * controls a \"named condition\" (which is a count associated with a name).\n */\nexport interface ConditionItem {\n  /**\n   * Returns a \"fresh\" copy of this item. May be this if immutable.\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem;\n\n  /**\n   * Depth is 0 for element itself and its siblings, 1 for direct children and\n   * -1 for the parent.\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean;\n\n  /**\n   * @return return true if no more notifications are desired\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean;\n}\n\nexport class AbstractConditionItem {\n  constructor(\n    public readonly condition: string,\n    public readonly viewConditionId: string | null,\n    public readonly viewCondition: Matchers.Matcher,\n  ) {}\n\n  increment(cascadeInstance: CascadeInstance) {\n    cascadeInstance.increment(this.condition, this.viewCondition);\n  }\n\n  decrement(cascadeInstance: CascadeInstance) {\n    cascadeInstance.decrement(this.condition, this.viewCondition);\n  }\n\n  buildViewConditionMatcher(\n    cascadeInstance: CascadeInstance,\n  ): Matchers.Matcher {\n    return cascadeInstance.buildViewConditionMatcher(this.viewConditionId);\n  }\n}\n\nexport class DescendantConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new DescendantConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport class ChildConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new ChildConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.increment(cascadeInstance);\n    } else if (depth == 1) {\n      this.decrement(cascadeInstance);\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      this.decrement(cascadeInstance);\n      return true;\n    } else if (depth == 1) {\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class AdjacentSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new AdjacentSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      this.decrement(cascadeInstance);\n      return true;\n    }\n    if (depth == 0) {\n      // Leaving element that triggered this item.\n      this.fired = true;\n      this.increment(cascadeInstance);\n    }\n    return false;\n  }\n}\n\nexport class FollowingSiblingConditionItem\n  extends AbstractConditionItem\n  implements ConditionItem\n{\n  fired: boolean = false;\n\n  constructor(\n    condition: string,\n    viewConditionId: string | null,\n    viewCondition: Matchers.Matcher,\n  ) {\n    super(condition, viewConditionId, viewCondition);\n  }\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return new FollowingSiblingConditionItem(\n      this.condition,\n      this.viewConditionId,\n      this.buildViewConditionMatcher(cascadeInstance),\n    );\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.increment(cascadeInstance);\n      } else if (depth == 0) {\n        this.decrement(cascadeInstance);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (this.fired) {\n      if (depth == -1) {\n        this.decrement(cascadeInstance);\n        return true;\n      } else if (depth == 0) {\n        this.increment(cascadeInstance);\n      }\n    } else {\n      if (depth == 0) {\n        // Leaving element that triggered this item.\n        this.fired = true;\n        this.increment(cascadeInstance);\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages proper handling of \"after\"\n * pseudoelement.\n */\nexport class AfterPseudoelementItem implements ConditionItem {\n  constructor(\n    public readonly afterprop: ElementStyle,\n    public readonly element: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.processPseudoelementProps(this.afterprop, this.element);\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class restores current language.\n */\nexport class RestoreLangItem implements ConditionItem {\n  constructor(public readonly lang: string) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.lang = this.lang;\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Not a true condition item, this class manages inheritance of quotes property\n */\nexport class QuotesScopeItem implements ConditionItem {\n  constructor(public readonly oldQuotes: Css.Str[]) {}\n\n  /**\n   * @override\n   */\n  fresh(cascadeInstance: CascadeInstance): ConditionItem {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  push(cascadeInstance: CascadeInstance, depth: number): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  pop(cascadeInstance: CascadeInstance, depth: number): boolean {\n    if (depth == 0) {\n      cascadeInstance.quotes = this.oldQuotes;\n      return true;\n    }\n    return false;\n  }\n}\nexport type CounterValues = {\n  [key: string]: number[];\n};\n\nexport interface CounterListener {\n  countersOfId(id: string, counters: CounterValues);\n\n  getExprContentListener(): Vtree.ExprContentListener;\n}\n\nexport interface CounterResolver {\n  setStyler(styler: CssStyler.AbstractStyler): void;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the innermost page-based counter (null if it does not exist) by\n   * its name and formatting the value into a string.\n   * @param name Name of the page-based counter to be retrieved\n   * @param format A function that formats the counter value into a string\n   */\n  getPageCounterVal(\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  /**\n   * Returns an Exprs.Val, whose value is calculated at the layout time by\n   * retrieving the page-based counters by its name and formatting the values\n   * into a string.\n   * @param name Name of the page-based counters to be retrieved\n   * @param format A function that formats the counter values (passed as an\n   *     array ordered by the nesting depth with the outermost counter first and\n   *     the innermost last) into a string\n   */\n  getPageCountersVal(name: string, format: (p1: number[]) => string): Exprs.Val;\n\n  getTargetCounterVal(\n    url: string,\n    name: string,\n    format: (p1: number | null) => string,\n  ): Exprs.Val;\n\n  getTargetCountersVal(\n    url: string,\n    name: string,\n    format: (p1: number[]) => string,\n  ): Exprs.Val;\n\n  /**\n   * Get value of the CSS string() function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  getNamedStringVal(name: string, retrievePosition: string): Exprs.Val;\n\n  /**\n   * Set named string for the CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedString(\n    name: string,\n    stringValue: string,\n    cascadeInstance: CascadeInstance,\n  ): void;\n}\n\nexport class AttrValueFilterVisitor extends Css.FilterVisitor {\n  constructor(public element: Element) {\n    super();\n  }\n\n  private createValueFromString(str: string | null, type: string): Css.Val {\n    switch (type) {\n      case \"url\":\n        if (str) {\n          return new Css.URL(str); // TODO should convert to absolute path\n        }\n        return new Css.URL(\"about:invalid\");\n      case \"string\":\n      default:\n        if (str) {\n          return new Css.Str(str);\n        }\n        return new Css.Str(\"\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"attr\") {\n      return super.visitFunc(func);\n    }\n    let type = \"string\";\n    let attributeName: string | null = null;\n    let defaultValue: Css.Val = null;\n    if (func.values[0] instanceof Css.SpaceList) {\n      const values = (func.values[0] as Css.SpaceList).values;\n      if (values.length >= 2) {\n        type = values[1].stringValue();\n      }\n      attributeName = values[0].stringValue();\n    } else {\n      attributeName = func.values[0].stringValue();\n    }\n    if (func.values.length > 1) {\n      defaultValue = this.createValueFromString(\n        func.values[1].stringValue(),\n        type,\n      );\n    } else {\n      defaultValue = this.createValueFromString(null, type);\n    }\n    if (this.element && this.element.hasAttribute(attributeName)) {\n      return this.createValueFromString(\n        this.element.getAttribute(attributeName),\n        type,\n      );\n    }\n    return defaultValue;\n  }\n}\n\n/**\n * Get concatenated string value from CSS `string-set` and `content` property\n */\nfunction getStringValueFromCssContentVal(val: Css.Val): string {\n  // When this function is called, CSS `content()`, `attr()`, `counter()`\n  // values are already resolved to strings values. Remaining non-string values\n  // are ignored.\n  if (Vtree.nonTrivialContent(val)) {\n    if (val instanceof Css.Str) {\n      return val.stringValue();\n    }\n    if (val instanceof Css.SpaceList) {\n      return val.values.map((v) => getStringValueFromCssContentVal(v)).join(\"\");\n    }\n  }\n  return \"\";\n}\n\nexport class ContentPropVisitor extends Css.FilterVisitor {\n  constructor(\n    public cascade: CascadeInstance,\n    public element: Element,\n    public readonly counterResolver: CounterResolver,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const cascade = this.cascade;\n    const quotes = cascade.quotes;\n    const maxDepth = Math.floor(quotes.length / 2) - 1;\n    switch (ident.name) {\n      case \"open-quote\": {\n        const result = quotes[2 * Math.min(maxDepth, cascade.quoteDepth)];\n        cascade.quoteDepth++;\n        return result;\n      }\n      case \"close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return quotes[2 * Math.min(maxDepth, cascade.quoteDepth) + 1];\n      case \"no-open-quote\":\n        cascade.quoteDepth++;\n        return new Css.Str(\"\");\n      case \"no-close-quote\":\n        if (cascade.quoteDepth > 0) {\n          cascade.quoteDepth--;\n        }\n        return new Css.Str(\"\");\n    }\n    return ident;\n  }\n\n  private format(num: number, type: string): string {\n    let upper = false; // type == \"armenian\";\n    // content-counter-10.xht assumes armenian is uppercase, enable if desired\n\n    let lower = false;\n    let r: RegExpMatchArray;\n    if ((r = type.match(/^upper-(.*)/)) != null) {\n      upper = true;\n      type = r[1];\n    } else if ((r = type.match(/^lower-(.*)/)) != null) {\n      lower = true;\n      type = r[1];\n    }\n    let result = \"\";\n    if (additiveNumbering[type]) {\n      result = additiveFormat(additiveNumbering[type], num);\n    } else if (alphabeticNumbering[type]) {\n      result = alphabeticFormat(alphabeticNumbering[type], num);\n    } else if (fixed[type] != null) {\n      result = fixed[type];\n    } else if (type == \"decimal-leading-zero\") {\n      result = `${num}`;\n      if (result.length == 1) {\n        result = `0${result}`;\n      }\n    } else if (type == \"cjk-ideographic\" || type == \"trad-chinese-informal\") {\n      result = chineseCounter(num, chineseTradInformal);\n    } else {\n      result = `${num}`;\n    }\n    if (upper) {\n      return result.toUpperCase();\n    }\n    if (lower) {\n      return result.toLowerCase();\n    }\n    return result;\n  }\n\n  visitFuncCounter(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const type = values.length > 1 ? values[1].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    if (arr && arr.length) {\n      const numval = (arr && arr.length && arr[arr.length - 1]) || 0;\n      return new Css.Str(this.format(numval, type));\n    } else {\n      const c = new Css.Expr(\n        this.counterResolver.getPageCounterVal(counterName, (numval) =>\n          this.format(numval || 0, type),\n        ),\n      );\n      return new Css.SpaceList([c]);\n    }\n  }\n\n  visitFuncCounters(values: Css.Val[]): Css.Val {\n    const counterName = values[0].toString();\n    const separator = values[1].stringValue();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const arr = this.cascade.counters[counterName];\n    const sb = new Base.StringBuffer();\n    if (arr && arr.length) {\n      for (let i = 0; i < arr.length; i++) {\n        if (i > 0) {\n          sb.append(separator);\n        }\n        sb.append(this.format(arr[i], type));\n      }\n    }\n    const c = new Css.Expr(\n      this.counterResolver.getPageCountersVal(counterName, (numvals) => {\n        const parts = [] as string[];\n        if (numvals.length) {\n          for (let i = 0; i < numvals.length; i++) {\n            parts.push(this.format(numvals[i], type));\n          }\n        }\n        const elementCounters = sb.toString();\n        if (elementCounters.length) {\n          parts.push(elementCounters);\n        }\n        if (parts.length) {\n          return parts.join(separator);\n        } else {\n          return this.format(0, type);\n        }\n      }),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounter(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const type = values.length > 2 ? values[2].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCounterVal(\n        targetUrlStr,\n        counterName,\n        (numval) => this.format(numval || 0, type),\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  visitFuncTargetCounters(values: Css.Val[]): Css.Val {\n    const targetUrl = values[0];\n    let targetUrlStr: string;\n    if (targetUrl instanceof Css.URL) {\n      targetUrlStr = targetUrl.url;\n    } else {\n      targetUrlStr = targetUrl.stringValue();\n    }\n    const counterName = values[1].toString();\n    const separator = values[2].stringValue();\n    const type = values.length > 3 ? values[3].stringValue() : \"decimal\";\n    const c = new Css.Expr(\n      this.counterResolver.getTargetCountersVal(\n        targetUrlStr,\n        counterName,\n        (numvals) => {\n          const parts = numvals.map((numval) => this.format(numval, type));\n          if (parts.length) {\n            return parts.join(separator);\n          } else {\n            return this.format(0, type);\n          }\n        },\n      ),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `string()` function\n   * https://drafts.csswg.org/css-gcpm-3/#using-named-strings\n   */\n  visitFuncString(values: Css.Val[]): Css.Val {\n    const name = values.length > 0 ? values[0].stringValue() : \"\";\n    const retrievePosition =\n      values.length > 1 ? values[1].stringValue() : \"first\";\n    const c = new Css.Expr(\n      this.counterResolver.getNamedStringVal(name, retrievePosition),\n    );\n    return new Css.SpaceList([c]);\n  }\n\n  /**\n   * CSS `content()` function\n   * https://drafts.csswg.org/css-gcpm-3/#content-function-header\n   */\n  visitFuncContent(values: Css.Val[]): Css.Val {\n    const pseudoName = values.length > 0 ? values[0].stringValue() : \"text\";\n    let stringValue = \"\";\n    switch (pseudoName) {\n      case \"text\":\n      case \"first-letter\":\n        stringValue = this.element.textContent.trim().replace(/\\s+/g, \" \");\n        if (pseudoName === \"first-letter\") {\n          const r = stringValue.match(Base.firstLetterPattern);\n          stringValue = r ? r[0] : \"\";\n        }\n        break;\n      case \"before\":\n      case \"after\":\n        {\n          const pseudos = getStyleMap(this.cascade.currentStyle, \"_pseudos\");\n          const val = (pseudos?.[pseudoName]?.[\"content\"] as CascadeValue)\n            ?.value;\n          stringValue = getStringValueFromCssContentVal(val);\n        }\n        break;\n    }\n    return new Css.Str(stringValue);\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    switch (func.name) {\n      case \"counter\":\n        if (func.values.length <= 2) {\n          return this.visitFuncCounter(func.values);\n        }\n        break;\n      case \"counters\":\n        if (func.values.length <= 3) {\n          return this.visitFuncCounters(func.values);\n        }\n        break;\n      case \"target-counter\":\n        if (func.values.length <= 3) {\n          return this.visitFuncTargetCounter(func.values);\n        }\n        break;\n      case \"target-counters\":\n        if (func.values.length <= 4) {\n          return this.visitFuncTargetCounters(func.values);\n        }\n        break;\n      case \"string\":\n        if (func.values.length <= 2) {\n          return this.visitFuncString(func.values);\n        }\n        break;\n      case \"content\":\n        if (func.values.length <= 1) {\n          return this.visitFuncContent(func.values);\n        }\n        break;\n    }\n    // Logging.logger.warn(\"E_CSS_CONTENT_PROP:\", func.toString());\n    return func;\n  }\n}\n\nexport function roman(num: number): string {\n  if (num <= 0 || num != Math.round(num) || num > 3999) {\n    return \"\";\n  }\n  const digits = [\"I\", \"V\", \"X\", \"L\", \"C\", \"D\", \"M\"];\n  let offset = 0;\n  let acc = \"\";\n  while (num > 0) {\n    let digit = num % 10;\n    num = (num - digit) / 10;\n    let result = \"\";\n    if (digit == 9) {\n      result += digits[offset] + digits[offset + 2];\n    } else if (digit == 4) {\n      result += digits[offset] + digits[offset + 1];\n    } else {\n      if (digit >= 5) {\n        result += digits[offset + 1];\n        digit -= 5;\n      }\n      while (digit > 0) {\n        result += digits[offset];\n        digit--;\n      }\n    }\n    acc = result + acc;\n    offset += 2;\n  }\n  return acc;\n}\n\nexport const additiveNumbering = {\n  roman: [\n    4999,\n    1000,\n    \"M\",\n    900,\n    \"CM\",\n    500,\n    \"D\",\n    400,\n    \"CD\",\n    100,\n    \"C\",\n    90,\n    \"XC\",\n    50,\n    \"L\",\n    40,\n    \"XL\",\n    10,\n    \"X\",\n    9,\n    \"IX\",\n    5,\n    \"V\",\n    4,\n    \"IV\",\n    1,\n    \"I\",\n  ],\n  armenian: [\n    9999,\n    9000,\n    \"\\u0584\",\n    8000,\n    \"\\u0583\",\n    7000,\n    \"\\u0582\",\n    6000,\n    \"\\u0581\",\n    5000,\n    \"\\u0580\",\n    4000,\n    \"\\u057f\",\n    3000,\n    \"\\u057e\",\n    2000,\n    \"\\u057d\",\n    1000,\n    \"\\u057c\",\n    900,\n    \"\\u057b\",\n    800,\n    \"\\u057a\",\n    700,\n    \"\\u0579\",\n    600,\n    \"\\u0578\",\n    500,\n    \"\\u0577\",\n    400,\n    \"\\u0576\",\n    300,\n    \"\\u0575\",\n    200,\n    \"\\u0574\",\n    100,\n    \"\\u0573\",\n    90,\n    \"\\u0572\",\n    80,\n    \"\\u0571\",\n    70,\n    \"\\u0570\",\n    60,\n    \"\\u056f\",\n    50,\n    \"\\u056e\",\n    40,\n    \"\\u056d\",\n    30,\n    \"\\u056c\",\n    20,\n    \"\\u056b\",\n    10,\n    \"\\u056a\",\n    9,\n    \"\\u0569\",\n    8,\n    \"\\u0568\",\n    7,\n    \"\\u0567\",\n    6,\n    \"\\u0566\",\n    5,\n    \"\\u0565\",\n    4,\n    \"\\u0564\",\n    3,\n    \"\\u0563\",\n    2,\n    \"\\u0562\",\n    1,\n    \"\\u0561\",\n  ],\n  georgian: [\n    19999,\n    10000,\n    \"\\u10f5\",\n    9000,\n    \"\\u10f0\",\n    8000,\n    \"\\u10ef\",\n    7000,\n    \"\\u10f4\",\n    6000,\n    \"\\u10ee\",\n    5000,\n    \"\\u10ed\",\n    4000,\n    \"\\u10ec\",\n    3000,\n    \"\\u10eb\",\n    2000,\n    \"\\u10ea\",\n    1000,\n    \"\\u10e9\",\n    900,\n    \"\\u10e8\",\n    800,\n    \"\\u10e7\",\n    700,\n    \"\\u10e6\",\n    600,\n    \"\\u10e5\",\n    500,\n    \"\\u10e4\",\n    400,\n    \"\\u10f3\",\n    300,\n    \"\\u10e2\",\n    200,\n    \"\\u10e1\",\n    100,\n    \"\\u10e0\",\n    90,\n    \"\\u10df\",\n    80,\n    \"\\u10de\",\n    70,\n    \"\\u10dd\",\n    60,\n    \"\\u10f2\",\n    50,\n    \"\\u10dc\",\n    40,\n    \"\\u10db\",\n    30,\n    \"\\u10da\",\n    20,\n    \"\\u10d9\",\n    10,\n    \"\\u10d8\",\n    9,\n    \"\\u10d7\",\n    8,\n    \"\\u10f1\",\n    7,\n    \"\\u10d6\",\n    6,\n    \"\\u10d5\",\n    5,\n    \"\\u10d4\",\n    4,\n    \"\\u10d3\",\n    3,\n    \"\\u10d2\",\n    2,\n    \"\\u10d1\",\n    1,\n    \"\\u10d0\",\n  ],\n  hebrew: [\n    999,\n    400,\n    \"\\u05ea\",\n    300,\n    \"\\u05e9\",\n    200,\n    \"\\u05e8\",\n    100,\n    \"\\u05e7\",\n    90,\n    \"\\u05e6\",\n    80,\n    \"\\u05e4\",\n    70,\n    \"\\u05e2\",\n    60,\n    \"\\u05e1\",\n    50,\n    \"\\u05e0\",\n    40,\n    \"\\u05de\",\n    30,\n    \"\\u05dc\",\n    20,\n    \"\\u05db\",\n    19,\n    \"\\u05d9\\u05d8\",\n    18,\n    \"\\u05d9\\u05d7\",\n    17,\n    \"\\u05d9\\u05d6\",\n    16,\n    \"\\u05d8\\u05d6\",\n    15,\n    \"\\u05d8\\u05d5\",\n    10,\n    \"\\u05d9\",\n    9,\n    \"\\u05d8\",\n    8,\n    \"\\u05d7\",\n    7,\n    \"\\u05d6\",\n    6,\n    \"\\u05d5\",\n    5,\n    \"\\u05d4\",\n    4,\n    \"\\u05d3\",\n    3,\n    \"\\u05d2\",\n    2,\n    \"\\u05d1\",\n    1,\n    \"\\u05d0\",\n  ],\n};\n\nexport const alphabeticNumbering = {\n  latin: \"a-z\",\n  alpha: \"a-z\",\n  greek: \"\\u03b1-\\u03c1\\u03c3-\\u03c9\",\n  russian: \"\\u0430-\\u0438\\u043a-\\u0449\\u044d-\\u044f\",\n};\n\nexport const fixed = {\n  square: \"\\u25a0\",\n  disc: \"\\u2022\",\n  circle: \"\\u25e6\",\n  none: \"\",\n};\n\nexport function additiveFormat(entries: any[], num: number): string {\n  const max = entries[0] as number;\n  if (num > max || num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  let result = \"\";\n  for (let i = 1; i < entries.length; i += 2) {\n    const value = entries[i] as number;\n    let count = Math.floor(num / value);\n    if (count > 20) {\n      return \"\";\n    }\n    num -= count * value;\n    while (count > 0) {\n      result += entries[i + 1];\n      count--;\n    }\n  }\n  return result;\n}\n\nexport function expandAlphabet(str: string): string[] | null {\n  const arr = [];\n  let i = 0;\n  while (i < str.length) {\n    if (str.substr(i + 1, 1) == \"-\") {\n      const first = str.charCodeAt(i);\n      const last = str.charCodeAt(i + 2);\n      i += 3;\n      for (let k = first; k <= last; k++) {\n        arr.push(String.fromCharCode(k));\n      }\n    } else {\n      arr.push(str.substr(i++, 1));\n    }\n  }\n  return arr;\n}\n\nexport function alphabeticFormat(alphabetStr: string, num: number): string {\n  if (num <= 0 || num != Math.round(num)) {\n    return \"\";\n  }\n  const alphabet = expandAlphabet(alphabetStr);\n  let result = \"\";\n  do {\n    num--;\n    const digit = num % alphabet.length;\n    result = alphabet[digit] + result;\n    num = (num - digit) / alphabet.length;\n  } while (num > 0);\n  return result;\n}\n\nexport type ChineseNumbering = {\n  digits: string;\n  markers: string;\n  negative: string;\n  formal: boolean;\n};\n\n/**\n * From http://www.w3.org/TR/css3-lists/\n */\nexport const chineseTradInformal: ChineseNumbering = {\n  formal: false,\n  digits: \"\\u96f6\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d\",\n  markers: \"\\u5341\\u767e\\u5343\",\n  negative: \"\\u8ca0\",\n};\n\nexport function chineseCounter(\n  num: number,\n  numbering: ChineseNumbering,\n): string {\n  if (num > 9999 || num < -9999) {\n    return `${num}`; // TODO: should be cjk-decimal\n  }\n  if (num == 0) {\n    return numbering.digits.charAt(0);\n  }\n  const res = new Base.StringBuffer();\n  if (num < 0) {\n    res.append(numbering.negative);\n    num = -num;\n  }\n  if (num < 10) {\n    res.append(numbering.digits.charAt(num));\n  } else if (!numbering.formal && num <= 19) {\n    res.append(numbering.markers.charAt(0));\n    if (num != 0) {\n      res.append(numbering.digits.charAt(num - 10));\n    }\n  } else {\n    const thousands = Math.floor(num / 1000);\n    if (thousands) {\n      res.append(numbering.digits.charAt(thousands));\n      res.append(numbering.markers.charAt(2));\n    }\n    const hundreds = Math.floor(num / 100) % 10;\n    if (hundreds) {\n      res.append(numbering.digits.charAt(hundreds));\n      res.append(numbering.markers.charAt(1));\n    }\n    const tens = Math.floor(num / 10) % 10;\n    if (tens) {\n      res.append(numbering.digits.charAt(tens));\n      res.append(numbering.markers.charAt(0));\n    }\n    const ones = num % 10;\n    if (ones) {\n      res.append(numbering.digits.charAt(ones));\n    }\n  }\n\n  // res.append(\"\\u3001\");\n  return res.toString();\n}\n\n/**\n * Fitting order and specificity in the same number. Order is recorded in the\n * fractional part. Select value so that\n *\n *   0x7FFFFFFF != 0x7FFFFFFF + ORDER_INCREMENT\n *\n */\nexport const ORDER_INCREMENT = 1 / 0x100000;\n\nexport function copyTable(src: ActionTable, dst: ActionTable): void {\n  for (const n in src) {\n    dst[n] = src[n].clone();\n  }\n}\n\nexport class Cascade {\n  nsCount: number = 0;\n  nsPrefix: { [key: string]: string } = {};\n  tags: ActionTable = {};\n  nstags: ActionTable = {};\n  epubtypes: ActionTable = {};\n  classes: ActionTable = {};\n  ids: ActionTable = {};\n  pagetypes: ActionTable = {};\n  order: number = 0;\n\n  clone(): Cascade {\n    const r = new Cascade();\n    r.nsCount = this.nsCount;\n    for (const p in this.nsPrefix) {\n      r.nsPrefix[p] = this.nsPrefix[p];\n    }\n    copyTable(this.tags, r.tags);\n    copyTable(this.nstags, r.nstags);\n    copyTable(this.epubtypes, r.epubtypes);\n    copyTable(this.classes, r.classes);\n    copyTable(this.ids, r.ids);\n    copyTable(this.pagetypes, r.pagetypes);\n    r.order = this.order;\n    return r;\n  }\n\n  insertInTable(table: ActionTable, key: string, action: CascadeAction): void {\n    const a = table[key];\n    if (a) {\n      action = a.mergeWith(action);\n    }\n    table[key] = action;\n  }\n\n  createInstance(\n    context: Exprs.Context,\n    counterListener: CounterListener,\n    counterResolver: CounterResolver,\n    lang,\n  ): CascadeInstance {\n    return new CascadeInstance(\n      this,\n      context,\n      counterListener,\n      counterResolver,\n      lang,\n    );\n  }\n\n  nextOrder(): number {\n    return (this.order += ORDER_INCREMENT);\n  }\n}\n\nexport class CascadeInstance {\n  code: Cascade;\n  stack = [[], []] as ConditionItem[][];\n  conditions = {} as { [key: string]: number };\n  currentElement: Element | null = null;\n  currentElementOffset: number | null = null;\n  currentStyle: ElementStyle | null = null;\n  currentClassNames: string[] | null = null;\n  currentLocalName: string = \"\";\n  currentNamespace: string = \"\";\n  currentId: string = \"\";\n  currentXmlId: string = \"\";\n  currentNSTag: string = \"\";\n  currentEpubTypes: string[] | null = null;\n  currentPageType: string | null = null;\n  previousPageType: string | null = null;\n  firstPageType: string | null = null;\n  isFirst: boolean = true;\n  isRoot: boolean = true;\n  counters: CounterValues = {};\n  counterScoping: { [key: string]: boolean }[] = [{}];\n  quotes: Css.Str[];\n  quoteDepth: number = 0;\n  lang: string = \"\";\n  siblingOrderStack: number[] = [0];\n  currentSiblingOrder: number = 0;\n  siblingTypeCountsStack: { [key: string]: { [key: string]: number } }[] = [{}];\n  currentSiblingTypeCounts: { [key: string]: { [key: string]: number } };\n  currentFollowingSiblingOrder: number | null = null;\n  followingSiblingOrderStack: (number | null)[];\n  followingSiblingTypeCountsStack: {\n    [key: string]: { [key: string]: number };\n  }[] = [{}];\n  currentFollowingSiblingTypeCounts: {\n    [key: string]: { [key: string]: number };\n  };\n  viewConditions: { [key: string]: Matchers.Matcher[] } = {};\n  dependentConditions: string[] = [];\n  elementStack: Element[];\n\n  constructor(\n    cascade: Cascade,\n    public readonly context: Exprs.Context,\n    public readonly counterListener: CounterListener,\n    public readonly counterResolver: CounterResolver,\n    lang: string,\n  ) {\n    this.code = cascade;\n    this.quotes = [\n      new Css.Str(\"\\u201c\"),\n      new Css.Str(\"\\u201d\"),\n      new Css.Str(\"\\u2018\"),\n      new Css.Str(\"\\u2019\"),\n    ];\n    this.currentSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    this.followingSiblingOrderStack = [this.currentFollowingSiblingOrder];\n    this.currentFollowingSiblingTypeCounts = this.siblingTypeCountsStack[0];\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack = [];\n    }\n  }\n\n  pushConditionItem(item: ConditionItem): void {\n    this.stack[this.stack.length - 1].push(item);\n  }\n\n  increment(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition] = (this.conditions[condition] || 0) + 1;\n    if (!viewCondition) {\n      return;\n    }\n    if (this.viewConditions[condition]) {\n      this.viewConditions[condition].push(viewCondition);\n    } else {\n      this.viewConditions[condition] = [viewCondition];\n    }\n  }\n\n  decrement(condition: string, viewCondition: Matchers.Matcher): void {\n    this.conditions[condition]--;\n    if (!this.viewConditions[condition]) {\n      return;\n    }\n    this.viewConditions[condition] = this.viewConditions[condition].filter(\n      (item) => item !== viewCondition,\n    );\n    if (this.viewConditions[condition].length === 0) {\n      delete this.viewConditions[condition];\n    }\n  }\n\n  buildViewConditionMatcher(viewConditionId: string | null): Matchers.Matcher {\n    let matcher: Matchers.Matcher = null;\n    if (viewConditionId) {\n      Asserts.assert(this.currentElementOffset);\n      matcher = Matchers.MatcherBuilder.buildViewConditionMatcher(\n        this.currentElementOffset,\n        viewConditionId,\n      );\n    }\n    const dependentConditionMatchers = this.dependentConditions\n      .map((conditionId) => {\n        const conditions = this.viewConditions[conditionId];\n        if (conditions && conditions.length > 0) {\n          return conditions.length === 1\n            ? conditions[0]\n            : Matchers.MatcherBuilder.buildAnyMatcher([].concat(conditions));\n        } else {\n          return null;\n        }\n      })\n      .filter((item) => item);\n    if (dependentConditionMatchers.length <= 0) {\n      return matcher;\n    }\n    if (matcher === null) {\n      return dependentConditionMatchers.length === 1\n        ? dependentConditionMatchers[0]\n        : Matchers.MatcherBuilder.buildAllMatcher(dependentConditionMatchers);\n    }\n    return Matchers.MatcherBuilder.buildAllMatcher(\n      [matcher].concat(dependentConditionMatchers),\n    );\n  }\n\n  applyAction(table: ActionTable, key: string): void {\n    const action = table[key];\n    if (action) {\n      action.apply(this);\n    }\n  }\n\n  pushRule(\n    classes: string[],\n    pageType: string | null,\n    baseStyle: ElementStyle,\n  ): void {\n    this.currentElement = null;\n    this.currentElementOffset = null;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = \"\";\n    this.currentLocalName = \"\";\n    this.currentId = \"\";\n    this.currentXmlId = \"\";\n    this.currentClassNames = classes;\n    this.currentNSTag = \"\";\n    this.currentEpubTypes = EMPTY;\n    this.currentPageType = pageType;\n    this.applyActions();\n  }\n\n  defineCounter(counterName: string, value: number) {\n    if (this.counters[counterName]) {\n      this.counters[counterName].push(value);\n    } else {\n      this.counters[counterName] = [value];\n    }\n    let scoping = this.counterScoping[this.counterScoping.length - 1];\n    if (!scoping) {\n      scoping = {};\n      this.counterScoping[this.counterScoping.length - 1] = scoping;\n    }\n    scoping[counterName] = true;\n  }\n\n  pushCounters(props: ElementStyle): void {\n    let displayVal: Css.Val = Css.ident.inline;\n    const display = props[\"display\"] as CascadeValue;\n    if (display) {\n      displayVal = display.evaluate(this.context);\n    }\n    let floatVal: Css.Val = Css.ident.inline;\n    const float = props[\"float\"] as CascadeValue;\n    if (float) {\n      floatVal = float.evaluate(this.context);\n    }\n    let resetMap: { [key: string]: number } = null;\n    let incrementMap: { [key: string]: number } = null;\n    let setMap: { [key: string]: number } = null;\n    const reset = props[\"counter-reset\"] as CascadeValue;\n    if (reset) {\n      const resetVal = reset.evaluate(this.context);\n      if (resetVal) {\n        resetMap = CssProp.toCounters(resetVal, true);\n      }\n    }\n    const set = props[\"counter-set\"] as CascadeValue;\n    if (set) {\n      const setVal = set.evaluate(this.context);\n      if (setVal) {\n        setMap = CssProp.toCounters(setVal, false);\n      }\n    }\n    const increment = props[\"counter-increment\"] as CascadeValue;\n    if (increment) {\n      const incrementVal = increment.evaluate(this.context);\n      if (incrementVal) {\n        incrementMap = CssProp.toCounters(incrementVal, false);\n      }\n    }\n    if (\n      (this.currentLocalName == \"ol\" || this.currentLocalName == \"ul\") &&\n      this.currentNamespace == Base.NS.XHTML\n    ) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      resetMap[\"ua-list-item\"] = ((this.currentElement as any)?.start ?? 1) - 1;\n    }\n    if (displayVal === Css.ident.list_item) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      incrementMap[\"ua-list-item\"] = 1;\n      if (\n        /^\\s*[-+]?\\d/.test(this.currentElement?.getAttribute(\"value\") ?? \"\")\n      ) {\n        if (!resetMap) {\n          resetMap = {};\n        }\n        resetMap[\"ua-list-item\"] = (this.currentElement as any).value - 1;\n      }\n    }\n    if (this.currentElement?.parentNode.nodeType === Node.DOCUMENT_NODE) {\n      if (!resetMap) {\n        resetMap = {};\n      }\n      // `counter-reset: footnote 0` is implicitly applied on the root element\n      if (resetMap[\"footnote\"] === undefined) {\n        resetMap[\"footnote\"] = 0;\n      }\n    }\n    if (floatVal === Css.ident.footnote) {\n      if (!incrementMap) {\n        incrementMap = {};\n      }\n      // `counter-increment: footnote 1` is implicitly applied on the\n      // element (or pseudo element) with `float: footnote`,\n      // unless `counter-increment: footnote` is explicitly specified\n      // on the element (parent element of the pseudo element).\n      if (incrementMap[\"footnote\"] === undefined) {\n        const incrPropValue = (\n          this.currentStyle[\"counter-increment\"] as CascadeValue\n        )?.value;\n        if (\n          !incrPropValue ||\n          !(\n            incrPropValue === Css.ident.footnote ||\n            (incrPropValue instanceof Css.SpaceList &&\n              incrPropValue.values.includes(Css.ident.footnote))\n          )\n        ) {\n          incrementMap[\"footnote\"] = 1;\n        }\n      }\n    }\n    if (resetMap) {\n      for (const resetCounterName in resetMap) {\n        this.defineCounter(resetCounterName, resetMap[resetCounterName]);\n      }\n    }\n    if (setMap) {\n      for (const setCounterName in setMap) {\n        if (!this.counters[setCounterName]) {\n          this.defineCounter(setCounterName, setMap[setCounterName]);\n        } else {\n          const counterValues = this.counters[setCounterName];\n          counterValues[counterValues.length - 1] = setMap[setCounterName];\n        }\n      }\n    }\n    if (incrementMap) {\n      for (const incrementCounterName in incrementMap) {\n        if (!this.counters[incrementCounterName]) {\n          this.defineCounter(incrementCounterName, 0);\n        }\n        const counterValues = this.counters[incrementCounterName];\n        counterValues[counterValues.length - 1] +=\n          incrementMap[incrementCounterName];\n      }\n    }\n    if (displayVal === Css.ident.list_item) {\n      const listItemCounts = this.counters[\"ua-list-item\"];\n      const listItemCount = listItemCounts[listItemCounts.length - 1];\n      props[\"ua-list-item-count\"] = new CascadeValue(\n        new Css.Num(listItemCount),\n        0,\n      );\n    }\n    this.counterScoping.push(null);\n  }\n\n  popCounters(): void {\n    const scoping = this.counterScoping.pop();\n    if (scoping) {\n      for (const counterName in scoping) {\n        const arr = this.counters[counterName];\n        if (arr) {\n          if (arr.length == 1) {\n            delete this.counters[counterName];\n          } else {\n            arr.pop();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Process CSS string-set property\n   * https://drafts.csswg.org/css-gcpm-3/#setting-named-strings-the-string-set-pro\n   */\n  setNamedStrings(props: ElementStyle): void {\n    let stringSet = props[\"string-set\"] as CascadeValue;\n    if (!stringSet) {\n      return;\n    }\n    stringSet = stringSet.filterValue(\n      new ContentPropVisitor(this, this.currentElement, this.counterResolver),\n    );\n    const sets =\n      stringSet.value instanceof Css.CommaList\n        ? stringSet.value.values\n        : [stringSet.value];\n\n    for (const set of sets) {\n      if (set instanceof Css.SpaceList) {\n        const name = set.values[0].stringValue();\n        const stringValue = set.values\n          .slice(1)\n          .map((v) => getStringValueFromCssContentVal(v))\n          .join(\"\");\n        this.counterResolver.setNamedString(name, stringValue, this);\n      }\n    }\n    delete props[\"string-set\"];\n  }\n\n  processPseudoelementProps(pseudoprops: ElementStyle, element: Element): void {\n    this.pushCounters(pseudoprops);\n    const content = pseudoprops[\"content\"] as CascadeValue;\n    if (content) {\n      pseudoprops[\"content\"] = content.filterValue(\n        new ContentPropVisitor(this, element, this.counterResolver),\n      );\n    }\n    this.popCounters();\n  }\n\n  pushElement(\n    styler: CssStyler.AbstractStyler,\n    element: Element,\n    baseStyle: ElementStyle,\n    elementOffset: number,\n  ): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      this.elementStack.push(element);\n    }\n\n    // do not apply page rules\n    this.currentPageType = null;\n    this.currentElement = element;\n    this.currentElementOffset = elementOffset;\n    this.currentStyle = baseStyle;\n    this.currentNamespace = element.namespaceURI;\n    this.currentLocalName = element.localName;\n    const prefix = this.code.nsPrefix[this.currentNamespace];\n    if (prefix) {\n      this.currentNSTag = prefix + this.currentLocalName;\n    } else {\n      this.currentNSTag = \"\";\n    }\n    this.currentId = element.getAttribute(\"id\");\n    this.currentXmlId = element.getAttributeNS(Base.NS.XML, \"id\");\n    const classes = element.getAttribute(\"class\");\n    if (classes) {\n      this.currentClassNames = classes.split(/\\s+/);\n    } else {\n      this.currentClassNames = EMPTY;\n    }\n    const types = element.getAttributeNS(Base.NS.epub, \"type\");\n    if (types) {\n      this.currentEpubTypes = types.split(/\\s+/);\n    } else {\n      this.currentEpubTypes = EMPTY;\n    }\n    const lang = Base.getLangAttribute(element);\n    if (lang) {\n      this.stack[this.stack.length - 1].push(new RestoreLangItem(this.lang));\n      this.lang = lang.toLowerCase();\n    }\n    const isRoot = this.isRoot;\n    const siblingOrderStack = this.siblingOrderStack;\n    this.currentSiblingOrder = ++siblingOrderStack[\n      siblingOrderStack.length - 1\n    ];\n    siblingOrderStack.push(0);\n    const siblingTypeCountsStack = this.siblingTypeCountsStack;\n    const currentSiblingTypeCounts = (this.currentSiblingTypeCounts =\n      siblingTypeCountsStack[siblingTypeCountsStack.length - 1]);\n    let currentNamespaceTypeCounts =\n      currentSiblingTypeCounts[this.currentNamespace];\n    if (!currentNamespaceTypeCounts) {\n      currentNamespaceTypeCounts = currentSiblingTypeCounts[\n        this.currentNamespace\n      ] = {};\n    }\n    currentNamespaceTypeCounts[this.currentLocalName] =\n      (currentNamespaceTypeCounts[this.currentLocalName] || 0) + 1;\n    siblingTypeCountsStack.push({});\n    const followingSiblingOrderStack = this.followingSiblingOrderStack;\n    if (\n      followingSiblingOrderStack[followingSiblingOrderStack.length - 1] !== null\n    ) {\n      this.currentFollowingSiblingOrder = --followingSiblingOrderStack[\n        followingSiblingOrderStack.length - 1\n      ];\n    } else {\n      this.currentFollowingSiblingOrder = null;\n    }\n    followingSiblingOrderStack.push(null);\n    const followingSiblingTypeCountsStack =\n      this.followingSiblingTypeCountsStack;\n    const currentFollowingSiblingTypeCounts =\n      (this.currentFollowingSiblingTypeCounts =\n        followingSiblingTypeCountsStack[\n          followingSiblingTypeCountsStack.length - 1\n        ]);\n    if (\n      currentFollowingSiblingTypeCounts &&\n      currentFollowingSiblingTypeCounts[this.currentNamespace]\n    ) {\n      currentFollowingSiblingTypeCounts[this.currentNamespace][\n        this.currentLocalName\n      ]--;\n    }\n    followingSiblingTypeCountsStack.push({});\n    this.applyActions();\n\n    // Substitute var()\n    this.applyVarFilter([this.currentStyle], styler, element);\n\n    // Calculate calc()\n    this.applyCalcFilter(this.currentStyle, styler);\n\n    this.applyAttrFilter(element);\n    const quotesCasc = baseStyle[\"quotes\"] as CascadeValue;\n    let itemToPushLast: QuotesScopeItem | null = null;\n    if (quotesCasc) {\n      const quotesVal = quotesCasc.evaluate(this.context);\n      if (quotesVal) {\n        itemToPushLast = new QuotesScopeItem(this.quotes);\n        if (quotesVal === Css.ident.none) {\n          this.quotes = [new Css.Str(\"\"), new Css.Str(\"\")];\n        } else if (\n          quotesVal === Css.ident.auto ||\n          quotesVal === Css.ident.initial\n        ) {\n          this.quotes = [\n            new Css.Str(\"\\u201c\"),\n            new Css.Str(\"\\u201d\"),\n            new Css.Str(\"\\u2018\"),\n            new Css.Str(\"\\u2019\"),\n          ];\n          // FIXME: quotes:auto should be based on the content language\n        } else if (quotesVal instanceof Css.SpaceList) {\n          this.quotes = (quotesVal as Css.SpaceList).values as Css.Str[];\n        }\n      }\n    }\n    this.pushCounters(this.currentStyle);\n    const id =\n      this.currentId || this.currentXmlId || element.getAttribute(\"name\") || \"\";\n    if (isRoot || id) {\n      const counters: CounterValues = {};\n      Object.keys(this.counters).forEach((name) => {\n        counters[name] = Array.from(this.counters[name]);\n      });\n      this.counterListener.countersOfId(id, counters);\n    }\n    const pseudos = getStyleMap(this.currentStyle, \"_pseudos\");\n    if (pseudos) {\n      let before = true;\n      for (const pseudoName of pseudoNames) {\n        if (!pseudoName) {\n          // content\n          before = false;\n        }\n        const pseudoProps = pseudos[pseudoName];\n        if (pseudoProps) {\n          if (\n            (pseudoName === \"before\" || pseudoName === \"after\") &&\n            !Vtree.nonTrivialContent(\n              (pseudoProps[\"content\"] as CascadeValue)?.value,\n            )\n          ) {\n            delete pseudos[pseudoName];\n          } else if (before) {\n            this.processPseudoelementProps(pseudoProps, element);\n          } else {\n            this.stack[this.stack.length - 2].push(\n              new AfterPseudoelementItem(pseudoProps, element),\n            );\n          }\n        }\n      }\n    }\n\n    // process CSS string-set property\n    this.setNamedStrings(this.currentStyle);\n\n    if (itemToPushLast) {\n      this.stack[this.stack.length - 2].push(itemToPushLast);\n    }\n  }\n\n  private applyAttrFilterInner(\n    visitor: Css.Visitor,\n    elementStyle: ElementStyle,\n  ): void {\n    for (const propName in elementStyle) {\n      if (isPropName(propName) && !Css.isCustomPropName(propName)) {\n        elementStyle[propName] = (\n          elementStyle[propName] as CascadeValue\n        ).filterValue(visitor);\n      }\n    }\n  }\n\n  private applyAttrFilter(element: Element): void {\n    const visitor = new AttrValueFilterVisitor(element);\n    const currentStyle = this.currentStyle;\n    const pseudoMap = getStyleMap(currentStyle, \"_pseudos\");\n    for (const pseudoName in pseudoMap) {\n      this.applyAttrFilterInner(visitor, pseudoMap[pseudoName]);\n    }\n    this.applyAttrFilterInner(visitor, currentStyle);\n  }\n\n  /**\n   * Substitute all variables in property values in elementStyle\n   */\n  applyVarFilter(\n    elementStyles: ElementStyle[],\n    styler: CssStyler.AbstractStyler,\n    element: Element | null,\n  ): void {\n    const elementStyle = elementStyles[0];\n    const visitor = new VarFilterVisitor(elementStyles, styler, element);\n    const LIMIT_LOOP = 32; // prevent cyclic or too deep dependency\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyVarFilter(\n            [pseudoMap[pseudoName], ...elementStyles],\n            styler,\n            element,\n          );\n        }\n      } else if (isPropName(name) && !Css.isCustomPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        let value = cascVal.value;\n\n        for (let i = 0; ; i++) {\n          if (i >= LIMIT_LOOP) {\n            value = Css.empty;\n            break;\n          }\n          const after = value.visit(visitor);\n          if (visitor.error) {\n            // invalid or unresolved variable found\n            value = Css.empty;\n            visitor.error = false;\n            break;\n          }\n          if (after === value) {\n            // no variable, or all variables substituted\n            break;\n          }\n          // variables substituted, but the substituted value may contain variables\n          value = after;\n        }\n        if (value !== cascVal.value) {\n          // all variables substituted\n          const validatorSet = (styler as any)\n            .validatorSet as CssValidator.ValidatorSet;\n          const shorthand = validatorSet.shorthands[name]?.clone();\n          if (shorthand) {\n            if (Css.isDefaultingValue(value)) {\n              for (const nameLH of shorthand.propList) {\n                elementStyle[nameLH] = new CascadeValue(\n                  value,\n                  cascVal.priority,\n                );\n              }\n              delete elementStyle[name];\n            } else {\n              // The var()-substituted value may have complex structure\n              // (e.g. SpaceList in SpaceList) that ShorthandValidator\n              // cannot handle, so use toString and parseValue.\n              const valueSH = CssParser.parseValue(\n                (styler as any).scope,\n                new CssTokenizer.Tokenizer(value.toString(), null),\n                \"\",\n              );\n              if (valueSH) {\n                valueSH.visit(shorthand);\n                if (!shorthand.error) {\n                  for (const nameLH of shorthand.propList) {\n                    elementStyle[nameLH] = new CascadeValue(\n                      shorthand.values[nameLH] ||\n                        validatorSet.defaultValues[nameLH],\n                      cascVal.priority,\n                    );\n                  }\n                  delete elementStyle[name];\n                }\n              }\n            }\n          } else {\n            elementStyle[name] = new CascadeValue(value, cascVal.priority);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Calculate all calc() in property values in elementStyle\n   */\n  applyCalcFilter(\n    elementStyle: ElementStyle,\n    styler: CssStyler.AbstractStyler,\n  ): void {\n    const visitor = new CalcFilterVisitor(styler);\n    for (const name in elementStyle) {\n      if (isMapName(name)) {\n        const pseudoMap = getStyleMap(elementStyle, name);\n        for (const pseudoName in pseudoMap) {\n          this.applyCalcFilter(pseudoMap[pseudoName], styler);\n        }\n      } else if (isPropName(name) && !Css.isCustomPropName(name)) {\n        const cascVal = getProp(elementStyle, name);\n        const value = cascVal.value.visit(visitor);\n        if (value !== cascVal.value) {\n          elementStyle[name] = new CascadeValue(value, cascVal.priority);\n        }\n      }\n    }\n  }\n\n  private applyActions(): void {\n    let i: number;\n    for (i = 0; i < this.currentClassNames.length; i++) {\n      this.applyAction(this.code.classes, this.currentClassNames[i]);\n    }\n    for (i = 0; i < this.currentEpubTypes.length; i++) {\n      this.applyAction(this.code.epubtypes, this.currentEpubTypes[i]);\n    }\n    this.applyAction(this.code.ids, this.currentId);\n    this.applyAction(this.code.tags, this.currentLocalName);\n    if (this.currentLocalName != \"\") {\n      // Universal selector does not apply to page-master-related rules.\n      this.applyAction(this.code.tags, \"*\");\n    }\n    this.applyAction(this.code.nstags, this.currentNSTag);\n\n    // Apply page rules only when currentPageType is not null\n    if (this.currentPageType !== null) {\n      this.applyAction(this.code.pagetypes, this.currentPageType);\n\n      // We represent page rules without selectors by *, though it is illegal in\n      // CSS\n      this.applyAction(this.code.pagetypes, \"*\");\n    }\n\n    this.stack.push([]);\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      i = 0;\n      while (i < list.length) {\n        if (list[i].push(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.isFirst = true;\n    this.isRoot = false;\n  }\n\n  private pop(): void {\n    for (let depth = 1; depth >= -1; --depth) {\n      const list = this.stack[this.stack.length - depth - 2];\n      let i = 0;\n      while (i < list.length) {\n        if (list[i].pop(this, depth)) {\n          // done\n          list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n    this.stack.pop();\n    this.isFirst = false;\n  }\n\n  popRule(): void {\n    this.pop();\n  }\n\n  popElement(element: Element): void {\n    if (VIVLIOSTYLE_DEBUG) {\n      const e = this.elementStack.pop();\n      if (e !== element) {\n        throw new Error(\"Invalid call to popElement\");\n      }\n    }\n    this.siblingOrderStack.pop();\n    this.siblingTypeCountsStack.pop();\n    this.followingSiblingOrderStack.pop();\n    this.followingSiblingTypeCountsStack.pop();\n    this.pop();\n    this.popCounters();\n  }\n}\n\nexport const EMPTY: string[] = [];\n\n/**\n * Pseudoelement names in the order they should be processed, empty string is\n * the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"before\",\n  \"transclusion-before\",\n  \"footnote-call\",\n  \"footnote-marker\",\n  \"inner\",\n  \"first-letter\",\n  \"first-line\",\n  \"\", // content\n  \"transclusion-after\",\n  \"after\",\n];\n\n/**\n * @enum {number}\n */\nexport enum ParseState {\n  TOP,\n  SELECTOR,\n  RULE,\n}\n\n/**\n * Cascade for base User Agent stylesheet.\n */\nexport let uaBaseCascade: Cascade = null;\nexport function setUABaseCascade(value: Cascade): void {\n  uaBaseCascade = value;\n}\n\n//------------- parsing ------------\nexport class CascadeParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  chain: ChainedAction[] = null;\n  specificity: number = 0;\n  elementStyle: ElementStyle = null;\n  conditionCount: number = 0;\n  pseudoelement: string | null = null;\n  footnoteContent: boolean = false;\n  cascade: Cascade;\n  state: ParseState;\n  viewConditionId: string | null = null;\n  insideSelectorRule: ParseState;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    parent: CascadeParserHandler,\n    public readonly regionId: string | null,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    topLevel: boolean,\n  ) {\n    super(scope, owner, topLevel);\n    this.cascade = parent\n      ? parent.cascade\n      : uaBaseCascade\n      ? uaBaseCascade.clone()\n      : new Cascade();\n    this.state = ParseState.TOP;\n  }\n\n  protected insertNonPrimary(action: CascadeAction): void {\n    this.cascade.insertInTable(this.cascade.tags, \"*\", action);\n  }\n\n  processChain(action: CascadeAction): void {\n    const chained = chainActions(this.chain, action);\n    if (\n      chained !== action &&\n      (chained as ChainedAction).makePrimary(this.cascade)\n    ) {\n      return;\n    }\n    this.insertNonPrimary(chained);\n  }\n\n  isInsideSelectorRule(mnemonics: string): boolean {\n    if (this.state != ParseState.TOP) {\n      this.reportAndSkip(mnemonics);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    if (!name && !ns) {\n      return;\n    }\n    if (name) {\n      this.specificity += 1;\n    }\n    if (name && ns) {\n      this.chain.push(new CheckNSTagAction(ns, name.toLowerCase()));\n    } else if (name) {\n      this.chain.push(new CheckLocalNameAction(name.toLowerCase()));\n    } else {\n      this.chain.push(new CheckNamespaceAction(ns as string));\n    }\n  }\n\n  /**\n   * @override\n   */\n  classSelector(name: string): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by .${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    this.specificity += 256;\n    this.chain.push(new CheckClassAction(name));\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    if (this.pseudoelement) {\n      Logging.logger.warn(`::${this.pseudoelement}`, `followed by :${name}`);\n      this.chain.push(new CheckConditionAction(\"\")); // always fails\n      return;\n    }\n    switch (name.toLowerCase()) {\n      case \"enabled\":\n        this.chain.push(new IsEnabledAction());\n        break;\n      case \"disabled\":\n        this.chain.push(new IsDisabledAction());\n        break;\n      case \"checked\":\n        this.chain.push(new IsCheckedAction());\n        break;\n      case \"root\":\n        this.chain.push(new IsRootAction());\n        break;\n      case \"link\":\n        this.chain.push(new CheckLocalNameAction(\"a\"));\n        this.chain.push(new CheckAttributePresentAction(\"\", \"href\"));\n        break;\n      case \"-adapt-href-epub-type\":\n      case \"href-epub-type\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const value = params[0] as string;\n          const patt = new RegExp(`(^|s)${Base.escapeRegExp(value)}(\\$|s)`);\n          this.chain.push(new CheckTargetEpubTypeAction(patt));\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"-adapt-footnote-content\":\n      case \"footnote-content\":\n        // content inside the footnote\n        this.footnoteContent = true;\n        break;\n      case \"visited\":\n      case \"active\":\n      case \"hover\":\n      case \"focus\":\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"lang\":\n        if (params && params.length == 1 && typeof params[0] == \"string\") {\n          const langValue = params[0] as string;\n          this.chain.push(\n            new CheckLangAction(\n              new RegExp(\n                `^${Base.escapeRegExp(langValue.toLowerCase())}(\\$|-)`,\n              ),\n            ),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fais\n        }\n        break;\n      case \"nth-child\":\n      case \"nth-last-child\":\n      case \"nth-of-type\":\n      case \"nth-last-of-type\": {\n        const ActionClass = nthSelectorActionClasses[name.toLowerCase()];\n        if (params && params.length == 2) {\n          this.chain.push(\n            new ActionClass(params[0] as number, params[1] as number),\n          );\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      }\n      case \"first-child\":\n        this.chain.push(new IsFirstAction());\n        break;\n      case \"last-child\":\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"first-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        break;\n      case \"last-of-type\":\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"only-child\":\n        this.chain.push(new IsFirstAction());\n        this.chain.push(new IsNthLastSiblingAction(0, 1));\n        break;\n      case \"only-of-type\":\n        this.chain.push(new IsNthSiblingOfTypeAction(0, 1));\n        this.chain.push(new IsNthLastSiblingOfTypeAction(0, 1));\n        break;\n      case \"empty\":\n        this.chain.push(new IsEmptyAction());\n        break;\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n        this.pseudoelementSelector(name, params);\n        return;\n      default:\n        Logging.logger.warn(`unknown pseudo-class selector: ${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 256;\n  }\n\n  /**\n   * @override\n   */\n  pseudoelementSelector(name: string, params: (number | string)[]): void {\n    switch (name) {\n      case \"before\":\n      case \"after\":\n      case \"first-line\":\n      case \"first-letter\":\n      case \"footnote-call\":\n      case \"footnote-marker\":\n      case \"inner\":\n      case \"after-if-continues\":\n        if (!this.pseudoelement) {\n          this.pseudoelement = name;\n        } else {\n          Logging.logger.warn(\n            `Double pseudoelement ::${this.pseudoelement}::${name}`,\n          );\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      case \"first-n-lines\":\n        if (params && params.length == 1 && typeof params[0] == \"number\") {\n          const n = Math.round(params[0] as number);\n          if (n > 0 && n == params[0]) {\n            if (!this.pseudoelement) {\n              this.pseudoelement = `first-${n}-lines`;\n            } else {\n              Logging.logger.warn(\n                `Double pseudoelement ::${this.pseudoelement}::${name}`,\n              );\n              this.chain.push(new CheckConditionAction(\"\")); // always fails\n            }\n            break;\n          }\n        }\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n      case \"nth-fragment\":\n        if (params && params.length == 2) {\n          this.viewConditionId = `NFS_${params[0]}_${params[1]}`;\n        } else {\n          this.chain.push(new CheckConditionAction(\"\")); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(`Unrecognized pseudoelement: ::${name}`);\n        this.chain.push(new CheckConditionAction(\"\")); // always fails\n        break;\n    }\n    this.specificity += 1;\n  }\n\n  /**\n   * @override\n   */\n  idSelector(id: string): void {\n    this.specificity += 65536;\n    this.chain.push(new CheckIdAction(id));\n  }\n\n  /**\n   * @override\n   */\n  attributeSelector(\n    ns: string,\n    name: string,\n    op: CssTokenizer.TokenType,\n    value: string | null,\n  ): void {\n    this.specificity += 256;\n    name = name.toLowerCase();\n    value = value || \"\";\n    let action;\n    switch (op) {\n      case CssTokenizer.TokenType.EOF:\n        action = new CheckAttributePresentAction(ns, name);\n        break;\n      case CssTokenizer.TokenType.EQ:\n        action = new CheckAttributeEqAction(ns, name, value);\n        break;\n      case CssTokenizer.TokenType.TILDE_EQ:\n        if (!value || value.match(/\\s/)) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`(^|\\\\s)${Base.escapeRegExp(value)}(\\$|\\\\s)`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.BAR_EQ:\n        action = new CheckAttributeRegExpAction(\n          ns,\n          name,\n          new RegExp(`^${Base.escapeRegExp(value)}(\\$|-)`),\n        );\n        break;\n      case CssTokenizer.TokenType.HAT_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`^${Base.escapeRegExp(value)}`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.DOLLAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(`${Base.escapeRegExp(value)}\\$`),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.STAR_EQ:\n        if (!value) {\n          action = new CheckConditionAction(\"\"); // always fails\n        } else {\n          action = new CheckAttributeRegExpAction(\n            ns,\n            name,\n            new RegExp(Base.escapeRegExp(value)),\n          );\n        }\n        break;\n      case CssTokenizer.TokenType.COL_COL:\n        if (value == \"supported\") {\n          action = new CheckNamespaceSupportedAction(ns, name);\n        } else {\n          Logging.logger.warn(\"Unsupported :: attr selector op:\", value);\n          action = new CheckConditionAction(\"\"); // always fails\n        }\n        break;\n      default:\n        Logging.logger.warn(\"Unsupported attr selector:\", op);\n        action = new CheckConditionAction(\"\"); // always fails\n    }\n    this.chain.push(action);\n  }\n\n  /**\n   * @override\n   */\n  descendantSelector(): void {\n    const condition = `d${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new DescendantConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  childSelector(): void {\n    const condition = `c${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new ChildConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  adjacentSiblingSelector(): void {\n    const condition = `a${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new AdjacentSiblingConditionItem(condition, this.viewConditionId, null),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  followingSiblingSelector(): void {\n    const condition = `f${conditionCount++}`;\n    this.processChain(\n      new ConditionItemAction(\n        new FollowingSiblingConditionItem(\n          condition,\n          this.viewConditionId,\n          null,\n        ),\n      ),\n    );\n    this.chain = [new CheckConditionAction(condition)];\n    this.viewConditionId = null;\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishChain();\n    this.pseudoelement = null;\n    this.footnoteContent = false;\n    this.specificity = 0;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  startSelectorRule(): void {\n    if (this.isInsideSelectorRule(\"E_CSS_UNEXPECTED_SELECTOR\")) {\n      return;\n    }\n    this.state = ParseState.SELECTOR;\n    this.elementStyle = {} as ElementStyle;\n    this.pseudoelement = null;\n    this.specificity = 0;\n    this.footnoteContent = false;\n    this.chain = [];\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  startStylesheet(flavor: CssParser.StylesheetFlavor): void {\n    super.startStylesheet(flavor);\n    this.state = ParseState.TOP;\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishChain();\n    super.startRuleBody();\n    if (this.state == ParseState.SELECTOR) {\n      this.state = ParseState.TOP;\n    }\n  }\n\n  /**\n   * @override\n   */\n  endRule(): void {\n    super.endRule();\n    this.insideSelectorRule = ParseState.TOP;\n  }\n\n  finishChain(): void {\n    if (this.chain) {\n      const specificity: number = this.specificity + this.cascade.nextOrder();\n      this.processChain(this.makeApplyRuleAction(specificity));\n      this.chain = null;\n      this.pseudoelement = null;\n      this.viewConditionId = null;\n      this.footnoteContent = false;\n      this.specificity = 0;\n    }\n  }\n\n  protected makeApplyRuleAction(specificity: number): ApplyRuleAction {\n    let regionId = this.regionId;\n    if (this.footnoteContent) {\n      if (regionId) {\n        regionId = \"xxx-bogus-xxx\";\n      } else {\n        regionId = \"footnote\";\n      }\n    }\n    return new ApplyRuleAction(\n      this.elementStyle,\n      specificity,\n      this.pseudoelement,\n      regionId,\n      this.viewConditionId,\n    );\n  }\n\n  special(name: string, value: Css.Val) {\n    let val: CascadeValue;\n    if (!this.condition) {\n      val = new CascadeValue(value, 0);\n    } else {\n      val = new ConditionalCascadeValue(value, 0, this.condition);\n    }\n    const arr = getMutableSpecial(this.elementStyle, name);\n    arr.push(val);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    if (\n      name == \"display\" &&\n      (value === Css.ident.oeb_page_head || value === Css.ident.oeb_page_foot)\n    ) {\n      this.simpleProperty(\n        \"flow-options\",\n        new Css.SpaceList([Css.ident.exclusive, Css.ident._static]),\n        important,\n      );\n      this.simpleProperty(\"flow-into\", value, important);\n      value = Css.ident.block;\n    }\n    const hooks = Plugin.getHooksForName(\"SIMPLE_PROPERTY\");\n    hooks.forEach((hook) => {\n      const original = { name: name, value: value, important: important };\n      const converted = hook(original);\n      name = converted[\"name\"];\n      value = converted[\"value\"];\n      important = converted[\"important\"];\n    });\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n\n  finish(): Cascade {\n    return this.cascade;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    switch (funcName) {\n      case \"not\": {\n        const notParserHandler = new NotParameterParserHandler(this);\n        notParserHandler.startSelectorRule();\n        this.owner.pushHandler(notParserHandler);\n        break;\n      }\n      default:\n        // TODO\n        break;\n    }\n  }\n}\n\nexport const nthSelectorActionClasses: { [key: string]: typeof IsNthAction } = {\n  \"nth-child\": IsNthSiblingAction,\n  \"nth-of-type\": IsNthSiblingOfTypeAction,\n  \"nth-last-child\": IsNthLastSiblingAction,\n  \"nth-last-of-type\": IsNthLastSiblingOfTypeAction,\n};\n\nexport let conditionCount: number = 0;\n\nexport class NotParameterParserHandler extends CascadeParserHandler {\n  parentChain: ChainedAction[];\n\n  constructor(public readonly parent: CascadeParserHandler) {\n    super(\n      parent.scope,\n      parent.owner,\n      parent.condition,\n      parent,\n      parent.regionId,\n      parent.validatorSet,\n      false,\n    );\n    this.parentChain = parent.chain;\n  }\n\n  /**\n   * @override\n   */\n  startFuncWithSelector(funcName: string): void {\n    if (funcName == \"not\") {\n      this.reportAndSkip(\"E_CSS_UNEXPECTED_NOT\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_RULE_BODY\");\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.reportAndSkip(\"E_CSS_UNEXPECTED_NEXT_SELECTOR\");\n  }\n\n  /**\n   * @override\n   */\n  endFuncWithSelector(): void {\n    if (this.chain && this.chain.length > 0) {\n      this.parentChain.push(new NegateActionsSet(this.chain));\n    }\n    this.parent.specificity += this.specificity;\n    this.owner.popHandler();\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    super.error(mnemonics, token);\n    this.owner.popHandler();\n  }\n}\n\n/**\n * @override\n */\nexport class DefineParserHandler extends CssParser.SlaveParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (this.scope.values[name]) {\n      this.error(`E_CSS_NAME_REDEFINED ${name}`, this.getCurrentToken());\n    } else {\n      const unit = name.match(/height|^(top|bottom)$/) ? \"vh\" : \"vw\";\n      const dim = new Exprs.Numeric(this.scope, 100, unit);\n      this.scope.defineName(name, value.toExpr(this.scope, dim));\n    }\n  }\n}\n\nexport class PropSetParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  order: number;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly condition: Exprs.Val,\n    public readonly elementStyle: ElementStyle,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n    this.order = 0;\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    if (important) {\n      Logging.logger.warn(\"E_IMPORTANT_NOT_ALLOWED\");\n    } else {\n      this.validatorSet.validatePropertyAndHandleShorthand(\n        name,\n        value,\n        important,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const av = this.condition\n      ? new ConditionalCascadeValue(value, specificity, this.condition)\n      : new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, av);\n  }\n}\n\nexport class PropertyParserHandler\n  extends CssParser.ErrorHandler\n  implements CssValidator.PropertyReceiver\n{\n  elementStyle = {} as ElementStyle;\n  order: number = 0;\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    Logging.logger.warn(\n      \"E_INVALID_PROPERTY_VALUE\",\n      `${name}:`,\n      value.toString(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    Logging.logger.warn(\"E_INVALID_PROPERTY\", `${name}:`, value.toString());\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    let specificity = important\n      ? CssParser.SPECIFICITY_STYLE_IMPORTANT\n      : CssParser.SPECIFICITY_STYLE;\n    specificity += this.order;\n    this.order += ORDER_INCREMENT;\n    const cascval = new CascadeValue(value, specificity);\n    setProp(this.elementStyle, name, cascval);\n  }\n}\n\nexport function forEachViewConditionalStyles(\n  style: ElementStyle,\n  callback: (p1: ElementStyle) => any,\n): void {\n  const viewConditionalStyles = getViewConditionalStyleMap(style);\n  if (!viewConditionalStyles) {\n    return;\n  }\n  viewConditionalStyles.forEach((entry) => {\n    if (!entry.matcher.matches()) {\n      return;\n    }\n    callback(entry.styles);\n  });\n}\n\nexport function mergeViewConditionalStyles(\n  cascMap: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  style: ElementStyle,\n): void {\n  forEachViewConditionalStyles(style, (viewConditionalStyles) => {\n    mergeStyle(cascMap, viewConditionalStyles, context);\n  });\n}\n\nexport function parseStyleAttribute(\n  scope: Exprs.LexicalScope,\n  validatorSet: CssValidator.ValidatorSet,\n  baseURL: string,\n  styleAttrValue: string,\n): ElementStyle {\n  const handler = new PropertyParserHandler(scope, validatorSet);\n  const tokenizer = new CssTokenizer.Tokenizer(styleAttrValue, handler);\n  try {\n    CssParser.parseStyleAttribute(tokenizer, handler, baseURL);\n  } catch (err) {\n    Logging.logger.warn(err, \"Style attribute parse error:\");\n  }\n  return handler.elementStyle;\n}\n\nexport function isVertical(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  vertical: boolean,\n): boolean {\n  const writingModeCasc = cascaded[\"writing-mode\"];\n  if (writingModeCasc) {\n    const writingMode = writingModeCasc.evaluate(context, \"writing-mode\");\n    if (\n      writingMode &&\n      writingMode !== Css.ident.inherit &&\n      writingMode !== Css.ident.revert &&\n      writingMode !== Css.ident.unset\n    ) {\n      return writingMode === Css.ident.vertical_rl;\n    }\n  }\n  return vertical;\n}\n\nexport function isRtl(\n  cascaded: { [key: string]: CascadeValue },\n  context: Exprs.Context,\n  rtl: boolean,\n): boolean {\n  const directionCasc = cascaded[\"direction\"];\n  if (directionCasc) {\n    const direction = directionCasc.evaluate(context, \"direction\");\n    if (\n      direction &&\n      direction !== Css.ident.inherit &&\n      direction !== Css.ident.revert &&\n      direction !== Css.ident.unset\n    ) {\n      return direction === Css.ident.rtl;\n    }\n  }\n  return rtl;\n}\n\nexport function flattenCascadedStyle(\n  style: ElementStyle,\n  context: Exprs.Context,\n  regionIds: string[],\n  isFootnote: boolean,\n  nodeContext: Vtree.NodeContext,\n): { [key: string]: CascadeValue } {\n  const cascMap = {} as { [key: string]: CascadeValue };\n  for (const n in style) {\n    if (isPropName(n)) {\n      cascMap[n] = getProp(style, n);\n    }\n  }\n  mergeViewConditionalStyles(cascMap, context, style);\n  forEachStylesInRegion(\n    style,\n    regionIds,\n    isFootnote,\n    (regionId, regionStyle) => {\n      mergeStyle(cascMap, regionStyle, context);\n      mergeViewConditionalStyles(cascMap, context, regionStyle);\n    },\n  );\n  return cascMap;\n}\n\nexport function forEachStylesInRegion(\n  style: ElementStyle,\n  regionIds: string[],\n  isFootnote: boolean,\n  callback: (p1: string, p2: ElementStyle) => any,\n): void {\n  const regions = getStyleMap(style, \"_regions\");\n  if ((regionIds || isFootnote) && regions) {\n    if (isFootnote) {\n      const footnoteRegion = [\"footnote\"];\n      if (!regionIds) {\n        regionIds = footnoteRegion;\n      } else {\n        regionIds = regionIds.concat(footnoteRegion);\n      }\n    }\n    for (const regionId of regionIds) {\n      const regionStyle = regions[regionId];\n      if (regionStyle) {\n        callback(regionId, regionStyle);\n      }\n    }\n  }\n}\n\nexport function mergeStyle(\n  to: { [key: string]: CascadeValue },\n  from: ElementStyle,\n  context: Exprs.Context,\n): void {\n  for (const property in from) {\n    if (isPropName(property)) {\n      const newVal = getProp(from, property);\n      const oldVal = to[property];\n      to[property] = cascadeValues(context, oldVal, newVal as CascadeValue);\n    }\n  }\n}\n\n/**\n * Convert logical properties to physical ones, taking specificity into account.\n * @param src Source properties map\n * @param dest Destination map\n * @param transform If supplied, property values are transformed by this\n *     function before inserted into the destination map. The first parameter is\n *     the property name and the second one is the property value.\n * @template T\n */\nexport const convertToPhysical = <T>(\n  src: { [key: string]: CascadeValue },\n  dest: { [key: string]: T },\n  vertical: boolean,\n  rtl: boolean,\n  transform: (p1: string, p2: CascadeValue) => T,\n) => {\n  const couplingMap = vertical\n    ? rtl\n      ? couplingMapVertRtl\n      : couplingMapVert\n    : rtl\n    ? couplingMapHorRtl\n    : couplingMapHor;\n  for (const propName in src) {\n    if (src.hasOwnProperty(propName)) {\n      const cascVal = src[propName];\n      if (!cascVal) {\n        continue;\n      }\n      const coupledName = couplingMap[propName];\n      let targetName: string;\n      if (coupledName) {\n        const coupledCascVal = src[coupledName];\n        if (coupledCascVal && coupledCascVal.priority > cascVal.priority) {\n          continue;\n        }\n        targetName = geomNames[coupledName] ? coupledName : propName;\n      } else {\n        targetName = propName;\n      }\n      dest[targetName] = transform(propName, cascVal);\n    }\n  }\n};\n\n/**\n * Convert var() to its value\n */\nexport class VarFilterVisitor extends Css.FilterVisitor {\n  constructor(\n    public elementStyles: ElementStyle[],\n    public styler: CssStyler.AbstractStyler,\n    public element: Element | null,\n  ) {\n    super();\n  }\n\n  private getVarValue(name: string): Css.Val {\n    let elem = this.element ?? ((this.styler as any).root as Element);\n    if (this.elementStyles?.length) {\n      for (const style of this.elementStyles) {\n        const val = (style[name] as CascadeValue)?.value;\n        if (val) {\n          return val;\n        }\n      }\n      if (this.element) {\n        elem = this.element.parentElement;\n      }\n    }\n    for (; elem; elem = elem.parentElement) {\n      const val = (this.styler.getStyle(elem, false)?.[name] as CascadeValue)\n        ?.value;\n      if (val) {\n        return val;\n      }\n    }\n    return null;\n  }\n\n  /** @override */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name !== \"var\") {\n      return super.visitFunc(func);\n    }\n    const name = func.values[0] instanceof Css.Ident && func.values[0].name;\n    if (!name || !Css.isCustomPropName(name)) {\n      this.error = true;\n      return Css.empty;\n    }\n    const varVal = this.getVarValue(name);\n    if (varVal) {\n      return varVal;\n    }\n    // fallback value\n    if (func.values.length < 2) {\n      this.error = true;\n      return Css.empty;\n    }\n    if (func.values.length === 2) {\n      return func.values[1];\n    } else {\n      return new Css.CommaList(func.values.slice(1));\n    }\n  }\n}\n\n/**\n * Convert calc() to its value\n */\nexport class CalcFilterVisitor extends Css.FilterVisitor {\n  constructor(public styler: CssStyler.AbstractStyler) {\n    super();\n  }\n\n  /** @override */\n  visitFunc(func: Css.Func): Css.Val {\n    // convert func args\n    let value = super.visitFunc(func);\n    if (func.name !== \"calc\") {\n      return value;\n    }\n    const exprText = value.toString().replace(/^calc\\b/, \"-epubx-expr\");\n    const unitInCalc = exprText.replace(/^.*?\\d([a-zA-Z]+\\b|%).*$|^.*$/, \"$1\");\n    const exprVal = CssParser.parseValue(\n      (this.styler as any).scope,\n      new CssTokenizer.Tokenizer(exprText, null),\n      \"\",\n    );\n    if (exprVal instanceof Css.Expr) {\n      const exprResult = exprVal.expr.evaluate((this.styler as any).context);\n      if (typeof exprResult === \"number\") {\n        if (unitInCalc && unitInCalc !== \"%\") {\n          value = new Css.Numeric(exprResult, \"px\");\n        }\n        // TODO: percentage value, etc.\n        // FIXME: font-size-relative or viewport relative unit may be incorrect\n      }\n    }\n    return value;\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssLogicalUtil - Utilities related to CSS Logical Properties and Values https://drafts.csswg.org/css-logical/\n */\ntype ConversionMap = {\n  regexp: RegExp;\n  to: string;\n};\n\nfunction createRegExpMap(\n  valueMaps: {\n    [key: string]: { [key: string]: { logical: string; physical: string }[] };\n  },\n  toPhysical: boolean,\n): { [key: string]: { [key: string]: ConversionMap[] } } {\n  const map = {};\n  Object.keys(valueMaps as object).forEach((writingMode) => {\n    const dest = (map[writingMode] = {});\n    const src = valueMaps[writingMode];\n    Object.keys(src as object).forEach((direction) => {\n      dest[direction] = src[direction].map((p) => {\n        const from = toPhysical ? p.logical : p.physical;\n        const to = toPhysical ? p.physical : p.logical;\n        return { regexp: new RegExp(`(-?)${from}(-?)`), to: `\\$1${to}\\$2` };\n      });\n    });\n  });\n  return map;\n}\n\nfunction convert(\n  value: string,\n  writingMode: string,\n  direction: string | null,\n  maps: { [key: string]: { [key: string]: ConversionMap[] } },\n): string {\n  const maps2 = maps[writingMode];\n  if (!maps2) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  const map = maps2[direction || \"ltr\"];\n  if (!map) {\n    throw new Error(`unknown direction: ${direction}`);\n  }\n  for (const p of map) {\n    const replaced = value.replace(p.regexp, p.to);\n    if (replaced !== value) {\n      return replaced;\n    }\n  }\n  return value;\n}\nconst values: {\n  [key: string]: { [key: string]: { logical: string; physical: string }[] };\n} = {\n  \"horizontal-tb\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"left\" },\n      { logical: \"inline-end\", physical: \"right\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"right\" },\n      { logical: \"inline-end\", physical: \"left\" },\n      { logical: \"block-start\", physical: \"top\" },\n      { logical: \"block-end\", physical: \"bottom\" },\n      { logical: \"inline-size\", physical: \"width\" },\n      { logical: \"block-size\", physical: \"height\" },\n    ],\n  },\n  \"vertical-rl\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"right\" },\n      { logical: \"block-end\", physical: \"left\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n  \"vertical-lr\": {\n    ltr: [\n      { logical: \"inline-start\", physical: \"top\" },\n      { logical: \"inline-end\", physical: \"bottom\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n    rtl: [\n      { logical: \"inline-start\", physical: \"bottom\" },\n      { logical: \"inline-end\", physical: \"top\" },\n      { logical: \"block-start\", physical: \"left\" },\n      { logical: \"block-end\", physical: \"right\" },\n      { logical: \"inline-size\", physical: \"height\" },\n      { logical: \"block-size\", physical: \"width\" },\n    ],\n  },\n};\nconst toPhysicalMaps = createRegExpMap(values, true);\n\nexport function toPhysical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toPhysicalMaps);\n}\nconst toLogicalMaps = createRegExpMap(values, false);\n\nexport function toLogical(\n  value: string,\n  writingMode: string,\n  direction?: string | null,\n): string {\n  return convert(value, writingMode, direction || null, toLogicalMaps);\n}\nconst lineRelativeValues: {\n  [key: string]: { logical: string; physical: string }[];\n} = {\n  \"horizontal-tb\": [\n    { logical: \"line-left\", physical: \"left\" },\n    { logical: \"line-right\", physical: \"right\" },\n    { logical: \"over\", physical: \"top\" },\n    { logical: \"under\", physical: \"bottom\" },\n  ],\n  \"vertical-rl\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n  \"vertical-lr\": [\n    { logical: \"line-left\", physical: \"top\" },\n    { logical: \"line-right\", physical: \"bottom\" },\n    { logical: \"over\", physical: \"right\" },\n    { logical: \"under\", physical: \"left\" },\n  ],\n};\n\nexport function toLineRelative(value: string, writingMode: string): string {\n  const maps = lineRelativeValues[writingMode];\n  if (!maps) {\n    throw new Error(`unknown writing-mode: ${writingMode}`);\n  }\n  for (let i = 0; i < maps.length; i++) {\n    if (maps[i].physical === value) {\n      return maps[i].logical;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sizing - CSS Intrinsic & Extrinsic Sizing\n */\nimport * as Base from \"./base\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Box sizes defined in css-sizing.\n * @enum {string}\n */\nexport enum Size {\n  FILL_AVAILABLE_INLINE_SIZE = \"fill-available inline size\",\n  FILL_AVAILABLE_BLOCK_SIZE = \"fill-available block size\",\n  FILL_AVAILABLE_WIDTH = \"fill-available width\",\n  FILL_AVAILABLE_HEIGHT = \"fill-available height\",\n  MAX_CONTENT_INLINE_SIZE = \"max-content inline size\",\n  MAX_CONTENT_BLOCK_SIZE = \"max-content block size\",\n  MAX_CONTENT_WIDTH = \"max-content width\",\n  MAX_CONTENT_HEIGHT = \"max-content height\",\n  MIN_CONTENT_INLINE_SIZE = \"min-content inline size\",\n  MIN_CONTENT_BLOCK_SIZE = \"min-content block size\",\n  MIN_CONTENT_WIDTH = \"min-content width\",\n  MIN_CONTENT_HEIGHT = \"min-content height\",\n  FIT_CONTENT_INLINE_SIZE = \"fit-content inline size\",\n  FIT_CONTENT_BLOCK_SIZE = \"fit-content block size\",\n  FIT_CONTENT_WIDTH = \"fit-content width\",\n  FIT_CONTENT_HEIGHT = \"fit-content height\",\n}\n\n/**\n * Get specified sizes for the element.\n */\nexport function getSize(\n  clientLayout: Vtree.ClientLayout,\n  element: Element,\n  sizes: Size[],\n): { [key in Size]: number } {\n  const original = {\n    display: (element as any).style.display,\n    position: (element as any).style.position,\n    width: (element as any).style.width as string,\n    maxWidth: (element as any).style.maxWidth as string,\n    minWidth: (element as any).style.minWidth as string,\n    height: (element as any).style.height as string,\n    maxHeight: (element as any).style.maxHeight as string,\n    minHeight: (element as any).style.minHeight as string,\n  };\n  const doc = element.ownerDocument;\n  const parent = element.parentNode;\n\n  // wrap the element with a dummy container element\n  const container = doc.createElement(\"div\");\n  Base.setCSSProperty(container, \"position\", original.position);\n  parent.insertBefore(container, element);\n  container.appendChild(element);\n  Base.setCSSProperty(element, \"width\", \"auto\");\n  Base.setCSSProperty(element, \"max-width\", \"none\");\n  Base.setCSSProperty(element, \"min-width\", \"0\");\n  Base.setCSSProperty(element, \"height\", \"auto\");\n  Base.setCSSProperty(element, \"max-height\", \"none\");\n  Base.setCSSProperty(element, \"min-height\", \"0\");\n\n  function getComputedValue(name: string): string {\n    return clientLayout.getElementComputedStyle(element).getPropertyValue(name);\n  }\n  const writingModeProperty = Base.getPrefixedPropertyNames(\"writing-mode\");\n  const writingModeValue =\n    (writingModeProperty ? getComputedValue(writingModeProperty[0]) : null) ||\n    getComputedValue(\"writing-mode\");\n  const isVertical =\n    writingModeValue === \"vertical-rl\" ||\n    writingModeValue === \"tb-rl\" ||\n    writingModeValue === \"vertical-lr\" ||\n    writingModeValue === \"tb-lr\";\n  const inlineSizeName = isVertical ? \"height\" : \"width\";\n  const blockSizeName = isVertical ? \"width\" : \"height\";\n\n  function getFillAvailableInline(): string {\n    Base.setCSSProperty(element, \"display\", \"block\");\n    Base.setCSSProperty(element, \"position\", \"static\");\n    return getComputedValue(inlineSizeName);\n  }\n\n  // Inline size of an inline-block element is the fit-content\n  // (shrink-to-fit) inline size.\n  function getMaxContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is sufficiently large, the fit-content\n    // inline size equals to the max-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"99999999px\"); // 'sufficiently large' value\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getMinContentInline(): string {\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n\n    // When the available inline size is zero, the fit-content inline size\n    // equals to the min-content inline size.\n    Base.setCSSProperty(container, inlineSizeName, \"0\");\n    const r = getComputedValue(inlineSizeName);\n    Base.setCSSProperty(container, inlineSizeName, \"\");\n    return r;\n  }\n\n  function getFitContentInline(): string {\n    const fillAvailableInline = getFillAvailableInline();\n    const minContentInline = getMinContentInline();\n    const parsedFillAvailable = parseFloat(fillAvailableInline);\n    if (parsedFillAvailable <= parseFloat(minContentInline)) {\n      return minContentInline;\n    } else {\n      const maxContentInline = getMaxContentInline();\n      if (parsedFillAvailable <= parseFloat(maxContentInline)) {\n        return fillAvailableInline;\n      } else {\n        return maxContentInline;\n      }\n    }\n  }\n\n  function getIdealBlock(): string {\n    return getComputedValue(blockSizeName);\n  }\n\n  function getFillAvailableBlock(): string {\n    throw new Error(\"Getting fill-available block size is not implemented\");\n  }\n  const result = {} as { [key in Size]: number };\n  sizes.forEach((size) => {\n    let r: string;\n    switch (size) {\n      case Size.FILL_AVAILABLE_INLINE_SIZE:\n        r = getFillAvailableInline();\n        break;\n      case Size.MAX_CONTENT_INLINE_SIZE:\n        r = getMaxContentInline();\n        break;\n      case Size.MIN_CONTENT_INLINE_SIZE:\n        r = getMinContentInline();\n        break;\n      case Size.FIT_CONTENT_INLINE_SIZE:\n        r = getFitContentInline();\n        break;\n      case Size.FILL_AVAILABLE_BLOCK_SIZE:\n        r = getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_BLOCK_SIZE:\n      case Size.MIN_CONTENT_BLOCK_SIZE:\n      case Size.FIT_CONTENT_BLOCK_SIZE:\n        r = getIdealBlock();\n        break;\n      case Size.FILL_AVAILABLE_WIDTH:\n        r = isVertical ? getFillAvailableBlock() : getFillAvailableInline();\n        break;\n      case Size.FILL_AVAILABLE_HEIGHT:\n        r = isVertical ? getFillAvailableInline() : getFillAvailableBlock();\n        break;\n      case Size.MAX_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMaxContentInline();\n        break;\n      case Size.MAX_CONTENT_HEIGHT:\n        r = isVertical ? getMaxContentInline() : getIdealBlock();\n        break;\n      case Size.MIN_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getMinContentInline();\n        break;\n      case Size.MIN_CONTENT_HEIGHT:\n        r = isVertical ? getMinContentInline() : getIdealBlock();\n        break;\n      case Size.FIT_CONTENT_WIDTH:\n        r = isVertical ? getIdealBlock() : getFitContentInline();\n        break;\n      case Size.FIT_CONTENT_HEIGHT:\n        r = isVertical ? getFitContentInline() : getIdealBlock();\n        break;\n    }\n    result[size] = parseFloat(r);\n    Base.setCSSProperty(element, \"position\", original.position);\n    Base.setCSSProperty(element, \"display\", original.display);\n  });\n  Base.setCSSProperty(element, \"width\", original.width);\n  Base.setCSSProperty(element, \"max-width\", original.maxWidth);\n  Base.setCSSProperty(element, \"min-width\", original.minWidth);\n  Base.setCSSProperty(element, \"height\", original.height);\n  Base.setCSSProperty(element, \"max-height\", original.maxHeight);\n  Base.setCSSProperty(element, \"min-height\", original.minHeight);\n  parent.insertBefore(element, container);\n  parent.removeChild(container);\n  return result;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageFloats - CSS Page Floats\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Logging from \"./logging\";\nimport * as CssLogicalUtil from \"./css-logical-util\";\nimport * as Sizing from \"./sizing\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout as LayoutType, PageFloats, Vtree } from \"./types\";\n\nexport const FloatReference = PageFloats.FloatReference;\nexport type FloatReference = PageFloats.FloatReference; // eslint-disable-line no-redeclare\n\ntype PageFloatID = PageFloats.PageFloatID;\n\nexport function floatReferenceOf(str: string): FloatReference {\n  switch (str) {\n    case \"inline\":\n      return FloatReference.INLINE;\n    case \"column\":\n      return FloatReference.COLUMN;\n    case \"region\":\n      return FloatReference.REGION;\n    case \"page\":\n      return FloatReference.PAGE;\n    default:\n      throw new Error(`Unknown float-reference: ${str}`);\n  }\n}\n\nexport function isPageFloat(floatReference: FloatReference): boolean {\n  switch (floatReference) {\n    case FloatReference.INLINE:\n      return false;\n    case FloatReference.COLUMN:\n    case FloatReference.REGION:\n    case FloatReference.PAGE:\n      return true;\n    default:\n      throw new Error(`Unknown float-reference: ${floatReference}`);\n  }\n}\n\n/**\n * Interpret a float value with the writing-mode and direction assuming the\n * float-reference is inline and returns \"left\" or \"right\".\n */\nexport function resolveInlineFloatDirection(\n  floatSide: string,\n  vertical: boolean,\n  direction: string,\n): string {\n  const writingMode = vertical ? \"vertical-rl\" : \"horizontal-tb\";\n  if (floatSide === \"top\" || floatSide === \"bottom\") {\n    floatSide = CssLogicalUtil.toLogical(floatSide, writingMode, direction);\n  }\n  if (floatSide === \"block-start\") {\n    floatSide = \"inline-start\";\n  }\n  if (floatSide === \"block-end\") {\n    floatSide = \"inline-end\";\n  }\n  if (floatSide === \"inline-start\" || floatSide === \"inline-end\") {\n    const physicalValue = CssLogicalUtil.toPhysical(\n      floatSide,\n      writingMode,\n      direction,\n    );\n    const lineRelativeValue = CssLogicalUtil.toLineRelative(\n      physicalValue,\n      writingMode,\n    );\n    if (lineRelativeValue === \"line-left\") {\n      floatSide = \"left\";\n    } else if (lineRelativeValue === \"line-right\") {\n      floatSide = \"right\";\n    }\n  }\n  if (floatSide !== \"left\" && floatSide !== \"right\") {\n    Logging.logger.warn(`Invalid float value: ${floatSide}. Fallback to left.`);\n    floatSide = \"left\";\n  }\n  return floatSide;\n}\n\nexport class PageFloat implements PageFloats.PageFloat {\n  order: number | null = null;\n  id: PageFloatID | null = null;\n\n  constructor(\n    public readonly nodePosition: Vtree.NodePosition,\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly clearSide: string | null,\n    public readonly flowName: string,\n    public readonly floatMinWrapBlock: Css.Numeric | null,\n  ) {}\n\n  getOrder(): number {\n    if (this.order === null) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.order;\n  }\n\n  getId(): PageFloatID {\n    if (!this.id) {\n      throw new Error(\"The page float is not yet added\");\n    }\n    return this.id;\n  }\n\n  isAllowedOnContext(pageFloatLayoutContext: PageFloatLayoutContext): boolean {\n    return pageFloatLayoutContext.isAnchorAlreadyAppeared(this.getId());\n  }\n\n  isAllowedToPrecede(other: PageFloat): boolean {\n    return false;\n  }\n}\n\nexport class PageFloatStore {\n  private floats: PageFloat[] = [];\n  private nextPageFloatIndex: number = 0;\n\n  private nextOrder(): number {\n    return this.nextPageFloatIndex++;\n  }\n\n  private createPageFloatId(order: number): PageFloatID {\n    return `pf${order}`;\n  }\n\n  addPageFloat(float: PageFloat) {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, float.nodePosition),\n    );\n    if (index >= 0) {\n      throw new Error(\n        \"A page float with the same source node is already registered\",\n      );\n    } else {\n      const order = (float.order = this.nextOrder());\n      float.id = this.createPageFloatId(order);\n      this.floats.push(float);\n    }\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    const index = this.floats.findIndex((f) =>\n      VtreeImpl.isSameNodePosition(f.nodePosition, nodePosition),\n    );\n    return index >= 0 ? this.floats[index] : null;\n  }\n\n  findPageFloatById(id: PageFloatID) {\n    const index = this.floats.findIndex((f) => f.id === id);\n    return index >= 0 ? this.floats[index] : null;\n  }\n}\n\n/**\n * @param continues Represents whether the float is fragmented and continues\n *     after this fragment\n */\nexport class PageFloatFragment implements PageFloats.PageFloatFragment {\n  constructor(\n    public readonly floatReference: FloatReference,\n    public readonly floatSide: string,\n    public readonly continuations: PageFloatContinuation[],\n    public readonly area: Vtree.Container,\n    public readonly continues: boolean,\n  ) {}\n\n  hasFloat(float: PageFloat): boolean {\n    return this.continuations.some((c) => c.float === float);\n  }\n\n  findNotAllowedFloat(context: PageFloatLayoutContext): PageFloat | null {\n    for (let i = this.continuations.length - 1; i >= 0; i--) {\n      const f = this.continuations[i].float;\n      if (!f.isAllowedOnContext(context)) {\n        return f;\n      }\n    }\n    return null;\n  }\n\n  getOuterShape(): GeometryUtil.Shape {\n    return this.area.getOuterShape(null, null);\n  }\n\n  getOuterRect(): GeometryUtil.Rect {\n    return this.area.getOuterRect();\n  }\n\n  getOrder(): number {\n    const floats = this.continuations.map((c) => c.float);\n    return Math.min.apply(\n      null,\n      floats.map((f) => f.getOrder()),\n    );\n  }\n\n  shouldBeStashedBefore(float: PageFloat): boolean {\n    return this.getOrder() < float.getOrder();\n  }\n\n  addContinuations(continuations: PageFloatContinuation[]) {\n    continuations.forEach((c) => {\n      this.continuations.push(c);\n    });\n  }\n\n  getFlowName(): string {\n    const flowName = this.continuations[0].float.flowName;\n    Asserts.assert(\n      this.continuations.every((c) => c.float.flowName === flowName),\n    );\n    return flowName;\n  }\n}\n\nexport class PageFloatContinuation implements PageFloats.PageFloatContinuation {\n  constructor(\n    public readonly float: PageFloat,\n    public readonly nodePosition: Vtree.NodePosition,\n  ) {}\n\n  equals(other: PageFloatContinuation | null): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this === other) {\n      return true;\n    }\n    return (\n      this.float === other.float &&\n      VtreeImpl.isSameNodePosition(this.nodePosition, other.nodePosition)\n    );\n  }\n}\n\nexport type PageFloatPlacementCondition =\n  PageFloats.PageFloatPlacementCondition;\n\n/**\n * @param generatingNodePosition Source NodePosition generating the context.\n *     Specify when a column context is generated by a non-root element (for\n *     example page floats)\n */\nexport class PageFloatLayoutContext\n  implements PageFloats.PageFloatLayoutContext\n{\n  private children: PageFloatLayoutContext[] = [];\n  writingMode: Css.Val;\n  direction: Css.Val;\n  private invalidated: boolean = false;\n  private floatStore: PageFloatStore;\n  private forbiddenFloats: PageFloatID[] = [];\n  floatFragments: PageFloatFragment[] = [];\n  private stashedFloatFragments: PageFloatFragment[] = [];\n  private floatAnchors: { [key in PageFloatID]: Node } = {};\n  private floatsDeferredToNext: PageFloatContinuation[] = [];\n  private floatsDeferredFromPrevious: PageFloatContinuation[];\n  private layoutConstraints: LayoutType.LayoutConstraint[] = [];\n  private locked: boolean = false;\n\n  constructor(\n    public readonly parent: PageFloatLayoutContext,\n    private readonly floatReference: FloatReference | null,\n    private container: Vtree.Container,\n    public readonly flowName: string | null,\n    public readonly generatingNodePosition: Vtree.NodePosition | null,\n    writingMode: Css.Val | null,\n    direction: Css.Val | null,\n  ) {\n    if (parent) {\n      parent.children.push(this);\n    }\n    this.writingMode =\n      writingMode || (parent && parent.writingMode) || Css.ident.horizontal_tb;\n    this.direction = direction || (parent && parent.direction) || Css.ident.ltr;\n    this.floatStore = parent ? parent.floatStore : new PageFloatStore();\n    const previousSibling = this.getPreviousSibling();\n    this.floatsDeferredFromPrevious = previousSibling\n      ? [].concat(previousSibling.floatsDeferredToNext)\n      : [];\n  }\n\n  private getParent(floatReference: FloatReference): PageFloatLayoutContext {\n    if (!this.parent) {\n      throw new Error(`No PageFloatLayoutContext for ${floatReference}`);\n    }\n    return this.parent;\n  }\n\n  private getPreviousSiblingOf(\n    child: PageFloatLayoutContext | null,\n    floatReference: FloatReference | null,\n    flowName: string | null,\n    generatingNodePosition: Vtree.NodePosition | null,\n  ): PageFloatLayoutContext | null {\n    let index = this.children.indexOf(child as PageFloatLayoutContext);\n    if (index < 0) {\n      index = this.children.length;\n    }\n    for (let i = index - 1; i >= 0; i--) {\n      let result = this.children[i];\n      if (\n        result.floatReference === floatReference &&\n        result.flowName === flowName &&\n        VtreeImpl.isSameNodePosition(\n          result.generatingNodePosition,\n          generatingNodePosition,\n        )\n      ) {\n        return result;\n      } else {\n        result = result.getPreviousSiblingOf(\n          null,\n          floatReference,\n          flowName,\n          generatingNodePosition,\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  private getPreviousSibling(): PageFloatLayoutContext | null {\n    let child: PageFloatLayoutContext = this;\n    let parent = this.parent;\n    let result: PageFloatLayoutContext;\n    while (parent) {\n      result = parent.getPreviousSiblingOf(\n        child,\n        this.floatReference,\n        this.flowName,\n        this.generatingNodePosition,\n      );\n      if (result) {\n        return result;\n      }\n      child = parent;\n      parent = parent.parent;\n    }\n    return null;\n  }\n\n  getContainer(floatReference?: FloatReference): Vtree.Container {\n    if (!floatReference || floatReference === this.floatReference) {\n      return this.container;\n    }\n    return this.getParent(floatReference).getContainer(floatReference);\n  }\n\n  setContainer(container: Vtree.Container) {\n    this.container = container;\n    this.reattachFloatFragments();\n  }\n\n  addPageFloat(float: PageFloat) {\n    this.floatStore.addPageFloat(float);\n  }\n\n  getPageFloatLayoutContext(\n    floatReference: FloatReference,\n  ): PageFloatLayoutContext {\n    if (floatReference === this.floatReference) {\n      return this;\n    }\n    return this.getParent(floatReference).getPageFloatLayoutContext(\n      floatReference,\n    );\n  }\n\n  findPageFloatByNodePosition(\n    nodePosition: Vtree.NodePosition,\n  ): PageFloat | null {\n    return this.floatStore.findPageFloatByNodePosition(nodePosition);\n  }\n\n  private forbid(float: PageFloat) {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      if (!this.forbiddenFloats.includes(id)) {\n        this.forbiddenFloats.push(id);\n        const strategy = new PageFloatLayoutStrategyResolver().findByFloat(\n          float,\n        );\n        strategy.forbid(float, this);\n      }\n    } else {\n      const parent = this.getParent(floatReference);\n      parent.forbid(float);\n    }\n  }\n\n  isForbidden(float: PageFloat): boolean {\n    const id = float.getId();\n    const floatReference = float.floatReference;\n    if (floatReference === this.floatReference) {\n      return this.forbiddenFloats.includes(id);\n    } else {\n      const parent = this.getParent(floatReference);\n      return parent.isForbidden(float);\n    }\n  }\n\n  addPageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.addPageFloatFragment(floatFragment, dontInvalidate);\n    } else if (!this.floatFragments.includes(floatFragment)) {\n      this.floatFragments.push(floatFragment);\n      this.floatFragments.sort((fr1, fr2) => fr1.getOrder() - fr2.getOrder());\n    }\n    if (!dontInvalidate) {\n      this.invalidate();\n    }\n  }\n\n  removePageFloatFragment(\n    floatFragment: PageFloatFragment,\n    dontInvalidate?: boolean,\n  ) {\n    const floatReference = floatFragment.floatReference;\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      parent.removePageFloatFragment(floatFragment, dontInvalidate);\n    } else {\n      const index = this.floatFragments.indexOf(floatFragment);\n      if (index >= 0) {\n        const fragment = this.floatFragments.splice(index, 1)[0];\n        const element = fragment.area && fragment.area.element;\n        if (element && element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        if (!dontInvalidate) {\n          this.invalidate();\n        }\n      }\n    }\n  }\n\n  findPageFloatFragment(float: PageFloat): PageFloatFragment | null {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.findPageFloatFragment(float);\n    }\n    const index = this.floatFragments.findIndex((f) => f.hasFloat(float));\n    if (index >= 0) {\n      return this.floatFragments[index];\n    } else {\n      return null;\n    }\n  }\n\n  hasFloatFragments(condition?: (p1: PageFloatFragment) => boolean): boolean {\n    if (this.floatFragments.length > 0) {\n      if (!condition || this.floatFragments.some(condition)) {\n        return true;\n      }\n    }\n    if (this.parent) {\n      return this.parent.hasFloatFragments(condition);\n    } else {\n      return false;\n    }\n  }\n\n  hasContinuingFloatFragmentsInFlow(flowName: string): boolean {\n    return this.hasFloatFragments(\n      (fragment) => fragment.continues && fragment.getFlowName() === flowName,\n    );\n  }\n\n  registerPageFloatAnchor(float: PageFloat, anchorViewNode: Node) {\n    this.floatAnchors[float.getId()] = anchorViewNode;\n  }\n\n  collectPageFloatAnchors() {\n    const anchors = Object.assign({}, this.floatAnchors);\n    return this.children.reduce(\n      (prev, child) => Object.assign(prev, child.collectPageFloatAnchors()),\n      anchors,\n    );\n  }\n\n  isAnchorAlreadyAppeared(floatId: PageFloatID) {\n    const deferredFloats = this.getDeferredPageFloatContinuations();\n    if (deferredFloats.some((cont) => cont.float.getId() === floatId)) {\n      return true;\n    }\n    const floatAnchors = this.collectPageFloatAnchors();\n    const anchorViewNode = floatAnchors[floatId];\n    if (!anchorViewNode) {\n      return false;\n    }\n    if (this.container && this.container.element) {\n      return this.container.element.contains(anchorViewNode);\n    }\n    return false;\n  }\n\n  deferPageFloat(continuation: PageFloatContinuation) {\n    const float = continuation.float;\n    if (float.floatReference === this.floatReference) {\n      const index = this.floatsDeferredToNext.findIndex(\n        (c) => c.float === float,\n      );\n      if (index >= 0) {\n        this.floatsDeferredToNext.splice(index, 1, continuation);\n      } else {\n        this.floatsDeferredToNext.push(continuation);\n      }\n    } else {\n      const parent = this.getParent(float.floatReference);\n      parent.deferPageFloat(continuation);\n    }\n  }\n\n  hasPrecedingFloatsDeferredToNext(\n    float: PageFloat,\n    ignoreReference?: boolean,\n  ): boolean {\n    if (!ignoreReference && float.floatReference !== this.floatReference) {\n      return this.getParent(\n        float.floatReference,\n      ).hasPrecedingFloatsDeferredToNext(float, false);\n    }\n    const order = float.getOrder();\n    const hasPrecedingFloatsDeferredToNext = this.floatsDeferredToNext.some(\n      (c) => c.float.getOrder() < order && !float.isAllowedToPrecede(c.float),\n    );\n    if (hasPrecedingFloatsDeferredToNext) {\n      return true;\n    } else if (this.parent) {\n      return this.parent.hasPrecedingFloatsDeferredToNext(float, true);\n    } else {\n      return false;\n    }\n  }\n\n  getLastFollowingFloatInFragments(float: PageFloat): PageFloat | null {\n    const order = float.getOrder();\n    let lastFollowing: PageFloat = null;\n    this.floatFragments.forEach((fragment) => {\n      fragment.continuations.forEach((c) => {\n        const f = c.float;\n        const o = f.getOrder();\n        if (o > order && (!lastFollowing || o > lastFollowing.getOrder())) {\n          lastFollowing = f;\n        }\n      });\n    });\n    if (this.parent) {\n      const lastFollowingOfParent =\n        this.parent.getLastFollowingFloatInFragments(float);\n      if (\n        lastFollowingOfParent &&\n        (!lastFollowing ||\n          lastFollowingOfParent.getOrder() > lastFollowing.getOrder())\n      ) {\n        lastFollowing = lastFollowingOfParent;\n      }\n    }\n    return lastFollowing;\n  }\n\n  getDeferredPageFloatContinuations(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    let result = this.floatsDeferredFromPrevious.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      result = this.parent\n        .getDeferredPageFloatContinuations(flowName)\n        .concat(result);\n    }\n    return result.sort((c1, c2) => c1.float.getOrder() - c2.float.getOrder());\n  }\n\n  getPageFloatContinuationsDeferredToNext(\n    flowName?: string | null,\n  ): PageFloatContinuation[] {\n    flowName = flowName || this.flowName;\n    const result = this.floatsDeferredToNext.filter(\n      (cont) => !flowName || cont.float.flowName === flowName,\n    );\n    if (this.parent) {\n      return this.parent\n        .getPageFloatContinuationsDeferredToNext(flowName)\n        .concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  getFloatsDeferredToNextInChildContexts(): PageFloat[] {\n    let result = [];\n    const done = [];\n    for (let i = this.children.length - 1; i >= 0; i--) {\n      const child = this.children[i];\n      if (done.includes(child.flowName)) {\n        continue;\n      }\n      done.push(child.flowName);\n      result = result.concat(child.floatsDeferredToNext.map((c) => c.float));\n      result = result.concat(child.getFloatsDeferredToNextInChildContexts());\n    }\n    return result;\n  }\n\n  checkAndForbidNotAllowedFloat(): boolean {\n    if (this.checkAndForbidFloatFollowingDeferredFloat()) {\n      return true;\n    }\n    for (let i = this.floatFragments.length - 1; i >= 0; i--) {\n      const fragment = this.floatFragments[i];\n      const notAllowedFloat = fragment.findNotAllowedFloat(this);\n      if (notAllowedFloat) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.removePageFloatFragment(fragment);\n          this.forbid(notAllowedFloat);\n\n          // If the removed float is a block-end/inline-end float,\n          // we should re-layout preceding floats with the same float direction.\n          this.removeEndFloatFragments(fragment.floatSide);\n        }\n        return true;\n      }\n    }\n    if (this.floatReference === FloatReference.REGION && this.parent.locked) {\n      return this.parent.checkAndForbidNotAllowedFloat();\n    }\n    return false;\n  }\n\n  checkAndForbidFloatFollowingDeferredFloat(): boolean {\n    const deferredFloats = this.getFloatsDeferredToNextInChildContexts();\n    const floatsInFragments = this.floatFragments.reduce(\n      (r, fr) => r.concat(fr.continuations.map((c) => c.float)),\n      [],\n    );\n    floatsInFragments.sort((f1, f2) => f2.getOrder() - f1.getOrder());\n    for (const float of floatsInFragments) {\n      const order = float.getOrder();\n      if (\n        deferredFloats.some(\n          (d) => !float.isAllowedToPrecede(d) && order > d.getOrder(),\n        )\n      ) {\n        if (this.locked) {\n          this.invalidate();\n        } else {\n          this.forbid(float);\n          const fragment = this.findPageFloatFragment(float);\n          Asserts.assert(fragment);\n          this.removePageFloatFragment(fragment);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  finish() {\n    if (this.checkAndForbidNotAllowedFloat()) {\n      return;\n    }\n    for (let i = this.floatsDeferredToNext.length - 1; i >= 0; i--) {\n      const continuation = this.floatsDeferredToNext[i];\n      if (!continuation.float.isAllowedOnContext(this)) {\n        if (this.locked) {\n          this.invalidate();\n          return;\n        }\n        this.floatsDeferredToNext.splice(i, 1);\n      }\n    }\n    this.floatsDeferredFromPrevious.forEach((continuation) => {\n      if (\n        this.floatsDeferredToNext.findIndex((c) => continuation.equals(c)) >= 0\n      ) {\n        return;\n      }\n      if (this.floatFragments.some((f) => f.hasFloat(continuation.float))) {\n        return;\n      }\n      this.floatsDeferredToNext.push(continuation);\n    });\n  }\n\n  hasSameContainerAs(other: PageFloatLayoutContext): boolean {\n    return (\n      !!this.container &&\n      !!other.container &&\n      this.container.element === other.container.element\n    );\n  }\n\n  invalidate() {\n    this.invalidated = true;\n    if (this.locked) {\n      return;\n    }\n    if (this.container) {\n      this.children.forEach((child) => {\n        // Since the same container element is shared by a region page float\n        // layout context and a column page float layout context in a single\n        // column region, view elements of float fragments of the child (column)\n        // context need to be removed here.\n        if (this.hasSameContainerAs(child)) {\n          child.floatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n      });\n      this.container.clear();\n    }\n    this.children.forEach((child) => {\n      child.layoutConstraints.splice(0);\n    });\n    this.children.splice(0);\n    Object.keys(this.floatAnchors).forEach((k) => {\n      delete this.floatAnchors[k];\n    });\n  }\n\n  detachChildren(): PageFloatLayoutContext[] {\n    const children = this.children.splice(0);\n    children.forEach((child) => {\n      child.floatFragments.forEach((fragment) => {\n        const elem = fragment.area.element;\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      });\n    });\n    return children;\n  }\n\n  attachChildren(children: PageFloatLayoutContext[]) {\n    children.forEach((child) => {\n      this.children.push(child);\n      child.reattachFloatFragments();\n    });\n  }\n\n  isInvalidated() {\n    return this.invalidated || (!!this.parent && this.parent.isInvalidated());\n  }\n\n  validate() {\n    this.invalidated = false;\n  }\n\n  private toLogical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toLogical(side, writingMode, direction);\n  }\n\n  private toPhysical(side: string): string {\n    const writingMode = this.writingMode.toString();\n    const direction = this.direction.toString();\n    return CssLogicalUtil.toPhysical(side, writingMode, direction);\n  }\n\n  removeEndFloatFragments(floatSide: string) {\n    const logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"block-end\" || logicalFloatSide === \"inline-end\") {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const logicalFloatSide2 = this.toLogical(fragment.floatSide);\n        if (logicalFloatSide2 === logicalFloatSide) {\n          this.removePageFloatFragment(fragment);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  stashEndFloatFragments(float: PageFloat) {\n    const floatReference = float.floatReference;\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).stashEndFloatFragments(float);\n      return;\n    }\n    const logicalFloatSide = this.toLogical(float.floatSide);\n    if (\n      logicalFloatSide === \"block-end\" ||\n      logicalFloatSide === \"snap-block\" ||\n      logicalFloatSide === \"inline-end\"\n    ) {\n      let i = 0;\n      while (i < this.floatFragments.length) {\n        const fragment = this.floatFragments[i];\n        const fragmentFloatSide = this.toLogical(fragment.floatSide);\n        if (\n          (fragmentFloatSide === logicalFloatSide ||\n            (logicalFloatSide === \"snap-block\" &&\n              fragmentFloatSide === \"block-end\")) &&\n          fragment.shouldBeStashedBefore(float)\n        ) {\n          this.stashedFloatFragments.push(fragment);\n          this.floatFragments.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  restoreStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).restoreStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.forEach((stashed) => {\n      this.addPageFloatFragment(stashed, true);\n    });\n    this.stashedFloatFragments.splice(0);\n  }\n\n  discardStashedFragments(floatReference: FloatReference) {\n    if (floatReference !== this.floatReference) {\n      this.getParent(floatReference).discardStashedFragments(floatReference);\n      return;\n    }\n    this.stashedFloatFragments.splice(0);\n  }\n\n  getStashedFloatFragments(\n    floatReference: FloatReference,\n  ): PageFloatFragment[] {\n    if (floatReference === this.floatReference) {\n      return this.stashedFloatFragments\n        .concat()\n        .sort((fr1, fr2) => fr2.getOrder() - fr1.getOrder()); // return in reverse order\n    } else {\n      return this.getParent(floatReference).getStashedFloatFragments(\n        floatReference,\n      );\n    }\n  }\n\n  private getLimitValue(\n    side: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const logicalSide = this.toLogical(side);\n    const physicalSide = this.toPhysical(side);\n    const limit = this.getLimitValueInner(\n      logicalSide,\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    if (this.parent && this.parent.container) {\n      const parentLimit = this.parent.getLimitValue(\n        physicalSide,\n        layoutContext,\n        clientLayout,\n        condition,\n      );\n      switch (physicalSide) {\n        case \"top\":\n          return Math.max(limit, parentLimit);\n        case \"left\":\n          return Math.max(limit, parentLimit);\n        case \"bottom\":\n          return Math.min(limit, parentLimit);\n        case \"right\":\n          return Math.min(limit, parentLimit);\n        default:\n          Asserts.fail(\"Should be unreachable\");\n      }\n    }\n    return limit;\n  }\n\n  private getLimitValueInner(\n    logicalSide: string,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): number {\n    Asserts.assert(this.container);\n    const limits = this.getLimitValuesInner(\n      layoutContext,\n      clientLayout,\n      condition,\n    );\n    switch (logicalSide) {\n      case \"block-start\":\n        return this.container.vertical ? limits.right : limits.top;\n      case \"block-end\":\n        return this.container.vertical ? limits.left : limits.bottom;\n      case \"inline-start\":\n        return this.container.vertical ? limits.top : limits.left;\n      case \"inline-end\":\n        return this.container.vertical ? limits.bottom : limits.right;\n      default:\n        throw new Error(`Unknown logical side: ${logicalSide}`);\n    }\n  }\n\n  private getLimitValuesInner(\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    condition?: (p1: PageFloatFragment, p2: PageFloatLayoutContext) => boolean,\n  ): {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n    floatMinWrapBlockStart: number;\n    floatMinWrapBlockEnd: number;\n  } {\n    Asserts.assert(this.container);\n    const offsetX = this.container.originX;\n    const offsetY = this.container.originY;\n    const paddingRect = this.container.getPaddingRect();\n    let limits = {\n      top: paddingRect.y1 - offsetY,\n      left: paddingRect.x1 - offsetX,\n      bottom: paddingRect.y2 - offsetY,\n      right: paddingRect.x2 - offsetX,\n      floatMinWrapBlockStart: 0,\n      floatMinWrapBlockEnd: 0,\n    };\n\n    function resolveLengthPercentage(numeric, viewNode, containerLength) {\n      if (numeric.unit === \"%\") {\n        return (containerLength * numeric.num) / 100;\n      } else {\n        return layoutContext.convertLengthToPx(numeric, viewNode, clientLayout);\n      }\n    }\n    const fragments = this.floatFragments;\n    if (fragments.length > 0) {\n      limits = fragments.reduce((l, f) => {\n        if (condition && !condition(f, this)) {\n          return l;\n        }\n        const logicalFloatSide = this.toLogical(f.floatSide);\n        const area = f.area;\n        const floatMinWrapBlock = f.continuations[0].float.floatMinWrapBlock;\n        let top = l.top;\n        let left = l.left;\n        let bottom = l.bottom;\n        let right = l.right;\n        let floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n        let floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n        switch (logicalFloatSide) {\n          case \"inline-start\":\n            if (area.vertical) {\n              top = Math.max(top, area.top + area.height);\n            } else {\n              left = Math.max(left, area.left + area.width);\n            }\n            break;\n          case \"block-start\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left < right) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              right = Math.min(right, area.left);\n            } else {\n              if (floatMinWrapBlock && area.top + area.height > top) {\n                floatMinWrapBlockStart = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              top = Math.max(top, area.top + area.height);\n            }\n            break;\n          case \"inline-end\":\n            if (area.vertical) {\n              bottom = Math.min(bottom, area.top);\n            } else {\n              right = Math.min(right, area.left);\n            }\n            break;\n          case \"block-end\":\n            if (area.vertical) {\n              if (floatMinWrapBlock && area.left + area.width > left) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.x2 - paddingRect.x1,\n                ) as number;\n              }\n              left = Math.max(left, area.left + area.width);\n            } else {\n              if (floatMinWrapBlock && area.top < bottom) {\n                floatMinWrapBlockEnd = resolveLengthPercentage(\n                  floatMinWrapBlock,\n                  (area as any).rootViewNodes[0],\n                  paddingRect.y2 - paddingRect.y1,\n                ) as number;\n              }\n              bottom = Math.min(bottom, area.top);\n            }\n            break;\n          default:\n            throw new Error(`Unknown logical float side: ${logicalFloatSide}`);\n        }\n        return {\n          top,\n          left,\n          bottom,\n          right,\n          floatMinWrapBlockStart,\n          floatMinWrapBlockEnd,\n        };\n      }, limits);\n    }\n    limits.left += offsetX;\n    limits.right += offsetX;\n    limits.top += offsetY;\n    limits.bottom += offsetY;\n    return limits;\n  }\n\n  /**\n   * @param anchorEdge Null indicates that the anchor is not in the current\n   *     container.\n   * @return Logical float side (snap-block is resolved when init=false). Null\n   *     indicates that the float area does not fit inside the container\n   */\n  setFloatAreaDimensions(\n    area: LayoutType.PageFloatArea,\n    floatReference: FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    init: boolean,\n    force: boolean,\n    condition: PageFloatPlacementCondition,\n  ): string | null {\n    if (floatReference !== this.floatReference) {\n      const parent = this.getParent(floatReference);\n      return parent.setFloatAreaDimensions(\n        area,\n        floatReference,\n        floatSide,\n        anchorEdge,\n        init,\n        force,\n        condition,\n      );\n    }\n    let logicalFloatSide = this.toLogical(floatSide);\n    if (logicalFloatSide === \"snap-block\") {\n      if (!condition[\"block-start\"] && !condition[\"block-end\"]) {\n        return null;\n      }\n    } else {\n      if (!condition[logicalFloatSide]) {\n        return null;\n      }\n    }\n    Asserts.assert(area.clientLayout);\n    let blockStart = this.getLimitValue(\n      \"block-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let blockEnd = this.getLimitValue(\n      \"block-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineStart = this.getLimitValue(\n      \"inline-start\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    let inlineEnd = this.getLimitValue(\n      \"inline-end\",\n      area.layoutContext,\n      area.clientLayout,\n    );\n    const blockOffset = area.vertical ? area.originX : area.originY;\n    const inlineOffset = area.vertical ? area.originY : area.originX;\n    blockStart = area.vertical\n      ? Math.min(\n          blockStart,\n          area.left +\n            area.getInsetLeft() +\n            area.width +\n            area.getInsetRight() +\n            blockOffset,\n        )\n      : Math.max(blockStart, area.top + blockOffset);\n    blockEnd = area.vertical\n      ? Math.max(blockEnd, area.left + blockOffset)\n      : Math.min(\n          blockEnd,\n          area.top +\n            area.getInsetTop() +\n            area.height +\n            area.getInsetBottom() +\n            blockOffset,\n        );\n\n    function limitBlockStartEndValueWithOpenRect(getRect, rect) {\n      let openRect = getRect(area.bands, rect);\n      if (openRect) {\n        if (area.vertical) {\n          openRect = GeometryUtil.unrotateBox(openRect);\n        }\n        blockStart = area.vertical\n          ? Math.min(blockStart, openRect.x2)\n          : Math.max(blockStart, openRect.y1);\n        blockEnd = area.vertical\n          ? Math.max(blockEnd, openRect.x1)\n          : Math.min(blockEnd, openRect.y2);\n        return true;\n      } else {\n        return force;\n      }\n    }\n    let blockSize: number;\n    let inlineSize: number;\n    let outerBlockSize: number;\n    let outerInlineSize: number;\n    if (init) {\n      const rect = area.vertical\n        ? GeometryUtil.rotateBox(\n            new GeometryUtil.Rect(blockEnd, inlineStart, blockStart, inlineEnd),\n          )\n        : new GeometryUtil.Rect(inlineStart, blockStart, inlineEnd, blockEnd);\n      if (\n        logicalFloatSide === \"block-start\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-start\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findUppermostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      if (\n        logicalFloatSide === \"block-end\" ||\n        logicalFloatSide === \"snap-block\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        if (\n          !limitBlockStartEndValueWithOpenRect(\n            GeometryUtil.findBottommostFullyOpenRect,\n            rect,\n          )\n        ) {\n          return null;\n        }\n      }\n      outerBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      blockSize = outerBlockSize - area.getInsetBefore() - area.getInsetAfter();\n      outerInlineSize = inlineEnd - inlineStart;\n      inlineSize = outerInlineSize - area.getInsetStart() - area.getInsetEnd();\n      if (!force && (blockSize <= 0 || inlineSize <= 0)) {\n        return null;\n      }\n    } else {\n      blockSize = area.computedBlockSize;\n      outerBlockSize = blockSize + area.getInsetBefore() + area.getInsetAfter();\n      const availableBlockSize = (blockEnd - blockStart) * area.getBoxDir();\n      if (logicalFloatSide === \"snap-block\") {\n        if (anchorEdge === null) {\n          // Deferred from previous container\n          logicalFloatSide = \"block-start\";\n        } else {\n          const containerRect = this.container.getPaddingRect();\n          const fromStart =\n            this.container.getBoxDir() *\n            (anchorEdge -\n              (this.container.vertical ? containerRect.x2 : containerRect.y1));\n          const fromEnd =\n            this.container.getBoxDir() *\n            ((this.container.vertical ? containerRect.x1 : containerRect.y2) -\n              anchorEdge -\n              outerBlockSize);\n          if (fromStart <= fromEnd) {\n            logicalFloatSide = \"block-start\";\n          } else {\n            logicalFloatSide = \"block-end\";\n          }\n        }\n        if (!condition[logicalFloatSide]) {\n          if (condition[\"block-end\"]) {\n            logicalFloatSide = \"block-end\";\n          } else {\n            return null;\n          }\n        }\n      }\n      if (!force && availableBlockSize < outerBlockSize) {\n        return null;\n      }\n      if (\n        logicalFloatSide === \"inline-start\" ||\n        logicalFloatSide === \"inline-end\"\n      ) {\n        inlineSize = Sizing.getSize(area.clientLayout, area.element, [\n          Sizing.Size.FIT_CONTENT_INLINE_SIZE,\n        ])[Sizing.Size.FIT_CONTENT_INLINE_SIZE];\n      } else if (area.adjustContentRelativeSize) {\n        inlineSize = area.getContentInlineSize();\n      } else {\n        inlineSize = area.vertical ? area.height : area.width;\n      }\n      outerInlineSize = inlineSize + area.getInsetStart() + area.getInsetEnd();\n      const availableInlineSize = inlineEnd - inlineStart;\n      if (!force && availableInlineSize < outerInlineSize) {\n        return null;\n      }\n    }\n    blockStart -= blockOffset;\n    blockEnd -= blockOffset;\n    inlineStart -= inlineOffset;\n    inlineEnd -= inlineOffset;\n    switch (logicalFloatSide) {\n      case \"inline-start\":\n      case \"block-start\":\n      case \"snap-block\":\n        area.setInlinePosition(inlineStart, inlineSize);\n        area.setBlockPosition(blockStart, blockSize);\n        break;\n      case \"inline-end\":\n      case \"block-end\":\n        area.setInlinePosition(inlineEnd - outerInlineSize, inlineSize);\n        area.setBlockPosition(\n          blockEnd - outerBlockSize * area.getBoxDir(),\n          blockSize,\n        );\n        break;\n      default:\n        throw new Error(`unknown float direction: ${floatSide}`);\n    }\n    return logicalFloatSide;\n  }\n\n  getFloatFragmentExclusions(): GeometryUtil.Shape[] {\n    const result = this.floatFragments.map((fragment) =>\n      fragment.getOuterShape(),\n    );\n    if (this.parent) {\n      return this.parent.getFloatFragmentExclusions().concat(result);\n    } else {\n      return result;\n    }\n  }\n\n  private reattachFloatFragments() {\n    const parent = this.container.element && this.container.element.parentNode;\n    if (parent) {\n      this.floatFragments.forEach((fragment) => {\n        parent.appendChild(fragment.area.element);\n      });\n    }\n  }\n\n  getMaxReachedAfterEdge(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments.reduce(\n      (edge, fragment) => {\n        const rect = fragment.getOuterRect();\n        if (isVertical) {\n          return Math.min(edge, rect.x1);\n        } else {\n          return Math.max(edge, rect.y2);\n        }\n      },\n      isVertical ? Infinity : 0,\n    );\n  }\n\n  getBlockStartEdgeOfBlockEndFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    return this.floatFragments\n      .filter((fragment) => fragment.floatSide === \"block-end\")\n      .reduce(\n        (edge, fragment) => {\n          const rect = fragment.getOuterRect();\n          if (isVertical) {\n            return Math.max(edge, rect.x2);\n          } else {\n            return Math.min(edge, rect.y1);\n          }\n        },\n        isVertical ? 0 : Infinity,\n      );\n  }\n\n  getPageFloatClearEdge(clear: string, column: LayoutType.Column): number {\n    function isContinuationOfAlreadyAppearedFloat(context) {\n      return (continuation) =>\n        context.isAnchorAlreadyAppeared(continuation.float.getId());\n    }\n\n    function isFragmentWithAlreadyAppearedFloat(fragment, context) {\n      return fragment.continuations.some(\n        isContinuationOfAlreadyAppearedFloat(context),\n      );\n    }\n    const columnRect = column.getPaddingRect();\n    const columnBlockEnd = column.vertical ? columnRect.x1 : columnRect.y2;\n    let context: PageFloatLayoutContext = this;\n    while (context) {\n      if (\n        context.floatsDeferredToNext.some(\n          isContinuationOfAlreadyAppearedFloat(context),\n        )\n      ) {\n        return columnBlockEnd;\n      }\n      context = context.parent;\n    }\n    Asserts.assert(column.clientLayout);\n    const blockStartLimit = this.getLimitValue(\n      \"block-start\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    const blockEndLimit = this.getLimitValue(\n      \"block-end\",\n      column.layoutContext,\n      column.clientLayout,\n      isFragmentWithAlreadyAppearedFloat,\n    );\n    if (\n      blockEndLimit * column.getBoxDir() <\n      columnBlockEnd * column.getBoxDir()\n    ) {\n      return columnBlockEnd;\n    } else {\n      return blockStartLimit;\n    }\n  }\n\n  getPageFloatPlacementCondition(\n    float: PageFloat,\n    floatSide: string,\n    clearSide: string | null,\n  ): PageFloatPlacementCondition {\n    if (float.floatReference !== this.floatReference) {\n      const parent = this.getParent(float.floatReference);\n      return parent.getPageFloatPlacementCondition(float, floatSide, clearSide);\n    }\n    const result: PageFloatPlacementCondition = {\n      \"block-start\": true,\n      \"block-end\": true,\n      \"inline-start\": true,\n      \"inline-end\": true,\n    };\n    if (!clearSide) {\n      return result;\n    }\n    const logicalFloatSide = this.toLogical(floatSide);\n    const logicalClearSide = this.toLogical(clearSide);\n    let logicalSides: string[];\n    if (logicalClearSide === \"all\") {\n      logicalSides = [\"block-start\", \"block-end\", \"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"both\") {\n      logicalSides = [\"inline-start\", \"inline-end\"];\n    } else if (logicalClearSide === \"same\") {\n      if (logicalFloatSide === \"snap-block\") {\n        logicalSides = [\"block-start\", \"block-end\"];\n      } else {\n        logicalSides = [logicalFloatSide];\n      }\n    } else {\n      logicalSides = [logicalClearSide];\n    }\n    const floatOrder = float.getOrder();\n\n    function isPrecedingFragment(\n      side: string,\n    ): (p1: PageFloatFragment) => boolean {\n      return (fragment) =>\n        fragment.floatSide === side && fragment.getOrder() < floatOrder;\n    }\n\n    function hasPrecedingFragmentInChildren(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      return context.children.some(\n        (child) =>\n          child.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInChildren(child, side),\n      );\n    }\n\n    function hasPrecedingFragmentInParents(\n      context: PageFloatLayoutContext,\n      side: string,\n    ): boolean {\n      const parent = context.parent;\n      return (\n        !!parent &&\n        (parent.floatFragments.some(isPrecedingFragment(side)) ||\n          hasPrecedingFragmentInParents(parent, side))\n      );\n    }\n    logicalSides.forEach((side) => {\n      switch (side) {\n        case \"block-start\":\n        case \"inline-start\":\n          result[side] = !hasPrecedingFragmentInChildren(this, side);\n          break;\n        case \"block-end\":\n        case \"inline-end\":\n          result[side] = !hasPrecedingFragmentInParents(this, side);\n          break;\n        default:\n          throw new Error(`Unexpected side: ${side}`);\n      }\n    });\n    return result;\n  }\n\n  getLayoutConstraints(): LayoutType.LayoutConstraint[] {\n    const constraints = this.parent ? this.parent.getLayoutConstraints() : [];\n    return constraints.concat(this.layoutConstraints);\n  }\n\n  addLayoutConstraint(\n    layoutConstraint: LayoutType.LayoutConstraint,\n    floatReference: FloatReference,\n  ) {\n    if (floatReference === this.floatReference) {\n      this.layoutConstraints.push(layoutConstraint);\n    } else {\n      this.getParent(floatReference).addLayoutConstraint(\n        layoutConstraint,\n        floatReference,\n      );\n    }\n  }\n\n  isColumnFullWithPageFloats(column: LayoutType.Column): boolean {\n    const layoutContext = column.layoutContext;\n    const clientLayout = column.clientLayout;\n    Asserts.assert(clientLayout);\n    let context: PageFloatLayoutContext = this;\n    let limits: {\n      top: number;\n      left: number;\n      bottom: number;\n      right: number;\n      floatMinWrapBlockStart: number;\n      floatMinWrapBlockEnd: number;\n    } = null;\n    while (context && context.container) {\n      const l = context.getLimitValuesInner(layoutContext, clientLayout);\n      if (limits) {\n        if (column.vertical) {\n          if (l.right < limits.right) {\n            limits.right = l.right;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.left > limits.left) {\n            limits.left = l.left;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        } else {\n          if (l.top > limits.top) {\n            limits.top = l.top;\n            limits.floatMinWrapBlockStart = l.floatMinWrapBlockStart;\n          }\n          if (l.bottom < limits.bottom) {\n            limits.bottom = l.bottom;\n            limits.floatMinWrapBlockEnd = l.floatMinWrapBlockEnd;\n          }\n        }\n      } else {\n        limits = l;\n      }\n      context = context.parent;\n    }\n    const floatMinWrapBlock = Math.max(\n      limits.floatMinWrapBlockStart,\n      limits.floatMinWrapBlockEnd,\n    );\n    const blockSpace = column.vertical\n      ? limits.right - limits.left\n      : limits.bottom - limits.top;\n    return blockSpace <= floatMinWrapBlock;\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    const isVertical = this.getContainer().vertical;\n    if (!this.floatFragments.length) {\n      return 0;\n    }\n    return Math.max.apply(\n      null,\n      this.floatFragments.map((fragment) => {\n        const area = fragment.area;\n        if (isVertical) {\n          return area.width;\n        } else {\n          return area.height;\n        }\n      }),\n    );\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  isLocked(): boolean {\n    return this.locked;\n  }\n}\n\nexport interface PageFloatLayoutStrategy\n  extends PageFloats.PageFloatLayoutStrategy {}\n\nconst pageFloatLayoutStrategies: PageFloatLayoutStrategy[] = [];\n\nexport class PageFloatLayoutStrategyResolver {\n  static register(strategy: PageFloatLayoutStrategy) {\n    pageFloatLayoutStrategies.push(strategy);\n  }\n\n  findByNodeContext(nodeContext: Vtree.NodeContext): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToNodeContext(nodeContext)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${nodeContext}`);\n  }\n\n  findByFloat(float: PageFloat): PageFloatLayoutStrategy {\n    for (let i = pageFloatLayoutStrategies.length - 1; i >= 0; i--) {\n      const strategy = pageFloatLayoutStrategies[i];\n      if (strategy.appliesToFloat(float)) {\n        return strategy;\n      }\n    }\n    throw new Error(`No PageFloatLayoutStrategy found for ${float}`);\n  }\n}\n\nexport class NormalPageFloatLayoutStrategy implements PageFloatLayoutStrategy {\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return isPageFloat(nodeContext.floatReference);\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloat): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n    column: LayoutType.Column,\n  ): Task.Result<PageFloat> {\n    let floatReference = nodeContext.floatReference;\n    Asserts.assert(nodeContext.floatSide);\n    const floatSide: string = nodeContext.floatSide;\n    const nodePosition = nodeContext.toNodePosition();\n    return column\n      .resolveFloatReferenceFromColumnSpan(\n        floatReference,\n        nodeContext.columnSpan,\n        nodeContext,\n      )\n      .thenAsync((ref) => {\n        floatReference = ref;\n        Asserts.assert(pageFloatLayoutContext.flowName);\n        const float = new PageFloat(\n          nodePosition,\n          floatReference,\n          floatSide,\n          nodeContext.clearSide,\n          pageFloatLayoutContext.flowName,\n          nodeContext.floatMinWrapBlock,\n        );\n        pageFloatLayoutContext.addPageFloat(float);\n        return Task.newResult(float);\n      });\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloatContinuation[],\n    floatSide: string,\n    floatArea: LayoutType.PageFloatArea,\n    continues: boolean,\n  ): PageFloatFragment {\n    const f = continuations[0].float;\n    return new PageFloatFragment(\n      f.floatReference,\n      floatSide,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloat,\n    pageFloatLayoutContext: PageFloatLayoutContext,\n  ): PageFloatFragment | null {\n    return pageFloatLayoutContext.findPageFloatFragment(float);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: LayoutType.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: LayoutType.Column,\n  ) {}\n\n  /**\n   * @override\n   */\n  forbid(float: PageFloat, pageFloatLayoutContext: PageFloatLayoutContext) {}\n}\n\nPageFloatLayoutStrategyResolver.register(new NormalPageFloatLayoutStrategy());\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Footnotes\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nconst PageFloatFragment = PageFloats.PageFloatFragment;\n\nexport class Footnote extends PageFloats.PageFloat {\n  constructor(\n    nodePosition: Vtree.NodePosition,\n    floatReference: PageFloats.FloatReference,\n    flowName: string,\n    public readonly footnotePolicy: Css.Ident | null,\n    floatMinWrapBlock: Css.Numeric | null,\n  ) {\n    super(\n      nodePosition,\n      floatReference,\n      \"block-end\",\n      null,\n      flowName,\n      floatMinWrapBlock,\n    );\n  }\n\n  /**\n   * @override\n   */\n  isAllowedToPrecede(other: PageFloats.PageFloat): boolean {\n    return !(other instanceof Footnote);\n  }\n}\n\n/**\n * @extends PageFloatFragment\n */\nexport class FootnoteFragment extends PageFloatFragment {\n  constructor(\n    floatReference: PageFloats.FloatReference,\n    continuations: PageFloats.PageFloatContinuation[],\n    area: Vtree.Container,\n    continues: boolean,\n  ) {\n    super(floatReference, \"block-end\", continuations, area, continues);\n  }\n\n  /**\n   * @override\n   */\n  getOrder(): number {\n    return Infinity;\n  }\n\n  /**\n   * @override\n   */\n  shouldBeStashedBefore(float: PageFloats.PageFloat): boolean {\n    if (float instanceof Footnote) {\n      return true;\n    } else {\n      return this.getOrder() < float.getOrder();\n    }\n  }\n}\n\nexport class LineFootnotePolicyLayoutConstraint\n  implements Layout.LayoutConstraint\n{\n  constructor(public readonly footnote: Footnote) {}\n\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    const nodePosition = nodeContext.toNodePosition();\n    return !Vtree.isSameNodePosition(nodePosition, this.footnote.nodePosition);\n  }\n}\n\nexport class FootnoteLayoutStrategy\n  implements PageFloats.PageFloatLayoutStrategy\n{\n  /**\n   * @override\n   */\n  appliesToNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return nodeContext.floatSide === \"footnote\";\n  }\n\n  /**\n   * @override\n   */\n  appliesToFloat(float: PageFloats.PageFloat): boolean {\n    return float instanceof Footnote;\n  }\n\n  /**\n   * @override\n   */\n  createPageFloat(\n    nodeContext: Vtree.NodeContext,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    column: Layout.Column,\n  ): Task.Result<PageFloats.PageFloat> {\n    let floatReference = PageFloats.FloatReference.REGION;\n\n    // If the region context has the same container as the page context,\n    // use the page context as the context for the footnote.\n    const regionContext =\n      pageFloatLayoutContext.getPageFloatLayoutContext(floatReference);\n    const pageContext = pageFloatLayoutContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.PAGE,\n    );\n    if (pageContext.hasSameContainerAs(regionContext)) {\n      floatReference = PageFloats.FloatReference.PAGE;\n    }\n    const nodePosition = nodeContext.toNodePosition();\n    Asserts.assert(pageFloatLayoutContext.flowName);\n    const float: PageFloats.PageFloat = new Footnote(\n      nodePosition,\n      floatReference,\n      pageFloatLayoutContext.flowName,\n      nodeContext.footnotePolicy,\n      nodeContext.floatMinWrapBlock,\n    );\n    pageFloatLayoutContext.addPageFloat(float);\n    return Task.newResult(float);\n  }\n\n  /**\n   * @override\n   */\n  createPageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    floatArea: Layout.PageFloatArea,\n    continues: boolean,\n  ): PageFloats.PageFloatFragment {\n    const f = continuations[0].float;\n    return new FootnoteFragment(\n      f.floatReference,\n      continuations,\n      floatArea,\n      continues,\n    );\n  }\n\n  /**\n   * @override\n   */\n  findPageFloatFragment(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): PageFloats.PageFloatFragment | null {\n    const context = pageFloatLayoutContext.getPageFloatLayoutContext(\n      float.floatReference,\n    );\n    const fragments = context.floatFragments.filter(\n      (fr) => fr instanceof FootnoteFragment,\n    );\n    Asserts.assert(fragments.length <= 1);\n    return fragments[0] || null;\n  }\n\n  /**\n   * @override\n   */\n  adjustPageFloatArea(\n    floatArea: Layout.PageFloatArea,\n    floatContainer: Vtree.Container,\n    column: Layout.Column,\n  ) {\n    floatArea.isFootnote = true;\n    floatArea.adjustContentRelativeSize = false;\n    const element = floatArea.element;\n    Asserts.assert(element);\n    floatArea.vertical = column.layoutContext.applyFootnoteStyle(\n      floatContainer.vertical,\n      (column.layoutContext as any).nodeContext &&\n        (column.layoutContext as any).nodeContext.direction === \"rtl\",\n      element,\n    );\n    floatArea.convertPercentageSizesToPx(element);\n    column.setComputedInsets(element, floatArea);\n    column.setComputedWidthAndHeight(element, floatArea);\n  }\n\n  /**\n   * @override\n   */\n  forbid(\n    float: PageFloats.PageFloat,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    const footnote = float as Footnote;\n    switch (footnote.footnotePolicy) {\n      case Css.ident.line: {\n        const constraint = new LineFootnotePolicyLayoutConstraint(footnote);\n        pageFloatLayoutContext.addLayoutConstraint(\n          constraint,\n          footnote.floatReference,\n        );\n        break;\n      }\n    }\n  }\n}\n\nPageFloats.PageFloatLayoutStrategyResolver.register(\n  new FootnoteLayoutStrategy(),\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Break - Control fragmentation.\n */\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\n\n/**\n * Convert old page-break-* properties to break-* properties with appropriate\n * values as specified by CSS Fragmentation module:\n * https://drafts.csswg.org/css-break/#page-break-properties\n */\nexport function convertPageBreakAliases(original: {\n  name: string;\n  value: Css.Val;\n  important: boolean;\n}): { name: string; value: Css.Val; important: boolean } {\n  const name = original[\"name\"];\n  const value = original[\"value\"];\n  switch (name) {\n    case \"page-break-before\":\n    case \"page-break-after\":\n    case \"page-break-inside\":\n      return {\n        name: name.replace(/^page-/, \"\"),\n        value: value === Css.ident.always ? Css.ident.page : value,\n        important: original[\"important\"],\n      };\n    default:\n      return original;\n  }\n}\n\nexport const forcedBreakValues: { [key: string]: boolean | null } = {\n  page: true,\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n  column: true,\n  region: true,\n};\n\n/**\n * Returns if the value is one of the forced break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isForcedBreakValue(value: string | null): boolean {\n  return !!forcedBreakValues[value];\n}\n\nexport const spreadBreakValues: { [key: string]: boolean | null } = {\n  left: true,\n  right: true,\n  recto: true,\n  verso: true,\n};\n\n/**\n * Returns if the value is one of left/right/recto/verso values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isSpreadBreakValue(value: string | null): boolean {\n  return !!spreadBreakValues[value];\n}\n\nexport const avoidBreakValues: { [key: string]: boolean | null } = {\n  avoid: true,\n  \"avoid-page\": true,\n  \"avoid-column\": true,\n  \"avoid-region\": true,\n};\n\n/**\n * Returns if the value is one of the avoid break values.\n * @param value The break value to be judged. Treats null as 'auto'.\n */\nexport function isAvoidBreakValue(value: string | null): boolean {\n  return !!avoidBreakValues[value];\n}\n\n/**\n * Resolves the effective break value given two break values at a single break\n * point. The order of the arguments are relevant, since a value specified on\n * the latter element takes precedence over one on the former. A forced break\n * value is chosen if present. Otherwise, an avoid break value is chosen if\n * present. See CSS Fragmentation Module for the rule:\n *  https://drafts.csswg.org/css-break/#forced-breaks\n *  https://drafts.csswg.org/css-break/#unforced-breaks\n * Note that though the spec requires to honor multiple break values at a single\n * break point, the current implementation choose one of them and discard the\n * others.\n * @param first The break value specified on the former element. null means\n *     'auto' (not specified)\n * @param second The break value specified on the latter element. null means\n *     'auto' (not specified)\n */\nexport function resolveEffectiveBreakValue(\n  first: string | null,\n  second: string | null,\n): string | null {\n  if (!first) {\n    return second;\n  } else if (!second) {\n    return first;\n  } else if (isSpreadBreakValue(second)) {\n    return second;\n  } else if (isSpreadBreakValue(first)) {\n    return first;\n  } else {\n    const firstIsForcedBreakValue = isForcedBreakValue(first);\n    const secondIsForcedBreakValue = isForcedBreakValue(second);\n    if (firstIsForcedBreakValue && secondIsForcedBreakValue) {\n      switch (second) {\n        case \"column\":\n          // \"column\" is the weakest value\n          return first;\n        case \"region\":\n          // \"region\" is stronger than \"column\" but weaker than page\n          // values\n          return first === \"column\" ? second : first;\n        default:\n          // page values are strongest\n          return second;\n      }\n    } else if (secondIsForcedBreakValue) {\n      return second;\n    } else if (firstIsForcedBreakValue) {\n      return first;\n    } else if (isAvoidBreakValue(second)) {\n      return second;\n    } else if (isAvoidBreakValue(first)) {\n      return first;\n    } else {\n      return second;\n    }\n  }\n}\n\nexport function breakValueToStartSideValue(breakValue: string | null): string {\n  switch (breakValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return breakValue;\n    default:\n      return \"any\";\n  }\n}\n\nexport function startSideValueToBreakValue(\n  startSideValue: string,\n): string | null {\n  switch (startSideValue) {\n    case \"left\":\n    case \"right\":\n    case \"recto\":\n    case \"verso\":\n      return startSideValue;\n    default:\n      return null;\n  }\n}\n\nPlugin.registerHook(\"SIMPLE_PROPERTY\", convertPageBreakAliases);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Display - CSS Display Module\n */\nimport * as Css from \"./css\";\n\nexport const FLOW_ROOT_ATTR = \"data-vivliostyle-flow-root\";\n\nexport function isFlowRoot(element: Element): boolean {\n  return element.getAttribute(FLOW_ROOT_ATTR) === \"true\";\n}\n\n/**\n * 'Blockify' a display value.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function blockify(display: Css.Ident): Css.Ident {\n  const displayStr = display.toString();\n  let blockifiedStr: string;\n  switch (displayStr) {\n    case \"inline-flex\":\n      blockifiedStr = \"flex\";\n      break;\n    case \"inline-grid\":\n      blockifiedStr = \"grid\";\n      break;\n    case \"inline-table\":\n      blockifiedStr = \"table\";\n      break;\n    case \"inline\":\n    case \"table-row-group\":\n    case \"table-column\":\n    case \"table-column-group\":\n    case \"table-header-group\":\n    case \"table-footer-group\":\n    case \"table-row\":\n    case \"table-cell\":\n    case \"table-caption\":\n    case \"inline-block\":\n      blockifiedStr = \"block\";\n      break;\n    default:\n      blockifiedStr = displayStr;\n  }\n  return Css.getName(blockifiedStr);\n}\n\n/**\n * Judge if the generated box is absolutely positioned.\n */\nexport function isAbsolutelyPositioned(position: Css.Ident): boolean {\n  return position === Css.ident.absolute || position === Css.ident.fixed;\n}\n\n/**\n * Get computed values of display, position and float.\n * cf. https://drafts.csswg.org/css-display/#transformations\n *     https://drafts.csswg.org/css2/visuren.html#dis-pos-flo\n */\nexport function getComputedDislayValue(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): { display: Css.Ident; position: Css.Ident; float: Css.Ident } {\n  if (display === Css.ident.none) {\n    // no need to convert values when 'display' is 'none'\n  } else if (isAbsolutelyPositioned(position)) {\n    float = Css.ident.none;\n    display = blockify(display);\n  } else if (\n    (float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isRoot\n  ) {\n    display = blockify(display);\n  }\n  return { display, position, float };\n}\n\n/**\n * Judges if the generated box is block.\n */\nexport function isBlock(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  isRoot: boolean,\n): boolean {\n  return (\n    getComputedDislayValue(display, position, float, isRoot).display ===\n    Css.ident.block\n  );\n}\n\nexport function isInlineLevel(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"inline\":\n    case \"inline-block\":\n    case \"inline-list-item\":\n    case \"inline-flex\":\n    case \"inline-grid\":\n    case \"ruby\":\n    case \"inline-table\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isRubyInternalDisplay(display: Css.Ident | string): boolean {\n  switch (display.toString()) {\n    case \"ruby-base\":\n    case \"ruby-text\":\n    case \"ruby-base-container\":\n    case \"ruby-text-container\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Judges if the generated box establishes a new block formatting context.\n */\nexport function establishesBFC(\n  display: Css.Ident,\n  position: Css.Ident,\n  float: Css.Ident,\n  overflow: Css.Ident,\n  writingMode?: Css.Ident,\n  parentWritingMode?: Css.Ident,\n  isFlowRoot?: boolean,\n): boolean {\n  writingMode = writingMode || parentWritingMode || Css.ident.horizontal_tb;\n  return (\n    !!isFlowRoot ||\n    (!!float && float !== Css.ident.none && !Css.isDefaultingValue(float)) ||\n    isAbsolutelyPositioned(position) ||\n    display === Css.ident.inline_block ||\n    display === Css.ident.table_cell ||\n    display === Css.ident.table_caption ||\n    display == Css.ident.flex ||\n    ((display === Css.ident.block || display === Css.ident.list_item) &&\n      !!overflow &&\n      overflow !== Css.ident.visible &&\n      !Css.isDefaultingValue(overflow)) ||\n    (!!parentWritingMode && writingMode !== parentWritingMode)\n  );\n}\n\n/**\n * Judges if the generated box establishes a containing block for descendant\n * boxes with 'position: absolute'.\n */\nexport function establishesCBForAbsolute(position: Css.Ident): boolean {\n  return (\n    position === Css.ident.relative ||\n    position === Css.ident.absolute ||\n    position === Css.ident.fixed\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutHelper - Helper functions of Layout.\n */\nimport * as Base from \"./base\";\nimport * as Display from \"./display\";\nimport * as Logging from \"./logging\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * Though method used to be used as a workaround for Chrome bug, it seems that\n * the bug has been already fixed:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=297808\n * We now use this method as a workaround for Firefox bug:\n *   https://bugzilla.mozilla.org/show_bug.cgi?id=1159309\n */\nexport function fixBoxesForNode(\n  clientLayout: Vtree.ClientLayout,\n  boxes: Vtree.ClientRect[],\n  node: Node,\n): Vtree.ClientRect[] {\n  const fullRange = node.ownerDocument.createRange();\n  fullRange.setStart(node, 0);\n  fullRange.setEnd(node, node.textContent.length);\n  const fullBoxes = clientLayout.getRangeClientRects(fullRange);\n  const result = [];\n  for (const box of boxes) {\n    let k: number;\n    for (k = 0; k < fullBoxes.length; k++) {\n      const fullBox = fullBoxes[k];\n      if (\n        box.top >= fullBox.top &&\n        box.bottom <= fullBox.bottom &&\n        Math.abs(box.left - fullBox.left) < 1\n      ) {\n        result.push({\n          top: box.top,\n          left: fullBox.left,\n          bottom: box.bottom,\n          right: fullBox.right,\n        });\n        break;\n      }\n    }\n    if (k == fullBoxes.length) {\n      Logging.logger.warn(\"Could not fix character box\");\n      result.push(box);\n    }\n  }\n  return result;\n}\n\n/**\n * Calculate the position of the \"after\" edge in the block-progression\n * dimension. Return 0 if position was determined successfully and return\n * non-zero if position could not be determined and the node should be\n * considered zero-height.\n */\nexport function calculateEdge(\n  nodeContext: Vtree.NodeContext,\n  clientLayout: Vtree.ClientLayout,\n  extraOffset: number,\n  vertical: boolean,\n): number {\n  const node = nodeContext.viewNode;\n  if (!node) {\n    return NaN;\n  }\n  const element = node.nodeType == 1 ? (node as Element) : node.parentElement;\n  if (element && element instanceof HTMLElement) {\n    if (element.localName === \"rt\" && element.style[\"zoom\"]) {\n      // \"zoom\" is set in fixRubyTextFontSize() to fix the issue #673 for Chrome.\n      // when zoom is set, it is hard to get the edge value, so return NaN.\n      // (Fix for issues #804 and #808)\n      return NaN;\n    }\n    if (/^([\\d\\.]|super|(text-)?top)/.test(element.style.verticalAlign)) {\n      // (Fix for issue #811)\n      return NaN;\n    }\n  }\n  if (node.nodeType == 1) {\n    if (nodeContext.after || !nodeContext.inline) {\n      const cbox = clientLayout.getElementClientRect(node as Element);\n      if (\n        cbox.left === 0 &&\n        cbox.top === 0 &&\n        cbox.right === 0 &&\n        cbox.bottom === 0\n      ) {\n        // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n        // (Fix for issue #802)\n        return NaN;\n      }\n      if (cbox.right >= cbox.left && cbox.bottom >= cbox.top) {\n        if (nodeContext.after) {\n          return vertical ? cbox.left : cbox.bottom;\n        } else {\n          return vertical ? cbox.right : cbox.top;\n        }\n      }\n    }\n    return NaN;\n  } else {\n    let edge = NaN;\n    const range = node.ownerDocument.createRange();\n    const length = node.textContent.length;\n    if (!length) {\n      return NaN;\n    }\n    if (nodeContext.after) {\n      extraOffset += length;\n    }\n    if (extraOffset >= length) {\n      extraOffset = length - 1;\n    }\n    range.setStart(node, extraOffset);\n    range.setEnd(node, extraOffset + 1);\n    let boxes = clientLayout.getRangeClientRects(range);\n    if (vertical && Base.checkVerticalBBoxBug(document.body)) {\n      boxes = fixBoxesForNode(clientLayout, boxes, node);\n    }\n    boxes = boxes.filter((box) => box.right > box.left && box.bottom > box.top);\n    if (!boxes.length) {\n      return NaN;\n    }\n    if (vertical) {\n      edge = Math.min.apply(\n        null,\n        boxes.map((box) => box.left),\n      );\n    } else {\n      edge = Math.max.apply(\n        null,\n        boxes.map((box) => box.bottom),\n      );\n    }\n    return edge;\n  }\n}\n\nexport function getElementHeight(\n  element: Element,\n  column: Layout.Column,\n  vertical: boolean,\n): number {\n  const rect = column.clientLayout.getElementClientRect(element);\n  const margin = column.getComputedMargin(element);\n  return vertical\n    ? rect[\"width\"] + margin[\"left\"] + margin[\"right\"]\n    : rect[\"height\"] + margin[\"top\"] + margin[\"bottom\"];\n}\n\nexport function isOrphan(node: Node): boolean {\n  while (node) {\n    if (node.parentNode === node.ownerDocument) {\n      return false;\n    }\n    node = node.parentNode;\n  }\n  return true;\n}\n\nexport function removeFollowingSiblings(\n  parentNode: Node,\n  viewNode: Node,\n): void {\n  if (!parentNode) {\n    return;\n  }\n  let lastChild: Node;\n  while ((lastChild = parentNode.lastChild) != viewNode) {\n    parentNode.removeChild(lastChild);\n  }\n}\n\nexport function isSpecial(e: Element): boolean {\n  return !!e.getAttribute(VtreeImpl.SPECIAL_ATTR);\n}\n\nexport function isSpecialNodeContext(nodeContext: Vtree.NodeContext): boolean {\n  const viewNode = nodeContext?.viewNode;\n  return viewNode instanceof Element && isSpecial(viewNode);\n}\n\nexport function isSpecialInlineDisplay(display: string): boolean {\n  return (\n    display !== \"inline\" &&\n    (Display.isInlineLevel(display) || Display.isRubyInternalDisplay(display))\n  );\n}\n\nexport function findAncestorSpecialInlineNodeContext(\n  nodeContext: Vtree.NodeContext,\n): Vtree.NodeContext | null {\n  for (let p = nodeContext.parent; p; p = p.parent) {\n    if (p.display !== \"inline\" && Display.isInlineLevel(p.display)) {\n      return p;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview BreakPosition - Definitions of BreakPosition.\n */\nimport * as Break from \"./break\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport { Layout, RepetitiveElement, Vtree } from \"./types\";\n\n/**\n * Potential breaking position.\n */\nexport type BreakPosition = Layout.BreakPosition;\n\nexport abstract class AbstractBreakPosition\n  implements Layout.AbstractBreakPosition\n{\n  abstract findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext;\n\n  abstract getMinBreakPenalty(): number;\n\n  calculateOffset(column): { current: number; minimum: number } {\n    return calculateOffset(\n      this.getNodeContext(),\n      column.collectElementsOffset(),\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {}\n\n  getNodeContext(): Vtree.NodeContext {\n    return null;\n  }\n}\n\nexport function calculateOffset(\n  nodeContext: Vtree.NodeContext,\n  elementsOffsets: RepetitiveElement.ElementsOffset[],\n): { current: number; minimum: number } {\n  return {\n    current: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateOffset(nodeContext),\n      0,\n    ),\n    minimum: elementsOffsets.reduce(\n      (val, repetitiveElement) =>\n        val + repetitiveElement.calculateMinimumOffset(nodeContext),\n      0,\n    ),\n  };\n}\n\n/**\n * Potential edge breaking position.\n */\nexport class EdgeBreakPosition\n  extends AbstractBreakPosition\n  implements Layout.EdgeBreakPosition\n{\n  overflowIfRepetitiveElementsDropped: boolean;\n  protected isEdgeUpdated: boolean = false;\n  private edge: number = 0;\n\n  constructor(\n    public readonly position: Vtree.NodeContext,\n    public readonly breakOnEdge: string | null,\n    public overflows: boolean,\n    public readonly computedBlockSize: number,\n  ) {\n    super();\n    this.overflowIfRepetitiveElementsDropped = overflows;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    this.updateOverflows(column);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    return column.findEdgeBreakPosition(this);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    const preferDropping =\n      this.isFirstContentOfRepetitiveElementsOwner() &&\n      !this.overflowIfRepetitiveElementsDropped;\n    return (\n      (Break.isAvoidBreakValue(this.breakOnEdge) ? 1 : 0) +\n      (this.overflows && !preferDropping ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  private updateEdge(column: Layout.Column) {\n    const clonedPaddingBorder = column.calculateClonedPaddingBorder(\n      this.position,\n    );\n    this.edge =\n      LayoutHelper.calculateEdge(\n        this.position,\n        column.clientLayout,\n        0,\n        column.vertical,\n      ) + clonedPaddingBorder;\n    this.isEdgeUpdated = true;\n  }\n\n  private updateOverflows(column: Layout.Column) {\n    if (!this.isEdgeUpdated) {\n      this.updateEdge(column);\n    }\n    const edge = this.edge;\n    const offsets = this.calculateOffset(column);\n    this.overflowIfRepetitiveElementsDropped = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.minimum,\n    );\n    this.overflows = this.position.overflow = column.isOverflown(\n      edge + (column.vertical ? -1 : 1) * offsets.current,\n    );\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.position;\n  }\n\n  private isFirstContentOfRepetitiveElementsOwner(): boolean {\n    const nodeContext = this.getNodeContext();\n    if (!nodeContext || !nodeContext.parent) {\n      return false;\n    }\n    const { formattingContext } = nodeContext.parent;\n    if (\n      !RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return false;\n    }\n\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    return repetitiveElements.isFirstContentNode(nodeContext);\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutProcessor - Definitions of LayoutProcessor.\n */\nimport * as BreakPosition from \"./break-position\";\nimport * as Display from \"./display\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as Plugin from \"./plugin\";\nimport * as Task from \"./task\";\nimport { FormattingContextType, Layout, LayoutProcessor, Vtree } from \"./types\";\n\n/**\n * Processor doing some special layout (e.g. table layout)\n */\n// eslint-disable-next-line no-redeclare\nexport interface LayoutProcessor {\n  /**\n   * Do actual layout in the column starting from given NodeContext.\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * Potential edge breaking position.\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition;\n\n  /**\n   * process nodecontext at the start of a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean;\n\n  /**\n   * process nodecontext after a non inline element.\n   * @return return true if you skip the subsequent nodes\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean;\n\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean>;\n\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  );\n}\n\n/**\n * Resolver finding an appropriate LayoutProcessor given a formatting context\n */\nexport class LayoutProcessorResolver {\n  /**\n   * Find LayoutProcessor corresponding to given formatting context.\n   */\n  find(formattingContext: Vtree.FormattingContext): LayoutProcessor {\n    const hooks: Plugin.ResolveLayoutProcessorHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const processor = hooks[i](formattingContext);\n      if (processor) {\n        return processor;\n      }\n    }\n    throw new Error(\n      `No processor found for a formatting context: ${formattingContext.getName()}`,\n    );\n  }\n}\n\nexport class BlockLayoutProcessor implements LayoutProcessor {\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    } else if (column.isBreakable(nodeContext)) {\n      return column.layoutBreakableBlock(nodeContext);\n    } else {\n      return column.layoutUnbreakable(nodeContext);\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): Layout.BreakPosition {\n    return new BreakPosition.EdgeBreakPosition(\n      position.copy(),\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    if (!nodeContext.viewNode) {\n      return;\n    }\n    if (!nodeContext.viewNode.parentNode) {\n      return;\n    }\n    // Fix for issue #740\n    if (\n      nodeContext.shadowType === Vtree.ShadowType.ROOTLESS &&\n      LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      return;\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const parentNode = node.parentNode;\n    LayoutHelper.removeFollowingSiblings(parentNode, node);\n    if (removeSelf) {\n      parentNode.removeChild(node);\n    }\n  }\n\n  /**\n   * @return holing true\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const removeSelf =\n      forceRemoveSelf ||\n      (nodeContext.viewNode != null &&\n        nodeContext.viewNode.nodeType == 1 &&\n        !nodeContext.after);\n    column.clearOverflownViewNodes(nodeContext, removeSelf);\n    if (endOfColumn) {\n      column.fixJustificationIfNeeded(nodeContext, true);\n      column.layoutContext.processFragmentedBlockEdge(\n        removeSelf ? nodeContext : nodeContext.parent,\n      );\n    }\n    return Task.newResult(true);\n  }\n}\n\nexport class BlockFormattingContext\n  implements LayoutProcessor.BlockFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Block\";\n\n  constructor(private readonly parent: Vtree.FormattingContext) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Block formatting context (BlockFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport const blockLayoutProcessor = new BlockLayoutProcessor();\n\nexport const isInstanceOfBlockFormattingContext =\n  LayoutProcessor.isInstanceOfBlockFormattingContext;\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  (nodeContext, firstTime, display, position, floatSide, isRoot) => {\n    const parent = nodeContext.parent;\n    if (!parent && nodeContext.formattingContext) {\n      return null;\n    } else if (\n      parent &&\n      nodeContext.formattingContext !== parent.formattingContext\n    ) {\n      return null;\n    } else if (\n      nodeContext.establishesBFC ||\n      (!nodeContext.formattingContext &&\n        Display.isBlock(display, position, floatSide, isRoot))\n    ) {\n      return new BlockFormattingContext(\n        parent ? parent.formattingContext : null,\n      );\n    } else {\n      return null;\n    }\n  },\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (formattingContext instanceof BlockFormattingContext) {\n      return blockLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutRetryers - Definitions of LayoutRetryer.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Task from \"./task\";\nimport { Layout, Vtree } from \"./types\";\n\n/**\n * @abstract\n */\nexport abstract class AbstractLayoutRetryer {\n  initialBreakPositions: Layout.BreakPosition[] = null;\n  initialStateOfFormattingContext: Vtree.NodeContext = null;\n  initialPosition: Vtree.NodeContext;\n  initialFragmentLayoutConstraints: Layout.FragmentLayoutConstraint[];\n\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    this.prepareLayout(nodeContext, column);\n    return this.tryLayout(nodeContext, column);\n  }\n\n  private tryLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"AbstractLayoutRetryer.tryLayout\",\n    );\n    this.saveState(nodeContext, column);\n    const mode = this.resolveLayoutMode(nodeContext);\n    mode.doLayout(nodeContext, column).then((positionAfter) => {\n      let accepted = mode.accept(positionAfter, column);\n      accepted = mode.postLayout(\n        positionAfter,\n        this.initialPosition,\n        column,\n        accepted,\n      );\n      if (accepted) {\n        frame.finish(positionAfter);\n      } else {\n        Asserts.assert(this.initialPosition);\n        this.clearNodes(this.initialPosition);\n        this.restoreState(nodeContext, column);\n        this.tryLayout(this.initialPosition, column).thenFinish(frame);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @abstract\n   */\n  abstract resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode;\n\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {}\n\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    const viewNode =\n      initialPosition.viewNode || initialPosition.parent.viewNode;\n    let child: Node;\n    while ((child = viewNode.lastChild)) {\n      viewNode.removeChild(child);\n    }\n    let sibling: Node;\n    while ((sibling = viewNode.nextSibling)) {\n      sibling.parentNode.removeChild(sibling);\n    }\n  }\n\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    this.initialPosition = nodeContext.copy();\n    this.initialBreakPositions = [].concat(column.breakPositions);\n    this.initialFragmentLayoutConstraints = [].concat(\n      column.fragmentLayoutConstraints,\n    );\n    if (nodeContext.formattingContext) {\n      this.initialStateOfFormattingContext =\n        nodeContext.formattingContext.saveState();\n    }\n  }\n\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.breakPositions = this.initialBreakPositions;\n    column.fragmentLayoutConstraints = this.initialFragmentLayoutConstraints;\n    if (nodeContext.formattingContext) {\n      nodeContext.formattingContext.restoreState(\n        this.initialStateOfFormattingContext,\n      );\n    }\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview LayoutUtil - Utilities related to layout.\n */\nimport * as Break from \"./break\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport { Layout, Vtree } from \"./types\";\n\nexport type LayoutIteratorState = {\n  nodeContext: Vtree.NodeContext;\n  atUnforcedBreak: boolean;\n  break: boolean;\n  leadingEdge?: boolean;\n  breakAtTheEdge?: string | null;\n  onStartEdges?: boolean;\n  leadingEdgeContexts?: Vtree.NodeContext[];\n  lastAfterNodeContext?: Vtree.NodeContext | null;\n};\n\nexport class LayoutIteratorStrategy {\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: false,\n      break: false,\n    };\n  }\n\n  startNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonDisplayableNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterIgnoredTextNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  finish(state: LayoutIteratorState): void | Task.Result<boolean> {}\n}\n\nexport class LayoutIterator {\n  constructor(\n    private readonly strategy: LayoutIteratorStrategy,\n    private readonly layoutContext: Vtree.LayoutContext,\n  ) {}\n\n  iterate(\n    initialNodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const strategy = this.strategy;\n    const state = strategy.initialState(initialNodeContext);\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"LayoutIterator\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        let r: void | Task.Result<boolean>;\n        while (state.nodeContext) {\n          if (!state.nodeContext.viewNode) {\n            if (state.nodeContext.after) {\n              r = strategy.afterNonDisplayableNode(state);\n            } else {\n              r = strategy.startNonDisplayableNode(state);\n            }\n          } else if (state.nodeContext.viewNode.nodeType !== 1) {\n            if (\n              VtreeImpl.canIgnore(\n                state.nodeContext.viewNode,\n                state.nodeContext.whitespace,\n              )\n            ) {\n              if (state.nodeContext.after) {\n                r = strategy.afterIgnoredTextNode(state);\n              } else {\n                r = strategy.startIgnoredTextNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonElementNode(state);\n              } else {\n                r = strategy.startNonElementNode(state);\n              }\n            }\n          } else {\n            if (state.nodeContext.inline) {\n              if (state.nodeContext.after) {\n                r = strategy.afterInlineElementNode(state);\n              } else {\n                r = strategy.startInlineElementNode(state);\n              }\n            } else {\n              if (state.nodeContext.after) {\n                r = strategy.afterNonInlineElementNode(state);\n              } else {\n                r = strategy.startNonInlineElementNode(state);\n              }\n            }\n          }\n          const cont = r && r.isPending() ? r : Task.newResult(true);\n          const nextResult = cont.thenAsync(() => {\n            if (state.break) {\n              return Task.newResult(null);\n            }\n            return this.layoutContext.nextInTree(\n              state.nodeContext,\n              state.atUnforcedBreak,\n            );\n          });\n          if (nextResult.isPending()) {\n            nextResult.then((nextNodeContext) => {\n              if (state.break) {\n                loopFrame.breakLoop();\n              } else {\n                state.nodeContext = nextNodeContext;\n                loopFrame.continueLoop();\n              }\n            });\n            return;\n          } else if (state.break) {\n            loopFrame.breakLoop();\n            return;\n          } else {\n            state.nodeContext = nextResult.get();\n          }\n        }\n        strategy.finish(state);\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(state.nodeContext);\n      });\n    return frame.result();\n  }\n}\n\nexport class EdgeSkipper extends LayoutIteratorStrategy {\n  constructor(protected readonly leadingEdge?: boolean) {\n    super();\n  }\n\n  startNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  endEmptyNonInlineBox(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {}\n\n  endNonInlineBox(state: LayoutIteratorState): void | Task.Result<boolean> {}\n\n  initialState(initialNodeContext: Vtree.NodeContext): LayoutIteratorState {\n    return {\n      nodeContext: initialNodeContext,\n      atUnforcedBreak: !!this.leadingEdge && initialNodeContext.after,\n      break: false,\n      leadingEdge: this.leadingEdge,\n      breakAtTheEdge: null,\n      onStartEdges: false,\n      leadingEdgeContexts: [],\n      lastAfterNodeContext: null,\n    };\n  }\n\n  /**\n   * @return Returns true if a forced break occurs.\n   */\n  processForcedBreak(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const needForcedBreak =\n      !state.leadingEdge && Break.isForcedBreakValue(state.breakAtTheEdge);\n    if (needForcedBreak) {\n      const nodeContext = (state.nodeContext =\n        state.leadingEdgeContexts[0] || state.nodeContext);\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      column.pageBreakType = state.breakAtTheEdge;\n    }\n    return needForcedBreak;\n  }\n\n  /**\n   * @return Returns true if the node overflows the column.\n   */\n  saveEdgeAndProcessOverflow(\n    state: LayoutIteratorState,\n    column: Layout.Column,\n  ): boolean {\n    const overflow = column.checkOverflowAndSaveEdgeAndBreakPosition(\n      state.lastAfterNodeContext,\n      null,\n      true,\n      state.breakAtTheEdge,\n    );\n    if (overflow) {\n      state.nodeContext = (\n        state.lastAfterNodeContext || state.nodeContext\n      ).modify();\n      state.nodeContext.overflow = true;\n    }\n    return overflow;\n  }\n\n  /**\n   * @returns Returns true if the layout constraint is violated.\n   */\n  processLayoutConstraint(\n    state: LayoutIteratorState,\n    layoutConstraint: Layout.LayoutConstraint,\n    column: Layout.Column,\n  ): boolean {\n    let nodeContext = state.nodeContext;\n    const violateConstraint = !layoutConstraint.allowLayout(nodeContext);\n    if (violateConstraint) {\n      column.checkOverflowAndSaveEdgeAndBreakPosition(\n        state.lastAfterNodeContext,\n        null,\n        false,\n        state.breakAtTheEdge,\n      );\n      nodeContext = state.nodeContext = nodeContext.modify();\n      nodeContext.overflow = true;\n    }\n    return violateConstraint;\n  }\n\n  /**\n   * @override\n   */\n  startNonElementNode(state: LayoutIteratorState): void | Task.Result<boolean> {\n    state.onStartEdges = false;\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    state.leadingEdgeContexts.push(state.nodeContext.copy());\n    state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n      state.breakAtTheEdge,\n      state.nodeContext.breakBefore,\n    );\n    state.onStartEdges = true;\n    return this.startNonInlineBox(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    let r: void | Task.Result<boolean>;\n    let cont: Task.Result<boolean>;\n    if (state.onStartEdges) {\n      r = this.endEmptyNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n      cont = cont.thenAsync(() => {\n        if (!state.break) {\n          state.leadingEdgeContexts = [];\n          state.leadingEdge = false;\n          state.atUnforcedBreak = false;\n          state.breakAtTheEdge = null;\n        }\n        return Task.newResult(true);\n      });\n    } else {\n      r = this.endNonInlineBox(state);\n      cont = r && r.isPending() ? r : Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      if (!state.break) {\n        state.onStartEdges = false;\n        state.lastAfterNodeContext = state.nodeContext.copy();\n        state.breakAtTheEdge = Break.resolveEffectiveBreakValue(\n          state.breakAtTheEdge,\n          state.nodeContext.breakAfter,\n        );\n      }\n      return Task.newResult(true);\n    });\n  }\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Shared - Global variables of Vivliostyle.js\n */\nimport { RepetitiveElement } from \"./types\";\n\nexport let repetitiveElementsCache: {\n  root: Element;\n  elements: RepetitiveElement.RepetitiveElements;\n}[] = [];\n\nexport function clearRepetitiveElementsCache(): void {\n  repetitiveElementsCache = [];\n}\n","/**\n * Copyright 2021 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview TextPolyfill - CSS text-spacing and hanging-punctuation support.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as Plugin from \"./plugin\";\nimport * as Vtree from \"./vtree\";\n\ntype PropertyValue = string | number | Css.Val;\n\ntype HangingPunctuation = {\n  first: boolean;\n  end: boolean; // force-end or allow-end\n  allowEnd: boolean;\n  last: boolean;\n};\n\nconst HANGING_PUNCTUATION_NONE: HangingPunctuation = {\n  first: false,\n  end: false,\n  allowEnd: false,\n  last: false,\n};\n\nfunction hangingPunctuationFromPropertyValue(\n  value: PropertyValue,\n): HangingPunctuation {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.none;\n\n  if (cssval === Css.ident.none) {\n    return HANGING_PUNCTUATION_NONE;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const hangingPunctuation: HangingPunctuation = Object.create(\n    HANGING_PUNCTUATION_NONE,\n  );\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"first\":\n          hangingPunctuation.first = true;\n          break;\n        case \"force-end\":\n          hangingPunctuation.end = true;\n          break;\n        case \"allow-end\":\n          hangingPunctuation.end = true;\n          hangingPunctuation.allowEnd = true;\n          break;\n        case \"last\":\n          hangingPunctuation.last = true;\n          break;\n      }\n    }\n  }\n  return hangingPunctuation;\n}\n\nfunction isHangingPunctuationNone(\n  hangingPunctuation: HangingPunctuation,\n): boolean {\n  return (\n    !hangingPunctuation.first &&\n    !hangingPunctuation.last &&\n    !hangingPunctuation.end\n  );\n}\n\ntype TextSpacing = {\n  trimStart: boolean; // trim-start or space-first (not space-start)\n  spaceFirst: boolean; // space-first (trim-start except at first line)\n  trimEnd: boolean; // trim-end or allow-end (not space-end)\n  allowEnd: boolean; // allow-end (not force-end)\n  trimAdjacent: boolean;\n  ideographAlpha: boolean;\n  ideographNumeric: boolean;\n};\n\n/**\n * text-spacing: none\n * none = space-start space-end space-adjacent\n */\nconst TEXT_SPACING_NONE: TextSpacing = {\n  trimStart: false,\n  spaceFirst: false,\n  trimEnd: false,\n  allowEnd: false,\n  trimAdjacent: false,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n\n/**\n * text-spacing: normal\n * normal = space-first trim-end trim-adjacent\n */\nconst TEXT_SPACING_NORMAL: TextSpacing = {\n  trimStart: true,\n  spaceFirst: true,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: false,\n  ideographNumeric: false,\n};\n/**\n * text-spacing: auto\n * auto = trim-start trim-end trim-adjacent ideograph-alpha ideograph-numeric\n */\nconst TEXT_SPACING_AUTO: TextSpacing = {\n  trimStart: true,\n  spaceFirst: false,\n  trimEnd: true,\n  allowEnd: false,\n  trimAdjacent: true,\n  ideographAlpha: true,\n  ideographNumeric: true,\n};\n\nfunction textSpacingFromPropertyValue(value: PropertyValue): TextSpacing {\n  const cssval =\n    value instanceof Css.Val\n      ? value\n      : typeof value === \"string\"\n      ? Css.getName(value)\n      : Css.ident.normal;\n\n  if (cssval === Css.ident.normal) {\n    return TEXT_SPACING_NORMAL;\n  }\n  if (cssval === Css.ident.none) {\n    return TEXT_SPACING_NONE;\n  }\n  if (cssval === Css.ident.auto) {\n    return TEXT_SPACING_AUTO;\n  }\n  const values = cssval instanceof Css.SpaceList ? cssval.values : [cssval];\n  const textSpacing: TextSpacing = Object.create(TEXT_SPACING_NORMAL);\n\n  for (const val of values) {\n    if (val instanceof Css.Ident) {\n      switch (val.name) {\n        case \"trim-start\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-start\":\n          textSpacing.trimStart = false;\n          textSpacing.spaceFirst = false;\n          break;\n        case \"space-first\":\n          textSpacing.trimStart = true;\n          textSpacing.spaceFirst = true;\n          break;\n        case \"trim-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = false;\n          break;\n        case \"space-end\":\n          textSpacing.trimEnd = false;\n          textSpacing.allowEnd = false;\n          break;\n        case \"allow-end\":\n          textSpacing.trimEnd = true;\n          textSpacing.allowEnd = true;\n          break;\n        case \"trim-adjacent\":\n          textSpacing.trimAdjacent = true;\n          break;\n        case \"space-adjacent\":\n          textSpacing.trimAdjacent = false;\n          break;\n        case \"ideograph-alpha\":\n          textSpacing.ideographAlpha = true;\n          break;\n        case \"ideograph-numeric\":\n          textSpacing.ideographNumeric = true;\n          break;\n      }\n    }\n  }\n\n  return textSpacing;\n}\n\nfunction isTextSpacingNone(textSpacing: TextSpacing): boolean {\n  return (\n    !textSpacing.trimStart &&\n    !textSpacing.trimEnd &&\n    !textSpacing.trimAdjacent &&\n    !textSpacing.ideographAlpha &&\n    !textSpacing.ideographNumeric\n  );\n}\n\nfunction normalizeLang(lang: string): string | null {\n  if (lang) {\n    // Normalize CJK lang\n    lang = lang.toLowerCase();\n    if (/^zh\\b.*-(hant|tw|hk)\\b/.test(lang)) {\n      return \"zh-hant\";\n    }\n    if (/^zh\\b/.test(lang)) {\n      return \"zh-hans\";\n    }\n    if (/^ja\\b/.test(lang)) {\n      return \"ja\";\n    }\n    if (/^ko\\b/.test(lang)) {\n      return \"ko\";\n    }\n    return lang;\n  }\n  return null;\n}\n\nconst embeddedContentTags = {\n  audio: true,\n  canvas: true,\n  embed: true,\n  iframe: true,\n  img: true,\n  math: true,\n  object: true,\n  picture: true,\n  svg: true,\n  video: true,\n};\n\nclass TextSpacingPolyfill {\n  getPolyfilledInheritedProps() {\n    return [\"hanging-punctuation\", \"text-spacing\"];\n  }\n\n  preprocessSingleDocument(document: Document): void {\n    if (!document.body) {\n      return;\n    }\n    this.preprocessForTextSpacing(document.body);\n  }\n\n  preprocessForTextSpacing(element: Element): void {\n    // Split text nodes by punctuations and ideograph/non-ideograph boundary\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    for (let node = nodeIter.nextNode(); node; node = nodeIter.nextNode()) {\n      if (\n        node.parentElement.namespaceURI !== Base.NS.XHTML ||\n        node.parentElement.dataset?.[\"mathTypeset\"] === \"true\"\n      ) {\n        continue;\n      }\n      const textArr = node.textContent\n        .replace(\n          /(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡]\\p{M}*(?=\\P{M})|.(?=(?![()\\[\\]{}])[\\p{Ps}\\p{Pe}\\p{Pf}\\p{Pi}、。，．：；､｡])|(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*(?=(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}])|(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])[\\p{L}\\p{Nd}]\\p{M}*(?=(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF])/gsu,\n          \"$&\\x00\",\n        )\n        .split(\"\\x00\");\n\n      if (textArr.length > 1) {\n        const lastIndex = textArr.length - 1;\n        for (let i = 0; i < lastIndex; i++) {\n          node.parentNode.insertBefore(\n            document.createTextNode(textArr[i]),\n            node,\n          );\n        }\n        node.textContent = textArr[lastIndex];\n      }\n    }\n  }\n\n  processGeneratedContent(\n    element: HTMLElement,\n    textSpacingVal: Css.Val,\n    hangingPunctuationVal: Css.Val,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    lang = normalizeLang(lang);\n    const textSpacing = textSpacingFromPropertyValue(textSpacingVal);\n    const hangingPunctuation = hangingPunctuationFromPropertyValue(\n      hangingPunctuationVal,\n    );\n\n    if (\n      isHangingPunctuationNone(hangingPunctuation) &&\n      isTextSpacingNone(textSpacing)\n    ) {\n      return;\n    }\n\n    this.preprocessForTextSpacing(element);\n\n    const whiteSpaceSave = element.style.whiteSpace;\n    if ((vertical ? element.offsetHeight : element.offsetWidth) === 0) {\n      // Prevent wrong line wrapping\n      element.style.whiteSpace = \"pre\";\n    }\n\n    const nodeIter = element.ownerDocument.createNodeIterator(\n      element,\n      NodeFilter.SHOW_TEXT,\n    );\n    let prevNode: Node = null;\n    let nextNode: Node = null;\n    for (let node = nodeIter.nextNode(); node; node = nextNode) {\n      nextNode = nodeIter.nextNode();\n      const isFirstInBlock = !prevNode;\n      const isFirstAfterForcedLineBreak =\n        !prevNode || /\\n$/.test(prevNode.textContent);\n      const isLastBeforeForcedLineBreak =\n        !nextNode || /^\\n/.test(nextNode.textContent);\n      const isLastInBlock = !nextNode;\n      this.processTextSpacing(\n        node,\n        isFirstInBlock,\n        isFirstAfterForcedLineBreak,\n        isLastBeforeForcedLineBreak,\n        isLastInBlock,\n        prevNode,\n        nextNode,\n        textSpacing,\n        hangingPunctuation,\n        lang,\n        vertical,\n      );\n      prevNode = node;\n    }\n\n    element.style.whiteSpace = whiteSpaceSave;\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): void {\n    const isFirstFragment = !nodeContext || nodeContext.fragmentIndex === 1;\n    const isAfterForcedLineBreak =\n      isFirstFragment || checkIfAfterForcedLineBreak();\n\n    function checkIfAfterForcedLineBreak(): boolean {\n      let p = checkPoints[0];\n      let prevNode: Node;\n      while (p && p.inline) {\n        prevNode = p.sourceNode?.previousSibling;\n        if (prevNode) {\n          if (\n            prevNode instanceof Text &&\n            /^\\s*$/.test(prevNode.textContent) &&\n            p.whitespace !== Vtree.Whitespace.PRESERVE\n          ) {\n            prevNode = prevNode.previousSibling;\n          }\n          if (prevNode) {\n            break;\n          }\n        }\n        p = p.parent;\n      }\n\n      while (prevNode) {\n        if (prevNode instanceof Element) {\n          if (prevNode.localName === \"br\") {\n            return true;\n          }\n        } else if (prevNode instanceof Text) {\n          if (p.whitespace === Vtree.Whitespace.PRESERVE) {\n            if (/\\n$/.test(prevNode.textContent)) {\n              return true;\n            }\n          } else if (p.whitespace === Vtree.Whitespace.NEWLINE) {\n            if (/\\n\\s*$/.test(prevNode.textContent)) {\n              return true;\n            }\n          }\n        }\n        prevNode = prevNode.lastChild;\n      }\n      return false;\n    }\n\n    for (let i = 0; i < checkPoints.length; i++) {\n      const p = checkPoints[i];\n      if (\n        !p.after &&\n        p.inline &&\n        !p.display &&\n        p.parent &&\n        p.viewNode.parentNode &&\n        p.viewNode.nodeType === Node.TEXT_NODE &&\n        p.viewNode.textContent.trimStart().length > 0\n      ) {\n        const lang = normalizeLang(\n          p.lang ??\n            p.parent.lang ??\n            nodeContext?.lang ??\n            nodeContext?.parent?.lang,\n        );\n        const textSpacing = textSpacingFromPropertyValue(\n          p.inheritedProps[\"text-spacing\"],\n        );\n        const hangingPunctuation = hangingPunctuationFromPropertyValue(\n          p.inheritedProps[\"hanging-punctuation\"],\n        );\n\n        if (\n          isHangingPunctuationNone(hangingPunctuation) &&\n          isTextSpacingNone(textSpacing)\n        ) {\n          continue;\n        }\n        if (/\\b(flex|grid)\\b/.test(p.parent.display)) {\n          // Cannot process if parent is flex or grid. (Issue #926)\n          continue;\n        }\n\n        let prevNode: Node = null;\n        let nextNode: Node = null;\n        let isFirstInBlock = i === 0 && isFirstFragment;\n        let isFirstAfterForcedLineBreak = i === 0 && isAfterForcedLineBreak;\n        let isLastBeforeForcedLineBreak = false;\n        let isLastInBlock = false;\n\n        function checkIfFirstAfterForcedLineBreak(\n          prevP: Vtree.NodeContext,\n        ): boolean {\n          if (prevP.viewNode instanceof Element) {\n            return prevP.viewNode.localName === \"br\";\n          }\n          if (prevP.viewNode instanceof Text) {\n            if (prevP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/\\n$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (prevP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/\\n\\s*$/.test(prevP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (prevP.viewNode.previousElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(prevP.viewNode, prevP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        function checkIfLastBeforeForcedLineBreak(\n          nextP: Vtree.NodeContext,\n        ): boolean {\n          if (nextP.viewNode instanceof Element) {\n            return nextP.viewNode.localName === \"br\";\n          }\n          if (nextP.viewNode instanceof Text) {\n            if (nextP.whitespace === Vtree.Whitespace.PRESERVE) {\n              if (/^\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            } else if (nextP.whitespace === Vtree.Whitespace.NEWLINE) {\n              if (/^\\s*\\n/.test(nextP.viewNode.textContent)) {\n                return true;\n              }\n            }\n            if (nextP.viewNode.nextElementSibling?.localName === \"br\") {\n              return Vtree.canIgnore(nextP.viewNode, nextP.whitespace);\n            }\n          }\n          return false;\n        }\n\n        for (let prev = i - 1; prev >= 0; prev--) {\n          const prevP = checkPoints[prev];\n          if (checkIfFirstAfterForcedLineBreak(prevP)) {\n            isFirstAfterForcedLineBreak = true;\n            break;\n          }\n          if (\n            !prevP.display &&\n            prevP.viewNode.nodeType === Node.TEXT_NODE &&\n            prevP.viewNode.textContent.length > 0\n          ) {\n            prevNode = prevP.viewNode;\n            break;\n          }\n          if (\n            (prevP.display && !/^(inline|ruby)\\b/.test(prevP.display)) ||\n            (prevP.viewNode instanceof Element &&\n              (prevP.viewNode.localName === \"br\" ||\n                embeddedContentTags[prevP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (prev === 0 && isFirstFragment) {\n            isFirstInBlock = true;\n            isFirstAfterForcedLineBreak = true;\n          }\n        }\n        for (let next = i + 1; next < checkPoints.length; next++) {\n          const nextP = checkPoints[next];\n          if (checkIfLastBeforeForcedLineBreak(nextP)) {\n            isLastBeforeForcedLineBreak = true;\n            break;\n          }\n          if (\n            nextP.viewNode !== p.viewNode &&\n            !nextP.display &&\n            nextP.viewNode.nodeType === Node.TEXT_NODE &&\n            nextP.viewNode.textContent.length > 0\n          ) {\n            nextNode = nextP.viewNode;\n            break;\n          }\n          if (\n            (nextP.display && !/^(inline|ruby)\\b/.test(nextP.display)) ||\n            (nextP.viewNode instanceof Element &&\n              (nextP.viewNode.localName === \"br\" ||\n                embeddedContentTags[nextP.viewNode.localName]))\n          ) {\n            break;\n          }\n          if (next === checkPoints.length - 1) {\n            isLastInBlock = true;\n            isLastBeforeForcedLineBreak = true;\n          }\n        }\n        this.processTextSpacing(\n          p.viewNode,\n          isFirstInBlock,\n          isFirstAfterForcedLineBreak,\n          isLastBeforeForcedLineBreak,\n          isLastInBlock,\n          prevNode,\n          nextNode,\n          textSpacing,\n          hangingPunctuation,\n          lang,\n          p.vertical,\n        );\n      }\n    }\n  }\n\n  private processTextSpacing(\n    textNode: Node,\n    isFirstInBlock: boolean,\n    isFirstAfterForcedLineBreak: boolean,\n    isLastBeforeForcedLineBreak: boolean,\n    isLastInBlock: boolean,\n    prevNode: Node,\n    nextNode: Node,\n    textSpacing: TextSpacing,\n    hangingPunctuation: HangingPunctuation,\n    lang: string,\n    vertical: boolean,\n  ): void {\n    const text = textNode.textContent;\n    const document = textNode.ownerDocument;\n    let currRange: Range;\n    let prevRange: Range;\n    let nextRange: Range;\n\n    function isAtStartOfLine(): boolean {\n      if (!prevNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!prevRange) {\n        prevRange = document.createRange();\n        prevRange.selectNode(prevNode);\n      }\n      const prevRects = prevRange.getClientRects();\n      const prevRect = prevRects[prevRects.length - 1];\n      if (!rect || !prevRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top < prevRect.top + prevRect.height - rect.width ||\n            rect.left + rect.width < prevRect.left + 1 ||\n            rect.left > prevRect.left + prevRect.width - 1\n        : rect.left < prevRect.left + prevRect.width - rect.height ||\n            rect.top > prevRect.top + prevRect.height - 1 ||\n            rect.top + rect.height < prevRect.top + 1;\n    }\n\n    function isAtEndOfLine(): boolean {\n      if (!nextNode) {\n        return false;\n      }\n      if (!currRange) {\n        currRange = document.createRange();\n        currRange.selectNode(textNode);\n      }\n      const rect = currRange.getClientRects()[0];\n      if (!nextRange) {\n        nextRange = document.createRange();\n        nextRange.selectNode(nextNode);\n      }\n      const nextRect = nextRange.getClientRects()[0];\n      if (!rect || !nextRect) {\n        return false;\n      }\n      return vertical\n        ? rect.top + rect.height > nextRect.top + rect.width ||\n            rect.left > nextRect.left + nextRect.width - 1 ||\n            rect.left + rect.width < nextRect.left + 1\n        : rect.left + rect.width > nextRect.left + rect.height ||\n            rect.top + rect.height < nextRect.top + 1 ||\n            rect.top > nextRect.top + nextRect.height - 1;\n    }\n\n    let punctProcessing = false;\n    let hangingFirst = false;\n    let hangingLast = false;\n    let hangingEnd = false;\n    let tagName: \"viv-ts-open\" | \"viv-ts-close\";\n\n    if (\n      isFirstInBlock &&\n      hangingPunctuation.first &&\n      /^[\\p{Ps}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: first\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n      hangingFirst = true;\n    } else if (\n      isLastInBlock &&\n      hangingPunctuation.last &&\n      /^[\\p{Pe}\\p{Pf}\\p{Pi}'\"]\\p{M}*$/u.test(text)\n    ) {\n      // hanging-punctuation: last\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingLast = true;\n    } else if (hangingPunctuation.end && /^[、。，．､｡]\\p{M}*$/u.test(text)) {\n      // hanging-punctuation: force-end | allow-end\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n      hangingEnd = true;\n    } else if (\n      (textSpacing.trimStart || textSpacing.trimAdjacent) &&\n      /^[‘“〝（［｛｟〈〈《「『【〔〖〘〚]\\p{M}*$/u.test(text)\n    ) {\n      // fullwidth opening punctuation\n      tagName = \"viv-ts-open\";\n      punctProcessing = true;\n    } else if (\n      (textSpacing.trimEnd || textSpacing.trimAdjacent) &&\n      (/^[’”〞〟）］｝｠〉〉》」』】〕〗〙〛]\\p{M}*$/u.test(text) ||\n        (lang === \"zh-hans\" && /^[：；]\\p{M}*$/u.test(text)) ||\n        (lang !== \"zh-hant\" && /^[、。，．]\\p{M}*$/u.test(text)))\n    ) {\n      // fullwidth closing punctuation\n      tagName = \"viv-ts-close\";\n      punctProcessing = true;\n    }\n\n    if (punctProcessing) {\n      if (textNode.parentElement.localName === \"viv-ts-inner\") {\n        // Already processed\n        return;\n      }\n      // Wrap the textNode as `<{tagName}><viv-ts-inner>{text}<viv-ts-inner></{tagName}>`\n      const outerElem = document.createElement(tagName);\n      const innerElem = document.createElement(\"viv-ts-inner\");\n      outerElem.appendChild(innerElem);\n      textNode.parentNode.insertBefore(outerElem, textNode);\n      innerElem.appendChild(textNode);\n\n      // Check if che punctuation is almost full width\n      const fontSize = parseFloat(\n        document.defaultView.getComputedStyle(outerElem).fontSize,\n      );\n      const isFullWidth =\n        (vertical ? innerElem.offsetHeight : innerElem.offsetWidth) >\n        fontSize * 0.7;\n\n      if (isFullWidth || hangingFirst || hangingLast || hangingEnd) {\n        if (tagName === \"viv-ts-open\") {\n          if (hangingFirst) {\n            outerElem.className = \"viv-hang-first\";\n          } else if (isFirstInBlock || isFirstAfterForcedLineBreak) {\n            if (textSpacing.trimStart && !textSpacing.spaceFirst) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (!textSpacing.trimStart && isAtStartOfLine()) {\n            outerElem.className = \"viv-ts-space\";\n          } else if (\n            textSpacing.trimAdjacent &&\n            prevNode &&\n            /[\\p{Ps}\\p{Pi}\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]\\p{M}*$/u.test(\n              prevNode.textContent,\n            )\n          ) {\n            outerElem.className = \"viv-ts-trim\";\n          } else {\n            outerElem.className = \"viv-ts-auto\";\n          }\n        } else if (tagName === \"viv-ts-close\") {\n          if (hangingLast) {\n            outerElem.className = isFullWidth\n              ? \"viv-hang-last\"\n              : \"viv-hang-last viv-hang-hw\";\n          } else if (isLastInBlock || isLastBeforeForcedLineBreak) {\n            if (hangingEnd) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            } else if (textSpacing.trimEnd) {\n              outerElem.className = \"viv-ts-trim\";\n            } else {\n              outerElem.className = \"viv-ts-space\";\n            }\n          } else if (\n            nextNode &&\n            /^[\\p{Pe}\\p{Pf}\\u00B7\\u2027\\u30FB\\u3000：；、。，．]/u.test(\n              nextNode.textContent,\n            )\n          ) {\n            if (isFullWidth && textSpacing.trimAdjacent) {\n              outerElem.className = \"viv-ts-trim\";\n            }\n          } else if (hangingEnd) {\n            const atEnd = isAtEndOfLine();\n            const atEndNoHang = atEnd && hangingPunctuation.allowEnd;\n            if (!atEndNoHang) {\n              outerElem.className = isFullWidth\n                ? \"viv-hang-end\"\n                : \"viv-hang-end viv-hang-hw\";\n            }\n            if (!isFullWidth) {\n              if (!atEnd && !isAtEndOfLine()) {\n                outerElem.className = \"\";\n              }\n            } else if (\n              atEndNoHang\n                ? textSpacing.trimEnd && !textSpacing.allowEnd\n                : !isAtEndOfLine()\n            ) {\n              outerElem.className = \"viv-ts-auto\";\n            } else if (!atEnd && hangingPunctuation.allowEnd) {\n              if (!textSpacing.trimEnd || textSpacing.allowEnd) {\n                outerElem.className = \"viv-ts-space\";\n                if (!isAtEndOfLine()) {\n                  if (textSpacing.trimEnd) {\n                    outerElem.className = \"viv-ts-auto\";\n                    if (!isAtEndOfLine()) {\n                      outerElem.className = \"viv-hang-end\";\n                    }\n                  } else {\n                    outerElem.className = \"viv-hang-end\";\n                  }\n                }\n              } else {\n                outerElem.className = \"viv-ts-auto\";\n                if (!isAtEndOfLine()) {\n                  outerElem.className = \"viv-hang-end\";\n                }\n              }\n            }\n          } else if (textSpacing.trimEnd) {\n            if (textSpacing.allowEnd && isAtEndOfLine()) {\n              outerElem.className = \"viv-ts-space\";\n            } else {\n              outerElem.className = \"viv-ts-auto\";\n            }\n          }\n        }\n      }\n    }\n\n    let spaceIdeoAlnumProcessing = false;\n\n    function checkUpright(elem: Element): boolean {\n      const style = elem?.ownerDocument.defaultView?.getComputedStyle(elem);\n      return (\n        !!style &&\n        (style.textOrientation === \"upright\" ||\n          style.textCombineUpright === \"all\" ||\n          style[\"-webkit-text-combine\"] === \"horizontal\")\n      );\n    }\n\n    if (textSpacing.ideographAlpha || textSpacing.ideographNumeric) {\n      if (\n        prevNode &&\n        /^(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}\\p{M}*$/u.test(\n            prevNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /(?![\\uFF01-\\uFF60])\\p{Nd}\\p{M}*$/u.test(prevNode.textContent))) &&\n        !(vertical && checkUpright(prevNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n      if (\n        nextNode &&\n        /(?!\\p{P})[\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF]\\p{M}*$/u.test(text) &&\n        ((textSpacing.ideographAlpha &&\n          /^(?![\\p{sc=Han}\\u3041-\\u30FF\\u31C0-\\u31FF\\uFF01-\\uFF60])\\p{L}/u.test(\n            nextNode.textContent,\n          )) ||\n          (textSpacing.ideographNumeric &&\n            /^(?![\\uFF01-\\uFF60])\\p{Nd}/u.test(nextNode.textContent))) &&\n        !(vertical && checkUpright(nextNode.parentElement))\n      ) {\n        textNode.parentNode.insertBefore(\n          document.createElement(\"viv-ts-thin-sp\"),\n          textNode.nextSibling,\n        );\n        spaceIdeoAlnumProcessing = true;\n      }\n    }\n  }\n\n  registerHooks() {\n    Plugin.registerHook(\n      Plugin.HOOKS.POLYFILLED_INHERITED_PROPS,\n      this.getPolyfilledInheritedProps.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT,\n      this.preprocessSingleDocument.bind(this),\n    );\n    Plugin.registerHook(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n      this.postLayoutBlock.bind(this),\n    );\n  }\n}\n\nconst textPolyfill = new TextSpacingPolyfill();\ntextPolyfill.registerHooks();\n\nexport function preprocessForTextSpacing(element: Element): void {\n  textPolyfill.preprocessForTextSpacing(element);\n}\n\nexport function processGeneratedContent(\n  element: HTMLElement,\n  textSpacing: Css.Val,\n  hangingPunctuation: Css.Val,\n  lang: string,\n  vertical: boolean,\n): void {\n  textPolyfill.processGeneratedContent(\n    element,\n    textSpacing,\n    hangingPunctuation,\n    lang,\n    vertical,\n  );\n}\n","/**\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PseudoElement - CSS pseudo elements.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Exprs from \"./exprs\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vtree from \"./vtree\";\nimport { PseudoElement } from \"./types\";\n\nexport const document = new DOMParser().parseFromString(\n  `<root xmlns=\"${Base.NS.SHADOW}\"/>`,\n  \"text/xml\",\n);\n\n/**\n * Pseudoelement names in the order they should be inserted in the shadow DOM,\n * empty string is the place where the element's DOM children are processed.\n */\nexport const pseudoNames = [\n  \"footnote-marker\",\n  \"first-5-lines\",\n  \"first-4-lines\",\n  \"first-3-lines\",\n  \"first-2-lines\",\n  \"first-line\",\n  \"first-letter\",\n  \"before\",\n  \"\",\n  /* content */\n  \"after\",\n];\n\nexport const PSEUDO_ATTR = \"data-adapt-pseudo\";\n\nexport function getPseudoName(element: Element): string {\n  return element.getAttribute(PSEUDO_ATTR) || \"\";\n}\n\nexport function setPseudoName(element: Element, name: string): void {\n  element.setAttribute(PSEUDO_ATTR, name);\n}\n\nexport class PseudoelementStyler implements PseudoElement.PseudoelementStyler {\n  contentProcessed: { [key: string]: boolean } = {};\n\n  // after content: update style\n\n  constructor(\n    public readonly element: Element,\n    public style: CssCascade.ElementStyle,\n    public styler: CssStyler.AbstractStyler,\n    public readonly context: Exprs.Context,\n    public readonly exprContentListener: Vtree.ExprContentListener,\n  ) {}\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    const pseudoName = getPseudoName(element);\n    if (this.styler && pseudoName && pseudoName.match(/after$/)) {\n      this.style = this.styler.getStyle(this.element, true);\n      this.styler = null;\n    }\n    const pseudoMap = CssCascade.getStyleMap(this.style, \"_pseudos\");\n    const style = pseudoMap[pseudoName] || ({} as CssCascade.ElementStyle);\n    if (pseudoName.match(/^first-/) && !style[\"x-first-pseudo\"]) {\n      let nest = 1;\n      let r: RegExpMatchArray;\n      if (pseudoName == \"first-letter\") {\n        nest = 0;\n      } else if ((r = pseudoName.match(/^first-([0-9]+)-lines$/)) != null) {\n        nest = (r[1] as any) - 0;\n      }\n      style[\"x-first-pseudo\"] = new CssCascade.CascadeValue(\n        new Css.Int(nest),\n        0,\n      );\n    }\n    return style;\n  }\n\n  /**\n   * @override\n   */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {\n    const pseudoName = getPseudoName(element);\n    if (!this.contentProcessed[pseudoName]) {\n      this.contentProcessed[pseudoName] = true;\n      const contentVal = styles[\"content\"];\n      if (contentVal) {\n        if (Vtree.nonTrivialContent(contentVal)) {\n          contentVal.visit(\n            new Vtree.ContentPropertyHandler(\n              element,\n              this.context,\n              contentVal,\n              this.exprContentListener,\n            ),\n          );\n          // text-spacing & hanging-punctuation support\n          TextPolyfill.preprocessForTextSpacing(element);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Layout - Fills a column with styled content.\n * This file does not communicate with the styling system directly.\n * Instead it goes through the layout interface that gives it one view tree\n * node at a time.\n */\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as Asserts from \"./asserts\";\nimport * as Shared from \"./shared\";\nimport * as Sizing from \"./sizing\";\nimport * as Break from \"./break\";\nimport * as Logging from \"./logging\";\nimport * as Diff from \"./diff\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as Matchers from \"./matchers\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport {\n  FragmentLayoutConstraintType,\n  Layout,\n  RepetitiveElement,\n  Selectors,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport const isInstanceOfAfterIfContinuesLayoutConstraint =\n  Selectors.isInstanceOfAfterIfContinuesLayoutConstraint;\nexport const registerFragmentIndex =\n  Matchers.NthFragmentMatcher.registerFragmentIndex;\nexport const clearFragmentIndices =\n  Matchers.NthFragmentMatcher.clearFragmentIndices;\n\nexport class AfterIfContinues implements Selectors.AfterIfContinues {\n  constructor(\n    public readonly sourceNode: Element,\n    public readonly styler: PseudoElement.PseudoelementStyler,\n  ) {}\n\n  createElement(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n  ): Task.Result<Element> {\n    const doc = parentNodeContext.viewNode.ownerDocument;\n    const viewRoot = doc.createElement(\"div\");\n    const pseudoColumn = new PseudoColumn(column, viewRoot, parentNodeContext);\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    return pseudoColumn\n      .layout(this.createNodePositionForPseudoElement(), true)\n      .thenAsync(() => {\n        this.styler.contentProcessed[\"after-if-continues\"] = false;\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        const pseudoElement = viewRoot.firstChild as Element;\n        Base.setCSSProperty(pseudoElement, \"display\", \"block\");\n        return Task.newResult(pseudoElement);\n      });\n  }\n\n  private createNodePositionForPseudoElement(): Vtree.ChunkPosition {\n    const sourceNode = PseudoElement.document.createElementNS(\n      Base.NS.XHTML,\n      \"div\",\n    );\n    PseudoElement.setPseudoName(sourceNode, \"after-if-continues\");\n    const shadowContext = this.createShadowContext(sourceNode);\n    const step = {\n      node: sourceNode,\n      shadowType: shadowContext.type,\n      shadowContext,\n      nodeShadow: null,\n      shadowSibling: null,\n    };\n    const nodePosition = {\n      steps: [step],\n      offsetInNode: 0,\n      after: false,\n      preprocessedTextContent: null,\n    };\n    return new VtreeImpl.ChunkPosition(nodePosition as any);\n  }\n\n  private createShadowContext(root: Element): Vtree.ShadowContext {\n    return new VtreeImpl.ShadowContext(\n      this.sourceNode,\n      root,\n      null,\n      null,\n      null,\n      Vtree.ShadowType.ROOTED,\n      this.styler,\n    );\n  }\n}\n\nexport class AfterIfContinuesLayoutConstraint\n  implements Selectors.AfterIfContinuesLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"AfterIfContinue\";\n\n  constructor(\n    public nodeContext: Vtree.NodeContext,\n    public afterIfContinues: Selectors.AfterIfContinues,\n    public pseudoElementHeight: number,\n  ) {}\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {}\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    if (!this.getRepetitiveElements().affectTo(nodeContext)) {\n      return Task.newResult(true);\n    }\n    return this.afterIfContinues\n      .createElement(column, this.nodeContext)\n      .thenAsync((element) => {\n        this.nodeContext.viewNode.appendChild(element);\n        return Task.newResult(true);\n      });\n  }\n\n  getRepetitiveElements() {\n    return new AfterIfContinuesElementsOffset(\n      this.nodeContext,\n      this.pseudoElementHeight,\n    );\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof AfterIfContinuesLayoutConstraint)) {\n      return false;\n    }\n    return (\n      this.afterIfContinues ==\n      (constraint as AfterIfContinuesLayoutConstraint).afterIfContinues\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 9;\n  }\n}\n\nexport class AfterIfContinuesElementsOffset\n  implements Selectors.AfterIfContinuesElementsOffset\n{\n  constructor(public nodeContext, public pseudoElementHeight) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    if (!this.affectTo(nodeContext)) {\n      return 0;\n    }\n    return this.pseudoElementHeight;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateOffset(nodeContext);\n  }\n\n  affectTo(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    const sourceNode = nodeContext.shadowContext\n      ? nodeContext.shadowContext.owner\n      : nodeContext.sourceNode;\n    if (sourceNode === this.nodeContext.sourceNode) {\n      return !!nodeContext.after;\n    }\n    for (let n = sourceNode.parentNode; n; n = n.parentNode) {\n      if (n === this.nodeContext.sourceNode) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction processAfterIfContinuesOfNodeContext(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  if (\n    !nodeContext ||\n    !nodeContext.afterIfContinues ||\n    nodeContext.after ||\n    column.isFloatNodeContext(nodeContext)\n  ) {\n    return Task.newResult(nodeContext);\n  }\n  const afterIfContinues = nodeContext.afterIfContinues;\n  return afterIfContinues\n    .createElement(column, nodeContext)\n    .thenAsync((pseudoElement) => {\n      Asserts.assert(nodeContext !== null);\n      const pseudoElementHeight = calculatePseudoElementHeight(\n        nodeContext,\n        column,\n        pseudoElement,\n      );\n      column.fragmentLayoutConstraints.push(\n        new AfterIfContinuesLayoutConstraint(\n          nodeContext as Vtree.NodeContext,\n          afterIfContinues,\n          pseudoElementHeight,\n        ),\n      );\n      return Task.newResult(nodeContext);\n    });\n}\n\nexport function processAfterIfContinues(\n  result: Task.Result<Vtree.NodeContext>,\n  column: Layout.Column,\n): Task.Result<Vtree.NodeContext> {\n  return result.thenAsync((nodeContext) =>\n    processAfterIfContinuesOfNodeContext(nodeContext, column),\n  );\n}\n\nexport function processAfterIfContinuesOfAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n): Task.Result<boolean> {\n  const frame: Task.Frame<boolean> = Task.newFrame(\n    \"processAfterIfContinuesOfAncestors\",\n  );\n  let current: Vtree.NodeContext = nodeContext;\n  frame\n    .loop(() => {\n      if (current !== null) {\n        const result = processAfterIfContinuesOfNodeContext(current, column);\n        current = current.parent;\n        return result.thenReturn(true);\n      } else {\n        return Task.newResult(false);\n      }\n    })\n    .then(() => {\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function calculatePseudoElementHeight(\n  nodeContext: Vtree.NodeContext,\n  column: Layout.Column,\n  pseudoElement: Element,\n): number {\n  const parentNode = nodeContext.viewNode as Element;\n  parentNode.appendChild(pseudoElement);\n  const height = LayoutHelper.getElementHeight(\n    pseudoElement,\n    column,\n    nodeContext.vertical,\n  );\n  parentNode.removeChild(pseudoElement);\n  return height;\n}\n\nexport const mediaTags = {\n  img: true,\n  svg: true,\n  audio: true,\n  video: true,\n};\n\n/**\n * Represents a constraint on layout\n */\nexport type LayoutConstraint = Layout.LayoutConstraint;\n\n/**\n * Represents a constraint that allows layout if all the constraints it contains\n * allow layout.\n */\nexport class AllLayoutConstraint implements LayoutConstraint {\n  constructor(public readonly constraints: LayoutConstraint[]) {}\n\n  /**\n   * @override\n   */\n  allowLayout(nodeContext: Vtree.NodeContext): boolean {\n    return this.constraints.every((c) => c.allowLayout(nodeContext));\n  }\n}\n\n/**\n * Represents constraints on laying out fragments\n */\nexport type FragmentLayoutConstraint = Layout.FragmentLayoutConstraint;\n\nexport type BreakPositionAndNodeContext = Layout.BreakPositionAndNodeContext;\n\n/**\n * Potential breaking position inside CSS box (between lines).\n * @param checkPoints array of breaking points for breakable block\n */\nexport class BoxBreakPosition\n  extends BreakPosition.AbstractBreakPosition\n  implements Layout.BoxBreakPosition\n{\n  private alreadyEvaluated: boolean = false;\n  breakNodeContext: Vtree.NodeContext = null;\n\n  constructor(\n    public readonly checkPoints: Vtree.NodeContext[],\n    public readonly penalty: number,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(column: Column, penalty: number): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    if (!this.alreadyEvaluated) {\n      this.breakNodeContext = column.findBoxBreakPosition(this, penalty > 0);\n      this.alreadyEvaluated = true;\n    }\n    return this.breakNodeContext;\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    return this.penalty;\n  }\n\n  /** @override */\n  getNodeContext(): Vtree.NodeContext {\n    return this.alreadyEvaluated\n      ? this.breakNodeContext\n      : this.checkPoints[this.checkPoints.length - 1];\n  }\n}\n\nexport function validateCheckPoints(checkPoints: Vtree.NodeContext[]): void {\n  for (let i = 1; i < checkPoints.length; i++) {\n    const cp0 = checkPoints[i - 1];\n    const cp1 = checkPoints[i];\n    if (cp0 === cp1) {\n      Logging.logger.warn(\"validateCheckPoints: duplicate entry\");\n    } else if (cp0.boxOffset >= cp1.boxOffset) {\n      Logging.logger.warn(\"validateCheckPoints: incorrect boxOffset\");\n    } else if (cp0.sourceNode == cp1.sourceNode) {\n      if (cp1.after) {\n        if (cp0.after) {\n          Logging.logger.warn(\"validateCheckPoints: duplicate after points\");\n        }\n      } else {\n        if (!cp0.after) {\n          if (\n            cp1.boxOffset - cp0.boxOffset !=\n            cp1.offsetInNode - cp0.offsetInNode\n          ) {\n            Logging.logger.warn(\n              \"validateCheckPoints: boxOffset inconsistent with offsetInNode\",\n            );\n          }\n        }\n      }\n    }\n  }\n}\n\nexport class Column extends VtreeImpl.Container implements Layout.Column {\n  last: Node;\n  viewDocument: Document;\n  flowRootFormattingContext: Vtree.FormattingContext = null;\n  isFloat: boolean = false;\n  isFootnote: boolean = false;\n  startEdge: number = 0;\n  endEdge: number = 0;\n  beforeEdge: number = 0;\n  afterEdge: number = 0;\n  footnoteEdge: number = 0;\n  box: GeometryUtil.Rect = null;\n  chunkPositions: Vtree.ChunkPosition[] = null;\n  bands: GeometryUtil.Band[] = null;\n  overflown: boolean = false;\n  breakPositions: BreakPosition.BreakPosition[] = null;\n  pageBreakType: string | null = null;\n  forceNonfitting: boolean = true;\n  leftFloatEdge: number = 0; // bottom of the bottommost left float\n  rightFloatEdge: number = 0; // bottom of the bottommost right float\n  bottommostFloatTop: number = 0; // Top of the bottommost float\n  stopAtOverflow: boolean = true;\n  lastAfterPosition: Vtree.NodePosition | null = null;\n  fragmentLayoutConstraints: FragmentLayoutConstraint[] = [];\n  pseudoParent: Column = null;\n  nodeContextOverflowingDueToRepetitiveElements: Vtree.NodeContext | null =\n    null;\n  blockDistanceToBlockEndFloats: number = NaN;\n  breakAtTheEdgeBeforeFloat: string | null = null;\n\n  constructor(\n    element: Element,\n    public layoutContext: Vtree.LayoutContext,\n    public clientLayout: Vtree.ClientLayout,\n    public readonly layoutConstraint: LayoutConstraint,\n    public readonly pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    super(element);\n    this.last = element.lastChild;\n    this.viewDocument = element.ownerDocument;\n    pageFloatLayoutContext.setContainer(this);\n  }\n\n  getTopEdge(): number {\n    return this.vertical ? this.startEdge : this.beforeEdge;\n  }\n\n  getBottomEdge(): number {\n    return this.vertical ? this.endEdge : this.afterEdge;\n  }\n\n  getLeftEdge(): number {\n    return this.vertical ? this.afterEdge : this.startEdge;\n  }\n\n  getRightEdge(): number {\n    return this.vertical ? this.beforeEdge : this.endEdge;\n  }\n\n  isFloatNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return !!nodeContext.floatSide && (!this.isFloat || !!nodeContext.parent);\n  }\n\n  stopByOverflow(nodeContext: Vtree.NodeContext): boolean {\n    return this.stopAtOverflow && !!nodeContext && nodeContext.overflow;\n  }\n\n  isOverflown(edge: number): boolean {\n    if (this.vertical) {\n      return edge < this.footnoteEdge;\n    } else {\n      return edge > this.footnoteEdge;\n    }\n  }\n\n  getExclusions(): GeometryUtil.Shape[] {\n    const pageFloatExclusions =\n      this.pageFloatLayoutContext.getFloatFragmentExclusions();\n    return this.exclusions.concat(pageFloatExclusions);\n  }\n\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"openAllViews\");\n    const steps = position.steps;\n    this.layoutContext.setViewRoot(this.element, this.isFootnote);\n    let stepIndex = steps.length - 1;\n    let nodeContext: Vtree.NodeContext = null;\n    frame\n      .loop(() => {\n        while (stepIndex >= 0) {\n          const prevContext = nodeContext;\n          const step = steps[stepIndex];\n          nodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n            step,\n            prevContext,\n          );\n          if (\n            stepIndex === steps.length - 1 &&\n            !nodeContext.formattingContext\n          ) {\n            nodeContext.formattingContext = this.flowRootFormattingContext;\n          }\n          if (stepIndex == 0) {\n            nodeContext.offsetInNode =\n              this.calculateOffsetInNodeForNodeContext(position);\n            nodeContext.after = position.after;\n            nodeContext.preprocessedTextContent =\n              position.preprocessedTextContent;\n            if (nodeContext.after) {\n              break;\n            }\n          }\n          const r = this.layoutContext.setCurrent(\n            nodeContext,\n            stepIndex == 0 && nodeContext.offsetInNode == 0,\n          );\n          stepIndex--;\n          if (r.isPending()) {\n            return r;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        Asserts.assert(nodeContext);\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  calculateOffsetInNodeForNodeContext(position: Vtree.NodePosition): number {\n    return position.preprocessedTextContent\n      ? Diff.resolveNewIndex(\n          position.preprocessedTextContent,\n          position.offsetInNode,\n        )\n      : position.offsetInNode;\n  }\n\n  /**\n   * @param count first-XXX nesting identifier\n   */\n  maybePeelOff(\n    position: Vtree.NodeContext,\n    count: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      position.firstPseudo &&\n      position.inline &&\n      !position.after &&\n      position.firstPseudo.count == 0\n    ) {\n      // first char\n      if (position.viewNode.nodeType != 1) {\n        const text = position.viewNode.textContent;\n        const r = text.match(Base.firstLetterPattern);\n        let firstLetterLength = r ? r[0].length : 0;\n        if (\n          !r &&\n          position.sourceNode instanceof Text &&\n          position.sourceNode.nextSibling instanceof Text &&\n          text === position.sourceNode.textContent\n        ) {\n          // The text '“Foo' may be split to '“' and 'Foo'\n          const text2 = text + position.sourceNode.nextSibling.textContent;\n          const r2 = text2.match(Base.firstLetterPattern);\n          if (r2) {\n            const firstLetterText = r2[0];\n            firstLetterLength = firstLetterText.length;\n            position.sourceNode.textContent = firstLetterText;\n            position.viewNode.textContent = firstLetterText;\n            position.sourceNode.nextSibling.textContent =\n              text2.substr(firstLetterLength);\n          }\n        }\n        return this.layoutContext.peelOff(position, firstLetterLength);\n      }\n    }\n    return Task.newResult(position) as Task.Result<Vtree.NodeContext>;\n  }\n\n  /**\n   * Builds the view until a CSS box edge is reached.\n   * @param position start source position.\n   * @param checkPoints array to append possible breaking points.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildViewToNextBlockEdge(\n    position: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    let violateConstraint = false;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildViewToNextBlockEdge\",\n    );\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (position.viewNode && !LayoutHelper.isSpecialNodeContext(position)) {\n          checkPoints.push(position.copy());\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            position = position1;\n            if (!LayoutHelper.isSpecialNodeContext(position)) {\n              checkPoints.push(position.copy());\n            }\n          }\n          this.nextInTree(position).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (\n              violateConstraint ||\n              !this.layoutConstraint.allowLayout(position)\n            ) {\n              violateConstraint = true;\n              position = position.modify();\n              position.overflow = true;\n            }\n            if (this.isFloatNodeContext(position) && !this.vertical) {\n              this.layoutFloatOrFootnote(position).then((positionParam) => {\n                position = positionParam as Vtree.NodeContext;\n                if (this.pageFloatLayoutContext.isInvalidated()) {\n                  position = null;\n                }\n                if (!position) {\n                  bodyFrame.breakLoop();\n                  return;\n                }\n                bodyFrame.continueLoop();\n              });\n            } else if (!position.inline) {\n              // Exit the loop\n              bodyFrame.breakLoop();\n            } else {\n              // Continue the loop\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const cont = this.layoutContext.nextInTree(position, atUnforcedBreak);\n    return processAfterIfContinues(cont, this);\n  }\n\n  /**\n   * Builds the view for a single unbreakable element.\n   * @param position start source position.\n   * @return holding box edge position reached or null if the source is exhausted.\n   */\n  buildDeepElementView(\n    position: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!position.viewNode) {\n      return Task.newResult(position);\n    }\n    let checkPoints: Vtree.NodeContext[] = [];\n    const sourceNode = position.sourceNode;\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"buildDeepElementView\",\n    );\n\n    // TODO: end the loop based on depth, not sourceNode comparison\n    frame\n      .loopWithFrame((bodyFrame) => {\n        if (\n          position.viewNode &&\n          position.inline &&\n          !LayoutHelper.isSpecialNodeContext(position)\n        ) {\n          checkPoints.push(position.copy());\n        } else {\n          if (checkPoints.length > 0) {\n            this.postLayoutBlock(position, checkPoints);\n          }\n          checkPoints = [];\n        }\n        this.maybePeelOff(position, 0).then((position1Param) => {\n          const position1 = position1Param as Vtree.NodeContext;\n          if (position1 !== position) {\n            let p = position1;\n            while (p && p.sourceNode != sourceNode) {\n              p = p.parent;\n            }\n            if (p == null) {\n              // outside of the subtree\n              position = position1;\n              bodyFrame.breakLoop();\n              return;\n            }\n            if (!LayoutHelper.isSpecialNodeContext(position1)) {\n              checkPoints.push(position1.copy());\n            }\n          }\n          this.nextInTree(position1).then((positionParam) => {\n            position = positionParam as Vtree.NodeContext;\n            if (!position || position.sourceNode == sourceNode) {\n              bodyFrame.breakLoop();\n            } else if (!this.layoutConstraint.allowLayout(position)) {\n              position = position.modify();\n              position.overflow = true;\n              if (this.stopAtOverflow) {\n                bodyFrame.breakLoop();\n              } else {\n                bodyFrame.continueLoop();\n              }\n            } else {\n              bodyFrame.continueLoop();\n            }\n          });\n        });\n      })\n      .then(() => {\n        if (checkPoints.length > 0) {\n          this.postLayoutBlock(position, checkPoints);\n        }\n        frame.finish(position);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Create a single floating element (for exclusion areas).\n   * @param ref container's child to insert float before (can be null).\n   * @param side float side (\"left\" or \"right\").\n   * @param width float inline dimension.\n   * @param height float box progression dimension.\n   * @return newly created float element.\n   */\n  createFloat(ref: Node, side: string, width: number, height: number): Element {\n    const div = this.viewDocument.createElement(\"div\");\n    if (this.vertical) {\n      if (height >= this.height) {\n        height -= 0.1;\n      }\n      Base.setCSSProperty(div, \"height\", `${width}px`);\n      Base.setCSSProperty(div, \"width\", `${height}px`);\n    } else {\n      if (width >= this.width) {\n        width -= 0.1;\n      }\n      Base.setCSSProperty(div, \"width\", `${width}px`);\n      Base.setCSSProperty(div, \"height\", `${height}px`);\n    }\n    Base.setCSSProperty(div, \"float\", side);\n    Base.setCSSProperty(div, \"clear\", side);\n\n    // enable to visualize\n    // Base.setCSSProperty(div, \"background-color\", \"#50F0FF\");\n    this.element.insertBefore(div, ref);\n    return div;\n  }\n\n  /**\n   * Remove all the exclusion floats.\n   */\n  killFloats(): void {\n    let c: Node = this.element.firstChild;\n    while (c) {\n      const nc = c.nextSibling;\n      if (c.nodeType == 1) {\n        const e = c as HTMLElement;\n        const f = e.style.cssFloat;\n        if (f == \"left\" || f == \"right\") {\n          this.element.removeChild(e);\n        } else {\n          break;\n        }\n      }\n      c = nc;\n    }\n  }\n\n  /**\n   * Create exclusion floats for a column.\n   */\n  createFloats(): void {\n    const ref = this.element.firstChild;\n    const bands = this.bands;\n    const x1 = this.vertical ? this.getTopEdge() : this.getLeftEdge();\n    const x2 = this.vertical ? this.getBottomEdge() : this.getRightEdge();\n    for (const band of bands) {\n      const height = band.y2 - band.y1;\n      band.left = this.createFloat(ref, \"left\", band.x1 - x1, height);\n      band.right = this.createFloat(ref, \"right\", x2 - band.x2, height);\n    }\n  }\n\n  /**\n   * @param nodeContext position after the block\n   * @param checkPoints array of possible breaking points.\n   * @param index index of the breaking point\n   * @param boxOffset box offset\n   * @return edge position\n   */\n  calculateEdge(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n    index: number,\n    boxOffset: number,\n  ): number {\n    let edge: number;\n    if (nodeContext && LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return NaN;\n    } else if (nodeContext && nodeContext.after && !nodeContext.inline) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n    }\n    nodeContext = checkPoints[index];\n    let offset = boxOffset - nodeContext.boxOffset;\n    while (true) {\n      edge = LayoutHelper.calculateEdge(\n        nodeContext,\n        this.clientLayout,\n        offset,\n        this.vertical,\n      );\n      if (!isNaN(edge)) {\n        return edge;\n      }\n      if (offset > 0) {\n        offset--;\n        continue;\n      }\n      index--;\n      if (index < 0) {\n        return this.beforeEdge;\n      }\n      nodeContext = checkPoints[index];\n      if (nodeContext.viewNode.nodeType != 1) {\n        offset = nodeContext.viewNode.textContent.length;\n      }\n    }\n  }\n\n  /**\n   * Parse CSS computed length (in pixels)\n   * @param val CSS length in \"px\" units or a number.\n   * @return value in pixels or 0 if not parsable\n   */\n  parseComputedLength(val: string | number): number {\n    if (typeof val == \"number\") {\n      return val;\n    }\n    const r = val.match(/^(-?[0-9]*(\\.[0-9]*)?)px$/);\n    if (r) {\n      return parseFloat(r[0]);\n    }\n    return 0;\n  }\n\n  /**\n   * Reads element's computed CSS margin.\n   */\n  getComputedMargin(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left = this.parseComputedLength(style.marginLeft);\n      insets.top = this.parseComputedLength(style.marginTop);\n      insets.right = this.parseComputedLength(style.marginRight);\n      insets.bottom = this.parseComputedLength(style.marginBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed padding + borders.\n   */\n  getComputedPaddingBorder(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      insets.left =\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Reads element's computed CSS insets(margins + border + padding or margins :\n   * depends on box-sizing)\n   */\n  getComputedInsets(element: Element): GeometryUtil.Insets {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    const insets = new GeometryUtil.Insets(0, 0, 0, 0);\n    if (style) {\n      if (style.boxSizing == \"border-box\") {\n        return this.getComputedMargin(element);\n      }\n      insets.left =\n        this.parseComputedLength(style.marginLeft) +\n        this.parseComputedLength(style.borderLeftWidth) +\n        this.parseComputedLength(style.paddingLeft);\n      insets.top =\n        this.parseComputedLength(style.marginTop) +\n        this.parseComputedLength(style.borderTopWidth) +\n        this.parseComputedLength(style.paddingTop);\n      insets.right =\n        this.parseComputedLength(style.marginRight) +\n        this.parseComputedLength(style.borderRightWidth) +\n        this.parseComputedLength(style.paddingRight);\n      insets.bottom =\n        this.parseComputedLength(style.marginBottom) +\n        this.parseComputedLength(style.borderBottomWidth) +\n        this.parseComputedLength(style.paddingBottom);\n    }\n    return insets;\n  }\n\n  /**\n   * Set element's computed CSS insets to Column Container\n   */\n  setComputedInsets(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.marginLeft = this.parseComputedLength(style.marginLeft);\n      container.borderLeft = this.parseComputedLength(style.borderLeftWidth);\n      container.paddingLeft = this.parseComputedLength(style.paddingLeft);\n      container.marginTop = this.parseComputedLength(style.marginTop);\n      container.borderTop = this.parseComputedLength(style.borderTopWidth);\n      container.paddingTop = this.parseComputedLength(style.paddingTop);\n      container.marginRight = this.parseComputedLength(style.marginRight);\n      container.borderRight = this.parseComputedLength(style.borderRightWidth);\n      container.paddingRight = this.parseComputedLength(style.paddingRight);\n      container.marginBottom = this.parseComputedLength(style.marginBottom);\n      container.borderBottom = this.parseComputedLength(\n        style.borderBottomWidth,\n      );\n      container.paddingBottom = this.parseComputedLength(style.paddingBottom);\n    }\n  }\n\n  /**\n   * Set element's computed width and height to Column Container\n   */\n  setComputedWidthAndHeight(element: Element, container: Column) {\n    const style = this.clientLayout.getElementComputedStyle(element);\n    if (style) {\n      container.width = this.parseComputedLength(style.width);\n      container.height = this.parseComputedLength(style.height);\n    }\n  }\n\n  /**\n   * Layout a single unbreakable element.\n   */\n  layoutUnbreakable(\n    nodeContextIn: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.buildDeepElementView(nodeContextIn);\n  }\n\n  /**\n   * Layout a single float element.\n   */\n  layoutFloat(nodeContext: Vtree.NodeContext): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutFloat\");\n    const element = nodeContext.viewNode as Element;\n    const floatSide = PageFloats.resolveInlineFloatDirection(\n      nodeContext.floatSide,\n      nodeContext.vertical,\n      nodeContext.direction,\n    );\n    Base.setCSSProperty(element, \"float\", \"none\");\n    Base.setCSSProperty(element, \"display\", \"inline-block\");\n    Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    this.buildDeepElementView(nodeContext).then((nodeContextAfter) => {\n      const floatBBox = this.clientLayout.getElementClientRect(element);\n      const margin = this.getComputedMargin(element);\n      let floatBox = new GeometryUtil.Rect(\n        floatBBox.left - margin.left,\n        floatBBox.top - margin.top,\n        floatBBox.right + margin.right,\n        floatBBox.bottom + margin.bottom,\n      );\n      let x1 = this.startEdge;\n      let x2 = this.endEdge;\n      let parent = nodeContext.parent;\n      while (parent && parent.inline) {\n        parent = parent.parent;\n      }\n      if (parent) {\n        // Position it at the parent element's edge.\n        // We need to get the edge of the parent's content area, calling\n        // getElementClientRect will also give us borders. Avoid it by creating\n        // a temporary element and using it for measurment.\n        const probe = parent.viewNode.ownerDocument.createElement(\"div\");\n        probe.style.left = \"0px\";\n        probe.style.top = \"0px\";\n        if (this.vertical) {\n          probe.style.bottom = \"0px\";\n          probe.style.width = \"1px\";\n        } else {\n          probe.style.right = \"0px\";\n          probe.style.height = \"1px\";\n        }\n        parent.viewNode.appendChild(probe);\n        const parentBox = this.clientLayout.getElementClientRect(probe);\n        x1 = Math.max(this.getStartEdge(parentBox), x1);\n        x2 = Math.min(this.getEndEdge(parentBox), x2);\n        parent.viewNode.removeChild(probe);\n        const floatBoxMeasure = this.vertical\n          ? floatBox.y2 - floatBox.y1\n          : floatBox.x2 - floatBox.x1;\n        if (floatSide == \"left\") {\n          x2 = Math.max(x2, x1 + floatBoxMeasure);\n        } else {\n          x1 = Math.min(x1, x2 - floatBoxMeasure);\n        }\n\n        // Move the float below the block parent.\n        // Otherwise, if the float is attached to an inline box with 'position:\n        // relative', the absolute positioning of the float gets broken, since\n        // the inline parent can be pushed horizontally by exclusion floats\n        // after the layout of the float is done.\n        if (!nodeContext.firstPseudo) {\n          // Unless float is specified on ::first-letter (Fix for issue #923)\n          parent.viewNode.appendChild(nodeContext.viewNode);\n        }\n      }\n\n      // box is rotated for vertical orientation\n      let box = new GeometryUtil.Rect(\n        x1,\n        this.getBoxDir() * this.beforeEdge,\n        x2,\n        this.getBoxDir() * this.afterEdge,\n      );\n      let floatHorBox = floatBox;\n      if (this.vertical) {\n        floatHorBox = GeometryUtil.rotateBox(floatBox);\n      }\n      const dir = this.getBoxDir();\n      if (floatHorBox.y1 < this.bottommostFloatTop * dir) {\n        const boxExtent = floatHorBox.y2 - floatHorBox.y1;\n        floatHorBox.y1 = this.bottommostFloatTop * dir;\n        floatHorBox.y2 = floatHorBox.y1 + boxExtent;\n      }\n      GeometryUtil.positionFloat(box, this.bands, floatHorBox, floatSide);\n      if (this.vertical) {\n        floatBox = GeometryUtil.unrotateBox(floatHorBox);\n      }\n      const insets = this.getComputedInsets(element);\n      Base.setCSSProperty(\n        element,\n        \"width\",\n        `${floatBox.x2 - floatBox.x1 - insets.left - insets.right}px`,\n      );\n      Base.setCSSProperty(\n        element,\n        \"height\",\n        `${floatBox.y2 - floatBox.y1 - insets.top - insets.bottom}px`,\n      );\n      Base.setCSSProperty(element, \"position\", \"absolute\");\n      Asserts.assert(nodeContext.display);\n      Base.setCSSProperty(element, \"display\", nodeContext.display);\n      let offsets;\n      let containingBlockForAbsolute: Vtree.NodeContext = null;\n      if (parent) {\n        if (parent.containingBlockForAbsolute) {\n          containingBlockForAbsolute = parent;\n        } else {\n          containingBlockForAbsolute = parent.getContainingBlockForAbsolute();\n        }\n      }\n      if (containingBlockForAbsolute) {\n        const probe =\n          containingBlockForAbsolute.viewNode.ownerDocument.createElement(\n            \"div\",\n          );\n        probe.style.position = \"absolute\";\n        if (containingBlockForAbsolute.vertical) {\n          probe.style.right = \"0\";\n        } else {\n          probe.style.left = \"0\";\n        }\n        probe.style.top = \"0\";\n        containingBlockForAbsolute.viewNode.appendChild(probe);\n        offsets = this.clientLayout.getElementClientRect(probe);\n        containingBlockForAbsolute.viewNode.removeChild(probe);\n      } else {\n        offsets = {\n          left: this.getLeftEdge() - this.paddingLeft,\n          right: this.getRightEdge() + this.paddingRight,\n          top: this.getTopEdge() - this.paddingTop,\n        };\n      }\n      if (\n        containingBlockForAbsolute\n          ? containingBlockForAbsolute.vertical\n          : this.vertical\n      ) {\n        Base.setCSSProperty(\n          element,\n          \"right\",\n          `${offsets.right - floatBox.x2}px`,\n        );\n      } else {\n        Base.setCSSProperty(element, \"left\", `${floatBox.x1 - offsets.left}px`);\n      }\n      Base.setCSSProperty(element, \"top\", `${floatBox.y1 - offsets.top}px`);\n      if (nodeContext.clearSpacer) {\n        nodeContext.clearSpacer.parentNode.removeChild(nodeContext.clearSpacer);\n        nodeContext.clearSpacer = null;\n      }\n      const floatBoxEdge = this.vertical ? floatBox.x1 : floatBox.y2;\n      const floatBoxTop = this.vertical ? floatBox.x2 : floatBox.y1;\n\n      // TODO: subtract after margin when determining overflow.\n      if (!this.isOverflown(floatBoxEdge) || this.breakPositions.length == 0) {\n        // no overflow\n        this.killFloats();\n        box = new GeometryUtil.Rect(\n          this.getLeftEdge(),\n          this.getTopEdge(),\n          this.getRightEdge(),\n          this.getBottomEdge(),\n        );\n        if (this.vertical) {\n          box = GeometryUtil.rotateBox(box);\n        }\n        GeometryUtil.addFloatToBands(\n          box,\n          this.bands,\n          floatHorBox,\n          null,\n          floatSide,\n        );\n        this.createFloats();\n        if (floatSide == \"left\") {\n          this.leftFloatEdge = floatBoxEdge;\n        } else {\n          this.rightFloatEdge = floatBoxEdge;\n        }\n        this.bottommostFloatTop = floatBoxTop;\n        this.updateMaxReachedAfterEdge(floatBoxEdge);\n        frame.finish(nodeContextAfter);\n      } else {\n        nodeContext = nodeContext.modify();\n        nodeContext.overflow = true;\n        frame.finish(nodeContext);\n      }\n    });\n    return frame.result();\n  }\n\n  setupFloatArea(\n    area: PageFloatArea,\n    floatReference: PageFloats.FloatReference,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): boolean {\n    const floatLayoutContext = this.pageFloatLayoutContext;\n    const floatContainer = floatLayoutContext.getContainer(floatReference);\n    const element = area.element;\n    floatContainer.element.parentNode.appendChild(element);\n    area.isFloat = true;\n    area.originX = floatContainer.originX;\n    area.originY = floatContainer.originY;\n    area.vertical = floatContainer.vertical;\n    area.marginLeft = area.marginRight = area.marginTop = area.marginBottom = 0;\n    area.borderLeft = area.borderRight = area.borderTop = area.borderBottom = 0;\n    area.paddingLeft =\n      area.paddingRight =\n      area.paddingTop =\n      area.paddingBottom =\n        0;\n    area.exclusions = (floatContainer.exclusions || []).concat();\n    area.forceNonfitting = !floatLayoutContext.hasFloatFragments();\n    area.innerShape = null;\n    const containingBlockRect = floatContainer.getPaddingRect();\n    area.setHorizontalPosition(\n      containingBlockRect.x1 - floatContainer.originX,\n      containingBlockRect.x2 - containingBlockRect.x1,\n    );\n    area.setVerticalPosition(\n      containingBlockRect.y1 - floatContainer.originY,\n      containingBlockRect.y2 - containingBlockRect.y1,\n    );\n    strategy.adjustPageFloatArea(area, floatContainer, this);\n\n    // Calculate bands from the exclusions before setting float area dimensions\n    area.init();\n    const fitWithinContainer = !!floatLayoutContext.setFloatAreaDimensions(\n      area,\n      floatReference,\n      floatSide,\n      anchorEdge,\n      true,\n      !floatLayoutContext.hasFloatFragments(),\n      condition,\n    );\n    if (fitWithinContainer) {\n      // New dimensions have been set, remove exclusion floats and re-init\n      area.killFloats();\n      area.init();\n    } else {\n      floatContainer.element.parentNode.removeChild(element);\n    }\n    return fitWithinContainer;\n  }\n\n  createPageFloatArea(\n    float: PageFloats.PageFloat | null,\n    floatSide: string,\n    anchorEdge: number | null,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    condition: PageFloats.PageFloatPlacementCondition,\n  ): PageFloatArea | null {\n    const floatAreaElement = this.element.ownerDocument.createElement(\"div\");\n    Base.setCSSProperty(floatAreaElement, \"position\", \"absolute\");\n    const parentPageFloatLayoutContext =\n      this.pageFloatLayoutContext.getPageFloatLayoutContext(\n        float.floatReference,\n      );\n\n    // TODO: establish how to specify an appropriate generating element for the\n    // new page float layout context\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      this.pageFloatLayoutContext.flowName,\n      float.nodePosition,\n      null,\n      null,\n    );\n    const parentContainer = parentPageFloatLayoutContext.getContainer();\n    const floatArea = new PageFloatArea(\n      floatSide,\n      floatAreaElement,\n      this.layoutContext.clone(),\n      this.clientLayout,\n      this.layoutConstraint,\n      pageFloatLayoutContext,\n      parentContainer,\n    );\n    pageFloatLayoutContext.setContainer(floatArea);\n    if (\n      this.setupFloatArea(\n        floatArea,\n        float.floatReference,\n        floatSide,\n        anchorEdge,\n        strategy,\n        condition,\n      )\n    ) {\n      return floatArea;\n    } else {\n      return null;\n    }\n  }\n\n  layoutSinglePageFloatFragment(\n    continuations: PageFloats.PageFloatContinuation[],\n    floatSide: string,\n    clearSide: string | null,\n    allowFragmented: boolean,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment | null,\n  ): Task.Result<SinglePageFloatLayoutResult> {\n    const context = this.pageFloatLayoutContext;\n    const originalContinuations = pageFloatFragment\n      ? pageFloatFragment.continuations\n      : [];\n    continuations = originalContinuations.concat(continuations);\n    const firstFloat = continuations[0].float;\n    const condition = context.getPageFloatPlacementCondition(\n      firstFloat,\n      floatSide,\n      clearSide,\n    );\n    const floatArea = this.createPageFloatArea(\n      firstFloat,\n      floatSide,\n      anchorEdge,\n      strategy,\n      condition,\n    );\n    const result: SinglePageFloatLayoutResult = {\n      floatArea,\n      pageFloatFragment: null,\n      newPosition: null,\n    };\n    if (!floatArea) {\n      return Task.newResult(result);\n    }\n    const frame = Task.newFrame<SinglePageFloatLayoutResult>(\n      \"layoutSinglePageFloatFragment\",\n    );\n    let failed = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= continuations.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const c = continuations[i];\n        const floatChunkPosition = new VtreeImpl.ChunkPosition(c.nodePosition);\n        floatArea.layout(floatChunkPosition, true).then((newPosition) => {\n          result.newPosition = newPosition;\n          if (!newPosition || allowFragmented) {\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (!failed) {\n          Asserts.assert(floatArea);\n          const logicalFloatSide = context.setFloatAreaDimensions(\n            floatArea,\n            firstFloat.floatReference,\n            floatSide,\n            anchorEdge,\n            false,\n            allowFragmented,\n            condition,\n          );\n          if (!logicalFloatSide) {\n            failed = true;\n          } else {\n            const newFragment = strategy.createPageFloatFragment(\n              continuations,\n              logicalFloatSide,\n              floatArea,\n              !!result.newPosition,\n            );\n            context.addPageFloatFragment(newFragment, true);\n            result.pageFloatFragment = newFragment;\n          }\n        }\n        frame.finish(result);\n      });\n    return frame.result();\n  }\n\n  layoutPageFloatInner(\n    continuation: PageFloats.PageFloatContinuation,\n    strategy: PageFloats.PageFloatLayoutStrategy,\n    anchorEdge: number | null,\n    pageFloatFragment?: PageFloats.PageFloatFragment,\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const float = continuation.float;\n    context.stashEndFloatFragments(float);\n\n    function cancelLayout(floatArea, pageFloatFragment) {\n      if (pageFloatFragment) {\n        context.removePageFloatFragment(pageFloatFragment, true);\n      } else if (floatArea) {\n        floatArea.element.parentNode.removeChild(floatArea.element);\n      }\n      context.restoreStashedFragments(float.floatReference);\n      context.deferPageFloat(continuation);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutPageFloatInner\");\n    this.layoutSinglePageFloatFragment(\n      [continuation],\n      float.floatSide,\n      float.clearSide,\n      !context.hasFloatFragments(),\n      strategy,\n      anchorEdge,\n      pageFloatFragment,\n    ).then((result) => {\n      const floatArea = result.floatArea;\n      const newFragment = result.pageFloatFragment;\n      const newPosition = result.newPosition;\n      if (newFragment) {\n        this.layoutStashedPageFloats(float.floatReference, [\n          pageFloatFragment,\n        ]).then((success) => {\n          if (success) {\n            // Add again to invalidate the context\n            Asserts.assert(newFragment);\n            context.addPageFloatFragment(newFragment);\n            context.discardStashedFragments(float.floatReference);\n            if (newPosition) {\n              const continuation = new PageFloats.PageFloatContinuation(\n                float,\n                newPosition.primary,\n              );\n              context.deferPageFloat(continuation);\n            }\n            frame.finish(true);\n          } else {\n            cancelLayout(floatArea, newFragment);\n            frame.finish(false);\n          }\n        });\n      } else {\n        cancelLayout(floatArea, newFragment);\n        frame.finish(false);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * @returns Represents if the layout was succeeded or not\n   */\n  private layoutStashedPageFloats(\n    floatReference: PageFloats.FloatReference,\n    excluded: PageFloats.PageFloatFragment[],\n  ): Task.Result<boolean> {\n    const context = this.pageFloatLayoutContext;\n    const stashedFloatFragments =\n      context.getStashedFloatFragments(floatReference);\n    const newFloatAreas = [];\n    const newFragments = [];\n    let failed = false;\n    const frame = Task.newFrame<boolean>(\"layoutStashedPageFloats\");\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i >= stashedFloatFragments.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const stashedFragment = stashedFloatFragments[i];\n        if (excluded.includes(stashedFragment)) {\n          i++;\n          loopFrame.continueLoop();\n          return;\n        }\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(\n            stashedFragment.continuations[0].float,\n          );\n\n        // Value of 'clear' is irrelevant when laying out stashed floats\n        // since whether the 'clear' value allows placing the float\n        // here is already resolved.\n        this.layoutSinglePageFloatFragment(\n          stashedFragment.continuations,\n          stashedFragment.floatSide,\n          null,\n          false,\n          strategy,\n          null,\n        ).then((result) => {\n          const floatArea = result.floatArea;\n          if (floatArea) {\n            newFloatAreas.push(floatArea);\n          }\n          const fragment = result.pageFloatFragment;\n          if (fragment) {\n            newFragments.push(fragment);\n            i++;\n            loopFrame.continueLoop();\n          } else {\n            failed = true;\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        if (failed) {\n          newFragments.forEach((fragment) => {\n            context.removePageFloatFragment(fragment, true);\n          });\n          newFloatAreas.forEach((area) => {\n            const elem = area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        } else {\n          stashedFloatFragments.forEach((fragment) => {\n            const elem = fragment.area.element;\n            if (elem && elem.parentNode) {\n              elem.parentNode.removeChild(elem);\n            }\n          });\n        }\n        frame.finish(!failed);\n      });\n    return frame.result();\n  }\n\n  setFloatAnchorViewNode(nodeContext: Vtree.NodeContext): Vtree.NodeContext {\n    const parent = nodeContext.viewNode.parentNode;\n    const anchor = parent.ownerDocument.createElement(\"span\");\n    anchor.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    if (nodeContext.floatSide === \"footnote\") {\n      // Defaults for footnote-call, can be overriden by the stylesheet.\n      this.layoutContext.applyPseudoelementStyle(\n        nodeContext,\n        \"footnote-call\",\n        anchor,\n      );\n    }\n    parent.appendChild(anchor);\n    parent.removeChild(nodeContext.viewNode);\n    const nodeContextAfter = nodeContext.modify();\n    nodeContextAfter.after = true;\n    nodeContextAfter.viewNode = anchor;\n    return nodeContextAfter;\n  }\n\n  resolveFloatReferenceFromColumnSpan(\n    floatReference: PageFloats.FloatReference,\n    columnSpan: Css.Val,\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<PageFloats.FloatReference> {\n    const frame = Task.newFrame(\n      \"resolveFloatReferenceFromColumnSpan\",\n    ) as Task.Frame<PageFloats.FloatReference>;\n    const columnContext = this.pageFloatLayoutContext;\n    const regionContext = columnContext.getPageFloatLayoutContext(\n      PageFloats.FloatReference.REGION,\n    );\n    const isRegionWider =\n      columnContext.getContainer().width < regionContext.getContainer().width;\n    if (isRegionWider && floatReference === PageFloats.FloatReference.COLUMN) {\n      if (columnSpan === Css.ident.auto) {\n        this.buildDeepElementView(nodeContext.copy()).then((position) => {\n          const element = position.viewNode as Element;\n          let inlineSize = Sizing.getSize(this.clientLayout, element, [\n            Sizing.Size.MIN_CONTENT_INLINE_SIZE,\n          ])[Sizing.Size.MIN_CONTENT_INLINE_SIZE];\n          const margin = this.getComputedMargin(element);\n          if (this.vertical) {\n            inlineSize += margin.top + margin.bottom;\n          } else {\n            inlineSize += margin.left + margin.right;\n          }\n          if (inlineSize > this.width) {\n            frame.finish(PageFloats.FloatReference.REGION);\n          } else {\n            frame.finish(floatReference);\n          }\n        });\n      } else if (columnSpan === Css.ident.all) {\n        frame.finish(PageFloats.FloatReference.REGION);\n      } else {\n        frame.finish(floatReference);\n      }\n    } else {\n      frame.finish(floatReference);\n    }\n    return frame.result();\n  }\n\n  layoutPageFloat(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const context = this.pageFloatLayoutContext;\n    const strategy =\n      new PageFloats.PageFloatLayoutStrategyResolver().findByNodeContext(\n        nodeContext,\n      );\n    let cont: Task.Result<PageFloats.PageFloat>;\n    const float = context.findPageFloatByNodePosition(\n      nodeContext.toNodePosition(),\n    );\n    if (!float) {\n      cont = strategy.createPageFloat(nodeContext, context, this);\n    } else {\n      cont = Task.newResult(float);\n    }\n    return cont.thenAsync((float) => {\n      const nodePosition = VtreeImpl.newNodePositionFromNodeContext(\n        nodeContext,\n        0,\n      );\n      const nodeContextAfter = this.setFloatAnchorViewNode(nodeContext);\n      const pageFloatFragment = strategy.findPageFloatFragment(float, context);\n      const continuation = new PageFloats.PageFloatContinuation(\n        float,\n        nodePosition,\n      );\n      if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (\n        context.isForbidden(float) ||\n        context.hasPrecedingFloatsDeferredToNext(float)\n      ) {\n        context.deferPageFloat(continuation);\n        context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n        return Task.newResult(nodeContextAfter as Vtree.NodeContext);\n      } else if (this.nodeContextOverflowingDueToRepetitiveElements) {\n        return Task.newResult(null);\n      } else {\n        const edge = LayoutHelper.calculateEdge(\n          nodeContextAfter,\n          this.clientLayout,\n          0,\n          this.vertical,\n        );\n        if (this.isOverflown(edge)) {\n          return Task.newResult(nodeContextAfter);\n        } else {\n          return this.layoutPageFloatInner(\n            continuation,\n            strategy,\n            edge,\n            pageFloatFragment,\n          ).thenAsync((success) => {\n            Asserts.assert(float);\n            if (!success) {\n              context.registerPageFloatAnchor(float, nodeContextAfter.viewNode);\n              return Task.newResult(nodeContextAfter);\n            } else {\n              return Task.newResult(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  createJustificationAdjustmentElement(\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n    vertical: boolean,\n  ): HTMLElement {\n    const span = doc.createElement(\"span\") as HTMLElement;\n    span.style.visibility = \"hidden\";\n    span.style.verticalAlign = \"top\";\n    span.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n    const inner = doc.createElement(\"span\") as HTMLElement;\n    inner.style.fontSize = \"0\";\n    inner.style.lineHeight = \"0\";\n    inner.textContent = \" #\";\n    span.appendChild(inner);\n\n    // Measure inline-start and inline-end edge positions of the line box,\n    // taking (exclusion) floats into consideration\n    span.style.display = \"block\";\n    span.style.textIndent = \"0\";\n    span.style.textAlign = \"left\";\n    parentNode.insertBefore(span, insertionPoint);\n    const leftPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"right\";\n    const rightPos = this.clientLayout.getElementClientRect(inner);\n    span.style.textAlign = \"\";\n    if (Base.checkInlineBlockJustificationBug(document.body)) {\n      // For Chrome\n      span.style.display = \"inline\";\n    } else {\n      // For Firefox, Edge and IE\n      span.style.display = \"inline-block\";\n    }\n    const padding = vertical\n      ? rightPos.top - leftPos.top\n      : rightPos.left - leftPos.left;\n    const paddingStr = padding >= 1 ? `${padding - 1}px` : \"100%\";\n    if (vertical) {\n      span.style.paddingTop = paddingStr;\n    } else {\n      span.style.paddingLeft = paddingStr;\n    }\n    return span;\n  }\n\n  addAndAdjustJustificationElement(\n    nodeContext: Vtree.NodeContext,\n    insertAfter: boolean,\n    node: Node,\n    insertionPoint: Node,\n    doc: Document,\n    parentNode: Node,\n  ): HTMLElement {\n    fixJustificationOnHyphen(nodeContext, insertAfter, node, insertionPoint);\n    return this.createJustificationAdjustmentElement(\n      insertionPoint,\n      doc,\n      parentNode,\n      nodeContext.vertical,\n    );\n  }\n\n  compensateJustificationLineHeight(\n    span: Element,\n    br: Element,\n    nodeContext: Vtree.NodeContext,\n  ) {\n    const spanRect = this.clientLayout.getElementClientRect(span);\n    const brRect = this.clientLayout.getElementClientRect(br);\n    if (nodeContext.vertical) {\n      (br as HTMLElement).style.marginRight = `${\n        brRect.right - spanRect.right\n      }px`;\n      (br as HTMLElement).style.width = \"0px\";\n    } else {\n      (br as HTMLElement).style.marginTop = `${spanRect.top - brRect.top}px`;\n      (br as HTMLElement).style.height = \"0px\";\n    }\n    br.setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n  }\n\n  /**\n   * Fix justification of the last line of text broken across pages (if\n   * needed).\n   */\n  fixJustificationIfNeeded(\n    nodeContext: Vtree.NodeContext,\n    endOfColumn: boolean,\n  ): void {\n    if (nodeContext.after && !nodeContext.inline) {\n      return;\n    }\n    if (endOfColumn) {\n      const parentElem = nodeContext.parent?.viewNode as Element;\n      const textAlign =\n        parentElem &&\n        this.clientLayout.getElementComputedStyle(parentElem).textAlign;\n      if (textAlign !== \"justify\") {\n        return;\n      }\n    }\n    let node = nodeContext.viewNode;\n    if (node.parentElement?.localName === \"viv-ts-inner\") {\n      // special element for text-spacing\n      node = node.parentElement.parentElement;\n    }\n    const doc = node.ownerDocument;\n    const insertAfter =\n      endOfColumn && (nodeContext.after || node.nodeType != 1);\n    let insertionPoint = insertAfter ? node.nextSibling : node;\n    if (insertionPoint && !insertionPoint.parentNode) {\n      // Possible if removeSelf = false in finishBreak()\n      insertionPoint = null;\n    }\n    const parentNode =\n      node.parentNode || (nodeContext.parent && nodeContext.parent.viewNode);\n    if (!parentNode) {\n      // Possible if nothing was added to the column\n      return;\n    }\n    const span = this.addAndAdjustJustificationElement(\n      nodeContext,\n      insertAfter,\n      node,\n      insertionPoint,\n      doc,\n      parentNode,\n    );\n    if (!endOfColumn) {\n      const br = doc.createElement(\"div\") as HTMLElement;\n      parentNode.insertBefore(br, insertionPoint);\n      this.compensateJustificationLineHeight(span, br, nodeContext);\n    }\n  }\n\n  processLineStyling(\n    nodeContext: Vtree.NodeContext,\n    resNodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> =\n      Task.newFrame(\"processLineStyling\");\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n    let lastCheckPoints = checkPoints.concat([]); // make a copy\n    checkPoints.splice(0, checkPoints.length); // make empty\n    let totalLineCount = 0;\n    let firstPseudo = nodeContext.firstPseudo; // :first-letter is not processed here\n    if (firstPseudo.count == 0) {\n      firstPseudo = firstPseudo.outer; // move to line pseudoelement (if any)\n    }\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!firstPseudo) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const linePositions = this.findLinePositions(lastCheckPoints);\n        const count = firstPseudo.count - totalLineCount;\n        if (linePositions.length <= count) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const lineBreak = this.findAcceptableBreakInside(\n          lastCheckPoints,\n          linePositions[count - 1],\n          true,\n        );\n        if (lineBreak == null) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.finishBreak(lineBreak, false, false).then(() => {\n          totalLineCount += count;\n          this.layoutContext\n            .peelOff(lineBreak, 0)\n            .then((resNodeContextParam) => {\n              nodeContext = resNodeContextParam;\n              this.fixJustificationIfNeeded(nodeContext, false);\n              firstPseudo = nodeContext.firstPseudo;\n              lastCheckPoints = []; // Wipe out line breaks inside pseudoelements\n              this.buildViewToNextBlockEdge(nodeContext, lastCheckPoints).then(\n                (resNodeContextParam) => {\n                  resNodeContext = resNodeContextParam;\n                  loopFrame.continueLoop();\n                },\n              );\n            });\n        });\n      })\n      .then(() => {\n        Array.prototype.push.apply(checkPoints, lastCheckPoints);\n        if (VIVLIOSTYLE_DEBUG) {\n          validateCheckPoints(checkPoints);\n        }\n        frame.finish(resNodeContext);\n      });\n    return frame.result();\n  }\n\n  isLoneImage(checkPoints: Vtree.NodeContext[]): boolean {\n    if (checkPoints.length != 2 && this.breakPositions.length > 0) {\n      return false;\n    }\n    return (\n      checkPoints[0].sourceNode == checkPoints[1].sourceNode &&\n      mediaTags[(checkPoints[0].sourceNode as Element).localName]\n    );\n  }\n\n  getTrailingMarginEdgeAdjustment(\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): number {\n    // Margins push the computed height, but are not counted as overflow. We\n    // need to find the overall collapsed margin from all enclosed blocks.\n    let maxPos = 0;\n    let minNeg = 0;\n    for (let i = trailingEdgeContexts.length - 1; i >= 0; i--) {\n      const nodeContext = trailingEdgeContexts[i];\n      if (\n        !nodeContext.after ||\n        !nodeContext.viewNode ||\n        nodeContext.viewNode.nodeType != 1\n      ) {\n        break;\n      }\n      const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n      const m = this.vertical ? -margin.left : margin.bottom;\n      if (m > 0) {\n        maxPos = Math.max(maxPos, m);\n      } else {\n        minNeg = Math.min(minNeg, m);\n      }\n    }\n    return maxPos + minNeg;\n  }\n\n  /**\n   * Layout a single CSS box.\n   */\n  layoutBreakableBlock(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"layoutBreakableBlock\",\n    );\n    const checkPoints: Vtree.NodeContext[] = [];\n    this.buildViewToNextBlockEdge(nodeContext, checkPoints).then(\n      (resNodeContext) => {\n        // at this point a single block was appended to the column\n        // flowPosition is either null or\n        //  - if !after: contains view for the next block element\n        //  - if after: contains view for the enclosing block element\n        const checkPointIndex = checkPoints.length - 1;\n        if (checkPointIndex < 0) {\n          frame.finish(resNodeContext);\n          return;\n        }\n\n        // Text-spacing etc. must be done before calculating edge. (Issue #898)\n        this.postLayoutBlock(nodeContext, checkPoints);\n\n        // Record the height\n        // TODO: should this be done after first-line calculation?\n        let edge = this.calculateEdge(\n          resNodeContext,\n          checkPoints,\n          checkPointIndex,\n          checkPoints[checkPointIndex].boxOffset,\n        );\n        let overflown = false;\n        if (\n          !resNodeContext ||\n          !LayoutHelper.isOrphan(resNodeContext.viewNode)\n        ) {\n          const offsets = BreakPosition.calculateOffset(\n            resNodeContext,\n            this.collectElementsOffset(),\n          );\n          overflown = this.isOverflown(\n            edge + (this.vertical ? -1 : 1) * offsets.minimum,\n          );\n          if (\n            this.isOverflown(\n              edge + (this.vertical ? -1 : 1) * offsets.current,\n            ) &&\n            !this.nodeContextOverflowingDueToRepetitiveElements\n          ) {\n            this.nodeContextOverflowingDueToRepetitiveElements = resNodeContext;\n          }\n        }\n        if (resNodeContext == null) {\n          edge += this.getTrailingMarginEdgeAdjustment(checkPoints);\n        }\n        this.updateMaxReachedAfterEdge(edge);\n        let lineCont: Task.Result<Vtree.NodeContext>;\n        if (nodeContext.firstPseudo) {\n          // possibly need to deal with :first-line and friends\n          lineCont = this.processLineStyling(\n            nodeContext,\n            resNodeContext,\n            checkPoints,\n          );\n        } else {\n          lineCont = Task.newResult(resNodeContext);\n        }\n        lineCont.then((nodeContext) => {\n          // Text-spacing etc. must be done before calculating edge. (Issue #898)\n          // this.postLayoutBlock(nodeContext, checkPoints);\n\n          if (checkPoints.length > 0) {\n            this.saveBoxBreakPosition(checkPoints);\n\n            // TODO: how to signal overflow in the last pagargaph???\n            if (overflown && !this.isLoneImage(checkPoints) && nodeContext) {\n              nodeContext = nodeContext.modify();\n              nodeContext.overflow = true;\n            }\n          }\n          frame.finish(nodeContext);\n        });\n      },\n    );\n    return frame.result();\n  }\n\n  postLayoutBlock(\n    nodeContext: Vtree.NodeContext,\n    checkPoints: Vtree.NodeContext[],\n  ) {\n    const hooks: Plugin.PostLayoutBlockHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.POST_LAYOUT_BLOCK,\n    );\n    hooks.forEach((hook) => {\n      hook(nodeContext, checkPoints, this);\n    });\n  }\n\n  findEndOfLine(\n    linePosition: number,\n    checkPoints: Vtree.NodeContext[],\n    isUpdateMaxReachedAfterEdge: boolean,\n  ): {\n    nodeContext: Vtree.NodeContext;\n    index: number;\n    checkPointIndex: number;\n  } {\n    if (VIVLIOSTYLE_DEBUG) {\n      validateCheckPoints(checkPoints);\n    }\n\n    // Workaround for Blink not returning correct fractional values for\n    // Range.getClientRects.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=629828\n    const effectiveLinePosition = this.vertical\n      ? linePosition - 1\n      : linePosition + 1;\n\n    // find the first character which is out\n    let lowCP = 0;\n    let low = checkPoints[0].boxOffset;\n    let low1 = lowCP;\n    let highCP = checkPoints.length - 1;\n    let high = checkPoints[highCP].boxOffset;\n    let mid: number;\n    while (low < high) {\n      mid = low + Math.ceil((high - low) / 2);\n\n      // find the node which contains mid index\n      low1 = lowCP;\n      let high1 = highCP;\n      while (low1 < high1) {\n        const mid1 = low1 + Math.ceil((high1 - low1) / 2);\n        if (checkPoints[mid1].boxOffset > mid) {\n          high1 = mid1 - 1;\n        } else {\n          low1 = mid1;\n        }\n      }\n      const edge = this.calculateEdge(null, checkPoints, low1, mid);\n      if (\n        this.vertical\n          ? edge <= effectiveLinePosition\n          : edge >= effectiveLinePosition\n      ) {\n        high = mid - 1;\n        while (checkPoints[low1].boxOffset == mid) {\n          low1--;\n        }\n        highCP = low1;\n      } else {\n        if (isUpdateMaxReachedAfterEdge) {\n          this.updateMaxReachedAfterEdge(edge);\n        }\n        low = mid;\n        lowCP = low1;\n      }\n    }\n    return {\n      nodeContext: checkPoints[low1],\n      index: low,\n      checkPointIndex: low1,\n    };\n  }\n\n  findAcceptableBreakInside(\n    checkPoints: Vtree.NodeContext[],\n    edgePosition: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    const position = this.findEndOfLine(edgePosition, checkPoints, true);\n    let nodeContext = position.nodeContext;\n    const viewNode = nodeContext.viewNode;\n    if (\n      viewNode.nodeType != 1 &&\n      viewNode.parentElement?.localName !== \"viv-ts-inner\"\n    ) {\n      const textNode = viewNode as Text;\n      const textNodeBreaker = this.resolveTextNodeBreaker(nodeContext);\n      nodeContext = textNodeBreaker.breakTextNode(\n        textNode,\n        nodeContext,\n        position.index,\n        checkPoints,\n        position.checkPointIndex,\n        force,\n      );\n    } else {\n      // Fix for issue #821, #885\n      const p = LayoutHelper.findAncestorSpecialInlineNodeContext(nodeContext);\n      if (p) {\n        nodeContext = p;\n      }\n    }\n    this.clearOverflownViewNodes(nodeContext, false);\n    return nodeContext;\n  }\n\n  resolveTextNodeBreaker(nodeContext: Vtree.NodeContext): TextNodeBreaker {\n    const hooks: Plugin.ResolveTextNodeBreakerHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_TEXT_NODE_BREAKER,\n    );\n    return hooks.reduce(\n      (prev, hook) => hook(nodeContext) || prev,\n      TextNodeBreaker.instance,\n    );\n  }\n\n  /**\n   * Read ranges skipping special elments\n   */\n  getRangeBoxes(start: Node, end: Node): Vtree.ClientRect[] {\n    const arr = [];\n    const range = start.ownerDocument.createRange();\n    let wentUp = false;\n    let node = start;\n    let lastGood: Node = null;\n    let haveStart = false;\n    let endNotReached = true;\n    while (endNotReached) {\n      let seekRange = true;\n      do {\n        let next: Node = null;\n        if (node == end) {\n          if (end.nodeType === 1) {\n            // If end is an element, continue traversing its children to find\n            // the last text node inside it. Finish when end has no child or\n            // when came back from its children (wentUp==true).\n            endNotReached = !(!end.firstChild || wentUp);\n          } else {\n            endNotReached = false;\n          }\n        }\n        if (node.nodeType != 1) {\n          if (!haveStart) {\n            if (node.parentNode == null) {\n              endNotReached = false;\n            } else {\n              range.setStartBefore(node);\n              haveStart = true;\n            }\n          }\n          lastGood = node;\n        } else if (wentUp) {\n          wentUp = false;\n        } else if (LayoutHelper.isSpecial(node as Element)) {\n          // Skip special\n          seekRange = !haveStart;\n        } else if (\n          /^r(uby|[bt]c?)$/.test((node as Element).localName) ||\n          LayoutHelper.isSpecialInlineDisplay(\n            this.clientLayout.getElementComputedStyle(node as Element).display,\n          )\n        ) {\n          // ruby, inline-block, etc.\n          seekRange = !haveStart;\n          if (seekRange) {\n            range.setStartBefore(node);\n            haveStart = true;\n            lastGood = node;\n          }\n          if (node.contains(end)) {\n            endNotReached = false;\n          }\n        } else {\n          next = node.firstChild;\n        }\n        if (!next) {\n          next = node.nextSibling;\n          if (!next) {\n            wentUp = true;\n            next = node.parentNode;\n          }\n        }\n        node = next;\n      } while (seekRange && endNotReached);\n      if (haveStart) {\n        range.setEndAfter(lastGood);\n        const boxList = this.clientLayout.getRangeClientRects(range);\n        for (let i = 0; i < boxList.length; i++) {\n          arr.push(boxList[i]);\n        }\n        haveStart = false;\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Give block's initial and final nodes, find positions of the line bottoms.\n   * This is, of course, somewhat hacky implementation.\n   * @return position of line breaks\n   */\n  findLinePositions(checkPoints: Vtree.NodeContext[]): number[] {\n    const LOW_OVERLAP = 0.2;\n    const MID_OVERLAP = 0.6;\n    const positions = [];\n    const boxes = this.getRangeBoxes(\n      checkPoints[0].viewNode,\n      checkPoints[checkPoints.length - 1].viewNode,\n    );\n    boxes.sort(\n      this.vertical\n        ? VtreeImpl.clientrectDecreasingRight\n        : VtreeImpl.clientrectIncreasingTop,\n    );\n    let lineBefore = 0;\n    let lineAfter = 0;\n    let lineEnd = 0;\n    let lineLength = 0;\n    let i = 0;\n    const dir = this.getBoxDir();\n    while (true) {\n      if (i < boxes.length) {\n        const box = boxes[i];\n        let overlap = 1;\n        if (lineLength > 0) {\n          const boxSize = Math.max(this.getBoxSize(box), 1);\n          if (dir * this.getBeforeEdge(box) < dir * lineBefore) {\n            overlap = (dir * (this.getAfterEdge(box) - lineBefore)) / boxSize;\n          } else if (dir * this.getAfterEdge(box) > dir * lineAfter) {\n            overlap = (dir * (lineAfter - this.getBeforeEdge(box))) / boxSize;\n          } else {\n            overlap = 1;\n          }\n        }\n        if (\n          lineLength == 0 ||\n          overlap >= MID_OVERLAP ||\n          (overlap >= LOW_OVERLAP && this.getStartEdge(box) >= lineEnd - 1)\n        ) {\n          lineEnd = this.getEndEdge(box);\n          if (this.vertical) {\n            lineBefore =\n              lineLength == 0 ? box.right : Math.max(lineBefore, box.right);\n            lineAfter =\n              lineLength == 0 ? box.left : Math.min(lineAfter, box.left);\n          } else {\n            lineBefore =\n              lineLength == 0 ? box.top : Math.min(lineBefore, box.top);\n            lineAfter =\n              lineLength == 0 ? box.bottom : Math.max(lineAfter, box.bottom);\n          }\n          lineLength++;\n          i++;\n          continue;\n        }\n      }\n\n      // Add line\n      if (lineLength > 0) {\n        positions.push(lineAfter);\n        lineLength = 0;\n      }\n      if (i >= boxes.length) {\n        break;\n      }\n    }\n    positions.sort(Base.numberCompare);\n    if (this.vertical) {\n      positions.reverse();\n    }\n    return positions;\n  }\n\n  calculateClonedPaddingBorder(nodeContext: Vtree.NodeContext): number {\n    let clonedPaddingBorder = 0;\n    nodeContext.walkUpBlocks((block) => {\n      if (block.inheritedProps[\"box-decoration-break\"] === \"clone\") {\n        Asserts.assert(block.viewNode instanceof Element);\n        const paddingBorders = this.getComputedPaddingBorder(\n          block.viewNode as Element,\n        );\n        clonedPaddingBorder += block.vertical\n          ? -paddingBorders.left\n          : paddingBorders.bottom;\n        if (block.display === \"table\") {\n          clonedPaddingBorder += block.blockBorderSpacing;\n        }\n      }\n    });\n    return clonedPaddingBorder;\n  }\n\n  private getOffsetByRepetitiveElements(\n    bp?: BreakPosition.BreakPosition,\n  ): number {\n    let offset: { current: number; minimum: number };\n    if (bp) {\n      offset = bp.calculateOffset(this);\n    } else {\n      offset = BreakPosition.calculateOffset(\n        null,\n        this.collectElementsOffset(),\n      );\n    }\n    return offset.current;\n  }\n\n  findBoxBreakPosition(\n    bp: BoxBreakPosition,\n    force: boolean,\n  ): Vtree.NodeContext {\n    // Workaround for issue #816 (Text with ruby overflowed at column/page break)\n    const parentNode = this.element.parentNode;\n    const nextSibling = this.element.nextSibling;\n    parentNode.removeChild(this.element);\n    parentNode.insertBefore(this.element, nextSibling);\n\n    const checkPoints = bp.checkPoints;\n    let block = checkPoints[0];\n    while (block.parent && block.inline) {\n      block = block.parent;\n    }\n    let widows: number;\n    let orphans: number;\n    if (force) {\n      // Last resort, ignore widows/orphans\n      widows = 1;\n      orphans = 1;\n    } else {\n      // Get widows/orphans settings from the block element\n      widows = Math.max(\n        ((block.inheritedProps[\"widows\"] as number) || 2) - 0,\n        1,\n      );\n      orphans = Math.max(\n        ((block.inheritedProps[\"orphans\"] as number) || 2) - 0,\n        1,\n      );\n    }\n\n    // In case of box-decoration-break: clone, width (or height in vertical\n    // writing mode) of cloned paddings and borders should be taken into\n    // account.\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(block);\n\n    // Select the first overflowing line break position\n    const linePositions = this.findLinePositions(checkPoints);\n    let edge = this.footnoteEdge - clonedPaddingBorder;\n    const dir = this.getBoxDir();\n    const repetitiveElementsOffset = this.getOffsetByRepetitiveElements(bp);\n    edge -= dir * repetitiveElementsOffset;\n\n    // If an \"overflowing\" checkpoint (e.g. not allowed by LayoutConstraint)\n    // exists before the edge, a line containing the checkpoint should be\n    // deferred to the next column.\n    const firstOverflowing =\n      this.findFirstOverflowingEdgeAndCheckPoint(checkPoints);\n    if (isNaN(firstOverflowing.edge)) {\n      firstOverflowing.edge = dir * Infinity;\n    }\n    let lineIndex = Base.binarySearch(linePositions.length, (i) => {\n      const p = linePositions[i];\n      return this.vertical\n        ? p < edge || p <= firstOverflowing.edge\n        : p > edge || p >= firstOverflowing.edge;\n    });\n\n    // If no break point is found due to the \"overflowing\" checkpoint,\n    // give up deferring a line containing the checkpoint and try to cut the\n    // line just before it.\n    const forceCutBeforeOverflowing = lineIndex <= 0;\n    if (forceCutBeforeOverflowing) {\n      lineIndex = Base.binarySearch(linePositions.length, (i) =>\n        this.vertical ? linePositions[i] < edge : linePositions[i] > edge,\n      );\n    }\n\n    // First edge after the one that both fits and satisfies widows constraint.\n    lineIndex = Math.min(linePositions.length - widows, lineIndex);\n    if (lineIndex < orphans) {\n      // Not enough lines to satisfy orphans constraint, cannot break here.\n      return null;\n    }\n    edge = linePositions[lineIndex - 1];\n    let nodeContext: Vtree.NodeContext;\n    if (forceCutBeforeOverflowing) {\n      nodeContext = firstOverflowing.checkPoint;\n    } else {\n      nodeContext = this.findAcceptableBreakInside(bp.checkPoints, edge, force);\n    }\n    if (nodeContext) {\n      // When line-height is small, the edge calculated above (using Range)\n      // can be larger than the edge of the block container containing the text.\n      // We update the edge by measuring the block edge.\n      const blockEdge = this.getAfterEdgeOfBlockContainer(nodeContext);\n      if (!isNaN(blockEdge) && blockEdge < edge) {\n        edge = blockEdge;\n      }\n      this.computedBlockSize =\n        dir * (edge - this.beforeEdge) + repetitiveElementsOffset;\n    }\n    return nodeContext;\n  }\n\n  getAfterEdgeOfBlockContainer(nodeContext: Vtree.NodeContext): number {\n    let blockParent = nodeContext;\n    do {\n      blockParent = blockParent.parent;\n    } while (blockParent && blockParent.inline);\n    if (blockParent) {\n      blockParent = blockParent.copy().modify();\n      blockParent.after = true;\n      return LayoutHelper.calculateEdge(\n        blockParent,\n        this.clientLayout,\n        0,\n        this.vertical,\n      );\n    } else {\n      return NaN;\n    }\n  }\n\n  findFirstOverflowingEdgeAndCheckPoint(checkPoints: Vtree.NodeContext[]): {\n    edge: number;\n    checkPoint: Vtree.NodeContext | null;\n  } {\n    const index = checkPoints.findIndex((cp) => cp.overflow);\n    if (index < 0) {\n      return { edge: NaN, checkPoint: null };\n    }\n    const cp = checkPoints[index];\n    return {\n      edge: this.calculateEdge(null, checkPoints, index, cp.boxOffset),\n      checkPoint: cp,\n    };\n  }\n\n  findEdgeBreakPosition(\n    bp: BreakPosition.EdgeBreakPosition,\n  ): Vtree.NodeContext {\n    this.computedBlockSize =\n      bp.computedBlockSize + this.getOffsetByRepetitiveElements(bp);\n    return bp.position;\n  }\n\n  /**\n   * Finalize a line break.\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    Asserts.assert(nodeContext.formattingContext);\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      nodeContext.formattingContext,\n    );\n    let result = layoutProcessor.finishBreak(\n      this,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n    if (!result) {\n      result = LayoutProcessor.blockLayoutProcessor.finishBreak(\n        this,\n        nodeContext,\n        forceRemoveSelf,\n        endOfColumn,\n      );\n    }\n    return result;\n  }\n\n  findAcceptableBreakPosition(): BreakPositionAndNodeContext {\n    let bp: Layout.BreakPosition = null;\n    let nodeContext: Vtree.NodeContext = null;\n    let penalty = 0;\n    let nextPenalty = 0;\n    do {\n      penalty = nextPenalty;\n      nextPenalty = Number.MAX_VALUE;\n      for (\n        let i = this.breakPositions.length - 1;\n        i >= 0 && !nodeContext;\n        --i\n      ) {\n        bp = this.breakPositions[i];\n        nodeContext = bp.findAcceptableBreak(this, penalty);\n        const minPenalty = bp.getMinBreakPenalty();\n        if (minPenalty > penalty) {\n          nextPenalty = Math.min(nextPenalty, minPenalty);\n        }\n      }\n    } while (\n      // Don't need to find a non-optimal break position if\n      // forceNonfitting=false\n      nextPenalty > penalty &&\n      !nodeContext &&\n      this.forceNonfitting\n    );\n    return { breakPosition: nodeContext ? bp : null, nodeContext };\n  }\n\n  doFinishBreak(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    initialNodeContext: Vtree.NodeContext,\n    initialComputedBlockSize: number,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      this.pageFloatLayoutContext.isInvalidated() ||\n      this.pageBreakType ||\n      !overflownNodeContext\n    ) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doFinishBreak\");\n    let forceRemoveSelf = false;\n    if (!nodeContext) {\n      // Last resort\n      if (this.forceNonfitting) {\n        Logging.logger.warn(\"Could not find any page breaks?!!\");\n        this.skipTailEdges(overflownNodeContext).then((nodeContext) => {\n          if (nodeContext) {\n            nodeContext = nodeContext.modify();\n            nodeContext.overflow = false;\n            this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n              frame.finish(nodeContext);\n            });\n          } else {\n            frame.finish(nodeContext);\n          }\n        });\n        return frame.result();\n      } else {\n        nodeContext = initialNodeContext;\n        forceRemoveSelf = true;\n        this.computedBlockSize = initialComputedBlockSize;\n      }\n    }\n    this.finishBreak(nodeContext, forceRemoveSelf, true).then(() => {\n      frame.finish(nodeContext);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Determines if a page break is acceptable at this position\n   */\n  isBreakable(flowPosition: Vtree.NodeContext): boolean {\n    if (flowPosition.after) {\n      return true; // may be an empty block\n    }\n    switch ((flowPosition.sourceNode as Element).namespaceURI) {\n      case Base.NS.SVG:\n        return false;\n    }\n    return !flowPosition.flexContainer;\n  }\n\n  /**\n   * Determines if an indent value is zero\n   */\n  zeroIndent(val: string | number): boolean {\n    const s = val.toString();\n    return s == \"\" || s == \"auto\" || !!s.match(/^0+(.0*)?[^0-9]/);\n  }\n\n  /**\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdge(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    let edge = LayoutHelper.calculateEdge(\n      nodeContext,\n      this.clientLayout,\n      0,\n      this.vertical,\n    );\n    const offsets = BreakPosition.calculateOffset(\n      nodeContext,\n      this.collectElementsOffset(),\n    );\n    const overflown = this.isOverflown(\n      edge + (this.vertical ? -1 : 1) * offsets.minimum,\n    );\n    if (\n      this.isOverflown(edge + (this.vertical ? -1 : 1) * offsets.current) &&\n      !this.nodeContextOverflowingDueToRepetitiveElements\n    ) {\n      this.nodeContextOverflowingDueToRepetitiveElements = nodeContext;\n    } else if (trailingEdgeContexts) {\n      // If the edge does not overflow add the trailing margin, which is\n      // truncated to the remaining fragmentainer extent.\n      const marginEdge =\n        edge + this.getTrailingMarginEdgeAdjustment(trailingEdgeContexts);\n      const footnoteEdge =\n        this.footnoteEdge - this.getBoxDir() * offsets.current;\n      edge = this.vertical\n        ? Math.min(edge, Math.max(marginEdge, footnoteEdge))\n        : Math.max(edge, Math.min(marginEdge, footnoteEdge));\n    }\n    this.updateMaxReachedAfterEdge(edge);\n    return overflown;\n  }\n\n  /**\n   * Save a possible page break position on a CSS block edge. Check if it\n   * overflows.\n   * @return true if overflows\n   */\n  checkOverflowAndSaveEdgeAndBreakPosition(\n    nodeContext: Vtree.NodeContext,\n    trailingEdgeContexts: Vtree.NodeContext[],\n    saveEvenOverflown: boolean,\n    breakAtTheEdge: string | null,\n  ): boolean {\n    if (!nodeContext) {\n      return false;\n    }\n    if (LayoutHelper.isOrphan(nodeContext.viewNode)) {\n      return false;\n    }\n    const overflown = this.checkOverflowAndSaveEdge(\n      nodeContext,\n      trailingEdgeContexts,\n    );\n    if (saveEvenOverflown || !overflown) {\n      this.saveEdgeBreakPosition(nodeContext, breakAtTheEdge, overflown);\n    }\n    return overflown;\n  }\n\n  applyClearance(nodeContext: Vtree.NodeContext): boolean {\n    if (!nodeContext.viewNode.parentNode) {\n      // Cannot do ceralance for nodes without parents\n      return false;\n    }\n\n    // measure where the edge of the element would be without clearance\n    const margin = this.getComputedMargin(nodeContext.viewNode as Element);\n    const spacer = nodeContext.viewNode.ownerDocument.createElement(\"div\");\n    if (this.vertical) {\n      spacer.style.bottom = \"0px\";\n      spacer.style.width = \"1px\";\n      spacer.style.marginRight = `${margin.right}px`;\n    } else {\n      spacer.style.right = \"0px\";\n      spacer.style.height = \"1px\";\n      spacer.style.marginTop = `${margin.top}px`;\n    }\n    nodeContext.viewNode.parentNode.insertBefore(spacer, nodeContext.viewNode);\n    let spacerBox = this.clientLayout.getElementClientRect(spacer);\n    const edge = this.getBeforeEdge(spacerBox);\n    const dir = this.getBoxDir();\n    const clear = nodeContext.clearSide;\n    let clearEdge = -this.getBoxDir() * Infinity;\n    if (clear === \"all\") {\n      clearEdge = this.pageFloatLayoutContext.getPageFloatClearEdge(\n        clear,\n        this,\n      );\n    }\n    switch (clear) {\n      case \"left\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.leftFloatEdge * dir);\n        break;\n      case \"right\":\n        clearEdge = dir * Math.max(clearEdge * dir, this.rightFloatEdge * dir);\n        break;\n      default:\n        clearEdge =\n          dir *\n          Math.max(\n            clearEdge * dir,\n            Math.max(this.rightFloatEdge * dir, this.leftFloatEdge * dir),\n          );\n    }\n\n    // edge holds the position where element border \"before\" edge will be\n    // without clearance. clearEdge is the \"after\" edge of the float to clear.\n    if (edge * dir >= clearEdge * dir) {\n      // No need for clearance\n      nodeContext.viewNode.parentNode.removeChild(spacer);\n      return false;\n    } else {\n      // Need some clearance, determine how much. Add the clearance node,\n      // measure its after edge and adjust after margin (required due to\n      // possible margin collapse before clearance was introduced).\n      const height = Math.max(1, (clearEdge - edge) * dir);\n      if (this.vertical) {\n        spacer.style.width = `${height}px`;\n      } else {\n        spacer.style.height = `${height}px`;\n      }\n      spacerBox = this.clientLayout.getElementClientRect(spacer);\n      const afterEdge = this.getAfterEdge(spacerBox);\n      if (this.vertical) {\n        let wAdj = afterEdge + margin.right - clearEdge;\n        if (wAdj > 0 == margin.right >= 0) {\n          // In addition to collapsed portion\n          wAdj += margin.right;\n        }\n        spacer.style.marginLeft = `${wAdj}px`;\n      } else {\n        let hAdj = clearEdge - (afterEdge + margin.top);\n        if (hAdj > 0 == margin.top >= 0) {\n          // In addition to collapsed portion\n          hAdj += margin.top;\n        }\n        spacer.style.marginBottom = `${hAdj}px`;\n      }\n      nodeContext.clearSpacer = spacer;\n      return true;\n    }\n  }\n\n  isBFC(formattingContext: Vtree.FormattingContext): boolean {\n    if (LayoutProcessor.isInstanceOfBlockFormattingContext(formattingContext)) {\n      return true;\n    }\n    if (\n      RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n        formattingContext,\n      )\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Skips positions until either the start of unbreakable block or inline\n   * content. Also sets breakBefore on the result combining break-before and\n   * break-after properties from all elements that meet at the edge.\n   */\n  skipEdges(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const fc = nodeContext.after\n      ? nodeContext.parent?.formattingContext\n      : nodeContext.formattingContext;\n    if (fc && !this.isBFC(fc)) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n\n    // If a forced break occurred at the end of the previous column,\n    // nodeContext.after should be false.\n    let atUnforcedBreak =\n      !forcedBreakValue && leadingEdge && nodeContext && nodeContext.after;\n    let breakAtTheEdge = forcedBreakValue;\n    let lastAfterNodeContext: Vtree.NodeContext = null;\n    let leadingEdgeContexts: Vtree.NodeContext[] = [];\n    let trailingEdgeContexts: Vtree.NodeContext[] = [];\n    let onStartEdges = false;\n\n    function needForcedBreak() {\n      // leadingEdge=true means that we are at the beginning of the new column\n      // and hence must avoid a break (Otherwise leading to an infinite loop)\n      return (\n        !!forcedBreakValue ||\n        (!leadingEdge && Break.isForcedBreakValue(breakAtTheEdge))\n      );\n    }\n\n    const processForcedBreak = () => {\n      nodeContext = leadingEdgeContexts[0] || nodeContext;\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      this.pageBreakType = breakAtTheEdge;\n    };\n\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          Asserts.assert(nodeContext.formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              nodeContext.formattingContext,\n            );\n\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                } else {\n                  nodeContext = nodeContext.modify();\n                  nodeContext.breakBefore = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Save break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                this.breakAtTheEdgeBeforeFloat = Break.isAvoidBreakValue(\n                  breakAtTheEdge,\n                )\n                  ? breakAtTheEdge\n                  : null;\n              }\n              if (layoutProcessor) {\n                if (layoutProcessor.startNonInlineElementNode(nodeContext)) {\n                  break;\n                }\n              }\n              if (nodeContext.clearSide) {\n                // clear\n                if (\n                  this.applyClearance(nodeContext) &&\n                  leadingEdge &&\n                  this.breakPositions.length === 0\n                ) {\n                  this.saveEdgeBreakPosition(\n                    nodeContext.copy(),\n                    breakAtTheEdge,\n                    false,\n                  );\n                }\n              }\n              if (\n                !this.isBFC(nodeContext.formattingContext) ||\n                RepetitiveElement.isInstanceOfRepetitiveElementsOwnerFormattingContext(\n                  nodeContext.formattingContext,\n                ) ||\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // new formatting context, or float or flex container\n                // (unbreakable)\n                leadingEdgeContexts.push(nodeContext.copy());\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  ) ||\n                  !this.layoutConstraint.allowLayout(nodeContext)\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              if (nodeContext.floatSide) {\n                // Restore break-after:avoid* value at before the float\n                // (Fix for issue #904)\n                breakAtTheEdge =\n                  breakAtTheEdge ?? this.breakAtTheEdgeBeforeFloat;\n                this.breakAtTheEdgeBeforeFloat = null;\n              }\n              const element = nodeContext.sourceNode as Element;\n              // Make breakable after svg and math elements\n              // (Fix for issue #750)\n              if (\n                element.localName === \"svg\" ||\n                element.localName === \"math\" ||\n                element.getAttribute(\"data-math-typeset\") === \"true\"\n              ) {\n                onStartEdges = false;\n                lastAfterNodeContext = nodeContext.copy();\n                trailingEdgeContexts.push(lastAfterNodeContext);\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  null,\n                  nodeContext.breakAfter,\n                );\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                break;\n              }\n              // Skip an empty inline box at the start of a block\n              // (An anonymous block consisting entirely of\n              // collapsible white space is removed from the rendering tree)\n              if (nodeContext.inline) {\n                break;\n              }\n              if (layoutProcessor) {\n                if (\n                  layoutProcessor.afterNonInlineElementNode(\n                    nodeContext,\n                    this.stopAtOverflow,\n                  )\n                ) {\n                  break;\n                }\n              }\n\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge. this\n                // edge is no longer the leading edge.\n                leadingEdgeContexts = [];\n                leadingEdge = false;\n                atUnforcedBreak = false;\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              lastAfterNodeContext = nodeContext.copy();\n              trailingEdgeContexts.push(lastAfterNodeContext);\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingBottom) &&\n                  this.zeroIndent(style.borderBottomWidth)\n                )\n              ) {\n                // Non-zero trailing inset.\n                // Margins don't collapse across non-zero borders and\n                // paddings.\n                trailingEdgeContexts = [lastAfterNodeContext];\n              }\n            } else {\n              // Leading edge\n              leadingEdgeContexts.push(nodeContext.copy());\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              if (\n                (nodeContext.pageType != nodeContext.parent?.pageType || // Fix for issue #771\n                  !Break.isForcedBreakValue(breakAtTheEdge)) && // Fix for issue #722\n                !this.layoutConstraint.allowLayout(nodeContext)\n              ) {\n                this.checkOverflowAndSaveEdgeAndBreakPosition(\n                  lastAfterNodeContext,\n                  null,\n                  !this.stopAtOverflow,\n                  breakAtTheEdge,\n                );\n                nodeContext = nodeContext.modify();\n                nodeContext.overflow = true;\n                if (this.stopAtOverflow) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (needForcedBreak()) {\n                  processForcedBreak();\n                } else if (\n                  this.checkOverflowAndSaveEdgeAndBreakPosition(\n                    lastAfterNodeContext,\n                    null,\n                    true,\n                    breakAtTheEdge,\n                  )\n                ) {\n                  // overflow\n                  nodeContext = (\n                    this.stopAtOverflow\n                      ? lastAfterNodeContext || nodeContext\n                      : nodeContext\n                  ).modify();\n                  nodeContext.overflow = true;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                atUnforcedBreak = false;\n                trailingEdgeContexts = [];\n              }\n              onStartEdges = true; // we are now on starting edges.\n            }\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.nextInTree(nodeContext, atUnforcedBreak);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n\n        if (\n          this.checkOverflowAndSaveEdgeAndBreakPosition(\n            lastAfterNodeContext,\n            trailingEdgeContexts,\n            !this.stopAtOverflow,\n            breakAtTheEdge,\n          )\n        ) {\n          if (lastAfterNodeContext && this.stopAtOverflow) {\n            nodeContext = lastAfterNodeContext.modify();\n            nodeContext.overflow = true;\n          } else {\n            // TODO: what to return here??\n          }\n        } else if (Break.isForcedBreakValue(breakAtTheEdge)) {\n          this.pageBreakType = breakAtTheEdge;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        if (lastAfterNodeContext) {\n          this.lastAfterPosition = lastAfterNodeContext.toNodePosition();\n        }\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Skips non-renderable positions until it hits the end of the flow or some\n   * renderable content. Returns the nodeContext that was passed in if some\n   * content remains and null if all content could be skipped.\n   */\n  skipTailEdges(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    let resultNodeContext = nodeContext.copy();\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"skipEdges\");\n    let breakAtTheEdge: string | null = null;\n    let onStartEdges = false;\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // A code block to be able to use break. Break moves to the next\n          // node position.\n          do {\n            if (!nodeContext.viewNode) {\n              // Non-displayable content, skip\n              break;\n            }\n            if (nodeContext.inline && nodeContext.viewNode.nodeType != 1) {\n              if (\n                VtreeImpl.canIgnore(\n                  nodeContext.viewNode,\n                  nodeContext.whitespace,\n                )\n              ) {\n                // Ignorable text content, skip\n                break;\n              }\n              if (!nodeContext.after) {\n                // Leading edge of non-empty block -> finished going through\n                // all starting edges of the box\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (!nodeContext.after) {\n              if (\n                this.isFloatNodeContext(nodeContext) ||\n                nodeContext.flexContainer\n              ) {\n                // float or flex container (unbreakable)\n                breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                  breakAtTheEdge,\n                  nodeContext.breakBefore,\n                );\n\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            if (nodeContext.viewNode.nodeType != 1) {\n              // not an element\n              break;\n            }\n            const style = (nodeContext.viewNode as HTMLElement).style;\n            if (nodeContext.after) {\n              // Trailing edge\n              if (onStartEdges) {\n                // finished going through all starting edges of the box.\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                  loopFrame.breakLoop();\n                  return;\n                }\n\n                // since a break did not occur, move to the next edge.\n                breakAtTheEdge = null;\n              }\n              onStartEdges = false; // we are now on end edges.\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakAfter,\n              );\n            } else {\n              // Leading edge\n              breakAtTheEdge = Break.resolveEffectiveBreakValue(\n                breakAtTheEdge,\n                nodeContext.breakBefore,\n              );\n              const viewTag = (nodeContext.viewNode as Element).localName;\n              if (mediaTags[viewTag]) {\n                // elements that have inherent content\n                // check if a forced break must occur before the block.\n                if (Break.isForcedBreakValue(breakAtTheEdge)) {\n                  this.pageBreakType = breakAtTheEdge;\n                }\n                loopFrame.breakLoop();\n                return;\n              }\n              if (\n                style &&\n                !(\n                  this.zeroIndent(style.paddingTop) &&\n                  this.zeroIndent(style.borderTopWidth)\n                )\n              ) {\n                // Non-zero leading inset\n                loopFrame.breakLoop();\n                return;\n              }\n            }\n            onStartEdges = true; // we are now on starting edges.\n          } while (false); // End of block of code to use break\n\n          const nextResult = this.layoutContext.nextInTree(nodeContext);\n          if (nextResult.isPending()) {\n            nextResult.then((nodeContextParam) => {\n              nodeContext = nodeContextParam;\n              loopFrame.continueLoop();\n            });\n            return;\n          } else {\n            nodeContext = nextResult.get();\n          }\n        }\n        resultNodeContext = null;\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(resultNodeContext);\n      });\n    return frame.result();\n  }\n\n  layoutFloatOrFootnote(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<Vtree.NodeContext> {\n    if (\n      PageFloats.isPageFloat(nodeContext.floatReference) ||\n      nodeContext.floatSide === \"footnote\"\n    ) {\n      return this.layoutPageFloat(nodeContext);\n    } else {\n      return this.layoutFloat(nodeContext);\n    }\n  }\n\n  /**\n   * Layout next portion of the source.\n   */\n  layoutNext(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    forcedBreakValue?: string | null,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"layoutNext\");\n    this.skipEdges(nodeContext, leadingEdge, forcedBreakValue || null).then(\n      (nodeContextParam) => {\n        nodeContext = nodeContextParam as Vtree.NodeContext;\n        if (\n          !nodeContext ||\n          this.pageBreakType ||\n          this.stopByOverflow(nodeContext)\n        ) {\n          // finished all content, explicit page break or overflow (automatic\n          // page break)\n          frame.finish(nodeContext);\n        } else {\n          const formattingContext = nodeContext.formattingContext;\n          Asserts.assert(formattingContext);\n          const layoutProcessor =\n            new LayoutProcessor.LayoutProcessorResolver().find(\n              formattingContext,\n            );\n          layoutProcessor\n            .layout(nodeContext, this, leadingEdge)\n            .thenFinish(frame);\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  clearOverflownViewNodes(\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ): void {\n    if (!nodeContext) {\n      return;\n    }\n    for (\n      let parent = nodeContext.parent;\n      nodeContext;\n      nodeContext = parent, parent = parent ? parent.parent : null\n    ) {\n      const formattingContext = (parent || nodeContext).formattingContext;\n      Asserts.assert(formattingContext);\n      const layoutProcessor =\n        new LayoutProcessor.LayoutProcessorResolver().find(formattingContext);\n      layoutProcessor.clearOverflownViewNodes(\n        this,\n        parent,\n        nodeContext,\n        removeSelf,\n      );\n      removeSelf = false;\n    }\n  }\n\n  initGeom(): void {\n    // TODO: we should be able to avoid querying the layout engine at this\n    // point. Create an element that fills the content area and query its size.\n    // Calling getElementClientRect on the container element includes element\n    // padding which is wrong for our purposes.\n    const probe = this.element.ownerDocument.createElement(\n      \"div\",\n    ) as HTMLElement;\n    probe.style.position = \"absolute\";\n    probe.style.top = `${this.paddingTop}px`;\n    probe.style.right = `${this.paddingRight}px`;\n    probe.style.bottom = `${this.paddingBottom}px`;\n    probe.style.left = `${this.paddingLeft}px`;\n    this.element.appendChild(probe);\n    const columnBBox = this.clientLayout.getElementClientRect(probe);\n    this.element.removeChild(probe);\n    const offsetX = this.originX + this.left + this.getInsetLeft();\n    const offsetY = this.originY + this.top + this.getInsetTop();\n    this.box = new GeometryUtil.Rect(\n      offsetX,\n      offsetY,\n      offsetX + this.width,\n      offsetY + this.height,\n    );\n    this.startEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.top\n        : columnBBox.left\n      : 0;\n    this.endEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.bottom\n        : columnBBox.right\n      : 0;\n    this.beforeEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.right\n        : columnBBox.top\n      : 0;\n    this.afterEdge = columnBBox\n      ? this.vertical\n        ? columnBBox.left\n        : columnBBox.bottom\n      : 0;\n    this.leftFloatEdge = this.beforeEdge;\n    this.rightFloatEdge = this.beforeEdge;\n    this.bottommostFloatTop = this.beforeEdge;\n    this.footnoteEdge = this.afterEdge;\n    this.bands = GeometryUtil.shapesToBands(\n      this.box,\n      [this.getInnerShape()],\n      this.getExclusions(),\n      8,\n      this.snapHeight,\n      this.vertical,\n    );\n    this.createFloats();\n  }\n\n  init(): void {\n    this.chunkPositions = [];\n    Base.setCSSProperty(this.element, \"width\", `${this.width}px`);\n    Base.setCSSProperty(this.element, \"height\", `${this.height}px`);\n    this.initGeom();\n    this.computedBlockSize = 0;\n    this.overflown = false;\n    this.pageBreakType = null;\n    this.lastAfterPosition = null;\n  }\n\n  /**\n   * Save the potential breaking position at the edge. Should, in general, save\n   * \"after\" position but only after skipping all of the \"before\" ones and\n   * getting to the non-empty content (to get breakAtEdge right).\n   */\n  saveEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakAtEdge: string | null,\n    overflows: boolean,\n  ): void {\n    Asserts.assert(position.formattingContext);\n    const copy = position.copy();\n    const layoutProcessor = new LayoutProcessor.LayoutProcessorResolver().find(\n      position.formattingContext,\n    );\n    const clonedPaddingBorder = this.calculateClonedPaddingBorder(copy);\n    const bp = layoutProcessor.createEdgeBreakPosition(\n      copy,\n      breakAtEdge,\n      overflows,\n      this.computedBlockSize + clonedPaddingBorder,\n    );\n    this.breakPositions.push(bp);\n  }\n\n  /**\n   * @param checkPoints array of breaking points for breakable block\n   */\n  saveBoxBreakPosition(checkPoints: Vtree.NodeContext[]): void {\n    let penalty = checkPoints[0].breakPenalty;\n    if (penalty) {\n      // Fix for issue #546\n      let block = checkPoints[0];\n      while (block.parent && block.inline) {\n        block = block.parent;\n      }\n      penalty = block.breakPenalty;\n    }\n    const bp = new BoxBreakPosition(checkPoints, penalty);\n    this.breakPositions.push(bp);\n  }\n\n  updateMaxReachedAfterEdge(afterEdge: number) {\n    if (!isNaN(afterEdge)) {\n      const size = this.getBoxDir() * (afterEdge - this.beforeEdge);\n      this.computedBlockSize = Math.max(size, this.computedBlockSize);\n    }\n  }\n\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<Vtree.ChunkPosition> {\n    this.chunkPositions.push(chunkPosition); // So we can re-layout this column later\n    if (chunkPosition.primary.after) {\n      this.lastAfterPosition = chunkPosition.primary;\n    }\n    if (this.stopAtOverflow && this.overflown) {\n      return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n    }\n    if (this.isFullWithPageFloats()) {\n      if (\n        chunkPosition.primary.after &&\n        chunkPosition.primary.steps.length === 1\n      ) {\n        // End of contents\n        return Task.newResult(null as Vtree.ChunkPosition);\n      } else {\n        return Task.newResult(chunkPosition as Vtree.ChunkPosition);\n      }\n    }\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"layout\");\n\n    // ------ start the column -----------\n    this.openAllViews(chunkPosition.primary).then((nodeContext) => {\n      let initialNodeContext: Vtree.NodeContext = null;\n      if (nodeContext.viewNode) {\n        initialNodeContext = nodeContext.copy();\n      } else {\n        const nextInTreeListener = (evt) => {\n          if (evt.nodeContext.viewNode) {\n            initialNodeContext = evt.nodeContext;\n            this.layoutContext.removeEventListener(\n              \"nextInTree\",\n              nextInTreeListener,\n            );\n          }\n        };\n        this.layoutContext.addEventListener(\"nextInTree\", nextInTreeListener);\n      }\n      const retryer = new ColumnLayoutRetryer(leadingEdge, breakAfter);\n      retryer.layout(nodeContext, this).then((nodeContextParam) => {\n        this.doFinishBreak(\n          nodeContextParam,\n          retryer.context.overflownNodeContext,\n          initialNodeContext,\n          retryer.initialComputedBlockSize,\n        ).then((positionAfter) => {\n          let cont: Task.Result<boolean> = null;\n          if (!this.pseudoParent) {\n            cont = this.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n          } else {\n            cont = Task.newResult(null);\n          }\n          cont.then(() => {\n            if (this.pageFloatLayoutContext.isInvalidated()) {\n              frame.finish(null);\n              return;\n            }\n            if (!positionAfter) {\n              frame.finish(null);\n            } else {\n              this.overflown = true;\n              const result = new VtreeImpl.ChunkPosition(\n                positionAfter.toNodePosition(),\n              );\n              frame.finish(result);\n            }\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  isFullWithPageFloats(): boolean {\n    return this.pageFloatLayoutContext.isColumnFullWithPageFloats(this);\n  }\n\n  getMaxBlockSizeOfPageFloats(): number {\n    return this.pageFloatLayoutContext.getMaxBlockSizeOfPageFloats();\n  }\n\n  doFinishBreakOfFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"doFinishBreakOfFragmentLayoutConstraints\",\n    );\n    const sortedFragmentLayoutConstraints = [].concat(\n      this.fragmentLayoutConstraints,\n    );\n    sortedFragmentLayoutConstraints.sort(\n      (a, b) => a.getPriorityOfFinishBreak() - b.getPriorityOfFinishBreak(),\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < sortedFragmentLayoutConstraints.length) {\n          const result = sortedFragmentLayoutConstraints[i++].finishBreak(\n            nodeContext,\n            this,\n          );\n          return result.thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @param nodeContext starting position.\n   * @return holding end position.\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    leadingEdge: boolean,\n    breakAfter?: string | null,\n  ): Task.Result<{\n    nodeContext: Vtree.NodeContext;\n    overflownNodeContext: Vtree.NodeContext;\n  }> {\n    const frame: Task.Frame<{\n      nodeContext: Vtree.NodeContext;\n      overflownNodeContext: Vtree.NodeContext;\n    }> = Task.newFrame(\"doLayout\");\n    let overflownNodeContext: Vtree.NodeContext = null;\n\n    // ------ init backtracking list -----\n    this.breakPositions = [];\n    this.nodeContextOverflowingDueToRepetitiveElements = null;\n\n    // ------- fill the column -------------\n    frame\n      .loopWithFrame((loopFrame) => {\n        while (nodeContext) {\n          // fill a single block\n          let pending = true;\n          this.layoutNext(nodeContext, leadingEdge, breakAfter || null).then(\n            (nodeContextParam) => {\n              leadingEdge = false;\n              breakAfter = null;\n              if (\n                this.nodeContextOverflowingDueToRepetitiveElements &&\n                this.stopAtOverflow\n              ) {\n                this.pageBreakType = null;\n                nodeContext =\n                  this.nodeContextOverflowingDueToRepetitiveElements;\n                nodeContext.overflow = true;\n              } else {\n                nodeContext = nodeContextParam;\n              }\n              if (this.pageFloatLayoutContext.isInvalidated()) {\n                loopFrame.breakLoop();\n              } else if (this.pageBreakType) {\n                // explicit page break\n                loopFrame.breakLoop(); // Loop end\n              } else if (nodeContext && this.stopByOverflow(nodeContext)) {\n                // overflow (implicit page break): back up and find a\n                // page break\n                overflownNodeContext = nodeContext;\n                const bp = this.findAcceptableBreakPosition();\n                nodeContext = bp.nodeContext;\n                if (bp.breakPosition) {\n                  bp.breakPosition.breakPositionChosen(this);\n                }\n                loopFrame.breakLoop(); // Loop end\n              } else {\n                if (pending) {\n                  // Sync case\n                  pending = false;\n                } else {\n                  // Async case\n                  loopFrame.continueLoop();\n                }\n              }\n            },\n          );\n          if (pending) {\n            // Async case and loop end\n            pending = false;\n            return;\n          }\n        }\n\n        // Sync case\n        this.computedBlockSize += this.getOffsetByRepetitiveElements();\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish({ nodeContext, overflownNodeContext });\n      });\n    return frame.result();\n  }\n\n  /**\n   * Re-layout already laid-out chunks. Return the position of the last flow if\n   * there is an overflow.\n   * TODO: deal with chunks that did not fit at all.\n   * @return holding end position.\n   */\n  redoLayout(): Task.Result<Vtree.ChunkPosition> {\n    const chunkPositions = this.chunkPositions;\n    let last: Node = this.element.lastChild;\n    while (last != this.last) {\n      const prev = last.previousSibling;\n      if (\n        !(\n          this.element === last.parentNode &&\n          (this.layoutContext as Vgen.ViewFactory).isPseudoelement(last)\n        )\n      ) {\n        this.element.removeChild(last);\n      }\n      last = prev;\n    }\n    this.killFloats();\n    this.init();\n    const frame: Task.Frame<Vtree.ChunkPosition> = Task.newFrame(\"redoLayout\");\n    let i = 0;\n    let res: Vtree.ChunkPosition = null;\n    let leadingEdge = true;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i < chunkPositions.length) {\n          const chunkPosition = chunkPositions[i++];\n          this.layout(chunkPosition, leadingEdge).then((pos) => {\n            leadingEdge = false;\n            if (pos) {\n              res = pos;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n          });\n          return;\n        }\n        loopFrame.breakLoop();\n      })\n      .then(() => {\n        frame.finish(res);\n      });\n    return frame.result();\n  }\n\n  saveDistanceToBlockEndFloats() {\n    const blockStartEdgeOfBlockEndFloats =\n      this.pageFloatLayoutContext.getBlockStartEdgeOfBlockEndFloats();\n    if (\n      blockStartEdgeOfBlockEndFloats > 0 &&\n      isFinite(blockStartEdgeOfBlockEndFloats)\n    ) {\n      this.blockDistanceToBlockEndFloats =\n        this.getBoxDir() *\n        (blockStartEdgeOfBlockEndFloats -\n          this.beforeEdge -\n          this.computedBlockSize);\n    }\n  }\n\n  collectElementsOffset(): RepetitiveElement.ElementsOffset[] {\n    const repetitiveElements: RepetitiveElement.ElementsOffset[] = [];\n    for (let current: Column = this; current; current = current.pseudoParent) {\n      current.fragmentLayoutConstraints.forEach((constraint) => {\n        if (\n          RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n            constraint,\n          )\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (\n          Selectors.isInstanceOfAfterIfContinuesLayoutConstraint(constraint)\n        ) {\n          const repetitiveElement = constraint.getRepetitiveElements();\n          repetitiveElements.push(repetitiveElement);\n        }\n        if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n          constraint\n            .getElementsOffsetsForTableCell(this)\n            .forEach((repetitiveElement) => {\n              repetitiveElements.push(repetitiveElement);\n            });\n        }\n      });\n    }\n    return repetitiveElements;\n  }\n}\n\n/**\n * Represents a \"pseudo\"-column nested inside a real column.\n * This class is created to handle parallel fragmented flows (e.g. table columns\n * in a single table row). A pseudo-column behaves in the same way as the\n * original column, sharing its properties. Property changes on the\n * pseudo-column are not propagated to the original column. The LayoutContext of\n * the original column is also cloned and used by the pseudo-column, not to\n * propagate state changes of the LayoutContext caused by the pseudo-column.\n * @param column The original (parent) column\n * @param viewRoot Root element for the pseudo-column, i.e., the root of the\n *     fragmented flow.\n * @param parentNodeContext A NodeContext generating this PseudoColumn\n */\nexport class PseudoColumn {\n  startNodeContexts: Vtree.NodeContext[] = [];\n  private column: Layout.Column;\n  constructor(\n    column: Layout.Column,\n    viewRoot: Element,\n    parentNodeContext: Vtree.NodeContext,\n  ) {\n    this.column = Object.create(column) as Layout.Column;\n    this.column.element = viewRoot;\n    this.column.layoutContext = column.layoutContext.clone();\n    this.column.stopAtOverflow = false;\n    this.column.flowRootFormattingContext = parentNodeContext.formattingContext;\n    this.column.pseudoParent = column;\n    const parentClonedPaddingBorder =\n      this.column.calculateClonedPaddingBorder(parentNodeContext);\n    this.column.footnoteEdge =\n      this.column.footnoteEdge - parentClonedPaddingBorder;\n    const pseudoColumn = this;\n    this.column.openAllViews = function (position) {\n      return Column.prototype.openAllViews\n        .call(this, position)\n        .thenAsync((result) => {\n          pseudoColumn.startNodeContexts.push(result.copy());\n          return Task.newResult(result);\n        });\n    };\n  }\n  /**\n   * @param chunkPosition starting position.\n   * @return holding end position.\n   */\n  layout(\n    chunkPosition: Vtree.ChunkPosition,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.ChunkPosition> {\n    return this.column.layout(chunkPosition, leadingEdge);\n  }\n  findAcceptableBreakPosition(\n    allowBreakAtStartPosition: boolean,\n  ): Layout.BreakPositionAndNodeContext {\n    const p = this.column.findAcceptableBreakPosition();\n    if (allowBreakAtStartPosition) {\n      const startNodeContext = this.startNodeContexts[0].copy();\n      const bp = new BreakPosition.EdgeBreakPosition(\n        startNodeContext,\n        null,\n        startNodeContext.overflow,\n        0,\n      );\n      bp.findAcceptableBreak(this.column, 0);\n      if (!p.nodeContext) {\n        return { breakPosition: bp, nodeContext: startNodeContext };\n      }\n    }\n    return p;\n  }\n  /**\n   * @return holing true\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    return this.column.finishBreak(nodeContext, forceRemoveSelf, endOfColumn);\n  }\n  doFinishBreakOfFragmentLayoutConstraints(positionAfter: Vtree.NodeContext) {\n    this.column.doFinishBreakOfFragmentLayoutConstraints(positionAfter);\n  }\n  isStartNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    const startNodeContext = this.startNodeContexts[0];\n    return (\n      startNodeContext.viewNode === nodeContext.viewNode &&\n      startNodeContext.after === nodeContext.after &&\n      startNodeContext.offsetInNode === nodeContext.offsetInNode\n    );\n  }\n  isLastAfterNodeContext(nodeContext: Vtree.NodeContext): boolean {\n    return VtreeImpl.isSameNodePosition(\n      nodeContext.toNodePosition(),\n      this.column.lastAfterPosition,\n    );\n  }\n  getColumnElement(): Element {\n    return this.column.element;\n  }\n  getColumn(): Layout.Column {\n    return this.column;\n  }\n}\n\nexport type SinglePageFloatLayoutResult = Layout.SinglePageFloatLayoutResult;\n\nexport function fixJustificationOnHyphen(\n  nodeContext: Vtree.NodeContext,\n  insertAfter: boolean,\n  node: Node,\n  insertionPoint: Node,\n): void {\n  if (Base.checkSoftWrapOpportunityAfterHyphenBug(document.body)) {\n    const hyphenChar = resolveHyphenateCharacter(nodeContext);\n    const prevSibling = insertAfter ? node : node.previousSibling;\n    const prevText = prevSibling ? prevSibling.textContent : \"\";\n    if (prevText.charAt(prevText.length - 1) === hyphenChar) {\n      const doc = node.ownerDocument;\n      const parent = node.parentNode;\n      if (Base.checkSoftWrapOpportunityByWbrBug(document.body)) {\n        // For IE\n        parent.insertBefore(doc.createTextNode(\" \"), insertionPoint);\n      } else {\n        // For Edge\n        parent.insertBefore(doc.createElement(\"wbr\"), insertionPoint);\n      }\n    }\n  }\n}\n\n/**\n * breaking point resolver for Text Node.\n */\nexport class TextNodeBreaker implements Layout.TextNodeBreaker {\n  breakTextNode(\n    textNode: Text,\n    nodeContext: Vtree.NodeContext,\n    low: number,\n    checkPoints: Vtree.NodeContext[],\n    checkpointIndex: number,\n    force: boolean,\n  ): Vtree.NodeContext {\n    if (nodeContext.after) {\n      nodeContext.offsetInNode = textNode.length;\n    } else {\n      // Character with index low is the last one that fits.\n      let viewIndex = low - nodeContext.boxOffset;\n      const text = textNode.data;\n      if (text.charCodeAt(viewIndex) == 173) {\n        viewIndex = this.breakAfterSoftHyphen(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      } else {\n        viewIndex = this.breakAfterOtherCharacter(\n          textNode,\n          text,\n          viewIndex,\n          nodeContext,\n        );\n      }\n      if (viewIndex > 0) {\n        nodeContext = this.updateNodeContext(nodeContext, viewIndex, textNode);\n      }\n    }\n    return nodeContext;\n  }\n\n  breakAfterSoftHyphen(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // convert trailing soft hyphen to a real hyphen\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord ? resolveHyphenateCharacter(nodeContext) : \"\",\n    );\n    return viewIndex + 1;\n  }\n\n  breakAfterOtherCharacter(\n    textNode: Text,\n    text: string,\n    viewIndex: number,\n    nodeContext: Vtree.NodeContext,\n  ): number {\n    // keep the trailing character (it may be a space or not)\n    const ch0 = text.charAt(viewIndex);\n    viewIndex++;\n    const ch1 = text.charAt(viewIndex);\n\n    // If automatic hyphen was inserted here, add a real hyphen.\n    textNode.replaceData(\n      viewIndex,\n      text.length - viewIndex,\n      !nodeContext.breakWord && Base.isLetter(ch0) && Base.isLetter(ch1)\n        ? resolveHyphenateCharacter(nodeContext)\n        : \"\",\n    );\n    return viewIndex;\n  }\n\n  updateNodeContext(\n    nodeContext: Vtree.NodeContext,\n    viewIndex: number,\n    textNode: Text,\n  ): Vtree.NodeContext {\n    nodeContext = nodeContext.modify();\n    nodeContext.offsetInNode += viewIndex;\n    nodeContext.breakBefore = null;\n    return nodeContext;\n  }\n\n  static instance: TextNodeBreaker;\n}\nTextNodeBreaker.instance = new TextNodeBreaker();\n\nexport function resolveHyphenateCharacter(\n  nodeContext: Vtree.NodeContext,\n): string {\n  return (\n    nodeContext.hyphenateCharacter ||\n    (nodeContext.parent && nodeContext.parent.hyphenateCharacter) ||\n    \"-\"\n  );\n}\n\nexport class ColumnLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  breakAfter: string | null;\n  private initialPageBreakType: string | null = null;\n  initialComputedBlockSize: number = 0;\n  private initialOverflown: boolean = false;\n  context: { overflownNodeContext: Vtree.NodeContext } = {\n    overflownNodeContext: null,\n  };\n\n  constructor(\n    public readonly leadingEdge: boolean,\n    breakAfter?: string | null,\n  ) {\n    super();\n    this.breakAfter = breakAfter || null;\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): Layout.LayoutMode {\n    return new DefaultLayoutMode(\n      this.leadingEdge,\n      this.breakAfter,\n      this.context,\n    );\n  }\n\n  /**\n   * @override\n   */\n  prepareLayout(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    column.fragmentLayoutConstraints = [];\n    if (!column.pseudoParent) {\n      Shared.clearRepetitiveElementsCache();\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    let nodeContext = initialPosition;\n    while (nodeContext) {\n      const viewNode = nodeContext.viewNode;\n      if (viewNode) {\n        LayoutHelper.removeFollowingSiblings(viewNode.parentNode, viewNode);\n      }\n      nodeContext = nodeContext.parent;\n    }\n  }\n\n  /**\n   * @override\n   */\n  saveState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.saveState(nodeContext, column);\n    this.initialPageBreakType = column.pageBreakType;\n    this.initialComputedBlockSize = column.computedBlockSize;\n    this.initialOverflown = column.overflown;\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    column.pageBreakType = this.initialPageBreakType;\n    column.computedBlockSize = this.initialComputedBlockSize;\n    column.overflown = this.initialOverflown;\n  }\n}\n\nexport class DefaultLayoutMode implements Layout.LayoutMode {\n  constructor(\n    public readonly leadingEdge: boolean,\n    public readonly breakAfter: string | null,\n    public readonly context: { overflownNodeContext: Vtree.NodeContext },\n  ) {}\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\n      \"DefaultLayoutMode.doLayout\",\n    );\n\n    processAfterIfContinuesOfAncestors(nodeContext, column).then(() => {\n      column\n        .doLayout(nodeContext, this.leadingEdge, this.breakAfter)\n        .then((result) => {\n          this.context.overflownNodeContext = result.overflownNodeContext;\n          frame.finish(result.nodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: Layout.Column): boolean {\n    if (column.pageFloatLayoutContext.isInvalidated() || column.pageBreakType) {\n      return true;\n    }\n    if (column.fragmentLayoutConstraints.length <= 0) {\n      return true;\n    }\n    return column.fragmentLayoutConstraints.every((constraint) =>\n      constraint.allowLayout(\n        nodeContext,\n        this.context.overflownNodeContext,\n        column,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n    accepted: boolean,\n  ): boolean {\n    if (!accepted) {\n      const hasNextCandidate = column.fragmentLayoutConstraints.some(\n        (constraint) => constraint.nextCandidate(positionAfter),\n      );\n\n      // If there is no next candidate, we accept the current layout trial.\n      // Later Column#doFinishBreak decides whether the overflowing content\n      // should be placed as is or be deferred to the next column,\n      // depending on the value of Column#forceNonfitting.\n      accepted = !hasNextCandidate;\n    }\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      constraint.postLayout(accepted, positionAfter, initialPosition, column);\n    });\n    return accepted;\n  }\n}\n\nexport class PageFloatArea extends Column implements Layout.PageFloatArea {\n  private rootViewNodes: Element[] = [];\n  private floatMargins: GeometryUtil.Insets[] = [];\n  adjustContentRelativeSize: boolean = true;\n\n  constructor(\n    public readonly floatSide: string,\n    element: Element,\n    layoutContext: Vtree.LayoutContext,\n    clientLayout: Vtree.ClientLayout,\n    layoutConstraint: LayoutConstraint,\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    public readonly parentContainer: Vtree.Container,\n  ) {\n    super(\n      element,\n      layoutContext,\n      clientLayout,\n      layoutConstraint,\n      pageFloatLayoutContext,\n    );\n  }\n\n  /**\n   * @override\n   */\n  openAllViews(position: Vtree.NodePosition): Task.Result<Vtree.NodeContext> {\n    return super.openAllViews(position).thenAsync((nodeContext) => {\n      if (nodeContext) {\n        this.fixFloatSizeAndPosition(nodeContext);\n      }\n      return Task.newResult(nodeContext);\n    });\n  }\n\n  convertPercentageSizesToPx(target: Element) {\n    const containingBlockRect = this.parentContainer.getPaddingRect();\n    const refWidth = containingBlockRect.x2 - containingBlockRect.x1;\n    const refHeight = containingBlockRect.y2 - containingBlockRect.y1;\n\n    function convertPercentageToPx(props: string[], refValue: number) {\n      props.forEach((propName) => {\n        const valueString = Base.getCSSProperty(target, propName);\n        if (valueString && valueString.charAt(valueString.length - 1) === \"%\") {\n          const percentageValue = parseFloat(valueString);\n          const value = (refValue * percentageValue) / 100;\n          Base.setCSSProperty(target, propName, `${value}px`);\n        }\n      });\n    }\n    convertPercentageToPx([\"width\", \"max-width\", \"min-width\"], refWidth);\n    convertPercentageToPx([\"height\", \"max-height\", \"min-height\"], refHeight);\n    convertPercentageToPx(\n      [\n        \"margin-top\",\n        \"margin-right\",\n        \"margin-bottom\",\n        \"margin-left\",\n        \"padding-top\",\n        \"padding-right\",\n        \"padding-bottom\",\n        \"padding-left\",\n      ],\n      this.vertical ? refHeight : refWidth,\n    );\n    [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"].forEach(\n      (propName) => {\n        const value = Base.getCSSProperty(target, propName);\n        if (value === \"auto\") {\n          Base.setCSSProperty(target, propName, \"0\");\n        }\n      },\n    );\n  }\n\n  fixFloatSizeAndPosition(nodeContext: Vtree.NodeContext) {\n    while (nodeContext.parent) {\n      nodeContext = nodeContext.parent;\n    }\n    Asserts.assert(nodeContext.viewNode.nodeType === 1);\n    const rootViewNode = nodeContext.viewNode as Element;\n    this.rootViewNodes.push(rootViewNode);\n    if (this.adjustContentRelativeSize) {\n      this.convertPercentageSizesToPx(rootViewNode);\n    }\n    this.floatMargins.push(this.getComputedMargin(rootViewNode));\n    if (this.adjustContentRelativeSize) {\n      const floatSide = this.floatSide;\n      const isVertical = this.parentContainer.vertical;\n      if (isVertical) {\n        if (floatSide === \"block-end\" || floatSide === \"left\") {\n          const height = Base.getCSSProperty(rootViewNode, \"height\");\n          if (height !== \"\" && height !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-top\", \"auto\");\n          }\n        }\n      } else {\n        if (floatSide === \"block-end\" || floatSide === \"bottom\") {\n          const width = Base.getCSSProperty(rootViewNode, \"width\");\n          if (width !== \"\" && width !== \"auto\") {\n            Base.setCSSProperty(rootViewNode, \"margin-left\", \"auto\");\n          }\n        }\n      }\n    }\n  }\n\n  getContentInlineSize(): number {\n    return Math.max.apply(\n      null,\n      this.rootViewNodes.map((r, i) => {\n        const box = this.clientLayout.getElementClientRect(r);\n        const margin = this.floatMargins[i];\n        return this.vertical\n          ? margin.top + box.height + margin.bottom\n          : margin.left + box.width + margin.right;\n      }),\n    );\n  }\n}\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview RepetitiveElement - Elements repeated in every fragment\n * by repeat-on-break property.\n */\nimport * as Asserts from \"./asserts\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as Shared from \"./shared\";\nimport * as Task from \"./task\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class RepetitiveElementsOwnerFormattingContext\n  implements RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n{\n  formattingContextType: FormattingContextType = \"RepetitiveElementsOwner\";\n  isRoot: boolean = false;\n  repetitiveElements: RepetitiveElement.RepetitiveElements = null;\n\n  constructor(\n    public readonly parent: Vtree.FormattingContext,\n    public readonly rootSourceNode: Element,\n  ) {}\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Repetitive elements owner formatting context (RepetitiveElementsOwnerFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    return firstTime;\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    return this.repetitiveElements;\n  }\n\n  getRootViewNode(position: Vtree.NodeContext): Element | null {\n    const root = this.getRootNodeContext(position);\n    return root ? (root.viewNode as Element) : null;\n  }\n\n  getRootNodeContext(nodeContext: Vtree.NodeContext): Vtree.NodeContext | null {\n    do {\n      if (\n        !nodeContext.belongsTo(this) &&\n        nodeContext.sourceNode === this.rootSourceNode\n      ) {\n        return nodeContext;\n      }\n    } while ((nodeContext = nodeContext.parent));\n    return null;\n  }\n\n  initializeRepetitiveElements(vertical: boolean) {\n    if (this.repetitiveElements) {\n      return;\n    }\n    const found = Shared.repetitiveElementsCache.some((entry) => {\n      if (entry.root === this.rootSourceNode) {\n        this.repetitiveElements = entry.elements;\n        return true;\n      }\n      return false;\n    });\n    if (!found) {\n      this.repetitiveElements = new RepetitiveElements(\n        vertical,\n        this.rootSourceNode,\n      );\n      Shared.repetitiveElementsCache.push({\n        root: this.rootSourceNode,\n        elements: this.repetitiveElements,\n      });\n    }\n  }\n\n  /** @override */\n  saveState(): any {}\n\n  /** @override */\n  restoreState(state: any) {}\n}\n\nexport type ElementsOffset = RepetitiveElement.ElementsOffset;\n\nexport class RepetitiveElements\n  implements RepetitiveElement.RepetitiveElements\n{\n  private headerSourceNode: Element | null = null;\n  private footerSourceNode: Element | null = null;\n  private headerViewNode: Element | null = null;\n  private footerViewNode: Element | null = null;\n  private headerNodePosition: Vtree.NodePosition | null = null;\n  private footerNodePosition: Vtree.NodePosition | null = null;\n  private headerHeight: number = 0;\n  private footerHeight: number = 0;\n  isSkipHeader: boolean = false;\n  isSkipFooter: boolean = false;\n  enableSkippingFooter: boolean = true;\n  enableSkippingHeader: boolean = true;\n  doneInitialLayout: boolean = false;\n  firstContentSourceNode: Element | null = null;\n  lastContentSourceNode: Element | null = null;\n  private affectedNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  private afterLastContentNodeCache: {\n    nodeContext: Vtree.NodeContext;\n    result: boolean;\n  }[] = [];\n  allowInsert: boolean = false;\n  allowInsertRepeatitiveElements: boolean;\n\n  constructor(\n    private readonly vertical: boolean,\n    public ownerSourceNode: Element,\n  ) {}\n\n  setHeaderNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.headerNodePosition) {\n      return; // use first one.\n    }\n    this.headerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.headerSourceNode = nodeContext.sourceNode as Element;\n    this.headerViewNode = nodeContext.viewNode as Element;\n  }\n\n  setFooterNodeContext(nodeContext: Vtree.NodeContext) {\n    if (this.footerNodePosition) {\n      return; // use first one.\n    }\n    this.footerNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n      nodeContext,\n      0,\n    );\n    this.footerSourceNode = nodeContext.sourceNode as Element;\n    this.footerViewNode = nodeContext.viewNode as Element;\n  }\n\n  updateHeight(column: LayoutType.Column) {\n    if (this.headerViewNode) {\n      this.headerHeight = LayoutHelper.getElementHeight(\n        this.headerViewNode,\n        column,\n        this.vertical,\n      );\n      this.headerViewNode = null;\n    }\n    if (this.footerViewNode) {\n      this.footerHeight = LayoutHelper.getElementHeight(\n        this.footerViewNode,\n        column,\n        this.vertical,\n      );\n      this.footerViewNode = null;\n    }\n  }\n\n  prepareLayoutFragment() {\n    this.isSkipHeader = this.isSkipFooter = false;\n    this.enableSkippingFooter = true;\n    this.enableSkippingHeader = true;\n  }\n\n  appendHeaderToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.headerNodePosition || this.isSkipHeader) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.headerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  appendFooterToFragment(\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    if (!this.footerNodePosition || this.isSkipFooter) {\n      return Task.newResult(true);\n    }\n    return this.appendElementToFragment(\n      this.footerNodePosition,\n      rootNodeContext,\n      firstChild,\n      column,\n    );\n  }\n\n  /**\n   * @return\n   */\n  appendElementToFragment(\n    nodePosition: Vtree.NodePosition,\n    rootNodeContext: Vtree.NodeContext,\n    firstChild: Node | null,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const doc = rootNodeContext.viewNode.ownerDocument;\n    const rootViewNode = rootNodeContext.viewNode as Element;\n    const viewRoot = doc.createElement(\"div\");\n    rootViewNode.appendChild(viewRoot);\n    const pseudoColumn = new Layout.PseudoColumn(\n      column,\n      viewRoot,\n      rootNodeContext,\n    );\n    const initialPageBreakType = pseudoColumn.getColumn().pageBreakType;\n    pseudoColumn.getColumn().pageBreakType = null;\n    this.allowInsertRepeatitiveElements = true;\n    return pseudoColumn\n      .layout(new VtreeImpl.ChunkPosition(nodePosition), true)\n      .thenAsync(() => {\n        this.allowInsertRepeatitiveElements = false;\n        rootViewNode.removeChild(viewRoot);\n        this.moveChildren(viewRoot, rootViewNode, firstChild);\n        pseudoColumn.getColumn().pageBreakType = initialPageBreakType;\n        return Task.newResult(true);\n      });\n  }\n\n  moveChildren(from: Element, to: Element, firstChild: Node | null) {\n    if (!to) {\n      return;\n    }\n    while (from.firstChild) {\n      const child = from.firstChild;\n      from.removeChild(child);\n      (child as Element).setAttribute(VtreeImpl.SPECIAL_ATTR, \"1\");\n      if (firstChild) {\n        to.insertBefore(child, firstChild);\n      } else {\n        to.appendChild(child);\n      }\n    }\n  }\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (\n      !this.isSkipFooter ||\n      (nodeContext && this.isAfterLastContent(nodeContext))\n    ) {\n      offset += this.footerHeight;\n    }\n    if (!this.isSkipHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    let offset = 0;\n    if (nodeContext && !this.affectTo(nodeContext)) {\n      return offset;\n    }\n    if (nodeContext && this.isAfterLastContent(nodeContext)) {\n      offset += this.footerHeight;\n    }\n    if (!this.enableSkippingHeader) {\n      offset += this.headerHeight;\n    }\n    return offset;\n  }\n\n  isAfterLastContent(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(\n      nodeContext,\n      this.afterLastContentNodeCache,\n      (nc) =>\n        this.isAfterNodeContextOf(\n          this.lastContentSourceNode as Element,\n          nodeContext,\n          false,\n        ),\n    );\n  }\n\n  private affectTo(nodeContext: Vtree.NodeContext): boolean {\n    return this.findResultFromCache(nodeContext, this.affectedNodeCache, (nc) =>\n      this.isAfterNodeContextOf(this.ownerSourceNode, nodeContext, true),\n    );\n  }\n\n  private findResultFromCache(\n    nodeContext: Vtree.NodeContext,\n    cache: { nodeContext: Vtree.NodeContext; result: boolean }[],\n    calculator: (p1: Vtree.NodeContext) => boolean,\n  ): boolean {\n    const cacheEntry = cache.filter(\n      (cache) =>\n        cache.nodeContext.sourceNode === nodeContext.sourceNode &&\n        cache.nodeContext.after === nodeContext.after,\n    );\n    if (cacheEntry.length > 0) {\n      return cacheEntry[0].result;\n    } else {\n      const result = calculator(nodeContext);\n      cache.push({ nodeContext, result });\n      return result;\n    }\n  }\n\n  private isAfterNodeContextOf(\n    node: Element,\n    nodeContext: Vtree.NodeContext,\n    includeChildren: boolean,\n  ): boolean {\n    const parentsOfNode = [];\n    for (let n: Node | null = node; n; n = n.parentNode) {\n      if (nodeContext.sourceNode === n) {\n        return nodeContext.after;\n      } else {\n        parentsOfNode.push(n);\n      }\n    }\n    for (\n      let currentParent: Node | null = nodeContext.sourceNode;\n      currentParent;\n      currentParent = currentParent.parentNode\n    ) {\n      const index = parentsOfNode.indexOf(currentParent);\n      if (index >= 0) {\n        return includeChildren ? index === 0 : false;\n      } else {\n        for (\n          let current: Element | null = currentParent as Element;\n          current;\n          current = current.previousElementSibling\n        ) {\n          if (parentsOfNode.includes(current)) {\n            return true;\n          }\n        }\n      }\n    }\n    return nodeContext.after;\n  }\n\n  isFirstContentNode(nodeContext: Vtree.NodeContext): boolean {\n    return (\n      nodeContext && this.firstContentSourceNode === nodeContext.sourceNode\n    );\n  }\n\n  isEnableToUpdateState(): boolean {\n    if (\n      (!this.isSkipFooter &&\n        this.enableSkippingFooter &&\n        this.footerNodePosition) ||\n      (!this.isSkipHeader &&\n        this.enableSkippingHeader &&\n        this.headerNodePosition)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  updateState() {\n    if (\n      !this.isSkipFooter &&\n      this.enableSkippingFooter &&\n      this.footerNodePosition\n    ) {\n      this.isSkipFooter = true;\n    } else if (\n      !this.isSkipHeader &&\n      this.enableSkippingHeader &&\n      this.headerNodePosition\n    ) {\n      this.isSkipHeader = true;\n    }\n  }\n\n  preventSkippingHeader() {\n    this.isSkipHeader = false;\n    this.enableSkippingHeader = false;\n  }\n\n  preventSkippingFooter() {\n    this.isSkipFooter = false;\n    this.enableSkippingFooter = false;\n  }\n\n  isHeaderRegistered(): boolean {\n    return !!this.headerNodePosition;\n  }\n\n  isFooterRegistered(): boolean {\n    return !!this.footerNodePosition;\n  }\n\n  isHeaderSourceNode(node: Node): boolean {\n    return this.headerSourceNode === node;\n  }\n\n  isFooterSourceNode(node: Node): boolean {\n    return this.footerSourceNode === node;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutEntireBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return !!nodeContext;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (repetitiveElements) {\n      Asserts.assert(column.clientLayout);\n      if (!repetitiveElements.doneInitialLayout) {\n        repetitiveElements.updateHeight(column);\n        repetitiveElements.doneInitialLayout = true;\n      }\n    }\n    return accepted;\n  }\n}\n\n/**\n * @abstract\n */\nexport abstract class LayoutFragmentedBlock implements LayoutType.LayoutMode {\n  constructor(\n    public formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  ) {}\n\n  /**\n   * @override\n   */\n  abstract doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext>;\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n    accepted: boolean,\n  ): boolean {\n    return accepted;\n  }\n}\n\nexport class LayoutEntireOwnerBlock extends LayoutEntireBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    // FIXME: LayoutEntireBlock.prototype.doLayout is undefined because it's abstract method.\n    //        Probably, removing this call is ok.\n    // LayoutEntireBlock.prototype.doLayout.call(this, nodeContext, column);\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n\n  /**\n   * @override\n   */\n  accept(nodeContext: Vtree.NodeContext, column: LayoutType.Column): boolean {\n    return false;\n  }\n}\n\nexport class LayoutFragmentedOwnerBlock extends LayoutFragmentedBlock {\n  constructor(\n    formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    if (!nodeContext.belongsTo(this.formattingContext) && !nodeContext.after) {\n      column.fragmentLayoutConstraints.unshift(\n        new RepetitiveElementsOwnerLayoutConstraint(nodeContext),\n      );\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutConstraint\n  implements RepetitiveElement.RepetitiveElementsOwnerLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType =\n    \"RepetitiveElementsOwner\";\n  nodeContext: Vtree.NodeContext;\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    this.nodeContext = formattingContext.getRootNodeContext(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (repetitiveElements.isEnableToUpdateState()) {\n      repetitiveElements.updateState();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ) {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return;\n    }\n    if (allowed) {\n      if (column.stopAtOverflow) {\n        if (\n          positionAfter == null ||\n          repetitiveElements.isAfterLastContent(positionAfter)\n        ) {\n          repetitiveElements.preventSkippingFooter();\n        }\n      }\n    }\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return Task.newResult(true);\n    }\n    const rootNodeContext = this.nodeContext;\n    return appendHeader(formattingContext, rootNodeContext, column).thenAsync(\n      () =>\n        appendFooter(formattingContext, rootNodeContext, column).thenAsync(\n          () => {\n            repetitiveElements.prepareLayoutFragment();\n            return Task.newResult(true);\n          },\n        ),\n    );\n  }\n\n  getRepetitiveElements(): RepetitiveElement.RepetitiveElements {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    return formattingContext.getRepetitiveElements();\n  }\n\n  /** @override */\n  equalsTo(constraint: LayoutType.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof RepetitiveElementsOwnerLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getRepetitiveElementsOwnerFormattingContext(\n        this.nodeContext.formattingContext,\n      ) ===\n      getRepetitiveElementsOwnerFormattingContext(\n        constraint.nodeContext.formattingContext,\n      )\n    );\n  }\n\n  /** @override */\n  getPriorityOfFinishBreak(): number {\n    return 10;\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    private readonly processor: RepetitiveElementsOwnerLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      !nodeContext.belongsTo(this.formattingContext) &&\n      !repetitiveElements.doneInitialLayout\n    ) {\n      return new LayoutEntireOwnerBlock(this.formattingContext, this.processor);\n    } else {\n      if (\n        !nodeContext.belongsTo(this.formattingContext) &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedOwnerBlock(\n        this.formattingContext,\n        this.processor,\n      );\n    }\n  }\n}\n\nexport class EntireBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (\n      nodeContext.parent &&\n      formattingContext.rootSourceNode === nodeContext.parent.sourceNode\n    ) {\n      switch (nodeContext.repeatOnBreak) {\n        case \"header\":\n          if (!repetitiveElements.isHeaderRegistered()) {\n            repetitiveElements.setHeaderNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n        case \"footer\":\n          if (!repetitiveElements.isFooterRegistered()) {\n            repetitiveElements.setFooterNodeContext(nodeContext);\n            return Task.newResult(true);\n          } else {\n            nodeContext.repeatOnBreak = \"none\";\n          }\n          break;\n      }\n      if (!repetitiveElements.firstContentSourceNode) {\n        repetitiveElements.firstContentSourceNode =\n          nodeContext.sourceNode as Element;\n      }\n    }\n    return LayoutUtil.EdgeSkipper.prototype.startNonInlineElementNode.call(\n      this,\n      state,\n    );\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    if (nodeContext.sourceNode === formattingContext.rootSourceNode) {\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    }\n    if (\n      nodeContext.repeatOnBreak === \"header\" ||\n      nodeContext.repeatOnBreak === \"footer\"\n    ) {\n      return Task.newResult(true);\n    } else {\n      return LayoutUtil.EdgeSkipper.prototype.afterNonInlineElementNode.call(\n        this,\n        state,\n      );\n    }\n  }\n}\n\nexport class FragmentedBlockLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  constructor(\n    public readonly formattingContext: RepetitiveElementsOwnerFormattingContext,\n    public readonly column: LayoutType.Column,\n  ) {\n    super();\n  }\n}\n\nexport class RepetitiveElementsOwnerLayoutProcessor\n  extends LayoutProcessor.BlockLayoutProcessor\n  implements LayoutProcessor.LayoutProcessor\n{\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    if (column.isFloatNodeContext(nodeContext)) {\n      return column.layoutFloatOrFootnote(nodeContext);\n    }\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        appendHeaderToAncestors(nodeContext.parent, column);\n      }\n      if (!nodeContext.belongsTo(formattingContext)) {\n        return new RepetitiveElementsOwnerLayoutRetryer(\n          formattingContext,\n          this,\n        ).layout(nodeContext, column);\n      } else {\n        return LayoutProcessor.BlockLayoutProcessor.prototype.layout.call(\n          this,\n          nodeContext,\n          column,\n          leadingEdge,\n        );\n      }\n    }\n  }\n\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext =\n      getRepetitiveElementsOwnerFormattingContextOrNull(nodeContext);\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return false;\n    }\n    if (\n      !repetitiveElements.allowInsertRepeatitiveElements &&\n      (repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode) ||\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode))\n    ) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    }\n    return false;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"BlockLayoutProcessor.doInitialLayout\",\n    );\n    this.layoutEntireBlock(nodeContext, column).thenFinish(frame);\n    return frame.result();\n  }\n\n  private layoutEntireBlock(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireBlockLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: LayoutType.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getRepetitiveElementsOwnerFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"doLayout\");\n    const cont = column.layoutContext.nextInTree(nodeContext, false);\n    Layout.processAfterIfContinues(cont, column).then((resNodeContext) => {\n      let nextNodeContext = resNodeContext;\n      frame\n        .loopWithFrame((loopFrame) => {\n          while (nextNodeContext) {\n            let pending = true;\n            column\n              .layoutNext(nextNodeContext, false)\n              .then((nodeContextParam) => {\n                nextNodeContext = nodeContextParam;\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                } else if (column.pageBreakType) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  column.stopByOverflow(nextNodeContext)\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else if (\n                  nextNodeContext &&\n                  nextNodeContext.after &&\n                  nextNodeContext.sourceNode == formattingContext.rootSourceNode\n                ) {\n                  loopFrame.breakLoop(); // Loop end\n                } else {\n                  if (pending) {\n                    // Sync case\n                    pending = false;\n                  } else {\n                    // Async case\n                    loopFrame.continueLoop();\n                  }\n                }\n              });\n            if (pending) {\n              // Async case and loop end\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync case\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          frame.finish(nextNodeContext);\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: LayoutType.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> | null {\n    return LayoutProcessor.BlockLayoutProcessor.prototype.finishBreak.call(\n      this,\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /**\n   * @override\n   */\n  clearOverflownViewNodes(\n    column: LayoutType.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction eachAncestorNodeContext(\n  nodeContext: Vtree.NodeContext,\n  callback: (\n    p1: RepetitiveElementsOwnerFormattingContext,\n    p2: Vtree.NodeContext,\n  ) => any,\n): void {\n  for (let nc = nodeContext; nc; nc = nc.parent) {\n    const formattingContext = nc.formattingContext;\n    if (\n      formattingContext &&\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !nc.belongsTo(formattingContext)\n    ) {\n      callback(formattingContext, nc);\n    }\n  }\n}\n\nexport function appendHeaderToAncestors(\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): void {\n  if (!nodeContext) {\n    return;\n  }\n  eachAncestorNodeContext(\n    nodeContext.after ? nodeContext.parent : nodeContext,\n    (formattingContext, nc) => {\n      if (Table.isInstanceOfTableFormattingContext(formattingContext)) {\n        return;\n      }\n      column.fragmentLayoutConstraints.push(\n        new RepetitiveElementsOwnerLayoutConstraint(nc),\n      );\n    },\n  );\n}\n\nexport function appendHeader(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n    if (rootNodeContext.viewNode) {\n      const firstChild = rootNodeContext.viewNode.firstChild;\n      return repetitiveElements.appendHeaderToFragment(\n        rootNodeContext,\n        firstChild,\n        column,\n      );\n    }\n  }\n  return Task.newResult(true);\n}\n\nexport function appendFooter(\n  formattingContext: RepetitiveElement.RepetitiveElementsOwnerFormattingContext,\n  nodeContext: Vtree.NodeContext,\n  column: LayoutType.Column,\n): Task.Result<boolean> {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (repetitiveElements) {\n    if (!repetitiveElements.isSkipFooter) {\n      const rootNodeContext = formattingContext.getRootNodeContext(nodeContext);\n      if (rootNodeContext.viewNode) {\n        return repetitiveElements.appendFooterToFragment(\n          rootNodeContext,\n          null,\n          column,\n        );\n      }\n    }\n  }\n  return Task.newResult(true);\n}\n\nfunction getRepetitiveElementsOwnerFormattingContextOrNull(\n  nodeContext: Vtree.NodeContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext | null {\n  const formattingContext = nodeContext.formattingContext;\n  if (!formattingContext) {\n    return null;\n  }\n  if (\n    !(formattingContext instanceof RepetitiveElementsOwnerFormattingContext)\n  ) {\n    return null;\n  }\n  return formattingContext;\n}\n\nfunction getRepetitiveElementsOwnerFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): RepetitiveElement.RepetitiveElementsOwnerFormattingContext {\n  Asserts.assert(\n    formattingContext instanceof RepetitiveElementsOwnerFormattingContext,\n  );\n  return formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext;\n}\n\nconst repetitiveLayoutProcessor = new RepetitiveElementsOwnerLayoutProcessor();\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  (formattingContext) => {\n    if (\n      formattingContext instanceof RepetitiveElementsOwnerFormattingContext &&\n      !Table.isInstanceOfTableFormattingContext(formattingContext)\n    ) {\n      return repetitiveLayoutProcessor;\n    }\n    return null;\n  },\n);\n","/**\n * Copyright 2016 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Table - Table formatting context and layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as BreakPosition from \"./break-position\";\nimport * as Css from \"./css\";\nimport * as LayoutHelper from \"./layout-helper\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as LayoutRetryers from \"./layout-retryers\";\nimport * as LayoutUtil from \"./layout-util\";\nimport * as Plugin from \"./plugin\";\nimport * as RepetitiveElementImpl from \"./repetitive-element\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as VtreeImpl from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport {\n  FormattingContextType,\n  FragmentLayoutConstraintType,\n  Layout as LayoutType,\n  RepetitiveElement,\n  Table,\n  Vtree,\n} from \"./types\";\n\nexport class TableRow {\n  cells: TableCell[] = [];\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly sourceNode: Node,\n  ) {}\n\n  addCell(cell: TableCell) {\n    this.cells.push(cell);\n  }\n\n  getMinimumHeight(): number {\n    return Math.min.apply(\n      null,\n      this.cells.map((c) => c.height),\n    );\n  }\n}\n\nexport class TableCell {\n  viewElement: Element | null;\n  colSpan: number;\n  rowSpan: number;\n  height: number = 0;\n  anchorSlot: TableSlot = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    viewElement: Element,\n  ) {\n    this.viewElement = viewElement;\n    this.colSpan = (viewElement as HTMLTableCellElement).colSpan || 1;\n    this.rowSpan = (viewElement as HTMLTableCellElement).rowSpan || 1;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setAnchorSlot(slot: TableSlot) {\n    this.anchorSlot = slot;\n  }\n}\n\nexport class TableSlot {\n  constructor(\n    public readonly rowIndex: number,\n    public readonly columnIndex: number,\n    public readonly cell: TableCell,\n  ) {}\n}\n\nexport class TableCellFragment {\n  pseudoColumn: Layout.PseudoColumn;\n  empty: boolean = false;\n\n  constructor(\n    public readonly column: Layout.Column,\n    pseudoColumnContainer: Element,\n    public readonly cellNodeContext: Vtree.NodeContext,\n  ) {\n    this.pseudoColumn = new Layout.PseudoColumn(\n      column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n  }\n\n  findAcceptableBreakPosition(): Layout.BreakPositionAndNodeContext {\n    const element = this.cellNodeContext.viewNode as Element;\n    const verticalAlign = this.cellNodeContext.verticalAlign;\n    if (verticalAlign === \"middle\" || verticalAlign === \"bottom\") {\n      Base.setCSSProperty(element, \"vertical-align\", \"top\");\n    }\n    const bp = this.pseudoColumn.findAcceptableBreakPosition(true);\n    Base.setCSSProperty(element, \"vertical-align\", verticalAlign);\n    return bp;\n  }\n}\n\nexport class TableCaptionView {\n  constructor(\n    public readonly viewNode: Element,\n    public readonly side: string,\n  ) {}\n}\n\nexport class BetweenTableRowBreakPosition extends BreakPosition.EdgeBreakPosition {\n  private formattingContext: TableFormattingContext;\n\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n  private rowIndex: number | null = null;\n\n  constructor(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ) {\n    super(position, breakOnEdge, overflows, columnBlockSize);\n    this.formattingContext =\n      position.formattingContext as TableFormattingContext;\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    const breakNodeContext = super.findAcceptableBreak(column, penalty);\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const allCellsBreakable = this.getAcceptableCellBreakPositions().every(\n      (bp) => !!bp.nodeContext,\n    );\n    if (allCellsBreakable) {\n      return breakNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    let penalty = super.getMinBreakPenalty();\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const formattingContext = this.formattingContext;\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getRowIndex(): number {\n    if (this.rowIndex != null) {\n      return this.rowIndex;\n    }\n    return (this.rowIndex = this.formattingContext.findRowIndexBySourceNode(\n      this.position.sourceNode,\n    ));\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getRowSpanningCellsOverflowingTheRow(this.getRowIndex())\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport class InsideTableRowBreakPosition extends BreakPosition.AbstractBreakPosition {\n  acceptableCellBreakPositions: Layout.BreakPositionAndNodeContext[] = null;\n\n  constructor(\n    public readonly rowIndex: number,\n    public readonly beforeNodeContext: Vtree.NodeContext,\n    public readonly formattingContext: TableFormattingContext,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  findAcceptableBreak(\n    column: Layout.Column,\n    penalty: number,\n  ): Vtree.NodeContext {\n    if (penalty < this.getMinBreakPenalty()) {\n      return null;\n    }\n    const cellFragments = this.getCellFragments();\n    const acceptableCellBreakPositions = this.getAcceptableCellBreakPositions();\n    const allCellsBreakable =\n      acceptableCellBreakPositions.every((bp) => !!bp.nodeContext) &&\n      acceptableCellBreakPositions.some((bp, index) => {\n        const pseudoColumn = cellFragments[index].pseudoColumn;\n        const nodeContext = bp.nodeContext;\n        return (\n          !pseudoColumn.isStartNodeContext(nodeContext) &&\n          !pseudoColumn.isLastAfterNodeContext(nodeContext)\n        );\n      });\n    this.beforeNodeContext.overflow = acceptableCellBreakPositions.some(\n      (bp) => bp.nodeContext && bp.nodeContext.overflow,\n    );\n    if (allCellsBreakable) {\n      return this.beforeNodeContext;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    const formattingContext = this.formattingContext;\n    const row = formattingContext.getRowByIndex(this.rowIndex);\n    let penalty = 0;\n    if (!formattingContext.isFreelyFragmentableRow(row)) {\n      penalty += 10;\n    }\n    this.getAcceptableCellBreakPositions().forEach((bp) => {\n      penalty += bp.breakPosition.getMinBreakPenalty();\n    });\n    return penalty;\n  }\n\n  getAcceptableCellBreakPositions(): Layout.BreakPositionAndNodeContext[] {\n    if (!this.acceptableCellBreakPositions) {\n      const cellFragments = this.getCellFragments();\n      this.acceptableCellBreakPositions = cellFragments.map((cellFragment) =>\n        cellFragment.findAcceptableBreakPosition(),\n      );\n    }\n    return this.acceptableCellBreakPositions;\n  }\n\n  private getCellFragments() {\n    return this.formattingContext\n      .getCellsFallingOnRow(this.rowIndex)\n      .map(\n        this.formattingContext.getCellFragmentOfCell,\n        this.formattingContext,\n      );\n  }\n}\n\nexport type BrokenTableCellPosition = {\n  cellNodePosition: Vtree.NodePosition;\n  breakChunkPosition: Vtree.ChunkPosition;\n  cell: TableCell;\n};\n\n/**\n * @param tableSourceNode Source node of the table\n */\nexport class TableFormattingContext\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerFormattingContext\n  implements Table.TableFormattingContext\n{\n  formattingContextType: FormattingContextType = \"Table\";\n  vertical: boolean = false;\n  columnCount: number = -1;\n  tableWidth: number = 0;\n  captions: TableCaptionView[] = [];\n  colGroups: DocumentFragment | null = null;\n  colWidths: number[] | null = null;\n  inlineBorderSpacing: number = 0;\n  rows: TableRow[] = [];\n  slots: TableSlot[][] = [];\n  cellFragments: TableCellFragment[][] = [];\n  lastRowViewNode: Element | null = null;\n  cellBreakPositions: BrokenTableCellPosition[] = [];\n  repetitiveElements: RepetitiveElement.RepetitiveElements | null = null;\n\n  constructor(\n    parent: Vtree.FormattingContext,\n    public readonly tableSourceNode: Element,\n  ) {\n    super(parent, tableSourceNode);\n  }\n\n  /**\n   * @override\n   */\n  getName(): string {\n    return \"Table formatting context (Table.TableFormattingContext)\";\n  }\n\n  /**\n   * @override\n   */\n  isFirstTime(nodeContext: Vtree.NodeContext, firstTime: boolean): boolean {\n    if (!firstTime) {\n      return firstTime;\n    }\n    switch (nodeContext.display) {\n      case \"table-row\":\n        return this.cellBreakPositions.length === 0;\n      case \"table-cell\":\n        return !this.cellBreakPositions.some(\n          (p) => p.cellNodePosition.steps[0].node === nodeContext.sourceNode,\n        );\n      default:\n        return firstTime;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getParent(): Vtree.FormattingContext {\n    return this.parent;\n  }\n\n  finishFragment() {\n    this.cellFragments = [];\n  }\n\n  addRow(rowIndex: number, row: TableRow) {\n    this.rows[rowIndex] = row;\n  }\n\n  getRowSlots(rowIndex: number): TableSlot[] {\n    let rowSlots = this.slots[rowIndex];\n    if (!rowSlots) {\n      rowSlots = this.slots[rowIndex] = [];\n    }\n    return rowSlots;\n  }\n\n  addCell(rowIndex: number, cell: TableCell) {\n    let row = this.rows[rowIndex];\n    if (!row) {\n      this.addRow(rowIndex, new TableRow(rowIndex, null));\n      row = this.rows[rowIndex];\n    }\n    Asserts.assert(row);\n    row.addCell(cell);\n    const rowUpper = rowIndex + cell.rowSpan;\n    let rowSlots = this.getRowSlots(rowIndex);\n    let startColIndex = 0;\n    while (rowSlots[startColIndex]) {\n      startColIndex++;\n    }\n    for (; rowIndex < rowUpper; rowIndex++) {\n      rowSlots = this.getRowSlots(rowIndex);\n      for (let i = startColIndex; i < startColIndex + cell.colSpan; i++) {\n        const slot = (rowSlots[i] = new TableSlot(rowIndex, i, cell));\n        if (!cell.anchorSlot) {\n          cell.setAnchorSlot(slot);\n        }\n      }\n    }\n  }\n\n  getRowByIndex(index: number): TableRow {\n    const row = this.rows[index];\n    Asserts.assert(row);\n    return row;\n  }\n\n  findRowIndexBySourceNode(sourceNode: Node): number {\n    return this.rows.findIndex((row) => sourceNode === row.sourceNode);\n  }\n\n  addCellFragment(\n    rowIndex: number,\n    columnIndex: number,\n    cellFragment: TableCellFragment,\n  ) {\n    let list = this.cellFragments[rowIndex];\n    if (!list) {\n      list = this.cellFragments[rowIndex] = [];\n    }\n    list[columnIndex] = cellFragment;\n  }\n\n  getCellsFallingOnRow(rowIndex: number): TableCell[] {\n    const rowSlots = this.getRowSlots(rowIndex);\n    return rowSlots.reduce((uniqueCells, slot) => {\n      if (slot.cell !== uniqueCells[uniqueCells.length - 1]) {\n        return uniqueCells.concat(slot.cell);\n      } else {\n        return uniqueCells;\n      }\n    }, []);\n  }\n\n  getRowSpanningCellsOverflowingTheRow(rowIndex: number): TableCell[] {\n    return this.getCellsFallingOnRow(rowIndex).filter(\n      (cell) => cell.rowIndex + cell.rowSpan - 1 > rowIndex,\n    );\n  }\n\n  getCellFragmentOfCell(cell: TableCell): TableCellFragment {\n    return (\n      this.cellFragments[cell.rowIndex] &&\n      this.cellFragments[cell.rowIndex][cell.columnIndex]\n    );\n  }\n\n  isFreelyFragmentableRow(row: TableRow): boolean {\n    return row.getMinimumHeight() > this.tableWidth / 2;\n  }\n\n  getColumnCount(): number {\n    if (this.columnCount < 0) {\n      this.columnCount = Math.max.apply(\n        null,\n        this.rows.map((row) =>\n          row.cells.reduce((sum, c) => sum + c.colSpan, 0),\n        ),\n      );\n    }\n    return this.columnCount;\n  }\n\n  updateCellSizes(clientLayout: Vtree.ClientLayout) {\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell) => {\n        const rect = clientLayout.getElementClientRect(\n          cell.viewElement as Element,\n        );\n        cell.viewElement = null;\n        cell.setHeight(this.vertical ? rect[\"width\"] : rect[\"height\"]);\n      });\n    });\n  }\n\n  /**\n   * @return position\n   */\n  findCellFromColumn(\n    column: Layout.Column,\n  ): { rowIndex: number; columnIndex: number } | null {\n    if (!column) {\n      return null;\n    }\n    let tableCell: TableCell = null;\n    let row = 0;\n    let col = 0;\n    loop: for (row = 0; row < this.cellFragments.length; row++) {\n      if (!this.cellFragments[row]) {\n        continue;\n      }\n      for (col = 0; col < this.cellFragments[row].length; col++) {\n        if (!this.cellFragments[row][col]) {\n          continue;\n        }\n        if (column === this.cellFragments[row][col].pseudoColumn.getColumn()) {\n          tableCell = this.rows[row].cells[col];\n          break loop;\n        }\n      }\n    }\n    if (!tableCell) {\n      return null;\n    }\n    for (; row < this.slots.length; row++) {\n      for (; col < this.slots[row].length; col++) {\n        const slot = this.slots[row][col];\n        if (slot.cell === tableCell) {\n          return { rowIndex: slot.rowIndex, columnIndex: slot.columnIndex };\n        }\n      }\n    }\n    return null;\n  }\n\n  collectElementsOffsetOfUpperCells(\n    position: { rowIndex: number; columnIndex: number } | null,\n  ): RepetitiveElement.ElementsOffset[] {\n    const collected = [];\n    return this.slots.reduce((repetitiveElements, row, index) => {\n      if (index >= position.rowIndex) {\n        return repetitiveElements;\n      }\n      const cellFragment =\n        row[position.columnIndex] &&\n        this.getCellFragmentOfCell(row[position.columnIndex].cell);\n      if (!cellFragment || collected.includes(cellFragment)) {\n        return repetitiveElements;\n      }\n      this.collectElementsOffsetFromColumn(\n        cellFragment.pseudoColumn.getColumn(),\n        repetitiveElements,\n      );\n      collected.push(cellFragment);\n      return repetitiveElements;\n    }, [] as RepetitiveElement.ElementsOffset[]);\n  }\n\n  collectElementsOffsetOfHighestColumn(): RepetitiveElement.ElementsOffset[] {\n    const elementsInColumn = [];\n    this.rows.forEach((row) => {\n      row.cells.forEach((cell, index) => {\n        if (!elementsInColumn[index]) {\n          elementsInColumn[index] = { collected: [], elements: [] };\n        }\n        const state = elementsInColumn[index];\n        const cellFragment = this.getCellFragmentOfCell(cell);\n        if (!cellFragment || state.collected.includes(cellFragment)) {\n          return;\n        }\n        this.collectElementsOffsetFromColumn(\n          cellFragment.pseudoColumn.getColumn(),\n          state.elements,\n        );\n        state.collected.push(cellFragment);\n      });\n    });\n    return [\n      new ElementsOffsetOfTableCell(\n        elementsInColumn.map((entry) => entry.elements),\n      ),\n    ];\n  }\n\n  private collectElementsOffsetFromColumn(\n    column: LayoutType.Column,\n    repetitiveElements: RepetitiveElement.ElementsOffset[],\n  ) {\n    column.fragmentLayoutConstraints.forEach((constraint) => {\n      if (\n        RepetitiveElement.isInstanceOfRepetitiveElementsOwnerLayoutConstraint(\n          constraint,\n        )\n      ) {\n        const repetitiveElement = constraint.getRepetitiveElements();\n        repetitiveElements.push(repetitiveElement);\n      }\n      if (Table.isInstanceOfTableRowLayoutConstraint(constraint)) {\n        constraint\n          .getElementsOffsetsForTableCell(null)\n          .forEach((repetitiveElement) => {\n            repetitiveElements.push(repetitiveElement);\n          });\n      }\n    });\n  }\n\n  /** @override */\n  saveState(): any {\n    return [].concat(this.cellBreakPositions);\n  }\n\n  /** @override */\n  restoreState(state: any) {\n    this.cellBreakPositions = state as BrokenTableCellPosition[];\n  }\n}\n\nexport class ElementsOffsetOfTableCell\n  implements RepetitiveElement.ElementsOffset\n{\n  constructor(\n    public readonly repeatitiveElementsInColumns: RepetitiveElement.ElementsOffset[][],\n  ) {}\n\n  /** @override */\n  calculateOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.current,\n    );\n  }\n\n  /** @override */\n  calculateMinimumOffset(nodeContext: Vtree.NodeContext): number {\n    return this.calculateMaxOffsetOfColumn(\n      nodeContext,\n      (offsets) => offsets.minimum,\n    );\n  }\n\n  private calculateMaxOffsetOfColumn(nodeContext, resolver) {\n    let maxOffset = 0;\n    this.repeatitiveElementsInColumns.forEach((repetitiveElements) => {\n      const offsets = BreakPosition.calculateOffset(\n        nodeContext,\n        repetitiveElements,\n      );\n      maxOffset = Math.max(maxOffset, resolver(offsets));\n    });\n    return maxOffset;\n  }\n}\n\nfunction getTableFormattingContext(\n  formattingContext: Vtree.FormattingContext,\n): TableFormattingContext {\n  Asserts.assert(formattingContext instanceof TableFormattingContext);\n  return formattingContext as TableFormattingContext;\n}\n\nfunction isTableRowGrouping(display: string | null): boolean {\n  return (\n    display === \"table-row-group\" ||\n    display === \"table-header-group\" ||\n    display === \"table-footer-group\"\n  );\n}\n\nfunction isTableRoot(display: string | null): boolean {\n  return display === \"table\" || display === \"inline-table\";\n}\n\nfunction isValidParentOfTableRow(display: string | null): boolean {\n  return isTableRowGrouping(display) || isTableRoot(display);\n}\n\nfunction skipNestedTable(\n  state: LayoutUtil.LayoutIteratorState,\n  formattingContext: TableFormattingContext,\n  column: Layout.Column,\n): Task.Result<boolean> | null {\n  const nodeContext = state.nodeContext;\n  const display = nodeContext.display;\n  const parentDisplay = nodeContext.parent ? nodeContext.parent.display : null;\n\n  // Is inline-table nested in another table?\n  let isNestedInlineTable = false;\n  if (\n    parentDisplay === \"inline-table\" &&\n    !(nodeContext.formattingContext instanceof TableFormattingContext)\n  ) {\n    for (let nc = nodeContext.parent; nc; nc = nc.parent) {\n      if (nc.formattingContext instanceof TableFormattingContext) {\n        isNestedInlineTable = nc.formattingContext === formattingContext;\n        break;\n      }\n    }\n  }\n  const isNestedTable =\n    isNestedInlineTable ||\n    (display === \"table-row\" && !isValidParentOfTableRow(parentDisplay)) ||\n    (display === \"table-cell\" &&\n      parentDisplay !== \"table-row\" &&\n      !isValidParentOfTableRow(parentDisplay)) ||\n    (nodeContext.formattingContext instanceof TableFormattingContext &&\n      nodeContext.formattingContext !== formattingContext);\n  if (isNestedTable) {\n    return column\n      .buildDeepElementView(nodeContext)\n      .thenAsync((nodeContextAfter) => {\n        state.nodeContext = nodeContextAfter;\n        return Task.newResult(true);\n      });\n  } else {\n    return null;\n  }\n}\n\nexport class EntireTableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  rowIndex: number = -1;\n  columnIndex: number = 0;\n  inRow: boolean = false;\n  checkPoints: Vtree.NodeContext[] = [];\n  inHeaderOrFooter: boolean = false;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const r = skipNestedTable(state, formattingContext, this.column);\n    if (r) {\n      return r;\n    }\n    this.postLayoutBlockContents(state);\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const repetitiveElements = formattingContext.getRepetitiveElements();\n    switch (display) {\n      case \"table\":\n        formattingContext.inlineBorderSpacing = nodeContext.inlineBorderSpacing;\n        break;\n      case \"table-caption\": {\n        const captionView = new TableCaptionView(\n          nodeContext.viewNode as Element,\n          nodeContext.captionSide,\n        );\n        formattingContext.captions.push(captionView);\n        break;\n      }\n      case \"table-header-group\":\n        if (!repetitiveElements.isHeaderRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setHeaderNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-footer-group\":\n        if (!repetitiveElements.isFooterRegistered()) {\n          this.inHeaderOrFooter = true;\n          repetitiveElements.setFooterNodeContext(nodeContext);\n        }\n        return Task.newResult(true);\n      case \"table-row\":\n        if (!this.inHeaderOrFooter) {\n          this.inRow = true;\n          this.rowIndex++;\n          Asserts.assert(nodeContext.sourceNode);\n          this.columnIndex = 0;\n          formattingContext.addRow(\n            this.rowIndex,\n            new TableRow(this.rowIndex, nodeContext.sourceNode),\n          );\n          if (!repetitiveElements.firstContentSourceNode) {\n            repetitiveElements.firstContentSourceNode =\n              nodeContext.sourceNode as Element;\n          }\n        }\n        break;\n    }\n    return super.startNonInlineElementNode(state);\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    const clientLayout = this.column.clientLayout;\n    this.postLayoutBlockContents(state);\n    if (nodeContext.sourceNode === formattingContext.tableSourceNode) {\n      const computedStyle = clientLayout.getElementComputedStyle(\n        formattingContext.getRootViewNode(nodeContext) as Element,\n      );\n      formattingContext.tableWidth = parseFloat(\n        computedStyle[formattingContext.vertical ? \"height\" : \"width\"],\n      );\n      formattingContext.getRepetitiveElements().lastContentSourceNode =\n        state.lastAfterNodeContext &&\n        (state.lastAfterNodeContext.sourceNode as Element);\n      state.break = true;\n    } else {\n      switch (display) {\n        case \"table-header-group\":\n        case \"table-footer-group\":\n          if (this.inHeaderOrFooter) {\n            this.inHeaderOrFooter = false;\n            return Task.newResult(true);\n          }\n          break;\n        case \"table-row\":\n          if (!this.inHeaderOrFooter) {\n            formattingContext.lastRowViewNode = nodeContext.viewNode as Element;\n            this.inRow = false;\n          }\n          break;\n        case \"table-cell\":\n          if (!this.inHeaderOrFooter) {\n            if (!this.inRow) {\n              this.rowIndex++;\n              this.columnIndex = 0;\n              this.inRow = true;\n            }\n            const elem = nodeContext.viewNode as Element;\n            formattingContext.addCell(\n              this.rowIndex,\n              new TableCell(this.rowIndex, this.columnIndex, elem),\n            );\n            this.columnIndex++;\n          }\n          break;\n      }\n    }\n    return super.afterNonInlineElementNode(state);\n  }\n\n  /** @override */\n  startNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterNonElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  startInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  /** @override */\n  afterInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    this.registerCheckPoint(state);\n  }\n\n  registerCheckPoint(state: LayoutUtil.LayoutIteratorState) {\n    const nodeContext = state.nodeContext;\n    if (\n      nodeContext &&\n      nodeContext.viewNode &&\n      !LayoutHelper.isSpecialNodeContext(nodeContext)\n    ) {\n      this.checkPoints.push(nodeContext.clone());\n    }\n  }\n\n  postLayoutBlockContents(state: LayoutUtil.LayoutIteratorState) {\n    if (this.checkPoints.length > 0) {\n      this.column.postLayoutBlock(state.nodeContext, this.checkPoints);\n    }\n    this.checkPoints = [];\n  }\n}\n\nexport class TableLayoutStrategy extends LayoutUtil.EdgeSkipper {\n  private static ignoreList: { [key: string]: boolean } = {\n    \"table-caption\": true,\n    \"table-column-group\": true,\n    \"table-column\": true,\n  };\n  inRow: boolean = false;\n  currentRowIndex: number = -1;\n  currentColumnIndex: number = 0;\n  originalStopAtOverflow: boolean;\n  inHeader: boolean;\n  inFooter: boolean;\n\n  constructor(\n    public readonly formattingContext: TableFormattingContext,\n    public readonly column: Layout.Column,\n  ) {\n    super(true);\n    this.originalStopAtOverflow = column.stopAtOverflow;\n    column.stopAtOverflow = false;\n  }\n\n  resetColumn() {\n    this.column.stopAtOverflow = this.originalStopAtOverflow;\n  }\n\n  getColSpanningCellWidth(cell: TableCell): number {\n    const colWidths = this.formattingContext.colWidths;\n    Asserts.assert(colWidths);\n    let width = 0;\n    for (let i = 0; i < cell.colSpan; i++) {\n      width += colWidths[cell.anchorSlot.columnIndex + i];\n    }\n    width += this.formattingContext.inlineBorderSpacing * (cell.colSpan - 1);\n    return width;\n  }\n\n  layoutCell(\n    cell: TableCell,\n    cellNodeContext: Vtree.NodeContext,\n    startChunkPosition: Vtree.ChunkPosition,\n  ): Task.Result<boolean> {\n    const rowIndex = cell.rowIndex;\n    const columnIndex = cell.columnIndex;\n    const colSpan = cell.colSpan;\n    const cellViewNode = cellNodeContext.viewNode as Element;\n    const verticalAlign = cellNodeContext.verticalAlign;\n    if (colSpan > 1) {\n      Base.setCSSProperty(cellViewNode, \"box-sizing\", \"border-box\");\n      Base.setCSSProperty(\n        cellViewNode,\n        this.formattingContext.vertical ? \"height\" : \"width\",\n        `${this.getColSpanningCellWidth(cell)}px`,\n      );\n    }\n    const pseudoColumnContainer =\n      cellViewNode.ownerDocument.createElement(\"div\");\n    cellViewNode.appendChild(pseudoColumnContainer);\n    const cellFragment = new TableCellFragment(\n      this.column,\n      pseudoColumnContainer,\n      cellNodeContext,\n    );\n    this.formattingContext.addCellFragment(rowIndex, columnIndex, cellFragment);\n    if (\n      startChunkPosition.primary.steps.length === 1 &&\n      startChunkPosition.primary.after\n    ) {\n      // Contents of the cell have ended in the previous fragment\n      cellFragment.empty = true;\n    }\n    return cellFragment.pseudoColumn\n      .layout(startChunkPosition, true)\n      .thenReturn(true);\n  }\n\n  hasBrokenCellAtSlot(slotIndex): boolean {\n    const cellBreakPosition = this.formattingContext.cellBreakPositions[0];\n    if (cellBreakPosition) {\n      return cellBreakPosition.cell.anchorSlot.columnIndex === slotIndex;\n    }\n    return false;\n  }\n\n  private extractRowSpanningCellBreakPositions(): BrokenTableCellPosition[][] {\n    const cellBreakPositions = this.formattingContext.cellBreakPositions;\n    if (cellBreakPositions.length === 0) {\n      return [];\n    }\n    const rowSpanningCellBreakPositions = [];\n    let i = 0;\n    do {\n      const p = cellBreakPositions[i];\n      const rowIndex = p.cell.rowIndex;\n      if (rowIndex < this.currentRowIndex) {\n        let arr = rowSpanningCellBreakPositions[rowIndex];\n        if (!arr) {\n          arr = rowSpanningCellBreakPositions[rowIndex] = [];\n        }\n        arr.push(p);\n        cellBreakPositions.splice(i, 1);\n      } else {\n        i++;\n      }\n    } while (i < cellBreakPositions.length);\n    return rowSpanningCellBreakPositions;\n  }\n\n  layoutRowSpanningCellsFromPreviousFragment(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const formattingContext = this.formattingContext;\n    const rowSpanningCellBreakPositions =\n      this.extractRowSpanningCellBreakPositions();\n    const rowCount = rowSpanningCellBreakPositions.reduce((s) => s + 1, 0);\n    if (rowCount === 0) {\n      return Task.newResult(true);\n    }\n    const layoutContext = this.column.layoutContext;\n    const currentRow = state.nodeContext;\n    currentRow.viewNode.parentNode.removeChild(currentRow.viewNode);\n    const frame = Task.newFrame<boolean>(\n      \"layoutRowSpanningCellsFromPreviousFragment\",\n    );\n    let cont = Task.newResult(true);\n    let spanningCellRowIndex = 0;\n    const occupiedSlotIndices = [];\n    rowSpanningCellBreakPositions.forEach((rowCellBreakPositions) => {\n      cont = cont.thenAsync(() => {\n        // Is it always correct to assume steps[1] to be the row?\n        const rowNodeContext = VtreeImpl.makeNodeContextFromNodePositionStep(\n          rowCellBreakPositions[0].cellNodePosition.steps[1],\n          currentRow.parent,\n        );\n        return layoutContext.setCurrent(rowNodeContext, false).thenAsync(() => {\n          let cont1 = Task.newResult(true);\n          let columnIndex = 0;\n\n          function addDummyCellUntil(upperColumnIndex) {\n            while (columnIndex < upperColumnIndex) {\n              if (!occupiedSlotIndices.includes(columnIndex)) {\n                const dummy =\n                  rowNodeContext.viewNode.ownerDocument.createElement(\"td\");\n                Base.setCSSProperty(dummy, \"padding\", \"0\");\n                rowNodeContext.viewNode.appendChild(dummy);\n              }\n              columnIndex++;\n            }\n          }\n          rowCellBreakPositions.forEach((cellBreakPosition) => {\n            cont1 = cont1.thenAsync(() => {\n              const cell = cellBreakPosition.cell;\n              addDummyCellUntil(cell.anchorSlot.columnIndex);\n              const cellNodePosition = cellBreakPosition.cellNodePosition;\n              const cellNodeContext =\n                VtreeImpl.makeNodeContextFromNodePositionStep(\n                  cellNodePosition.steps[0],\n                  rowNodeContext,\n                );\n              cellNodeContext.offsetInNode = cellNodePosition.offsetInNode;\n              cellNodeContext.after = cellNodePosition.after;\n              cellNodeContext.fragmentIndex =\n                cellNodePosition.steps[0].fragmentIndex + 1;\n              return layoutContext\n                .setCurrent(cellNodeContext, false)\n                .thenAsync(() => {\n                  const breakChunkPosition =\n                    cellBreakPosition.breakChunkPosition;\n                  for (let i = 0; i < cell.colSpan; i++) {\n                    occupiedSlotIndices.push(columnIndex + i);\n                  }\n                  columnIndex += cell.colSpan;\n                  return this.layoutCell(\n                    cell,\n                    cellNodeContext,\n                    breakChunkPosition,\n                  ).thenAsync(() => {\n                    (cellNodeContext.viewNode as HTMLTableCellElement).rowSpan =\n                      cell.rowIndex +\n                      cell.rowSpan -\n                      this.currentRowIndex +\n                      rowCount -\n                      spanningCellRowIndex;\n                    return Task.newResult(true);\n                  });\n                });\n            });\n          });\n          return cont1.thenAsync(() => {\n            addDummyCellUntil(formattingContext.getColumnCount());\n            spanningCellRowIndex++;\n            return Task.newResult(true);\n          });\n        });\n      });\n    });\n    cont.then(() => {\n      layoutContext\n        .setCurrent(currentRow, true, state.atUnforcedBreak)\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  startTableRow(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    const formattingContext = this.formattingContext;\n    if (this.currentRowIndex < 0) {\n      Asserts.assert(nodeContext.sourceNode);\n      this.currentRowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n    } else {\n      this.currentRowIndex++;\n    }\n    this.currentColumnIndex = 0;\n    this.inRow = true;\n    return this.layoutRowSpanningCellsFromPreviousFragment(state).thenAsync(\n      () => {\n        this.registerCellFragmentIndex();\n        const overflown = this.column.checkOverflowAndSaveEdgeAndBreakPosition(\n          state.lastAfterNodeContext,\n          null,\n          true,\n          state.breakAtTheEdge,\n        );\n        if (\n          overflown &&\n          formattingContext.getRowSpanningCellsOverflowingTheRow(\n            this.currentRowIndex - 1,\n          ).length === 0\n        ) {\n          this.resetColumn();\n          nodeContext.overflow = true;\n          state.break = true;\n        }\n        return Task.newResult(true);\n      },\n    );\n  }\n\n  private registerCellFragmentIndex() {\n    const cells = this.formattingContext.getRowByIndex(\n      this.currentRowIndex,\n    ).cells;\n    cells.forEach((cell) => {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions[cell.columnIndex];\n      if (\n        cellBreakPosition &&\n        cellBreakPosition.cell.anchorSlot.columnIndex ==\n          cell.anchorSlot.columnIndex\n      ) {\n        const tdNodeStep = cellBreakPosition.cellNodePosition.steps[0];\n        const offset = (\n          this.column.layoutContext as Vgen.ViewFactory\n        ).xmldoc.getElementOffset(tdNodeStep.node as Element);\n        Layout.registerFragmentIndex(offset, tdNodeStep.fragmentIndex + 1, 1);\n      }\n    });\n  }\n\n  startTableCell(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    if (this.inHeader || this.inFooter) {\n      return Task.newResult(true);\n    }\n    const nodeContext = state.nodeContext;\n    if (!this.inRow) {\n      if (this.currentRowIndex < 0) {\n        this.currentRowIndex = 0;\n      } else {\n        this.currentRowIndex++;\n      }\n      this.currentColumnIndex = 0;\n      this.inRow = true;\n    }\n    const cell = this.formattingContext.getRowByIndex(this.currentRowIndex)\n      .cells[this.currentColumnIndex];\n    if (!cell) {\n      // Fix for Issue #712\n      state.break = true;\n      return Task.newResult(true);\n    }\n    const afterNodeContext = nodeContext.copy().modify();\n    afterNodeContext.after = true;\n    state.nodeContext = afterNodeContext;\n    const frame = Task.newFrame<boolean>(\"startTableCell\");\n    let cont: Task.Result<Vtree.ChunkPosition>;\n    if (this.hasBrokenCellAtSlot(cell.anchorSlot.columnIndex)) {\n      const cellBreakPosition =\n        this.formattingContext.cellBreakPositions.shift();\n      nodeContext.fragmentIndex =\n        cellBreakPosition.cellNodePosition.steps[0].fragmentIndex + 1;\n      cont = Task.newResult(cellBreakPosition.breakChunkPosition);\n    } else {\n      cont = this.column\n        .nextInTree(nodeContext, state.atUnforcedBreak)\n        .thenAsync((nextNodeContext) => {\n          if (nextNodeContext.viewNode) {\n            nodeContext.viewNode.removeChild(nextNodeContext.viewNode);\n          }\n          const startNodePosition = VtreeImpl.newNodePositionFromNodeContext(\n            nextNodeContext,\n            0,\n          );\n          return Task.newResult(new VtreeImpl.ChunkPosition(startNodePosition));\n        });\n    }\n    cont.then((startChunkPosition) => {\n      Asserts.assert(nodeContext);\n      this.layoutCell(cell, nodeContext, startChunkPosition).then(() => {\n        this.afterNonInlineElementNode(state);\n        this.currentColumnIndex++;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  startNonInlineBox(\n    state: LayoutUtil.LayoutIteratorState,\n  ): Task.Result<boolean> {\n    const r = skipNestedTable(\n      state,\n      getTableFormattingContext(this.formattingContext),\n      this.column,\n    );\n    if (r) {\n      return r;\n    }\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (\n      display === \"table-header-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inHeader = true;\n      return Task.newResult(true);\n    } else if (\n      display === \"table-footer-group\" &&\n      repetitiveElements &&\n      repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n    ) {\n      this.inFooter = true;\n      return Task.newResult(true);\n    } else if (display === \"table-row\") {\n      return this.startTableRow(state);\n    } else if (display === \"table-cell\") {\n      return this.startTableCell(state);\n    } else {\n      return Task.newResult(true);\n    }\n  }\n\n  endNonInlineBox(state: LayoutUtil.LayoutIteratorState): Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const display = nodeContext.display;\n    if (display === \"table-row\") {\n      this.inRow = false;\n      if (!this.inHeader && !this.inFooter) {\n        const beforeNodeContext = nodeContext.copy().modify();\n        beforeNodeContext.after = false;\n        const bp = new InsideTableRowBreakPosition(\n          this.currentRowIndex,\n          beforeNodeContext,\n          this.formattingContext,\n        );\n        this.column.breakPositions.push(bp);\n      }\n    }\n    return Task.newResult(true);\n  }\n\n  afterNonInlineElementNode(\n    state: LayoutUtil.LayoutIteratorState,\n  ): void | Task.Result<boolean> {\n    const nodeContext = state.nodeContext;\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    const display = nodeContext.display;\n    if (display === \"table-header-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isHeaderSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inHeader = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    } else if (display === \"table-footer-group\") {\n      if (\n        repetitiveElements &&\n        !repetitiveElements.allowInsertRepeatitiveElements &&\n        repetitiveElements.isFooterSourceNode(nodeContext.sourceNode)\n      ) {\n        this.inFooter = false;\n        nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n      } else {\n        Base.setCSSProperty(\n          nodeContext.viewNode as Element,\n          \"display\",\n          \"table-row-group\",\n        );\n      }\n    }\n    if (display && TableLayoutStrategy.ignoreList[display]) {\n      nodeContext.viewNode.parentNode.removeChild(nodeContext.viewNode);\n    } else if (\n      nodeContext.sourceNode === this.formattingContext.tableSourceNode\n    ) {\n      nodeContext.overflow = this.column.checkOverflowAndSaveEdge(\n        nodeContext,\n        null,\n      );\n      this.resetColumn();\n      state.break = true;\n    } else {\n      return super.afterNonInlineElementNode(state);\n    }\n    return Task.newResult(true);\n  }\n}\n\ntype TableLayoutOption = {\n  calculateBreakPositionsInside: boolean;\n};\nconst tableLayoutOptionCache: {\n  root: Node;\n  tableLayoutOption: TableLayoutOption;\n}[] = [];\n\nfunction getTableLayoutOption(\n  tableRootSourceNode: Node,\n): TableLayoutOption | null {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  const pair = tableLayoutOptionCache[i];\n  return pair ? pair.tableLayoutOption : null;\n}\n\nfunction clearTableLayoutOptionCache(tableRootSourceNode: Node): void {\n  const i = tableLayoutOptionCache.findIndex(\n    (c) => c.root === tableRootSourceNode,\n  );\n  if (i >= 0) {\n    tableLayoutOptionCache.splice(i, 1);\n  }\n}\n\nexport class TableLayoutProcessor implements LayoutProcessor.LayoutProcessor {\n  private layoutEntireTable(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const strategy = new EntireTableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    return iterator.iterate(nodeContext);\n  }\n\n  private getColumnWidths(\n    lastRow: Element,\n    columnCount: number,\n    vertical: boolean,\n    clientLayout: Vtree.ClientLayout,\n  ): number[] {\n    const doc = lastRow.ownerDocument;\n    const dummyRow = doc.createElement(\"tr\");\n    const dummyCells = [];\n    for (let i = 0; i < columnCount; i++) {\n      const cell = doc.createElement(\"td\");\n      dummyRow.appendChild(cell);\n      dummyCells.push(cell);\n    }\n    lastRow.parentNode.insertBefore(dummyRow, lastRow.nextSibling);\n    const colWidths = dummyCells.map((cell) => {\n      const rect = clientLayout.getElementClientRect(cell);\n      const width = vertical ? rect[\"height\"] : rect[\"width\"];\n      // Workaround for issue #958\n      // Non-integer width causes problem, so return rounded-up value.\n      return Math.ceil(width);\n    });\n    lastRow.parentNode.removeChild(dummyRow);\n    return colWidths;\n  }\n\n  private getColGroupElements(tableElement: Element): Element[] {\n    const colGroups = [];\n    let child = tableElement.firstElementChild;\n    while (child) {\n      if (child.localName === \"colgroup\") {\n        colGroups.push(child);\n      }\n      child = child.nextElementSibling;\n    }\n    return colGroups;\n  }\n\n  private normalizeAndGetColElements(colGroups: Element[]): Element[] {\n    const cols = [];\n    colGroups.forEach((colGroup) => {\n      // Replace colgroup[span=n] with colgroup with n col elements\n      let span = (colGroup as any).span;\n      colGroup.removeAttribute(\"span\");\n      let col = colGroup.firstElementChild;\n      while (col) {\n        if (col.localName === \"col\") {\n          // Replace col[span=n] with n col elements\n          let s = (col as any).span;\n          col.removeAttribute(\"span\");\n          span -= s;\n          while (s-- > 1) {\n            const cloned = col.cloneNode(true);\n            colGroup.insertBefore(cloned, col);\n            cols.push(cloned);\n          }\n          cols.push(col);\n        }\n        col = col.nextElementSibling;\n      }\n      while (span-- > 0) {\n        col = colGroup.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    });\n    return cols;\n  }\n\n  private addMissingColElements(\n    cols: Element[],\n    colGroups: Element[],\n    columnCount: number,\n    tableElement: Element,\n  ) {\n    if (cols.length < columnCount) {\n      const colGroup = tableElement.ownerDocument.createElement(\"colgroup\");\n      colGroups.push(colGroup);\n      for (let i = cols.length; i < columnCount; i++) {\n        const col = tableElement.ownerDocument.createElement(\"col\");\n        colGroup.appendChild(col);\n        cols.push(col);\n      }\n    }\n  }\n\n  /**\n   * Measure width of columns and normalize colgroup and col elements so that\n   * each column has a corresponding col element with the width specified.\n   */\n  normalizeColGroups(\n    formattingContext: TableFormattingContext,\n    tableElement: Element,\n    column: Layout.Column,\n  ) {\n    const vertical = formattingContext.vertical;\n    const lastRow = formattingContext.lastRowViewNode;\n    if (!lastRow) {\n      return;\n    }\n    Asserts.assert(lastRow);\n    formattingContext.lastRowViewNode = null;\n    const doc = lastRow.ownerDocument;\n    const fragment = doc.createDocumentFragment();\n\n    // Count columns\n    const columnCount = formattingContext.getColumnCount();\n    if (!(columnCount > 0)) {\n      formattingContext.colGroups = fragment;\n      return;\n    }\n\n    // Measure column widths\n    const colWidths = (formattingContext.colWidths = this.getColumnWidths(\n      lastRow,\n      columnCount,\n      vertical,\n      column.clientLayout,\n    ));\n\n    // Normalize colgroup and col elements\n    const colGroups = this.getColGroupElements(tableElement);\n    const cols = this.normalizeAndGetColElements(colGroups);\n\n    // Add missing col elements for remaining columns\n    this.addMissingColElements(cols, colGroups, columnCount, tableElement);\n\n    // Assign width to col elements\n    cols.forEach((col, i) => {\n      Base.setCSSProperty(\n        col,\n        vertical ? \"height\" : \"width\",\n        `${colWidths[i]}px`,\n      );\n    });\n    colGroups.forEach((colGroup) => {\n      fragment.appendChild(colGroup.cloneNode(true));\n    });\n    formattingContext.colGroups = fragment;\n  }\n\n  doInitialLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    formattingContext.vertical = nodeContext.vertical;\n    formattingContext.initializeRepetitiveElements(nodeContext.vertical);\n    Asserts.assert(nodeContext.sourceNode);\n    const tableLayoutOption = getTableLayoutOption(nodeContext.sourceNode);\n    clearTableLayoutOptionCache(nodeContext.sourceNode);\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableLayoutProcessor.doInitialLayout\",\n    );\n    const initialNodeContext = nodeContext.copy();\n    this.layoutEntireTable(nodeContext, column).then((nodeContextAfter) => {\n      const tableElement = nodeContextAfter.viewNode as Element;\n      const tableBBox = column.clientLayout.getElementClientRect(tableElement);\n      let edge = column.vertical ? tableBBox.left : tableBBox.bottom;\n      edge +=\n        (column.vertical ? -1 : 1) *\n        BreakPosition.calculateOffset(\n          nodeContext,\n          column.collectElementsOffset(),\n        ).current;\n      if (\n        !column.isOverflown(edge) &&\n        (!tableLayoutOption || !tableLayoutOption.calculateBreakPositionsInside)\n      ) {\n        column.breakPositions.push(\n          new EntireTableBreakPosition(initialNodeContext),\n        );\n        frame.finish(nodeContextAfter);\n        return;\n      }\n      this.normalizeColGroups(formattingContext, tableElement, column);\n      formattingContext.updateCellSizes(column.clientLayout);\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  addCaptions(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    const captions = formattingContext.captions;\n    captions.forEach((caption, i) => {\n      if (caption) {\n        rootViewNode.insertBefore(caption.viewNode, firstChild);\n        if (caption.side === \"top\") {\n          captions[i] = null;\n        }\n      }\n    });\n  }\n\n  addColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n    firstChild: Node | null,\n  ) {\n    if (\n      formattingContext.colGroups &&\n      this.getColGroupElements(rootViewNode).length === 0\n    ) {\n      rootViewNode.insertBefore(\n        formattingContext.colGroups.cloneNode(true),\n        firstChild,\n      );\n    }\n  }\n\n  removeColGroups(\n    formattingContext: TableFormattingContext,\n    rootViewNode: Element,\n  ) {\n    if (formattingContext.colGroups && rootViewNode) {\n      const colGroups = this.getColGroupElements(rootViewNode);\n      if (colGroups) {\n        colGroups.forEach((colGroup) => {\n          rootViewNode.removeChild(colGroup);\n        });\n      }\n    }\n  }\n\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(\n      nodeContext,\n    ) as Element;\n    const firstChild = rootViewNode.firstChild;\n    this.addCaptions(formattingContext, rootViewNode, firstChild);\n    this.addColGroups(formattingContext, rootViewNode, firstChild);\n    const strategy = new TableLayoutStrategy(formattingContext, column);\n    const iterator = new LayoutUtil.LayoutIterator(\n      strategy,\n      column.layoutContext,\n    );\n    const frame = Task.newFrame<Vtree.NodeContext>(\n      \"TableFormattingContext.doLayout\",\n    );\n    iterator.iterate(nodeContext).thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  layout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n    leadingEdge: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    const rootViewNode = formattingContext.getRootViewNode(nodeContext);\n    if (!rootViewNode) {\n      return column.buildDeepElementView(nodeContext);\n    } else {\n      if (leadingEdge) {\n        RepetitiveElementImpl.appendHeaderToAncestors(\n          nodeContext.parent,\n          column,\n        );\n      }\n      return new LayoutRetryer(formattingContext, this).layout(\n        nodeContext,\n        column,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  createEdgeBreakPosition(\n    position: Vtree.NodeContext,\n    breakOnEdge: string | null,\n    overflows: boolean,\n    columnBlockSize: number,\n  ): LayoutType.BreakPosition {\n    return new BetweenTableRowBreakPosition(\n      position,\n      breakOnEdge,\n      overflows,\n      columnBlockSize,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startNonInlineElementNode(nodeContext: Vtree.NodeContext): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  afterNonInlineElementNode(\n    nodeContext: Vtree.NodeContext,\n    stopAtOverflow: boolean,\n  ): boolean {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    column: Layout.Column,\n    nodeContext: Vtree.NodeContext,\n    forceRemoveSelf: boolean,\n    endOfColumn: boolean,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      nodeContext.formattingContext,\n    );\n    if (nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      const rowIndex = formattingContext.findRowIndexBySourceNode(\n        nodeContext.sourceNode,\n      );\n      formattingContext.cellBreakPositions = [];\n      let cells: TableCell[];\n      if (!nodeContext.after) {\n        cells = formattingContext.getCellsFallingOnRow(rowIndex);\n      } else {\n        cells =\n          formattingContext.getRowSpanningCellsOverflowingTheRow(rowIndex);\n      }\n      if (cells.length) {\n        const frame = Task.newFrame<boolean>(\n          \"TableLayoutProcessor.finishBreak\",\n        );\n        let i = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            if (i === cells.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const cell = cells[i++];\n            const cellFragment = formattingContext.getCellFragmentOfCell(cell);\n            const breakNodeContext =\n              cellFragment.findAcceptableBreakPosition().nodeContext;\n            Asserts.assert(breakNodeContext);\n            const cellNodeContext = cellFragment.cellNodeContext;\n            const cellNodePosition = cellNodeContext.toNodePosition();\n            const breakChunkPosition = new VtreeImpl.ChunkPosition(\n              breakNodeContext.toNodePosition(),\n            );\n            formattingContext.cellBreakPositions.push({\n              cellNodePosition,\n              breakChunkPosition,\n              cell,\n            } as BrokenTableCellPosition);\n            const cellViewNode =\n              cellNodeContext.viewNode as HTMLTableCellElement;\n            cellFragment.column.layoutContext.processFragmentedBlockEdge(\n              cellFragment.cellNodeContext,\n            );\n            if (rowIndex < cell.rowIndex + cell.rowSpan - 1) {\n              cellViewNode.rowSpan = rowIndex - cell.rowIndex + 1;\n            }\n            if (!cellFragment.empty) {\n              cellFragment.pseudoColumn\n                .finishBreak(breakNodeContext, false, true)\n                .then(() => {\n                  Asserts.assert(cellFragment);\n                  adjustCellHeight(\n                    cellFragment,\n                    formattingContext,\n                    breakNodeContext,\n                  );\n                  loopFrame.continueLoop();\n                });\n            } else {\n              loopFrame.continueLoop();\n            }\n          })\n          .then(() => {\n            column.clearOverflownViewNodes(nodeContext, false);\n            column.layoutContext.processFragmentedBlockEdge(nodeContext);\n            formattingContext.finishFragment();\n            frame.finish(true);\n          });\n        return frame.result();\n      }\n    }\n    formattingContext.finishFragment();\n    return LayoutProcessor.blockLayoutProcessor.finishBreak(\n      column,\n      nodeContext,\n      forceRemoveSelf,\n      endOfColumn,\n    );\n  }\n\n  /** @override */\n  clearOverflownViewNodes(\n    column: Layout.Column,\n    parentNodeContext: Vtree.NodeContext,\n    nodeContext: Vtree.NodeContext,\n    removeSelf: boolean,\n  ) {\n    LayoutProcessor.BlockLayoutProcessor.prototype.clearOverflownViewNodes(\n      column,\n      parentNodeContext,\n      nodeContext,\n      removeSelf,\n    );\n  }\n}\n\nfunction adjustCellHeight(\n  cellFragment: TableCellFragment,\n  formattingContext: TableFormattingContext,\n  breakNodeContext: Vtree.NodeContext,\n): void {\n  const repetitiveElements = formattingContext.getRepetitiveElements();\n  if (!repetitiveElements) {\n    return;\n  }\n  const vertical = formattingContext.vertical;\n  const column = cellFragment.column;\n  const cellContentElement = cellFragment.pseudoColumn.getColumnElement();\n  const cellElement = cellFragment.cellNodeContext.viewNode as Element;\n  const cellElementRect = column.clientLayout.getElementClientRect(cellElement);\n  const padding = column.getComputedPaddingBorder(cellElement);\n  if (vertical) {\n    const width =\n      cellElementRect.right -\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      padding.right;\n    Base.setCSSProperty(cellContentElement, \"max-width\", `${width}px`);\n  } else {\n    const height =\n      column.footnoteEdge -\n      repetitiveElements.calculateOffset(breakNodeContext) -\n      cellElementRect.top -\n      padding.top;\n    Base.setCSSProperty(cellContentElement, \"max-height\", `${height}px`);\n  }\n  Base.setCSSProperty(cellContentElement, \"overflow\", \"hidden\");\n}\n\nexport class LayoutRetryer extends LayoutRetryers.AbstractLayoutRetryer {\n  constructor(\n    private tableFormattingContext: TableFormattingContext,\n    private readonly processor: TableLayoutProcessor,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  resolveLayoutMode(nodeContext: Vtree.NodeContext): LayoutType.LayoutMode {\n    const repetitiveElements =\n      this.tableFormattingContext.getRepetitiveElements();\n    if (!repetitiveElements || !repetitiveElements.doneInitialLayout) {\n      return new LayoutEntireTable(this.tableFormattingContext, this.processor);\n    } else {\n      if (\n        nodeContext.sourceNode ===\n          this.tableFormattingContext.tableSourceNode &&\n        !nodeContext.after\n      ) {\n        if (repetitiveElements) {\n          repetitiveElements.preventSkippingHeader();\n        }\n      }\n      return new LayoutFragmentedTable(\n        this.tableFormattingContext,\n        this.processor,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  clearNodes(initialPosition: Vtree.NodeContext) {\n    super.clearNodes(initialPosition);\n    const rootViewNode =\n      this.tableFormattingContext.getRootViewNode(initialPosition);\n    this.processor.removeColGroups(this.tableFormattingContext, rootViewNode);\n  }\n\n  /**\n   * @override\n   */\n  restoreState(nodeContext: Vtree.NodeContext, column: Layout.Column) {\n    super.restoreState(nodeContext, column);\n    this.tableFormattingContext.finishFragment();\n  }\n}\n\nexport class LayoutEntireTable extends RepetitiveElementImpl.LayoutEntireBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    return this.processor.doInitialLayout(nodeContext, column);\n  }\n}\n\nexport class EntireTableBreakPosition extends BreakPosition.EdgeBreakPosition {\n  constructor(tableNodeContext: Vtree.NodeContext) {\n    super(tableNodeContext, null, tableNodeContext.overflow, 0);\n  }\n\n  /**\n   * @override\n   */\n  getMinBreakPenalty(): number {\n    if (!this.isEdgeUpdated) {\n      throw new Error(\"EdgeBreakPosition.prototype.updateEdge not called\");\n    }\n    return (\n      (this.overflows ? 3 : 0) +\n      (this.position.parent ? this.position.parent.breakPenalty : 0)\n    );\n  }\n\n  /**\n   * @override\n   */\n  breakPositionChosen(column: Layout.Column): void {\n    column.fragmentLayoutConstraints.push(\n      new EntireTableLayoutConstraint(this.position.sourceNode),\n    );\n  }\n}\n\nexport class EntireTableLayoutConstraint\n  implements Layout.FragmentLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"EntireTable\";\n\n  constructor(public tableRootNode: Node) {}\n\n  /**\n   * @override\n   */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    // If the nodeContext overflows, any EntireTableLayoutConstraint should not\n    // be registered in the first place. See\n    // TableLayoutProcessor.prototype.doInitialLayout.\n    Asserts.assert(!nodeContext.overflow);\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    Asserts.assert(positionAfter.sourceNode);\n    tableLayoutOptionCache.push({\n      root: positionAfter.sourceNode,\n      tableLayoutOption: {\n        calculateBreakPositionsInside: true,\n      } as TableLayoutOption,\n    });\n  }\n\n  /**\n   * @override\n   */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    return Task.newResult(true);\n  }\n\n  /**\n   * @override\n   */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    return (\n      constraint instanceof EntireTableLayoutConstraint &&\n      constraint.tableRootNode === this.tableRootNode\n    );\n  }\n\n  /**\n   * @override\n   */\n  getPriorityOfFinishBreak(): number {\n    return 0;\n  }\n}\n\nexport class LayoutFragmentedTable extends RepetitiveElementImpl.LayoutFragmentedBlock {\n  constructor(\n    formattingContext: TableFormattingContext,\n    public readonly processor: TableLayoutProcessor,\n  ) {\n    super(formattingContext);\n  }\n\n  /**\n   * @override\n   */\n  doLayout(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<Vtree.NodeContext> {\n    const repetitiveElements = this.formattingContext.getRepetitiveElements();\n    if (\n      repetitiveElements &&\n      !repetitiveElements.isAfterLastContent(nodeContext)\n    ) {\n      const constraint = new TableRowLayoutConstraint(nodeContext);\n      if (\n        !column.fragmentLayoutConstraints.some((c) => constraint.equalsTo(c))\n      ) {\n        column.fragmentLayoutConstraints.unshift(constraint);\n      }\n    }\n    return this.processor.doLayout(nodeContext, column);\n  }\n}\n\nexport class TableRowLayoutConstraint\n  extends RepetitiveElementImpl.RepetitiveElementsOwnerLayoutConstraint\n  implements Table.TableRowLayoutConstraint\n{\n  flagmentLayoutConstraintType: FragmentLayoutConstraintType = \"TableRow\";\n  cellFragmentLayoutConstraints: {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] = [];\n\n  constructor(nodeContext: Vtree.NodeContext) {\n    super(nodeContext);\n  }\n\n  /** @override */\n  allowLayout(\n    nodeContext: Vtree.NodeContext,\n    overflownNodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): boolean {\n    const repetitiveElements = this.getRepetitiveElements();\n    if (!repetitiveElements) {\n      return true;\n    }\n    if (column.pseudoParent) {\n      return true;\n    }\n    if (LayoutHelper.isOrphan(this.nodeContext.viewNode)) {\n      return true;\n    }\n    if (!repetitiveElements.isEnableToUpdateState()) {\n      return true;\n    }\n    if (\n      (overflownNodeContext && !nodeContext) ||\n      (nodeContext && nodeContext.overflow)\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /** @override */\n  nextCandidate(nodeContext: Vtree.NodeContext): boolean {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const cellFragmentConstraints = this.collectCellFragmentLayoutConstraints(\n      nodeContext,\n      formattingContext,\n    );\n    if (\n      cellFragmentConstraints.some((entry) =>\n        entry.constraints.some((constraint) =>\n          constraint.nextCandidate(nodeContext),\n        ),\n      )\n    ) {\n      return true;\n    }\n    return super.nextCandidate(nodeContext);\n  }\n\n  /** @override */\n  postLayout(\n    allowed: boolean,\n    positionAfter: Vtree.NodeContext,\n    initialPosition: Vtree.NodeContext,\n    column: Layout.Column,\n  ) {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    this.cellFragmentLayoutConstraints =\n      this.collectCellFragmentLayoutConstraints(\n        positionAfter,\n        formattingContext,\n      );\n    this.cellFragmentLayoutConstraints.forEach((entry) => {\n      entry.constraints.forEach((constraint) => {\n        constraint.postLayout(\n          allowed,\n          entry.breakPosition,\n          initialPosition,\n          column,\n        );\n      });\n    });\n    if (!allowed) {\n      const rootViewNode = formattingContext.getRootViewNode(this.nodeContext);\n      new TableLayoutProcessor().removeColGroups(\n        formattingContext,\n        rootViewNode as Element,\n      );\n      this.removeDummyRowNodes(initialPosition);\n    }\n    super.postLayout(allowed, positionAfter, initialPosition, column);\n  }\n\n  /** @override */\n  finishBreak(\n    nodeContext: Vtree.NodeContext,\n    column: Layout.Column,\n  ): Task.Result<boolean> {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"finishBreak\");\n    const constraints = this.cellFragmentLayoutConstraints.reduce(\n      (array, entry) =>\n        array.concat(\n          entry.constraints.map((constraint) => ({\n            constraint,\n            breakPosition: entry.breakPosition,\n          })),\n        ),\n      [],\n    );\n    let i = 0;\n    frame\n      .loop(() => {\n        if (i < constraints.length) {\n          const entry = constraints[i++];\n          return entry.constraint\n            .finishBreak(entry.breakPosition, column)\n            .thenReturn(true);\n        } else {\n          return Task.newResult(false);\n        }\n      })\n      .then(() => {\n        frame.finish(true);\n      });\n    return frame\n      .result()\n      .thenAsync(() => super.finishBreak(nodeContext, column));\n  }\n\n  removeDummyRowNodes(nodeContext: Vtree.NodeContext) {\n    if (\n      !nodeContext ||\n      nodeContext.display !== \"table-row\" ||\n      !nodeContext.viewNode\n    ) {\n      return;\n    }\n    while ((nodeContext.viewNode as Element).previousElementSibling) {\n      const dummyNode = (nodeContext.viewNode as Element)\n        .previousElementSibling;\n      if (dummyNode.parentNode) {\n        dummyNode.parentNode.removeChild(dummyNode);\n      }\n    }\n  }\n\n  private collectCellFragmentLayoutConstraints(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): {\n    constraints: Layout.FragmentLayoutConstraint[];\n    breakPosition: Vtree.NodeContext;\n  }[] {\n    return this.getCellFragemnts(nodeContext, formattingContext).map(\n      (entry) => ({\n        constraints:\n          entry.fragment.pseudoColumn.getColumn().fragmentLayoutConstraints,\n        breakPosition: entry.breakPosition,\n      }),\n    );\n  }\n\n  private getCellFragemnts(\n    nodeContext: Vtree.NodeContext,\n    formattingContext: TableFormattingContext,\n  ): { fragment: TableCellFragment; breakPosition: Vtree.NodeContext }[] {\n    let rowIndex = Number.MAX_VALUE;\n    if (nodeContext && nodeContext.display === \"table-row\") {\n      Asserts.assert(nodeContext.sourceNode);\n      rowIndex =\n        formattingContext.findRowIndexBySourceNode(nodeContext.sourceNode) + 1;\n    }\n    rowIndex = Math.min(formattingContext.cellFragments.length, rowIndex);\n    const cellFragments = [];\n    for (let i = 0; i < rowIndex; i++) {\n      if (!formattingContext.cellFragments[i]) {\n        continue;\n      }\n      formattingContext.cellFragments[i].forEach((cellFragment) => {\n        if (!cellFragment) {\n          return;\n        }\n        cellFragments.push({\n          fragment: cellFragment,\n          breakPosition: cellFragment.findAcceptableBreakPosition().nodeContext,\n        });\n      });\n    }\n    return cellFragments;\n  }\n\n  getElementsOffsetsForTableCell(\n    column: Layout.Column,\n  ): RepetitiveElement.ElementsOffset[] {\n    const formattingContext = getTableFormattingContext(\n      this.nodeContext.formattingContext,\n    );\n    const position = formattingContext.findCellFromColumn(column);\n    if (position) {\n      return formattingContext.collectElementsOffsetOfUpperCells(position);\n    } else {\n      return formattingContext.collectElementsOffsetOfHighestColumn();\n    }\n  }\n\n  /** @override */\n  equalsTo(constraint: Layout.FragmentLayoutConstraint): boolean {\n    if (!(constraint instanceof TableRowLayoutConstraint)) {\n      return false;\n    }\n    return (\n      getTableFormattingContext(this.nodeContext.formattingContext) ===\n      getTableFormattingContext(constraint.nodeContext.formattingContext)\n    );\n  }\n}\n\nconst tableLayoutProcessor = new TableLayoutProcessor();\n\nfunction resolveFormattingContextHook(\n  nodeContext: Vtree.NodeContext,\n  firstTime: boolean,\n  display: Css.Ident,\n  position: Css.Ident,\n  floatSide: Css.Ident,\n  isRoot: boolean,\n): TableFormattingContext | null {\n  if (!firstTime) {\n    return null;\n  }\n  if (display === Css.ident.table) {\n    const parent = nodeContext.parent;\n    return new TableFormattingContext(\n      parent ? parent.formattingContext : null,\n      nodeContext.sourceNode as Element,\n    );\n  }\n  return null;\n}\n\nfunction resolveLayoutProcessor(\n  formattingContext,\n): TableLayoutProcessor | null {\n  if (formattingContext instanceof TableFormattingContext) {\n    return tableLayoutProcessor;\n  }\n  return null;\n}\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n  resolveFormattingContextHook,\n);\n\nPlugin.registerHook(\n  Plugin.HOOKS.RESOLVE_LAYOUT_PROCESSOR,\n  resolveLayoutProcessor,\n);\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview MathUtil - Math utilities\n */\nexport function mean(array: number[]): number {\n  return array.reduce((prev, curr) => prev + curr, 0) / array.length;\n}\n\nexport function variance(array: number[]): number {\n  const meanValue = mean(array);\n  return mean(\n    array.map((x) => {\n      const d = x - meanValue;\n      return d * d;\n    }),\n  );\n}\n","/**\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Columns - Control column layout.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Css from \"./css\";\nimport * as MathUtil from \"./math-util\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Task from \"./task\";\nimport * as Vtree from \"./vtree\";\nimport { Layout } from \"./types\";\n\nexport type ColumnLayoutResult = {\n  columns: Layout.Column[];\n  position: Vtree.LayoutPosition;\n  columnPageFloatLayoutContexts?: PageFloats.PageFloatLayoutContext[];\n};\n\nexport type ColumnGenerator = () => Task.Result<ColumnLayoutResult | null>;\n\nexport class ColumnBalancingTrialResult {\n  constructor(\n    public readonly layoutResult: ColumnLayoutResult,\n    public readonly penalty: number,\n  ) {}\n}\n\nfunction getBlockSize(container: Vtree.Container): number {\n  if (container.vertical) {\n    return container.width;\n  } else {\n    return container.height;\n  }\n}\n\nfunction setBlockSize(container: Vtree.Container, size: number) {\n  if (container.vertical) {\n    container.width = size;\n  } else {\n    container.height = size;\n  }\n}\n\nexport abstract class ColumnBalancer {\n  originalContainerBlockSize: number;\n\n  constructor(\n    public readonly layoutContainer: Vtree.Container,\n    public readonly columnGenerator: ColumnGenerator,\n    public readonly regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ) {\n    this.originalContainerBlockSize = getBlockSize(layoutContainer);\n  }\n\n  balanceColumns(\n    layoutResult: ColumnLayoutResult,\n  ): Task.Result<ColumnLayoutResult> {\n    const frame: Task.Frame<ColumnLayoutResult> = Task.newFrame(\n      \"ColumnBalancer#balanceColumns\",\n    );\n    this.preBalance(layoutResult);\n    this.savePageFloatLayoutContexts(layoutResult);\n    this.layoutContainer.clear();\n    const candidates = [this.createTrialResult(layoutResult)];\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (!this.hasNextCandidate(candidates)) {\n          loopFrame.breakLoop();\n          return;\n        }\n        this.updateCondition(candidates);\n        this.columnGenerator().then((layoutResult) => {\n          this.savePageFloatLayoutContexts(layoutResult);\n          this.layoutContainer.clear();\n          if (!layoutResult) {\n            loopFrame.breakLoop();\n            return;\n          }\n          candidates.push(this.createTrialResult(layoutResult));\n          loopFrame.continueLoop();\n        });\n      })\n      .then(() => {\n        const result = candidates.reduce(\n          (prev, curr) => (curr.penalty < prev.penalty ? curr : prev),\n          candidates[0],\n        );\n        this.restoreContents(result.layoutResult);\n        this.postBalance();\n        frame.finish(result.layoutResult);\n      });\n    return frame.result();\n  }\n\n  private createTrialResult(\n    layoutResult: ColumnLayoutResult,\n  ): ColumnBalancingTrialResult {\n    const penalty = this.calculatePenalty(layoutResult);\n    return new ColumnBalancingTrialResult(layoutResult, penalty);\n  }\n\n  protected preBalance(layoutResult: ColumnLayoutResult) {}\n\n  protected abstract calculatePenalty(layoutResult: ColumnLayoutResult): number;\n\n  protected abstract hasNextCandidate(\n    candidates: ColumnBalancingTrialResult[],\n  ): boolean;\n\n  protected abstract updateCondition(\n    candidates: ColumnBalancingTrialResult[],\n  ): void;\n\n  protected postBalance() {\n    setBlockSize(this.layoutContainer, this.originalContainerBlockSize);\n  }\n\n  savePageFloatLayoutContexts(layoutResult: ColumnLayoutResult | null) {\n    const children = this.regionPageFloatLayoutContext.detachChildren();\n    if (layoutResult) {\n      layoutResult.columnPageFloatLayoutContexts = children;\n    }\n  }\n\n  private restoreContents(newLayoutResult: ColumnLayoutResult) {\n    const parent = this.layoutContainer.element;\n    newLayoutResult.columns.forEach((c) => {\n      parent.appendChild(c.element);\n    });\n    Asserts.assert(newLayoutResult.columnPageFloatLayoutContexts);\n    this.regionPageFloatLayoutContext.attachChildren(\n      newLayoutResult.columnPageFloatLayoutContexts,\n    );\n  }\n}\nconst COLUMN_LENGTH_STEP = 1;\n\nexport function canReduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n): boolean {\n  const lastCandidate = candidates[candidates.length - 1];\n  if (lastCandidate.penalty === 0) {\n    return false;\n  }\n  const secondLastCandidate = candidates[candidates.length - 2];\n  if (\n    secondLastCandidate &&\n    lastCandidate.penalty >= secondLastCandidate.penalty\n  ) {\n    return false;\n  }\n  const columns = lastCandidate.layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.computedBlockSize),\n  );\n  const maxPageFloatBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => c.getMaxBlockSizeOfPageFloats()),\n  );\n  return maxColumnBlockSize > maxPageFloatBlockSize + COLUMN_LENGTH_STEP;\n}\n\nexport function reduceContainerSize(\n  candidates: ColumnBalancingTrialResult[],\n  container: Vtree.Container,\n): void {\n  const columns = candidates[candidates.length - 1].layoutResult.columns;\n  const maxColumnBlockSize = Math.max.apply(\n    null,\n    columns.map((c) => {\n      if (!isNaN(c.blockDistanceToBlockEndFloats)) {\n        return (\n          c.computedBlockSize -\n          c.blockDistanceToBlockEndFloats +\n          COLUMN_LENGTH_STEP\n        );\n      } else {\n        return c.computedBlockSize;\n      }\n    }),\n  );\n  const newEdge = maxColumnBlockSize - COLUMN_LENGTH_STEP;\n  if (newEdge < getBlockSize(container)) {\n    setBlockSize(container, newEdge);\n  } else {\n    setBlockSize(container, getBlockSize(container) - 1);\n  }\n}\n\nexport class BalanceLastColumnBalancer extends ColumnBalancer {\n  originalPosition: Vtree.LayoutPosition | null = null;\n  foundUpperBound: boolean = false;\n\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    public readonly columnCount: number,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  preBalance(layoutResult: ColumnLayoutResult) {\n    const columns = layoutResult.columns;\n    const totalBlockSize = columns.reduce(\n      (prev, c) => prev + c.computedBlockSize,\n      0,\n    );\n    setBlockSize(this.layoutContainer, totalBlockSize / this.columnCount);\n    this.originalPosition = layoutResult.position;\n  }\n\n  private checkPosition(position: Vtree.LayoutPosition | null): boolean {\n    if (this.originalPosition) {\n      return this.originalPosition.isSamePosition(position);\n    } else {\n      return position === null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (!this.checkPosition(layoutResult.position)) {\n      return Infinity;\n    }\n    const columns = layoutResult.columns;\n    if (isLastColumnLongerThanAnyOtherColumn(columns)) {\n      return Infinity;\n    }\n    return Math.max.apply(\n      null,\n      columns.map((c) => c.computedBlockSize),\n    );\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    if (candidates.length === 1) {\n      return true;\n    } else if (this.foundUpperBound) {\n      return canReduceContainerSize(candidates);\n    } else {\n      const lastCandidate = candidates[candidates.length - 1];\n      if (this.checkPosition(lastCandidate.layoutResult.position)) {\n        if (\n          !isLastColumnLongerThanAnyOtherColumn(\n            lastCandidate.layoutResult.columns,\n          )\n        ) {\n          this.foundUpperBound = true;\n          return true;\n        }\n      }\n      return (\n        getBlockSize(this.layoutContainer) < this.originalContainerBlockSize\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    if (this.foundUpperBound) {\n      reduceContainerSize(candidates, this.layoutContainer);\n    } else {\n      const newEdge = Math.min(\n        this.originalContainerBlockSize,\n        getBlockSize(this.layoutContainer) +\n          this.originalContainerBlockSize * 0.1,\n      );\n      setBlockSize(this.layoutContainer, newEdge);\n    }\n  }\n}\n\nfunction isLastColumnLongerThanAnyOtherColumn(\n  columns: Layout.Column[],\n): boolean {\n  if (columns.length <= 1) {\n    return false;\n  }\n  const lastColumnBlockSize = columns[columns.length - 1].computedBlockSize;\n  const otherColumns = columns.slice(0, columns.length - 1);\n  return otherColumns.every((c) => lastColumnBlockSize > c.computedBlockSize);\n}\n\nexport class BalanceNonLastColumnBalancer extends ColumnBalancer {\n  constructor(\n    columnGenerator: ColumnGenerator,\n    regionPageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n  ) {\n    super(layoutContainer, columnGenerator, regionPageFloatLayoutContext);\n  }\n\n  /**\n   * @override\n   */\n  calculatePenalty(layoutResult: ColumnLayoutResult): number {\n    if (layoutResult.columns.every((c) => c.computedBlockSize === 0)) {\n      return Infinity;\n    }\n    const computedBlockSizes = layoutResult.columns\n      .filter((c) => !c.pageBreakType)\n      .map((c) => c.computedBlockSize);\n    return MathUtil.variance(computedBlockSizes);\n  }\n\n  /**\n   * @override\n   */\n  hasNextCandidate(candidates: ColumnBalancingTrialResult[]): boolean {\n    return canReduceContainerSize(candidates);\n  }\n\n  /**\n   * @override\n   */\n  updateCondition(candidates: ColumnBalancingTrialResult[]): void {\n    reduceContainerSize(candidates, this.layoutContainer);\n  }\n}\n\nexport function createColumnBalancer(\n  columnCount: number,\n  columnFill: Css.Ident,\n  columnGenerator: ColumnGenerator,\n  regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  layoutContainer: Vtree.Container,\n  columns: Layout.Column[],\n  flowPosition: Vtree.FlowPosition,\n): ColumnBalancer | null {\n  if (columnFill === Css.ident.auto) {\n    return null;\n  } else {\n    // TODO: how to handle a case where no more in-flow contents but some\n    // page floats\n    const noMoreContent = flowPosition.positions.length === 0;\n    const lastColumn = columns[columns.length - 1];\n    const isLastColumnForceBroken = !!(lastColumn && lastColumn.pageBreakType);\n    if (noMoreContent || isLastColumnForceBroken) {\n      return new BalanceLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        columnCount,\n      );\n    } else if (columnFill === Css.ident.balance_all) {\n      return new BalanceNonLastColumnBalancer(\n        columnGenerator,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n      );\n    } else {\n      Asserts.assert(columnFill === Css.ident.balance);\n      return null;\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssValidator - Parse validation rules (validation.txt), validate\n * properties and shorthands.\n */\nimport * as Css from \"./css\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Logging from \"./logging\";\nimport { ValidationTxt } from \"./assets\";\n\nexport interface PropertyReceiver {\n  unknownProperty(name: string, value: Css.Val): void;\n\n  invalidPropertyValue(name: string, value: Css.Val): void;\n\n  simpleProperty(name: string, value: Css.Val, important): void;\n}\n\nexport class Node {\n  success: Node = null;\n  failure: Node = null;\n  code: number = 0;\n\n  constructor(public validator: PropertyValidator) {}\n\n  isSpecial(): boolean {\n    return this.code != 0;\n  }\n\n  markAsStartGroup(): void {\n    this.code = -1;\n  }\n\n  isStartGroup(): boolean {\n    return this.code == -1;\n  }\n\n  markAsEndGroup(): void {\n    this.code = -2;\n  }\n\n  isEndGroup(): boolean {\n    return this.code == -2;\n  }\n\n  markAsStartAlternate(index: number): void {\n    this.code = 2 * index + 1;\n  }\n\n  isStartAlternate(): boolean {\n    return this.code > 0 && this.code % 2 != 0;\n  }\n\n  markAsEndAlternate(index: number): void {\n    this.code = 2 * index + 2;\n  }\n\n  isEndAlternate(): boolean {\n    return this.code > 0 && this.code % 2 == 0;\n  }\n\n  getAlternate(): number {\n    return Math.floor((this.code - 1) / 2);\n  }\n}\n\nexport class Connection {\n  what: number = -1;\n\n  constructor(public where: number, public success: boolean) {}\n}\n\n/**\n * @enum {number}\n */\nexport enum Add {\n  FOLLOW = 1,\n  OPTIONAL,\n  REPEATED,\n  ALTERNATE,\n}\n\n/**\n * A class to build a list validator from other validators.\n */\nexport class ValidatingGroup {\n  nodes: Node[] = [];\n  connections: Connection[] = [];\n  match: number[] = []; // connector indicies\n  nomatch: number[] = []; // connector indicies\n  error: number[] = []; // connector indicies\n  emptyHead: boolean = true;\n\n  connect(arr: number[], nodeIndex: number): void {\n    for (let i = 0; i < arr.length; i++) {\n      this.connections[arr[i]].what = nodeIndex;\n    }\n    arr.splice(0, arr.length);\n  }\n\n  clone(): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < this.nodes.length; i++) {\n      const node = this.nodes[i];\n      const clonedNode = new Node(node.validator);\n      clonedNode.code = node.code;\n      group.nodes.push(clonedNode);\n    }\n    for (let i = 0; i < this.connections.length; i++) {\n      const connection = this.connections[i];\n      const groupConnection = new Connection(\n        connection.where,\n        connection.success,\n      );\n      groupConnection.what = connection.what;\n      group.connections.push(groupConnection);\n    }\n    group.match.push(...this.match);\n    group.nomatch.push(...this.nomatch);\n    group.error.push(...this.error);\n    return group;\n  }\n\n  /**\n   * Add \"special\" validation node to a given array (match, nomatch, or error).\n   * @param start if this a start or the end of a clause/group\n   * @param clause 0 indicates group start/end, otherwise clause index\n   */\n  private addSpecialToArr(arr: number[], start: boolean, clause: number): void {\n    const index = this.nodes.length;\n    const node = new Node(ALWAYS_FAIL);\n    if (clause >= 0) {\n      if (start) {\n        node.markAsStartAlternate(clause);\n      } else {\n        node.markAsEndAlternate(clause);\n      }\n    } else {\n      if (start) {\n        node.markAsStartGroup();\n      } else {\n        node.markAsEndGroup();\n      }\n    }\n    this.nodes.push(node);\n    this.connect(arr, index);\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    arr.push(this.connections.length);\n    this.connections.push(failure);\n    arr.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  endSpecialGroup(): void {\n    const arrs = [this.match, this.nomatch, this.error];\n    for (let i = 0; i < arrs.length; i++) {\n      this.addSpecialToArr(arrs[i], false, -1);\n    }\n  }\n\n  startSpecialGroup(): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    this.addSpecialToArr(this.match, true, -1);\n  }\n\n  endClause(clause: number): void {\n    this.addSpecialToArr(this.match, false, clause);\n  }\n\n  startClause(clause: number): void {\n    if (this.nodes.length) {\n      throw new Error(\"invalid call\");\n    }\n    const node = new Node(ALWAYS_FAIL);\n    node.markAsStartAlternate(clause);\n    this.nodes.push(node);\n    const success = new Connection(0, true);\n    const failure = new Connection(0, false);\n    this.nomatch.push(this.connections.length);\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  addPrimitive(validator: PropertyValidator): void {\n    const index = this.nodes.length;\n    this.nodes.push(new Node(validator));\n    const success = new Connection(index, true);\n    const failure = new Connection(index, false);\n    this.connect(this.match, index);\n    if (this.emptyHead) {\n      // if did not validate -> no match\n      this.nomatch.push(this.connections.length);\n      this.emptyHead = false;\n    } else {\n      // if did not validate -> failure\n      this.error.push(this.connections.length);\n    }\n    this.connections.push(failure);\n    this.match.push(this.connections.length);\n    this.connections.push(success);\n  }\n\n  isSimple(): boolean {\n    return this.nodes.length == 1 && !this.nodes[0].isSpecial();\n  }\n\n  isPrimitive(): boolean {\n    return (\n      this.isSimple() && this.nodes[0].validator instanceof PrimitiveValidator\n    );\n  }\n\n  addGroup(group: ValidatingGroup, how: Add): void {\n    if (group.nodes.length == 0) {\n      return;\n    }\n    const index = this.nodes.length;\n\n    // optimization for alternate primitive validators\n    if (\n      how == Add.ALTERNATE &&\n      index == 1 &&\n      group.isPrimitive() &&\n      this.isPrimitive()\n    ) {\n      this.nodes[0].validator = (\n        this.nodes[0].validator as PrimitiveValidator\n      ).combine(group.nodes[0].validator as PrimitiveValidator);\n      return;\n    }\n    for (let i = 0; i < group.nodes.length; i++) {\n      this.nodes.push(group.nodes[i]);\n    }\n\n    // nodes[index] is group start\n    if (how == Add.ALTERNATE) {\n      this.emptyHead = true;\n      this.connect(this.nomatch, index);\n    } else {\n      this.connect(this.match, index);\n    }\n    const connectionIndex = this.connections.length;\n    for (let i = 0; i < group.connections.length; i++) {\n      const connection = group.connections[i];\n      connection.where += index;\n      if (connection.what >= 0) {\n        connection.what += index;\n      }\n      this.connections.push(connection);\n    }\n    for (let i = 0; i < group.match.length; i++) {\n      this.match.push(group.match[i] + connectionIndex);\n    }\n    if (how == Add.REPEATED) {\n      this.connect(this.match, index);\n    }\n    if (how == Add.OPTIONAL || how == Add.REPEATED) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.match.push(group.nomatch[i] + connectionIndex);\n      }\n    } else if (this.emptyHead) {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.nomatch.push(group.nomatch[i] + connectionIndex);\n      }\n      this.emptyHead = group.emptyHead;\n    } else {\n      for (let i = 0; i < group.nomatch.length; i++) {\n        this.error.push(group.nomatch[i] + connectionIndex);\n      }\n    }\n    for (let i = 0; i < group.error.length; i++) {\n      this.error.push(group.error[i] + connectionIndex);\n    }\n\n    // invalidate group\n    group.nodes = null;\n    group.connections = null;\n  }\n\n  /**\n   * @return how\n   */\n  finish(successTerminal: Node, failTerminal: Node): Node {\n    const index = this.nodes.length;\n    this.nodes.push(successTerminal);\n    this.nodes.push(failTerminal);\n    this.connect(this.match, index);\n    this.connect(this.nomatch, index + 1);\n    this.connect(this.error, index + 1);\n    for (const connection of this.connections) {\n      if (connection.success) {\n        this.nodes[connection.where].success = this.nodes[connection.what];\n      } else {\n        this.nodes[connection.where].failure = this.nodes[connection.what];\n      }\n    }\n\n    // make sure that our data structure is correct\n    for (let j = 0; j < index; j++) {\n      if (this.nodes[j].failure == null || this.nodes[j].success == null) {\n        throw new Error(\"Invalid validator state\");\n      }\n    }\n    return this.nodes[0];\n  }\n}\n\nexport const ALLOW_EMPTY = 0x01;\n\nexport const ALLOW_STR = 0x02;\n\nexport const ALLOW_IDENT = 0x04;\n\nexport const ALLOW_POS_NUMERIC = 0x08;\n\nexport const ALLOW_POS_NUM = 0x10;\n\nexport const ALLOW_POS_INT = 0x20;\n\nexport const ALLOW_COLOR = 0x40;\n\nexport const ALLOW_URL = 0x80;\n\nexport const ALLOW_NEGATIVE = 0x100;\n\nexport const ALLOW_ZERO = 0x200;\n\nexport const ALLOW_ZERO_PERCENT = 0x400;\n\nexport const ALLOW_SLASH = 0x800;\n\nexport const ALLOW_URANGE = 0x1000;\n\nexport const ALLOW_IMAGE = 0x2000;\n\nexport type ValueMap = {\n  [key: string]: Css.Val;\n};\n\n/**\n * Abstract class to validate simple CSS property value (not a shorthand)\n */\nexport class PropertyValidator extends Css.Visitor {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Validate a subsequence of the given values from the given index. Return the\n   * list of matched values or null if there is no match.\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    const rval = values[index].visit(this);\n    if (rval) {\n      return [rval];\n    }\n    return null;\n  }\n}\n\n/**\n * Validate a primitive CSS value (not a list or function).\n * @param allowed mask of ALLOW_*** constants.\n */\nexport class PrimitiveValidator extends PropertyValidator {\n  constructor(\n    public readonly allowed: number,\n    public readonly idents: ValueMap,\n    public readonly units: ValueMap,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_EMPTY) {\n      return empty;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    if (this.allowed & ALLOW_SLASH) {\n      return slash;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    if (this.allowed & ALLOW_STR) {\n      return str;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const val = this.idents[ident.name.toLowerCase()];\n    if (val) {\n      return val;\n    }\n    if (this.allowed & ALLOW_IDENT) {\n      return ident;\n    }\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", ident.name)) {\n        return ident;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    if (numeric.num == 0 && !(this.allowed & ALLOW_ZERO)) {\n      if (numeric.unit == \"%\" && this.allowed & ALLOW_ZERO_PERCENT) {\n        return numeric;\n      }\n      return null;\n    }\n    if (numeric.num < 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.units[numeric.unit]) {\n      return numeric;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & ALLOW_POS_NUM) {\n      return num;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    if (num.num == 0) {\n      return this.allowed & ALLOW_ZERO ? num : null;\n    }\n    if (num.num <= 0 && !(this.allowed & ALLOW_NEGATIVE)) {\n      return null;\n    }\n    if (this.allowed & (ALLOW_POS_INT | ALLOW_POS_NUM)) {\n      return num;\n    }\n    const val = this.idents[`${num.num}`];\n    if (val) {\n      return val;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: Css.HexColor): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (/^([0-9A-F]{3,4}|([0-9A-F]{2}){3,4})$/i.test(color.hex)) {\n        return color;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    if (this.allowed & ALLOW_URL) {\n      return url;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    if (this.allowed & ALLOW_URANGE) {\n      return urange;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (this.allowed & ALLOW_COLOR) {\n      if (CSS.supports(\"color\", func.toString())) {\n        return func;\n      }\n    }\n    if (this.allowed & ALLOW_IMAGE) {\n      if (CSS.supports(\"background-image\", func.toString())) {\n        return func;\n      }\n    }\n    if (\n      func.name === \"calc\" &&\n      this.allowed &\n        (ALLOW_POS_NUMERIC |\n          ALLOW_POS_NUM |\n          ALLOW_POS_INT |\n          ALLOW_NEGATIVE |\n          ALLOW_ZERO |\n          ALLOW_ZERO_PERCENT)\n    ) {\n      return func;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    if (this.allowed & 0x7fe) {\n      // ALLOW_STR|ALLOW_IDENT|...|ALLOW_ZERO_PERCENT\n      return expr;\n    }\n    return null;\n  }\n\n  combine(other: PrimitiveValidator): PrimitiveValidator {\n    const idents: ValueMap = {};\n    const units: ValueMap = {};\n    for (const ident in this.idents) {\n      idents[ident] = this.idents[ident];\n    }\n    for (const ident in other.idents) {\n      idents[ident] = other.idents[ident];\n    }\n    for (const unit in this.units) {\n      units[unit] = this.units[unit];\n    }\n    for (const unit in other.units) {\n      units[unit] = other.units[unit];\n    }\n    return new PrimitiveValidator(this.allowed | other.allowed, idents, units);\n  }\n}\n\nconst NO_IDENTS: ValueMap = {};\n\nexport const ALWAYS_FAIL = new PrimitiveValidator(0, NO_IDENTS, NO_IDENTS);\n\n/**\n * Base class for list validation.\n */\nexport class ListValidator extends PropertyValidator {\n  successTerminal: Node;\n  failureTerminal: Node;\n  first: Node;\n\n  constructor(group: ValidatingGroup) {\n    super();\n    this.successTerminal = new Node(null);\n    this.failureTerminal = new Node(null);\n    this.first = group.finish(this.successTerminal, this.failureTerminal);\n  }\n\n  validateList(arr: Css.Val[], slice: boolean, startIndex: number): Css.Val[] {\n    let out: Css.Val[] = slice ? [] : arr;\n    let current = this.first;\n    let index = startIndex;\n    let alternativeStack: string[][] = null;\n    let alternatives: string[] = null;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (index >= arr.length) {\n        current = current.failure;\n        continue;\n      }\n      const inval = arr[index];\n      let outval = inval;\n      if (current.isSpecial()) {\n        let success = true;\n        if (current.isStartGroup()) {\n          if (alternativeStack) {\n            alternativeStack.push(alternatives);\n          } else {\n            alternativeStack = [alternatives];\n          }\n          alternatives = [];\n        } else if (current.isEndGroup()) {\n          if (alternativeStack.length > 0) {\n            alternatives = alternativeStack.pop();\n          } else {\n            alternatives = null;\n          }\n        } else if (current.isEndAlternate()) {\n          alternatives[current.getAlternate()] = \"taken\";\n        } else {\n          success = alternatives[current.getAlternate()] == null;\n        }\n        current = success ? current.success : current.failure;\n      } else {\n        if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof SpaceListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input space list as a whole.\n          outval = new Css.SpaceList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else if (\n          index == 0 &&\n          !slice &&\n          current.validator instanceof CommaListValidator &&\n          this instanceof SpaceListValidator\n        ) {\n          // Special nesting case: validate the input comma list as a whole.\n          outval = new Css.CommaList(arr).visit(current.validator);\n          if (outval) {\n            index = arr.length;\n            current = current.success;\n            continue;\n          }\n        } else {\n          outval = inval.visit(current.validator);\n        }\n        if (!outval) {\n          current = current.failure;\n          continue;\n        }\n        if (outval !== inval && arr === out) {\n          // startIndex is zero here\n          out = [];\n          for (let k = 0; k < index; k++) {\n            out[k] = arr[k];\n          }\n        }\n        if (arr !== out) {\n          out[index - startIndex] = outval;\n        }\n        index++;\n        current = current.success;\n      }\n    }\n    if (current === this.successTerminal) {\n      if (slice ? out.length > 0 : index == arr.length) {\n        return out;\n      }\n    }\n    return null;\n  }\n\n  validateSingle(inval: Css.Val): Css.Val {\n    // no need to worry about \"specials\"\n    let outval: Css.Val = null;\n    let current = this.first;\n    while (\n      current !== this.successTerminal &&\n      current !== this.failureTerminal\n    ) {\n      if (!inval) {\n        current = current.failure;\n        continue;\n      }\n      if (current.isSpecial()) {\n        current = current.success;\n        continue;\n      }\n      outval = inval.visit(current.validator);\n      if (!outval) {\n        current = current.failure;\n        continue;\n      }\n      inval = null;\n      current = current.success;\n    }\n    if (current === this.successTerminal) {\n      return outval;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitSlash(slash: Css.Val): Css.Val {\n    return this.validateSingle(slash);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitURange(urange: Css.URange): Css.Val {\n    return this.validateSingle(urange);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return null;\n  }\n}\n\nexport class SpaceListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.SpaceList(arr);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    // Special Case : Issue #156\n    let node = this.first;\n    let hasCommaListValidator = false;\n    while (node) {\n      if (node.validator instanceof CommaListValidator) {\n        hasCommaListValidator = true;\n        break;\n      }\n      node = node.failure;\n    }\n    if (hasCommaListValidator) {\n      const arr = this.validateList(list.values, false, 0);\n      if (arr === list.values) {\n        return list;\n      }\n      if (!arr) {\n        return null;\n      }\n      return new Css.CommaList(arr);\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    return this.validateList(values, true, index);\n  }\n}\n\nexport class CommaListValidator extends ListValidator {\n  constructor(group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    return this.validateSingle(list);\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const arr = this.validateList(list.values, false, 0);\n    if (arr === list.values) {\n      return list;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.CommaList(arr);\n  }\n\n  /**\n   * @override\n   */\n  validateForShorthand(values: Css.Val[], index: number): Css.Val[] {\n    let current = this.first;\n    let rval: Css.Val[];\n    while (current !== this.failureTerminal) {\n      rval = current.validator.validateForShorthand(values, index);\n      if (rval) {\n        return rval;\n      }\n      current = current.failure;\n    }\n    return null;\n  }\n}\n\nexport class FuncValidator extends ListValidator {\n  constructor(public readonly name: string, group: ValidatingGroup) {\n    super(group);\n  }\n\n  /**\n   * @override\n   */\n  validateSingle(inval: Css.Val): Css.Val {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name.toLowerCase() != this.name) {\n      return null;\n    }\n    const arr = this.validateList(func.values, false, 0);\n    if (arr === func.values) {\n      return func;\n    }\n    if (!arr) {\n      return null;\n    }\n    return new Css.Func(func.name, arr);\n  }\n}\n\n//----------------------- Shorthands\n//------------------------------------------------------------\nexport class ShorthandSyntaxNode {\n  /**\n   * @return new index.\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    return index;\n  }\n\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {}\n}\n\nexport class ShorthandSyntaxProperty extends ShorthandSyntaxNode {\n  validator: PropertyValidator;\n\n  constructor(validatorSet: ValidatorSet, public readonly name: string) {\n    super();\n    this.validator = validatorSet.validators[this.name];\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    if (shorthandValidator.values[this.name]) {\n      return index;\n    }\n    const rvals = this.validator.validateForShorthand(values, index);\n    if (rvals) {\n      const len = rvals.length;\n      const rval = len > 1 ? new Css.SpaceList(rvals) : rvals[0];\n      this.success(rval, shorthandValidator);\n      return index + len;\n    }\n    return index;\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    shorthandValidator.values[this.name] = rval;\n  }\n}\n\nexport class ShorthandSyntaxPropertyN extends ShorthandSyntaxProperty {\n  constructor(validatorSet: ValidatorSet, public readonly names: string[]) {\n    super(validatorSet, names[0]);\n  }\n\n  /**\n   * @override\n   */\n  success(rval: Css.Val, shorthandValidator: ShorthandValidator): void {\n    for (let i = 0; i < this.names.length; i++) {\n      shorthandValidator.values[this.names[i]] = rval;\n    }\n  }\n}\n\nexport class ShorthandSyntaxCompound extends ShorthandSyntaxNode {\n  constructor(\n    public readonly nodes: ShorthandSyntaxNode[],\n    public readonly slash: boolean,\n  ) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  tryParse(\n    values: Css.Val[],\n    index: number,\n    shorthandValidator: ShorthandValidator,\n  ): number {\n    const index0 = index;\n    if (this.slash) {\n      if (values[index] == Css.slash) {\n        if (++index == values.length) {\n          return index0;\n        }\n      } else {\n        return index0;\n      }\n    }\n    let newIndex = this.nodes[0].tryParse(values, index, shorthandValidator);\n    if (newIndex == index) {\n      return index0;\n    }\n    index = newIndex;\n    for (let i = 1; i < this.nodes.length && index < values.length; i++) {\n      newIndex = this.nodes[i].tryParse(values, index, shorthandValidator);\n      if (newIndex == index) {\n        break;\n      }\n      index = newIndex;\n    }\n    return index;\n  }\n}\n\nexport class ShorthandValidator extends Css.Visitor {\n  syntax: ShorthandSyntaxNode[] = null;\n  propList: string[] = null;\n  error: boolean = false;\n  values: ValueMap = {};\n  validatorSet: ValidatorSet = null;\n\n  setOwner(validatorSet: ValidatorSet) {\n    this.validatorSet = validatorSet;\n  }\n\n  syntaxNodeForProperty(name: string): ShorthandSyntaxNode {\n    return new ShorthandSyntaxProperty(this.validatorSet, name);\n  }\n\n  clone(): this {\n    const other = new (this.constructor as any)();\n    other.syntax = this.syntax;\n    other.propList = this.propList;\n    other.validatorSet = this.validatorSet;\n    return other;\n  }\n\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    this.syntax = syntax;\n    this.propList = propList;\n  }\n\n  finish(important: boolean, receiver: PropertyReceiver): boolean {\n    if (!this.error) {\n      for (const name of this.propList) {\n        receiver.simpleProperty(\n          name,\n          this.values[name] || this.validatorSet.defaultValues[name],\n          important,\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  propagateDefaultingValue(\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    for (const name of this.propList) {\n      receiver.simpleProperty(name, value, important);\n    }\n  }\n\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n\n  validateSingle(val: Css.Val): Css.Val {\n    this.validateList([val]);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitEmpty(empty: Css.Val): Css.Val {\n    return this.validateSingle(empty);\n  }\n\n  /**\n   * @override\n   */\n  visitStr(str: Css.Str): Css.Val {\n    return this.validateSingle(str);\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    return this.validateSingle(ident);\n  }\n\n  /**\n   * @override\n   */\n  visitNumeric(numeric: Css.Numeric): Css.Val {\n    return this.validateSingle(numeric);\n  }\n\n  /**\n   * @override\n   */\n  visitNum(num: Css.Num): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitInt(num: Css.Int): Css.Val {\n    return this.validateSingle(num);\n  }\n\n  /**\n   * @override\n   */\n  visitHexColor(color: Css.HexColor): Css.Val {\n    return this.validateSingle(color);\n  }\n\n  /**\n   * @override\n   */\n  visitURL(url: Css.URL): Css.Val {\n    return this.validateSingle(url);\n  }\n\n  /**\n   * @override\n   */\n  visitSpaceList(list: Css.SpaceList): Css.Val {\n    this.validateList(list.values);\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    this.error = true;\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitFunc(func: Css.Func): Css.Val {\n    return this.validateSingle(func);\n  }\n\n  /**\n   * @override\n   */\n  visitExpr(expr: Css.Expr): Css.Val {\n    return this.validateSingle(expr);\n  }\n}\n\nexport class SimpleShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = 0;\n    let i = 0;\n    while (index < list.length) {\n      const newIndex = this.syntax[i].tryParse(list, index, this);\n      if (newIndex > index) {\n        index = newIndex;\n        i = 0;\n        continue;\n      }\n      if (++i == this.syntax.length) {\n        this.error = true;\n        break;\n      }\n    }\n    return index;\n  }\n}\n\nexport class InsetsShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    if (list.length > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index = i;\n      while (index >= list.length) {\n        index = index == 1 ? 0 : index - 2;\n      }\n      if (this.syntax[i].tryParse(list, index, this) != index + 1) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n\n  createSyntaxNode(): ShorthandSyntaxPropertyN {\n    return new ShorthandSyntaxPropertyN(this.validatorSet, this.propList);\n  }\n}\n\nexport class InsetsSlashShorthandValidator extends ShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let slashIndex = list.length;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === Css.slash) {\n        slashIndex = i;\n        break;\n      }\n    }\n    if (slashIndex > this.syntax.length || list.length == 0) {\n      this.error = true;\n      return 0;\n    }\n    for (let i = 0; i < this.syntax.length; i++) {\n      let index0 = i;\n      while (index0 >= slashIndex) {\n        index0 = index0 == 1 ? 0 : index0 - 2;\n      }\n      let index1: number;\n      if (slashIndex + 1 < list.length) {\n        index1 = slashIndex + i + 1;\n        while (index1 >= list.length) {\n          index1 = index1 - (index1 == slashIndex + 2 ? 1 : 2);\n        }\n      } else {\n        index1 = index0;\n      }\n      const vals = [list[index0], list[index1]];\n      if (this.syntax[i].tryParse(vals, 0, this) != 2) {\n        this.error = true;\n        return 0;\n      }\n    }\n    return list.length;\n  }\n}\n\nexport class CommaShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  mergeIn(acc: { [key: string]: Css.Val[] }, values: ValueMap) {\n    for (const name of this.propList) {\n      const val = values[name] || this.validatorSet.defaultValues[name];\n      let arr = acc[name];\n      if (!arr) {\n        arr = [];\n        acc[name] = arr;\n      }\n      arr.push(val);\n    }\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    const acc: { [key: string]: Css.Val[] } = {};\n    for (let i = 0; i < list.values.length; i++) {\n      this.values = {};\n      if (list.values[i] instanceof Css.CommaList) {\n        this.error = true;\n      } else {\n        list.values[i].visit(this);\n        this.mergeIn(acc, this.values);\n        if (this.values[\"background-color\"] && i != list.values.length - 1) {\n          this.error = true;\n        }\n      }\n      if (this.error) {\n        return null;\n      }\n    }\n    this.values = {};\n    for (const name in acc) {\n      if (name == \"background-color\") {\n        this.values[name] = acc[name].pop();\n      } else {\n        this.values[name] = new Css.CommaList(acc[name]);\n      }\n    }\n    return null;\n  }\n}\n\nexport class FontShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    this.propList.push(\n      \"font-family\",\n      \"line-height\",\n      \"font-size\",\n      \"font-stretch\",\n      \"font-variant-ligatures\",\n      \"font-variant-caps\",\n      \"font-variant-numeric\",\n      \"font-variant-east-asian\",\n    );\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    let index = super.validateList(list);\n\n    const fontVariant = this.values[\"font-variant_css2\"];\n    if (fontVariant) {\n      delete this.values[\"font-variant_css2\"];\n      this.values[\"font-variant-caps\"] = fontVariant;\n    }\n    const fontStretch = this.values[\"font-stretch_css3\"];\n    if (fontStretch) {\n      delete this.values[\"font-stretch_css3\"];\n      this.values[\"font-stretch\"] = fontStretch;\n    }\n\n    // must at least have font-size and font-family at the end\n    if (index + 2 > list.length) {\n      this.error = true;\n      return index;\n    }\n    this.error = false;\n    const validators = this.validatorSet.validators;\n    if (!list[index].visit(validators[\"font-size\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-size\"] = list[index++];\n    if (list[index] === Css.slash) {\n      index++;\n\n      // must at least have line-height and font-family at the end\n      if (index + 2 > list.length) {\n        this.error = true;\n        return index;\n      }\n      if (!list[index].visit(validators[\"line-height\"])) {\n        this.error = true;\n        return index;\n      }\n      this.values[\"line-height\"] = list[index++];\n    }\n    const fontFamily =\n      index == list.length - 1\n        ? list[index]\n        : new Css.SpaceList(list.slice(index, list.length));\n    if (!fontFamily.visit(validators[\"font-family\"])) {\n      this.error = true;\n      return index;\n    }\n    this.values[\"font-family\"] = fontFamily;\n    return list.length;\n  }\n\n  /**\n   * @override\n   */\n  visitCommaList(list: Css.CommaList): Css.Val {\n    list.values[0].visit(this);\n    if (this.error) {\n      return null;\n    }\n    const familyList = [this.values[\"font-family\"]];\n    for (let i = 1; i < list.values.length; i++) {\n      familyList.push(list.values[i]);\n    }\n    const family = new Css.CommaList(familyList);\n    if (!family.visit(this.validatorSet.validators[\"font-family\"])) {\n      this.error = true;\n    } else {\n      this.values[\"font-family\"] = family;\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  visitIdent(ident: Css.Ident): Css.Val {\n    const props = this.validatorSet.systemFonts[ident.name];\n    if (props) {\n      for (const name in props) {\n        this.values[name] = props[name];\n      }\n    } else {\n      this.error = true;\n    }\n    return null;\n  }\n}\n\nconst propsExcludedFromAll = [\n  \"unicode-bidi\",\n  \"direction\",\n\n  // excludes css-logical\n  \"margin-block-start\",\n  \"margin-block-end\",\n  \"margin-inline-start\",\n  \"margin-inline-end\",\n  \"padding-block-start\",\n  \"padding-block-end\",\n  \"padding-inline-start\",\n  \"padding-inline-end\",\n  \"border-block-start-color\",\n  \"border-block-end-color\",\n  \"border-inline-start-color\",\n  \"border-inline-end-color\",\n  \"border-block-start-style\",\n  \"border-block-end-style\",\n  \"border-inline-start-style\",\n  \"border-inline-end-style\",\n  \"border-block-start-width\",\n  \"border-block-end-width\",\n  \"border-inline-start-width\",\n  \"border-inline-end-width\",\n  \"block-start\",\n  \"block-end\",\n  \"inline-start\",\n  \"inline-end\",\n  \"block-size\",\n  \"inline-size\",\n  \"max-block-size\",\n  \"max-inline-size\",\n  \"min-block-size\",\n  \"min-inline-size\",\n\n  // excludes non-standards and special\n  \"behavior\",\n  \"bleed\",\n  \"conflicting-partitions\",\n  \"crop-offset\",\n  \"enabled\",\n  \"flow-consume\",\n  \"flow-from\",\n  \"flow-into\",\n  \"flow-linger\",\n  \"flow-options\",\n  \"flow-priority\",\n  \"font-display\",\n  \"font-size-adjust\",\n  \"font-stretch_css3\",\n  \"font-variant_css2\",\n  \"glyph-orientation-vertical\",\n  \"marks\",\n  \"min-page-height\",\n  \"min-page-width\",\n  \"repeat-on-break\",\n  \"required\",\n  \"required-partitions\",\n  \"ruby-align\",\n  \"shape-inside\",\n  \"snap-height\",\n  \"snap-width\",\n  \"template\",\n  \"text-decoration-skip\",\n  \"text-justify\",\n  \"text-zoom\",\n  \"unicode-range\",\n  \"utilization\",\n  \"wrap-flow\",\n];\n\nexport class AllShorthandValidator extends SimpleShorthandValidator {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  init(syntax: ShorthandSyntaxNode[], propList: string[]): void {\n    super.init(syntax, propList);\n    for (const name in this.validatorSet.validators) {\n      if (!propsExcludedFromAll.includes(name)) {\n        this.propList.push(name);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  validateList(list: Css.Val[]): number {\n    this.error = true;\n    return 0;\n  }\n}\n\nexport const shorthandValidators: {\n  [key: string]: typeof ShorthandValidator;\n} = {\n  SIMPLE: SimpleShorthandValidator,\n  INSETS: InsetsShorthandValidator,\n  INSETS_SLASH: InsetsSlashShorthandValidator,\n  COMMA: CommaShorthandValidator,\n  FONT: FontShorthandValidator,\n  ALL: AllShorthandValidator,\n};\n\n//---- validation grammar parser and public property validator\n//------------------------\n\n/**\n * Object that validates simple and shorthand properties, breaking up shorthand\n * properties into corresponding simple ones, also stripping property prefixes.\n */\nexport class ValidatorSet {\n  validators: { [key: string]: PropertyValidator } = {};\n  prefixes: { [key: string]: { [key: string]: boolean } } = {};\n  defaultValues: ValueMap = {};\n  namedValidators: { [key: string]: ValidatingGroup } = {};\n  systemFonts: { [key: string]: ValueMap } = {};\n  shorthands: { [key: string]: ShorthandValidator } = {};\n  layoutProps: ValueMap = {};\n  backgroundProps: ValueMap = {};\n\n  private addReplacement(\n    val: ValidatingGroup,\n    token: CssTokenizer.Token,\n  ): ValidatingGroup {\n    let cssval: Css.Val;\n    if (token.type == CssTokenizer.TokenType.NUMERIC) {\n      cssval = new Css.Numeric(token.num, token.text);\n    } else if (token.type == CssTokenizer.TokenType.HASH) {\n      cssval = new Css.HexColor(token.text);\n    } else if (token.type == CssTokenizer.TokenType.IDENT) {\n      cssval = Css.getName(token.text);\n    } else {\n      throw new Error(\"unexpected replacement\");\n    }\n    if (val.isPrimitive()) {\n      const validator = val.nodes[0].validator as PrimitiveValidator;\n      const idents = validator.idents;\n      for (const ident in idents) {\n        idents[ident] = cssval;\n      }\n      return val;\n    }\n    throw new Error(\"unexpected replacement\");\n  }\n\n  private newGroup(op: string, vals: ValidatingGroup[]): ValidatingGroup {\n    const group = new ValidatingGroup();\n    if (op == \"||\") {\n      for (let i = 0; i < vals.length; i++) {\n        const subgroup = new ValidatingGroup();\n        subgroup.startClause(i);\n        subgroup.addGroup(vals[i], Add.FOLLOW);\n        subgroup.endClause(i);\n        group.addGroup(subgroup, i == 0 ? Add.FOLLOW : Add.ALTERNATE);\n      }\n      const outer = new ValidatingGroup();\n      outer.startSpecialGroup();\n      outer.addGroup(group, Add.REPEATED);\n      outer.endSpecialGroup();\n      return outer;\n    } else {\n      let how: Add;\n      switch (op) {\n        case \" \":\n          how = Add.FOLLOW;\n          break;\n        case \"|\":\n        case \"||\":\n          how = Add.ALTERNATE;\n          break;\n        default:\n          throw new Error(\"unexpected op\");\n      }\n      for (let i = 0; i < vals.length; i++) {\n        group.addGroup(vals[i], i == 0 ? Add.FOLLOW : how);\n      }\n      return group;\n    }\n  }\n\n  private addCounts(\n    val: ValidatingGroup,\n    min: number,\n    max: number,\n  ): ValidatingGroup {\n    const group = new ValidatingGroup();\n    for (let i = 0; i < min; i++) {\n      group.addGroup(val.clone(), Add.FOLLOW);\n    }\n    if (max == Number.POSITIVE_INFINITY) {\n      group.addGroup(val, Add.REPEATED);\n    } else {\n      for (let i = min; i < max; i++) {\n        group.addGroup(val.clone(), Add.OPTIONAL);\n      }\n    }\n    return group;\n  }\n\n  private primitive(validator: PropertyValidator): ValidatingGroup {\n    const group = new ValidatingGroup();\n    group.addPrimitive(validator);\n    return group;\n  }\n\n  private newFunc(fn: string, val: ValidatingGroup): ValidatingGroup {\n    let validator: PropertyValidator;\n    switch (fn) {\n      case \"COMMA\":\n        validator = new CommaListValidator(val);\n        break;\n      case \"SPACE\":\n        validator = new SpaceListValidator(val);\n        break;\n      default:\n        validator = new FuncValidator(fn.toLowerCase(), val);\n        break;\n    }\n    return this.primitive(validator);\n  }\n\n  initBuiltInValidators(): void {\n    this.namedValidators[\"COLOR\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_COLOR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IMAGE_FUNCTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IMAGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_INT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_INT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_NUM\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUM, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, { \"%\": Css.empty }),\n    );\n    this.namedValidators[\"NEGATIVE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_NEGATIVE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"ZERO_PERCENTAGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_ZERO_PERCENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"POS_LENGTH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        em: Css.empty,\n        ex: Css.empty,\n        ch: Css.empty,\n        rem: Css.empty,\n        vw: Css.empty,\n        vh: Css.empty,\n        vi: Css.empty,\n        vb: Css.empty,\n        vmin: Css.empty,\n        vmax: Css.empty,\n        pvw: Css.empty,\n        pvh: Css.empty,\n        pvi: Css.empty,\n        pvb: Css.empty,\n        pvmin: Css.empty,\n        pvmax: Css.empty,\n        cm: Css.empty,\n        mm: Css.empty,\n        in: Css.empty,\n        px: Css.empty,\n        pt: Css.empty,\n        pc: Css.empty,\n        q: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_ANGLE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        deg: Css.empty,\n        grad: Css.empty,\n        rad: Css.empty,\n        turn: Css.empty,\n      }),\n    );\n    this.namedValidators[\"POS_TIME\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        s: Css.empty,\n        ms: Css.empty,\n      }),\n    );\n    this.namedValidators[\"FREQUENCY\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        Hz: Css.empty,\n        kHz: Css.empty,\n      }),\n    );\n    this.namedValidators[\"RESOLUTION\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_POS_NUMERIC, NO_IDENTS, {\n        dpi: Css.empty,\n        dpcm: Css.empty,\n        dppx: Css.empty,\n      }),\n    );\n    this.namedValidators[\"URI\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URL, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"URANGE\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_URANGE, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"IDENT\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_IDENT, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"STRING\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_STR, NO_IDENTS, NO_IDENTS),\n    );\n    this.namedValidators[\"SLASH\"] = this.primitive(\n      new PrimitiveValidator(ALLOW_SLASH, NO_IDENTS, NO_IDENTS),\n    );\n    const stdfont = { \"font-family\": Css.getName(\"sans-serif\") };\n    this.systemFonts[\"caption\"] = stdfont;\n    this.systemFonts[\"icon\"] = stdfont;\n    this.systemFonts[\"menu\"] = stdfont;\n    this.systemFonts[\"message-box\"] = stdfont;\n    this.systemFonts[\"small-caption\"] = stdfont;\n    this.systemFonts[\"status-bar\"] = stdfont;\n  }\n\n  private isBuiltIn(name: string): boolean {\n    return !!name.match(/^[A-Z_0-9]+$/);\n  }\n\n  private readNameAndPrefixes(\n    tok: CssTokenizer.Tokenizer,\n    section: number,\n  ): string | null {\n    let token = tok.token();\n    if (token.type == CssTokenizer.TokenType.EOF) {\n      // Finished normally\n      return null;\n    }\n    const rulePrefixes: { [key: string]: boolean } = { \"\": true };\n    if (token.type == CssTokenizer.TokenType.O_BRK) {\n      do {\n        tok.consume();\n        token = tok.token();\n        if (token.type != CssTokenizer.TokenType.IDENT) {\n          throw new Error(\"Prefix name expected\");\n        }\n        rulePrefixes[token.text] = true;\n        tok.consume();\n        token = tok.token();\n      } while (token.type == CssTokenizer.TokenType.COMMA);\n      if (token.type != CssTokenizer.TokenType.C_BRK) {\n        throw new Error(\"']' expected\");\n      }\n      tok.consume();\n      token = tok.token();\n    }\n    if (token.type != CssTokenizer.TokenType.IDENT) {\n      throw new Error(\"Property name expected\");\n    }\n    if (section == 2 ? token.text == \"SHORTHANDS\" : token.text == \"DEFAULTS\") {\n      tok.consume();\n      return null;\n    }\n    const name = token.text;\n    tok.consume();\n    if (section != 2) {\n      if (tok.token().type != CssTokenizer.TokenType.EQ) {\n        throw new Error(\"'=' expected\");\n      }\n      if (!this.isBuiltIn(name)) {\n        this.prefixes[name] = rulePrefixes;\n      }\n    } else {\n      if (tok.token().type != CssTokenizer.TokenType.COLON) {\n        throw new Error(\"':' expected\");\n      }\n    }\n    return name;\n  }\n\n  private parseValidators(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 1);\n      if (!ruleName) {\n        return;\n      }\n      let vals: ValidatingGroup[] = [];\n      const stack = [];\n      let op = \"\";\n      let val: ValidatingGroup;\n      let expectval = true;\n      const reduce = (): ValidatingGroup => {\n        if (vals.length == 0) {\n          throw new Error(\"No values\");\n        }\n        if (vals.length == 1) {\n          return vals[0];\n        }\n        return this.newGroup(op, vals);\n      };\n      const setop = (currop: string): void => {\n        if (expectval) {\n          throw new Error(`'${currop}': unexpected`);\n        }\n        if (op && op != currop) {\n          throw new Error(`mixed operators: '${currop}' and '${op}'`);\n        }\n        op = currop;\n        expectval = true;\n      };\n      let result: ValidatingGroup = null;\n      while (!result) {\n        tok.consume();\n        let token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (!expectval) {\n              setop(\" \");\n            }\n            if (this.isBuiltIn(token.text)) {\n              const builtIn = this.namedValidators[token.text];\n              if (!builtIn) {\n                throw new Error(`'${token.text}' unexpected`);\n              }\n              vals.push(builtIn.clone());\n            } else {\n              const idents: ValueMap = {};\n              idents[token.text.toLowerCase()] = Css.getName(token.text);\n              vals.push(\n                this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n              );\n            }\n            expectval = false;\n            break;\n          case CssTokenizer.TokenType.INT: {\n            const idents: ValueMap = {};\n            idents[`${token.num}`] = new Css.Int(token.num);\n            vals.push(\n              this.primitive(new PrimitiveValidator(0, idents, NO_IDENTS)),\n            );\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.BAR:\n            setop(\"|\");\n            break;\n          case CssTokenizer.TokenType.BAR_BAR:\n            setop(\"||\");\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"[\" });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.FUNC:\n            if (!expectval) {\n              setop(\" \");\n            }\n            stack.push({ vals, op, b: \"(\", fn: token.text });\n            op = \"\";\n            vals = [];\n            expectval = true;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"[\") {\n              throw new Error(\"']' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(val);\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.C_PAR: {\n            val = reduce();\n            const open = stack.pop();\n            if (open.b != \"(\") {\n              throw new Error(\"')' unexpected\");\n            }\n            vals = open.vals;\n            vals.push(this.newFunc(open.fn, val));\n            op = open.op;\n            expectval = false;\n            break;\n          }\n          case CssTokenizer.TokenType.COLON:\n            if (expectval) {\n              throw new Error(\"':' unexpected\");\n            }\n            tok.consume();\n            vals.push(this.addReplacement(vals.pop(), tok.token()));\n            break;\n          case CssTokenizer.TokenType.QMARK:\n            if (expectval) {\n              throw new Error(\"'?' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, 1));\n            break;\n          case CssTokenizer.TokenType.STAR:\n            if (expectval) {\n              throw new Error(\"'*' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 0, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.PLUS:\n            if (expectval) {\n              throw new Error(\"'+' unexpected\");\n            }\n            vals.push(this.addCounts(vals.pop(), 1, Number.POSITIVE_INFINITY));\n            break;\n          case CssTokenizer.TokenType.O_BRC: {\n            tok.consume();\n            token = tok.token();\n            if (token.type != CssTokenizer.TokenType.INT) {\n              throw new Error(\"<int> expected\");\n            }\n            const min = token.num;\n            let max = min;\n            tok.consume();\n            token = tok.token();\n            if (token.type == CssTokenizer.TokenType.COMMA) {\n              tok.consume();\n              token = tok.token();\n              if (token.type != CssTokenizer.TokenType.INT) {\n                throw new Error(\"<int> expected\");\n              }\n              max = token.num;\n              tok.consume();\n              token = tok.token();\n            }\n            if (token.type != CssTokenizer.TokenType.C_BRC) {\n              throw new Error(\"'}' expected\");\n            }\n            vals.push(this.addCounts(vals.pop(), min, max));\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = reduce();\n            if (stack.length > 0) {\n              throw new Error(`unclosed '${stack.pop().b}'`);\n            }\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      tok.consume();\n      if (this.isBuiltIn(ruleName)) {\n        this.namedValidators[ruleName] = result;\n      } else {\n        if (result.isSimple()) {\n          this.validators[ruleName] = result.nodes[0].validator;\n        } else {\n          this.validators[ruleName] = new SpaceListValidator(result);\n        }\n      }\n    }\n  }\n\n  private parseDefaults(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const propName = this.readNameAndPrefixes(tok, 2);\n      if (!propName) {\n        return;\n      }\n      const vals: Css.Val[] = [];\n      while (true) {\n        tok.consume();\n        const token = tok.token();\n        if (token.type == CssTokenizer.TokenType.SEMICOL) {\n          tok.consume();\n          break;\n        }\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            vals.push(Css.getName(token.text));\n            break;\n          case CssTokenizer.TokenType.NUM:\n            vals.push(new Css.Num(token.num));\n            break;\n          case CssTokenizer.TokenType.INT:\n            vals.push(new Css.Int(token.num));\n            break;\n          case CssTokenizer.TokenType.NUMERIC:\n            vals.push(new Css.Numeric(token.num, token.text));\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      this.defaultValues[propName] =\n        vals.length > 1 ? new Css.SpaceList(vals) : vals[0];\n    }\n  }\n\n  private parseShorthands(tok: CssTokenizer.Tokenizer): void {\n    while (true) {\n      const ruleName = this.readNameAndPrefixes(tok, 3);\n      if (!ruleName) {\n        return;\n      }\n      let token = tok.nthToken(1);\n      let shorthandValidator: ShorthandValidator;\n      if (\n        token.type == CssTokenizer.TokenType.IDENT &&\n        shorthandValidators[token.text]\n      ) {\n        shorthandValidator = new shorthandValidators[token.text]();\n        tok.consume();\n      } else {\n        shorthandValidator = new SimpleShorthandValidator();\n      }\n      shorthandValidator.setOwner(this);\n      let result = false;\n      let syntax: ShorthandSyntaxNode[] = [];\n      let slash = false;\n      const stack = [];\n      const propList = [];\n      while (!result) {\n        tok.consume();\n        token = tok.token();\n        switch (token.type) {\n          case CssTokenizer.TokenType.IDENT:\n            if (this.validators[token.text]) {\n              syntax.push(shorthandValidator.syntaxNodeForProperty(token.text));\n              // `font-variant_css2` and `font-stretch_css3` are not real properties\n              if (!token.text.includes(\"_\")) {\n                propList.push(token.text);\n              }\n            } else if (\n              this.shorthands[token.text] instanceof InsetsShorthandValidator\n            ) {\n              const insetShorthand = this.shorthands[\n                token.text\n              ] as InsetsShorthandValidator;\n              syntax.push(insetShorthand.createSyntaxNode());\n              propList.push(...insetShorthand.propList);\n            } else {\n              throw new Error(\n                `'${token.text}' is neither a simple property nor an inset shorthand`,\n              );\n            }\n            break;\n          case CssTokenizer.TokenType.SLASH:\n            if (syntax.length > 0 || slash) {\n              throw new Error(\"unexpected slash\");\n            }\n            slash = true;\n            break;\n          case CssTokenizer.TokenType.O_BRK:\n            stack.push({ slash, syntax });\n            syntax = [];\n            slash = false;\n            break;\n          case CssTokenizer.TokenType.C_BRK: {\n            const compound = new ShorthandSyntaxCompound(syntax, slash);\n            const item = stack.pop();\n            syntax = item.syntax;\n            slash = item.slash;\n            syntax.push(compound);\n            break;\n          }\n          case CssTokenizer.TokenType.SEMICOL:\n            result = true;\n            tok.consume();\n            break;\n          default:\n            throw new Error(\"unexpected token\");\n        }\n      }\n      shorthandValidator.init(syntax, propList);\n      this.shorthands[ruleName] = shorthandValidator;\n    }\n  }\n\n  parse(text: string): void {\n    // Not as robust as CSS parser.\n    const tok = new CssTokenizer.Tokenizer(text, null);\n    this.parseValidators(tok);\n    this.parseDefaults(tok);\n    this.parseShorthands(tok);\n    this.backgroundProps = this.makePropSet([\"background\"]);\n    this.layoutProps = this.makePropSet([\n      \"margin\",\n      \"border\",\n      \"padding\",\n      \"columns\",\n      \"column-gap\",\n      \"column-rule\",\n      \"column-fill\",\n    ]);\n  }\n\n  makePropSet(propList: string[]): ValueMap {\n    const map: ValueMap = {};\n    for (const prop of propList) {\n      const shorthand = this.shorthands[prop];\n      const list = shorthand ? shorthand.propList : [prop];\n      for (const pname of list) {\n        const pval = this.defaultValues[pname];\n        if (!pval) {\n          Logging.logger.warn(\"Unknown property in makePropSet:\", pname);\n        } else {\n          map[pname] = pval;\n        }\n      }\n    }\n    return map;\n  }\n\n  validatePropertyAndHandleShorthand(\n    name: string,\n    value: Css.Val,\n    important: boolean,\n    receiver: PropertyReceiver,\n  ): void {\n    if (Css.isCustomPropName(name)) {\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    if (containsVar(value)) {\n      // Set the specified property containing `var(…)`\n      receiver.simpleProperty(name, value, important);\n      return;\n    }\n    let prefix = \"\";\n    const origName = name;\n    name = name.toLowerCase();\n    const r = name.match(/^-([a-z]+)-([-a-z0-9]+)$/);\n    if (r) {\n      prefix = r[1];\n      name = r[2];\n    }\n    const px = this.prefixes[name];\n    if (!px || !px[prefix]) {\n      if (CSS.supports(name, value.toString())) {\n        // Browser supports this property\n        receiver.simpleProperty(origName, value, important);\n      } else {\n        receiver.unknownProperty(origName, value);\n      }\n      return;\n    }\n    const validator = this.validators[name];\n    if (validator) {\n      const rvalue =\n        Css.isDefaultingValue(value) || value.isExpr()\n          ? value\n          : value.visit(validator);\n      if (rvalue) {\n        receiver.simpleProperty(name, rvalue, important);\n      } else if (!prefix && CSS.supports(name, value.toString())) {\n        // Browser supports this property value\n        receiver.simpleProperty(name, value, important);\n        return;\n      } else {\n        receiver.invalidPropertyValue(origName, value);\n      }\n    } else {\n      const shorthand = this.shorthands[name].clone();\n      if (Css.isDefaultingValue(value)) {\n        shorthand.propagateDefaultingValue(value, important, receiver);\n      } else {\n        value.visit(shorthand);\n        if (!shorthand.finish(important, receiver)) {\n          receiver.invalidPropertyValue(origName, value);\n        }\n      }\n    }\n  }\n}\n\nexport function baseValidatorSet(): ValidatorSet {\n  const validatorSet = new ValidatorSet();\n  validatorSet.initBuiltInValidators();\n  validatorSet.parse(ValidationTxt);\n  return validatorSet;\n}\n\nclass VarCheckVisitor extends Css.Visitor {\n  varFound = false;\n\n  visitFunc(func: Css.Func): Css.Val {\n    if (func.name === \"var\") {\n      this.varFound = true;\n    } else if (!this.varFound) {\n      this.visitValues(func.values);\n    }\n    return null;\n  }\n}\n\nexport function containsVar(val: Css.Val): boolean {\n  const varCheckVisitor = new VarCheckVisitor();\n  val.visit(varCheckVisitor);\n  return varCheckVisitor.varFound;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssStyler - Apply CSS cascade to a document incrementally and\n * cache the result.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Vtree from \"./vtree\";\nimport { CssStyler, XmlDoc } from \"./types\";\n\nexport class SlipRange {\n  endStuckFixed: number;\n  endFixed: number;\n  endSlipped: number;\n\n  constructor(endStuckFixed, endFixed, endSlipped) {\n    this.endStuckFixed = endStuckFixed;\n    this.endFixed = endFixed;\n    this.endSlipped = endSlipped;\n  }\n}\n\n/**\n * Maps all ints in a range (\"fixed\") to ints with slippage (\"slipped\")\n */\nexport class SlipMap {\n  map = [] as SlipRange[];\n\n  getMaxFixed(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endFixed;\n  }\n\n  getMaxSlipped(): number {\n    if (this.map.length == 0) {\n      return 0;\n    }\n    const range = this.map[this.map.length - 1];\n    return range.endSlipped;\n  }\n\n  addStuckRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, endFixed, endFixed));\n    } else {\n      const range = this.map[this.map.length - 1];\n      const endSlipped = range.endSlipped + endFixed - range.endFixed;\n      if (range.endFixed == range.endStuckFixed) {\n        range.endFixed = endFixed;\n        range.endStuckFixed = endFixed;\n        range.endSlipped = endSlipped;\n      } else {\n        this.map.push(new SlipRange(endFixed, endFixed, endSlipped));\n      }\n    }\n  }\n\n  addSlippedRange(endFixed: number): void {\n    if (this.map.length == 0) {\n      this.map.push(new SlipRange(endFixed, 0, 0));\n    } else {\n      this.map[this.map.length - 1].endFixed = endFixed;\n    }\n  }\n\n  slippedByFixed(fixed: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => fixed <= this.map[index].endFixed,\n    );\n    const range = this.map[index];\n    return range.endSlipped - Math.max(0, range.endStuckFixed - fixed);\n  }\n\n  /**\n   * Smallest fixed for a given slipped.\n   */\n  fixedBySlipped(slipped: number): number {\n    const index = Base.binarySearch(\n      this.map.length,\n      (index) => slipped <= this.map[index].endSlipped,\n    );\n    const range = this.map[index];\n    return range.endStuckFixed - (range.endSlipped - slipped);\n  }\n}\n\nexport interface FlowListener {\n  /**\n   * @return void\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any;\n}\n\nexport interface AbstractStyler extends CssStyler.AbstractStyler {}\n\n/**\n * Represent a box generated by a (pseudo)element. When constructed, a box\n * corresponding to `::before` pseudoelement is also constructed and stored in\n * `beforeBox` property, whereas one corresponding `::after` pseudoelement is\n * not constructed and `afterBox` property is `null`. `afterBox` is constructed\n * by `buildAfterPseudoElementBox` method.\n * @param style Cascaded style values for the box.\n * @param offset The start offset of the box. It coincides with the start offset\n *     of the element if the box is generated by the element or the `::before`\n *     pseudoelement. When the box corresponds to the `::after` pseudoelement,\n *     the offset is just after the content before the `::after` pseudoelement.\n * @param isRoot True if the box is generated by the root element (not\n *     pseudoelement).\n * @param flowChunk FlowChunk to which the box belongs to.\n * @param atBlockStart True if the box is right after the block start edge.\n * @param atFlowStart True if the box is right after the flow start.\n * @param isParentBoxDisplayed True if the parent box has a displayed box.\n */\nexport class Box {\n  flowName: string;\n  isBlockValue: boolean | null = null;\n  hasBoxValue: boolean | null = null;\n  styleValues = {} as { [key: string]: Css.Val };\n  beforeBox: Box = null;\n  afterBox: Box = null;\n  breakBefore: string | null = null;\n\n  constructor(\n    public readonly context: Exprs.Context,\n    public readonly style: CssCascade.ElementStyle,\n    public readonly offset: number,\n    public readonly isRoot: boolean,\n    public readonly flowChunk: Vtree.FlowChunk,\n    public readonly atBlockStart: boolean,\n    public readonly atFlowStart: boolean,\n    public readonly isParentBoxDisplayed: boolean,\n  ) {\n    this.flowName = flowChunk.flowName;\n    if (this.hasBox()) {\n      const pseudoMap = style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"before\"]) {\n          const beforeBox = new Box(\n            context,\n            pseudoMap[\"before\"],\n            offset,\n            false,\n            flowChunk,\n            this.isBlock(),\n            atFlowStart,\n            true,\n          );\n          const beforeContent = beforeBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(beforeContent)) {\n            this.beforeBox = beforeBox;\n            this.breakBefore = beforeBox.breakBefore;\n          }\n        }\n      }\n    }\n    this.breakBefore = Break.resolveEffectiveBreakValue(\n      this.getBreakValue(\"before\"),\n      this.breakBefore,\n    );\n    if (this.atFlowStart && Break.isForcedBreakValue(this.breakBefore)) {\n      flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        flowChunk.breakBefore,\n        this.breakBefore,\n      );\n    }\n  }\n\n  /**\n   * Build a box corresponding to `::after` pseudoelement and stores it in\n   * `afterBox` property.\n   * @param offset The start offset of the `::after` pseudoelement box, which is\n   *     just after the content before the `::after` pseudoelement.\n   * @param atBlockStart True if the box is right after the block start edge.\n   * @param atFlowStart True if the box is right after the flow start.\n   */\n  buildAfterPseudoElementBox(\n    offset: number,\n    atBlockStart: boolean,\n    atFlowStart: boolean,\n  ) {\n    if (this.hasBox()) {\n      const pseudoMap = this.style[\"_pseudos\"];\n      if (pseudoMap) {\n        if (pseudoMap[\"after\"]) {\n          const afterBox = new Box(\n            this.context,\n            pseudoMap[\"after\"],\n            offset,\n            false,\n            this.flowChunk,\n            atBlockStart,\n            atFlowStart,\n            true,\n          );\n          const afterContent = afterBox.styleValue(\"content\");\n          if (Vtree.nonTrivialContent(afterContent)) {\n            this.afterBox = afterBox;\n          }\n        }\n      }\n    }\n  }\n\n  styleValue(name: string, defaultValue?: Css.Val): Css.Val | null {\n    if (!(name in this.styleValues)) {\n      const cv = this.style[name] as CssCascade.CascadeValue;\n      this.styleValues[name] = cv\n        ? cv.evaluate(this.context, name)\n        : defaultValue || null;\n    }\n    return this.styleValues[name];\n  }\n\n  displayValue(): Css.Val {\n    return this.styleValue(\"display\", Css.ident.inline);\n  }\n\n  isBlock(): boolean {\n    if (this.isBlockValue === null) {\n      const display = this.displayValue() as Css.Ident;\n      const position = this.styleValue(\"position\") as Css.Ident;\n      const float = this.styleValue(\"float\") as Css.Ident;\n      this.isBlockValue = Display.isBlock(\n        display,\n        position,\n        float,\n        this.isRoot,\n      );\n    }\n    return this.isBlockValue;\n  }\n\n  hasBox(): boolean {\n    if (this.hasBoxValue === null) {\n      this.hasBoxValue =\n        this.isParentBoxDisplayed && this.displayValue() !== Css.ident.none;\n    }\n    return this.hasBoxValue;\n  }\n\n  getBreakValue(edge: string): string | null {\n    let breakValue: string | null = null;\n    if (this.isBlock()) {\n      const val = this.styleValue(`break-${edge}`);\n      if (val) {\n        breakValue = val.toString();\n      }\n    }\n    return breakValue;\n  }\n}\n\n/**\n * Manages boxes generated by elements as a stack.\n */\nexport class BoxStack {\n  stack = [] as Box[];\n  atBlockStart: boolean = true; // indicates if the next pushed box will be at the block start\n  atFlowStart: boolean = true; // indicates if the next pushed box will be at the flow start\n  atStartStack = [] as { atBlockStart: boolean; atFlowStart: boolean }[]; // pushed when a new flow starts\n\n  constructor(public readonly context: Exprs.Context) {}\n\n  /**\n   * Returns if the stack is empty.\n   */\n  empty(): boolean {\n    return this.stack.length === 0;\n  }\n\n  /**\n   * Returns the last box in the stack.\n   */\n  lastBox(): Box | undefined {\n    return this.stack[this.stack.length - 1];\n  }\n\n  /**\n   * Returns the flow name of the last box in the stack.\n   */\n  lastFlowName(): string | null {\n    const lastBox = this.lastBox();\n    return lastBox ? lastBox.flowChunk.flowName : null;\n  }\n\n  /**\n   * Returns if the last box in the stack is displayed.\n   */\n  isCurrentBoxDisplayed(): boolean {\n    return this.stack.every((box) => box.displayValue() !== Css.ident.none);\n  }\n\n  /**\n   * Create a new box and push it to the stack.\n   * @param style Cascaded style values for the box.\n   * @param offset The start offset of the box.\n   * @param isRoot True if the box is generated by the root element\n   * @param newFlowChunk Specify if the element is a flow element (i.e. the\n   *     element is specified a new `flow-into` value)\n   */\n  push(\n    style: CssCascade.ElementStyle,\n    offset: number,\n    isRoot: boolean,\n    newFlowChunk?: Vtree.FlowChunk,\n  ): Box {\n    const lastBox = this.lastBox();\n    if (newFlowChunk && lastBox && newFlowChunk.flowName !== lastBox.flowName) {\n      this.atStartStack.push({\n        atBlockStart: this.atBlockStart,\n        atFlowStart: this.atFlowStart,\n      });\n    }\n    const flowChunk = newFlowChunk || lastBox.flowChunk;\n    const isAtFlowStart = this.atFlowStart || !!newFlowChunk;\n    const isParentBoxDisplayed = this.isCurrentBoxDisplayed();\n    const box = new Box(\n      this.context,\n      style,\n      offset,\n      isRoot,\n      flowChunk,\n      isAtFlowStart || this.atBlockStart,\n      isAtFlowStart,\n      isParentBoxDisplayed,\n    );\n    this.stack.push(box);\n    this.atBlockStart = box.hasBox()\n      ? !box.beforeBox && box.isBlock()\n      : this.atBlockStart;\n    this.atFlowStart = box.hasBox()\n      ? !box.beforeBox && isAtFlowStart\n      : this.atFlowStart;\n    return box;\n  }\n\n  encounteredTextNode(node: Node) {\n    const box = this.lastBox();\n    if (\n      (node.nodeType === Node.TEXT_NODE ||\n        node.nodeType === Node.CDATA_SECTION_NODE) &&\n      (this.atBlockStart || this.atFlowStart) &&\n      box.hasBox()\n    ) {\n      const whitespaceValue = box\n        .styleValue(\"white-space\", Css.ident.normal)\n        .toString();\n      const whitespace = Vtree.whitespaceFromPropertyValue(whitespaceValue);\n      if (whitespace && !Vtree.canIgnore(node, whitespace)) {\n        this.atBlockStart = false;\n        this.atFlowStart = false;\n      }\n    }\n  }\n\n  /**\n   * Pop the last box.\n   */\n  pop(offset: number): Box {\n    const box = this.stack.pop();\n    box.buildAfterPseudoElementBox(offset, this.atBlockStart, this.atFlowStart);\n    if (this.atFlowStart && box.afterBox) {\n      const breakBefore = box.afterBox.getBreakValue(\"before\");\n      box.flowChunk.breakBefore = Break.resolveEffectiveBreakValue(\n        box.flowChunk.breakBefore,\n        breakBefore,\n      );\n    }\n    const parent = this.lastBox();\n    if (parent) {\n      if (parent.flowName === box.flowName) {\n        if (box.hasBox()) {\n          this.atBlockStart = this.atFlowStart = false;\n        }\n      } else {\n        const atStart = this.atStartStack.pop();\n        this.atBlockStart = atStart.atBlockStart;\n        this.atFlowStart = atStart.atFlowStart;\n      }\n    }\n    return box;\n  }\n\n  /**\n   * Find the start offset of the nearest block start edge to which the\n   * `break-before` value of the box should be propagated. This method can be\n   * called when after pushing the box into the stack or after popping the box\n   * out of the stack.\n   */\n  nearestBlockStartOffset(box: Box): number {\n    if (!box.atBlockStart) {\n      return box.offset;\n    }\n    let i = this.stack.length - 1;\n    let parent = this.stack[i];\n\n    // When called just after the box is popped out, the last box in the stack\n    // is different from the box and it is the parent of the box. When called\n    // after the box is pushed, the last box in the stack is identical to the\n    // box and the parent of the box is a box right before the specified box.\n    if (parent === box) {\n      i--;\n      parent = this.stack[i];\n    }\n    while (i >= 0) {\n      if (parent.flowName !== box.flowName) {\n        return box.offset;\n      }\n      if (!parent.atBlockStart) {\n        return parent.offset;\n      }\n      if (parent.isRoot) {\n        return parent.offset;\n      }\n      box = parent;\n      parent = this.stack[--i];\n    }\n    throw new Error(\"No block start offset found!\");\n  }\n}\n\nexport class Styler implements AbstractStyler {\n  root: Element;\n  cascadeHolder: CssCascade.Cascade;\n  last: Node;\n  rootStyle = {} as CssCascade.ElementStyle;\n  styleMap: { [key: string]: CssCascade.ElementStyle } = {};\n  flows = {} as { [key: string]: Vtree.Flow };\n  flowChunks = [] as Vtree.FlowChunk[];\n  flowListener: FlowListener = null;\n  flowToReach: string | null = null;\n  idToReach: string | null = null;\n  cascade: CssCascade.CascadeInstance;\n  offsetMap: SlipMap;\n  primary: boolean = true;\n  primaryStack = [] as boolean[];\n  rootBackgroundAssigned: boolean = false;\n  rootLayoutAssigned: boolean = false;\n  lastOffset: number;\n  breakBeforeValues = {} as { [key: number]: string | null };\n  boxStack: BoxStack;\n  bodyReached: boolean = true;\n\n  constructor(\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    cascade: CssCascade.Cascade,\n    public readonly scope: Exprs.LexicalScope,\n    public readonly context: Exprs.Context,\n    public readonly primaryFlows: { [key: string]: boolean },\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly counterListener: CssCascade.CounterListener,\n    counterResolver: CssCascade.CounterResolver,\n  ) {\n    this.root = xmldoc.root;\n    this.cascadeHolder = cascade;\n    this.last = this.root;\n    this.cascade = cascade.createInstance(\n      context,\n      counterListener,\n      counterResolver,\n      xmldoc.lang,\n    );\n    this.offsetMap = new SlipMap();\n    const rootOffset = xmldoc.getElementOffset(this.root);\n    this.lastOffset = rootOffset;\n    this.boxStack = new BoxStack(context);\n    this.offsetMap.addStuckRange(rootOffset);\n    const style = this.getAttrStyle(this.root);\n    this.cascade.pushElement(this, this.root, style, rootOffset);\n    this.postprocessTopStyle(style, false);\n    switch (this.root.namespaceURI) {\n      case Base.NS.XHTML:\n        this.bodyReached = false;\n        break;\n    }\n    this.primaryStack.push(true);\n    this.styleMap = {};\n    this.styleMap[`e${rootOffset}`] = style;\n    this.lastOffset++;\n    this.replayFlowElementsFromOffset(-1);\n  }\n\n  hasProp(\n    style: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n    name: string,\n  ): boolean {\n    const cascVal = style[name] as CssCascade.CascadeValue;\n    return cascVal && cascVal.evaluate(this.context) !== map[name];\n  }\n\n  transferPropsToRoot(\n    srcStyle: CssCascade.ElementStyle,\n    map: CssValidator.ValueMap,\n  ): void {\n    for (const pname in map) {\n      const cascval = srcStyle[pname];\n      if (cascval) {\n        this.rootStyle[pname] = cascval;\n        delete srcStyle[pname];\n      } else {\n        const val = map[pname];\n        if (val) {\n          this.rootStyle[pname] = new CssCascade.CascadeValue(\n            val,\n            CssParser.SPECIFICITY_AUTHOR,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer properties that should be applied on the container (partition)\n   * level to this.rootStyle.\n   * @param elemStyle (source) element style\n   */\n  postprocessTopStyle(\n    elemStyle: CssCascade.ElementStyle,\n    isBody: boolean,\n  ): void {\n    if (isBody) {\n      for (const propName of [\"writing-mode\", \"direction\"]) {\n        if (elemStyle[propName] && !(isBody && this.rootStyle[propName])) {\n          // Copy it over, but keep it at the root element as well.\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    } else {\n      for (const propName in elemStyle) {\n        if (CssCascade.isInherited(propName)) {\n          this.rootStyle[propName] = elemStyle[propName];\n        }\n      }\n    }\n    if (!this.rootBackgroundAssigned) {\n      const backgroundColor = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-color\",\n      )\n        ? (elemStyle[\"background-color\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      const backgroundImage = this.hasProp(\n        elemStyle,\n        this.validatorSet.backgroundProps,\n        \"background-image\",\n      )\n        ? (elemStyle[\"background-image\"] as CssCascade.CascadeValue).evaluate(\n            this.context,\n          )\n        : (null as Css.Val);\n      if (\n        (backgroundColor && !Css.isDefaultingValue(backgroundColor)) ||\n        (backgroundImage && !Css.isDefaultingValue(backgroundImage))\n      ) {\n        this.transferPropsToRoot(elemStyle, this.validatorSet.backgroundProps);\n        this.rootBackgroundAssigned = true;\n      }\n    }\n    if (!this.rootLayoutAssigned) {\n      for (let i = 0; i < columnProps.length; i++) {\n        if (\n          this.hasProp(elemStyle, this.validatorSet.layoutProps, columnProps[i])\n        ) {\n          this.transferPropsToRoot(elemStyle, this.validatorSet.layoutProps);\n          this.rootLayoutAssigned = true;\n          break;\n        }\n      }\n    }\n    if (!isBody) {\n      const fontSize = elemStyle[\"font-size\"] as CssCascade.CascadeValue;\n      let isRelativeFontSize = true;\n      if (fontSize && !Css.isDefaultingValue(fontSize.value)) {\n        const val = fontSize.evaluate(this.context);\n        if (val instanceof Css.Numeric) {\n          let px = val.num;\n          switch (val.unit) {\n            case \"em\":\n            case \"rem\":\n              px *= this.context.initialFontSize;\n              break;\n            case \"ex\":\n              px *=\n                (this.context.initialFontSize * Exprs.defaultUnitSizes[\"ex\"]) /\n                Exprs.defaultUnitSizes[\"em\"];\n              break;\n            case \"%\":\n              px *= this.context.initialFontSize / 100;\n              break;\n            default: {\n              const unitSize = Exprs.defaultUnitSizes[val.unit];\n              if (unitSize) {\n                px *= unitSize;\n              }\n              isRelativeFontSize = false;\n            }\n          }\n          this.context.rootFontSize = px;\n          this.context.isRelativeRootFontSize = isRelativeFontSize;\n        }\n      }\n    }\n  }\n\n  getTopContainerStyle(): CssCascade.ElementStyle {\n    let offset = 0;\n    while (!this.bodyReached) {\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    return this.rootStyle;\n  }\n\n  getAttrStyle(elem: Element): CssCascade.ElementStyle {\n    // skip cases in which elements for XML other than HTML or SVG\n    // have 'style' attribute not for CSS declaration\n    if ((elem as any).style instanceof CSSStyleDeclaration) {\n      const styleAttrValue = elem.getAttribute(\"style\");\n      if (styleAttrValue) {\n        return CssCascade.parseStyleAttribute(\n          this.scope,\n          this.validatorSet,\n          this.xmldoc.url,\n          styleAttrValue,\n        );\n      }\n    }\n    return {} as CssCascade.ElementStyle;\n  }\n\n  /**\n   * @return currently reached offset\n   */\n  getReachedOffset(): number {\n    return this.lastOffset;\n  }\n\n  /**\n   * Replay flow elements that were encountered since the given offset\n   */\n  replayFlowElementsFromOffset(offset: number): void {\n    if (offset >= this.lastOffset) {\n      return;\n    }\n    const context = this.context;\n    const rootOffset = this.xmldoc.getElementOffset(this.root);\n    if (offset < rootOffset) {\n      const rootStyle = this.getStyle(this.root, false);\n      Asserts.assert(rootStyle);\n      const flowName = CssCascade.getProp(rootStyle, \"flow-into\");\n      const flowNameStr = flowName\n        ? flowName.evaluate(context, \"flow-into\").toString()\n        : \"body\";\n      const newFlowChunk = this.encounteredFlowElement(\n        flowNameStr,\n        rootStyle,\n        this.root,\n        rootOffset,\n      );\n      if (this.boxStack.empty()) {\n        this.boxStack.push(rootStyle, rootOffset, true, newFlowChunk);\n      }\n    }\n    let node = this.xmldoc.getNodeByOffset(offset);\n    let nodeOffset = this.xmldoc.getNodeOffset(node, 0, false);\n    if (nodeOffset >= this.lastOffset) {\n      return;\n    }\n    while (true) {\n      if (node.nodeType != 1) {\n        nodeOffset += node.textContent.length;\n      } else {\n        const elem = node as Element;\n        if (VIVLIOSTYLE_DEBUG) {\n          if (nodeOffset != this.xmldoc.getElementOffset(elem)) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        const style = this.getStyle(elem, false);\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          this.encounteredFlowElement(flowNameStr, style, elem, nodeOffset);\n        }\n        nodeOffset++;\n      }\n      if (nodeOffset >= this.lastOffset) {\n        break;\n      }\n      let next: Node = node.firstChild;\n      if (next == null) {\n        while (true) {\n          next = node.nextSibling;\n          if (next) {\n            break;\n          }\n          node = node.parentNode;\n          if (node === this.root) {\n            return;\n          }\n        }\n      }\n      node = next;\n    }\n  }\n\n  resetFlowChunkStream(flowListener: FlowListener): void {\n    this.flowListener = flowListener;\n    for (let i = 0; i < this.flowChunks.length; i++) {\n      this.flowListener.encounteredFlowChunk(\n        this.flowChunks[i],\n        this.flows[this.flowChunks[i].flowName],\n      );\n    }\n  }\n\n  styleUntilFlowIsReached(flowName: string) {\n    this.flowToReach = flowName;\n    let offset = 0;\n    while (true) {\n      if (this.flowToReach == null) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) == Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n  }\n\n  styleUntilIdIsReached(id: string) {\n    if (!id) {\n      return;\n    }\n    this.idToReach = id;\n    let offset = 0;\n    while (true) {\n      if (!this.idToReach) {\n        break;\n      }\n      offset += 5000;\n      if (this.styleUntil(offset, 0) === Number.POSITIVE_INFINITY) {\n        break;\n      }\n    }\n    this.idToReach = null;\n  }\n\n  private encounteredFlowElement(\n    flowName: string,\n    style: CssCascade.ElementStyle,\n    elem: Element,\n    startOffset: number,\n  ): Vtree.FlowChunk {\n    let priority = 0;\n    let linger = Number.POSITIVE_INFINITY;\n    let exclusive = false;\n    let repeated = false;\n    let last = false;\n    const optionsCV = style[\"flow-options\"] as CssCascade.CascadeValue;\n    if (optionsCV) {\n      const options = CssProp.toSet(\n        optionsCV.evaluate(this.context, \"flow-options\"),\n      );\n      exclusive = !!options[\"exclusive\"];\n      repeated = !!options[\"static\"];\n      last = !!options[\"last\"];\n    }\n    const lingerCV = style[\"flow-linger\"] as CssCascade.CascadeValue;\n    if (lingerCV) {\n      linger = CssProp.toInt(\n        lingerCV.evaluate(this.context, \"flow-linger\"),\n        Number.POSITIVE_INFINITY,\n      );\n    }\n    const priorityCV = style[\"flow-priority\"] as CssCascade.CascadeValue;\n    if (priorityCV) {\n      priority = CssProp.toInt(\n        priorityCV.evaluate(this.context, \"flow-priority\"),\n        0,\n      );\n    }\n    const breakBefore = this.breakBeforeValues[startOffset] || null;\n    let flow = this.flows[flowName];\n    if (!flow) {\n      const parentFlowName = this.boxStack.lastFlowName();\n      flow = this.flows[flowName] = new Vtree.Flow(flowName, parentFlowName);\n    }\n    const flowChunk = new Vtree.FlowChunk(\n      flowName,\n      elem,\n      startOffset,\n      priority,\n      linger,\n      exclusive,\n      repeated,\n      last,\n      breakBefore,\n    );\n    this.flowChunks.push(flowChunk);\n    if (this.flowToReach == flowName) {\n      this.flowToReach = null;\n    }\n    if (this.flowListener) {\n      this.flowListener.encounteredFlowChunk(flowChunk, flow);\n    }\n    return flowChunk;\n  }\n\n  registerForcedBreakOffset(\n    breakValue: string | null,\n    offset: number,\n    flowName: string,\n  ) {\n    if (Break.isForcedBreakValue(breakValue)) {\n      const forcedBreakOffsets = this.flows[flowName].forcedBreakOffsets;\n      if (\n        forcedBreakOffsets.length === 0 ||\n        forcedBreakOffsets[forcedBreakOffsets.length - 1] < offset\n      ) {\n        forcedBreakOffsets.push(offset);\n      }\n    }\n    const previousValue = this.breakBeforeValues[offset];\n    this.breakBeforeValues[offset] = Break.resolveEffectiveBreakValue(\n      previousValue,\n      breakValue,\n    );\n  }\n\n  /**\n   * @param startOffset current position in the document\n   * @param lookup lookup window size for the next page\n   * @return lookup offset in the document for the next page\n   */\n  styleUntil(startOffset: number, lookup: number): number {\n    let targetSlippedOffset = -1;\n    let slippedOffset: number;\n    if (startOffset <= this.lastOffset) {\n      slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n      targetSlippedOffset = slippedOffset + lookup;\n      if (targetSlippedOffset < this.offsetMap.getMaxSlipped()) {\n        // got to the desired point\n        return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n      }\n    }\n    if (this.last == null) {\n      return Number.POSITIVE_INFINITY;\n    }\n    const context = this.context;\n    while (true) {\n      let next: Node = this.last.firstChild;\n      if (next == null) {\n        while (true) {\n          if (this.last.nodeType == 1) {\n            this.cascade.popElement(this.last as Element);\n            this.primary = this.primaryStack.pop();\n            const box = this.boxStack.pop(this.lastOffset);\n            let breakAfter: string | null = null;\n            if (box.afterBox) {\n              const afterPseudoBreakBefore =\n                box.afterBox.getBreakValue(\"before\");\n              this.registerForcedBreakOffset(\n                afterPseudoBreakBefore,\n                box.afterBox.atBlockStart\n                  ? this.boxStack.nearestBlockStartOffset(box)\n                  : box.afterBox.offset,\n                box.flowName,\n              );\n              breakAfter = box.afterBox.getBreakValue(\"after\");\n            }\n            breakAfter = Break.resolveEffectiveBreakValue(\n              breakAfter,\n              box.getBreakValue(\"after\"),\n            );\n            this.registerForcedBreakOffset(\n              breakAfter,\n              this.lastOffset,\n              box.flowName,\n            );\n          }\n          next = this.last.nextSibling;\n          if (next) {\n            break;\n          }\n          this.last = this.last.parentNode;\n          if (this.last === this.root) {\n            this.last = null;\n            if (startOffset < this.lastOffset) {\n              if (targetSlippedOffset < 0) {\n                slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n                targetSlippedOffset = slippedOffset + lookup;\n              }\n              if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n                // got to the desired point\n                return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n              }\n            }\n            return Number.POSITIVE_INFINITY;\n          }\n        }\n      }\n      this.last = next;\n      if (this.last.nodeType != 1) {\n        this.lastOffset += this.last.textContent.length;\n        this.boxStack.encounteredTextNode(this.last);\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n      } else {\n        const elem = this.last as Element;\n        const style = this.getAttrStyle(elem);\n        this.primaryStack.push(this.primary);\n        this.cascade.pushElement(this, elem, style, this.lastOffset);\n        const id =\n          elem.getAttribute(\"id\") || elem.getAttributeNS(Base.NS.XML, \"id\");\n        if (id && id === this.idToReach) {\n          this.idToReach = null;\n        }\n        if (\n          !this.bodyReached &&\n          elem.localName == \"body\" &&\n          elem.parentNode == this.root\n        ) {\n          this.postprocessTopStyle(style, true);\n          this.bodyReached = true;\n        }\n        let box: Box;\n        const flowName = style[\"flow-into\"] as CssCascade.CascadeValue;\n        if (flowName) {\n          const flowNameStr = flowName\n            .evaluate(context, \"flow-into\")\n            .toString();\n          const newFlowChunk = this.encounteredFlowElement(\n            flowNameStr,\n            style,\n            elem,\n            this.lastOffset,\n          );\n          this.primary = !!this.primaryFlows[flowNameStr];\n          box = this.boxStack.push(\n            style,\n            this.lastOffset,\n            elem === this.root,\n            newFlowChunk,\n          );\n        } else {\n          box = this.boxStack.push(style, this.lastOffset, elem === this.root);\n\n          // For not ignoring break-before on :root (issue #666)\n          if (elem === this.xmldoc.body) {\n            box.breakBefore = Break.resolveEffectiveBreakValue(\n              box.flowChunk.breakBefore,\n              box.breakBefore,\n            );\n          }\n        }\n        const blockStartOffset = this.boxStack.nearestBlockStartOffset(box);\n\n        if (blockStartOffset === 0) {\n          // Named page type at first page\n          const pageCV = style[\"page\"] as CssCascade.CascadeValue;\n          const pageType =\n            pageCV &&\n            !Css.isDefaultingValue(pageCV.value) &&\n            pageCV.value.toString();\n          if (pageType && pageType.toLowerCase() !== \"auto\") {\n            this.cascade.firstPageType = pageType;\n          }\n        }\n\n        this.registerForcedBreakOffset(\n          box.breakBefore,\n          blockStartOffset,\n          box.flowName,\n        );\n        if (box.beforeBox) {\n          const beforePseudoBreakAfter = box.beforeBox.getBreakValue(\"after\");\n          this.registerForcedBreakOffset(\n            beforePseudoBreakAfter,\n            box.beforeBox.atBlockStart ? blockStartOffset : box.offset,\n            box.flowName,\n          );\n        }\n        if (this.primary) {\n          if (box.displayValue() === Css.ident.none) {\n            this.primary = false;\n          }\n        }\n        if (VIVLIOSTYLE_DEBUG) {\n          const offset = this.xmldoc.getElementOffset(this.last as Element);\n          if (offset != this.lastOffset) {\n            throw new Error(\"Inconsistent offset\");\n          }\n        }\n        this.styleMap[`e${this.lastOffset}`] = style;\n        this.lastOffset++;\n        if (this.primary) {\n          this.offsetMap.addStuckRange(this.lastOffset);\n        } else {\n          this.offsetMap.addSlippedRange(this.lastOffset);\n        }\n        if (this.bodyReached && blockStartOffset === 0) {\n          // body reached but the named page type at first page is not determined\n          // (Fix for issue #770)\n          continue;\n        }\n        if (startOffset < this.lastOffset) {\n          if (targetSlippedOffset < 0) {\n            slippedOffset = this.offsetMap.slippedByFixed(startOffset);\n            targetSlippedOffset = slippedOffset + lookup;\n          }\n          if (targetSlippedOffset <= this.offsetMap.getMaxSlipped()) {\n            // got to the desired point\n            return this.offsetMap.fixedBySlipped(targetSlippedOffset);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStyle(element: Element, deep: boolean): CssCascade.ElementStyle {\n    let offset = this.xmldoc.getElementOffset(element);\n    const key = `e${offset}`;\n    if (deep) {\n      offset = this.xmldoc.getNodeOffset(element, 0, true);\n    }\n    if (this.lastOffset <= offset) {\n      this.styleUntil(offset, 0);\n    }\n    return this.styleMap[key];\n  }\n\n  /**\n   * @override\n   */\n  processContent(\n    element: Element,\n    styles: { [key: string]: Css.Val },\n    viewNode: Node,\n  ) {}\n}\n\nexport const columnProps = [\"column-count\", \"column-width\", \"column-fill\"];\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Font - Deal with embedded fonts.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as Exprs from \"./exprs\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\n\nexport const traitProps: { [key: string]: Css.Val } = {\n  \"font-style\": Css.ident.normal,\n  \"font-stretch\": Css.ident.normal,\n  \"font-weight\": Css.ident.normal,\n  \"unicode-range\": Css.fullURange,\n};\n\nexport const bogusFontData = `OTTO${new Date().valueOf()}`;\n\nexport let bogusFontCounter: number = 1;\n\nexport function makeFontTraitKey(properties: {\n  [key: string]: Css.Val;\n}): string {\n  const sb = new Base.StringBuffer();\n  for (const prop in traitProps) {\n    sb.append(\" \");\n    sb.append(properties[prop].toString());\n  }\n  return sb.toString();\n}\n\nexport function fillDefaults(properties: { [key: string]: Css.Val }): void {\n  for (const prop in traitProps) {\n    if (!properties[prop]) {\n      properties[prop] = traitProps[prop];\n    }\n  }\n}\n\nexport function prepareProperties(\n  properties: CssCascade.ElementStyle,\n  context: Exprs.Context,\n): { [key: string]: Css.Val } {\n  const result = {} as { [key: string]: Css.Val };\n  for (const prop in properties) {\n    result[prop] = CssCascade.getProp(properties, prop).evaluate(context, prop);\n  }\n  fillDefaults(result);\n  return result;\n}\n\n/**\n * A font declared in a font-face rule.\n */\nexport class Face {\n  fontTraitKey: string;\n  src: string | null;\n  blobURLs: string[] = [];\n  blobs: Blob[] = [];\n  family: string | null;\n\n  constructor(public readonly properties: { [key: string]: Css.Val }) {\n    this.fontTraitKey = makeFontTraitKey(this.properties);\n    this.src = this.properties[\"src\"]\n      ? this.properties[\"src\"].toString()\n      : null;\n    const family = this.properties[\"font-family\"];\n    this.family = family ? family.stringValue() : null;\n  }\n\n  /**\n   * Check if font traits are the same for two font faces\n   */\n  traitsEqual(other: Face): boolean {\n    return this.fontTraitKey == other.fontTraitKey;\n  }\n\n  /**\n   * Create \"at\" font-face rule.\n   */\n  makeAtRule(src: string, fontBytes: Blob): string {\n    const sb = new Base.StringBuffer();\n    sb.append(\"@font-face {\\n  font-family: \");\n    sb.append(this.family as string);\n    sb.append(\";\\n  \");\n    for (const prop in traitProps) {\n      sb.append(prop);\n      sb.append(\": \");\n      this.properties[prop].appendTo(sb, true);\n      sb.append(\";\\n  \");\n    }\n    if (fontBytes) {\n      sb.append('src: url(\"');\n      const blobURL = Net.createObjectURL(fontBytes);\n      sb.append(blobURL);\n      this.blobURLs.push(blobURL);\n      this.blobs.push(fontBytes);\n      sb.append('\")');\n    } else {\n      sb.append(\"src: \");\n      sb.append(src);\n    }\n    sb.append(\";\\n}\\n\");\n    return sb.toString();\n  }\n}\n\n/**\n * Set of the fonts declared in all stylesheets of a document.\n * @param deobfuscator function\n *     that takes url and returns data deobfuscator\n */\nexport class DocumentFaces {\n  /**\n   * Maps source font family names to the family names used in the HTML view.\n   */\n  familyMap = {} as { [key: string]: string };\n\n  constructor(\n    public readonly deobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {}\n\n  registerFamily(srcFace: Face, viewFace: Face): void {\n    const srcFamily = srcFace.family as string;\n    const viewFamilyFromSrc = this.familyMap[srcFamily];\n    const viewFamilyFromView = viewFace.family;\n    if (viewFamilyFromSrc) {\n      if (viewFamilyFromSrc != viewFamilyFromView) {\n        throw new Error(`E_FONT_FAMILY_INCONSISTENT ${srcFace.family}`);\n      }\n    } else {\n      this.familyMap[srcFamily] = viewFamilyFromView as string;\n    }\n  }\n\n  filterFontFamily(val: Css.Val): Css.Val {\n    if (val instanceof Css.CommaList) {\n      const list = (val as Css.CommaList).values;\n      const newValues = [] as Css.Val[];\n      for (const v of list) {\n        const r = this.familyMap[v.stringValue()];\n        if (r) {\n          newValues.push(Css.getName(r));\n        }\n        newValues.push(v);\n      }\n      return new Css.CommaList(newValues);\n    } else {\n      const rf = this.familyMap[val.stringValue()];\n      if (rf) {\n        return new Css.CommaList([Css.getName(rf), val]);\n      }\n      return val;\n    }\n  }\n}\n\n/**\n * Object that loads fonts in a document and allocates font families for them\n * in the view document\n * @param head where to add styles in the view document (normally head element)\n * @param body where to probe text in the view document (normally body element)\n */\nexport class Mapper {\n  /**\n   * Maps Face.src to an entry for an already-loaded font.\n   */\n  srcURLMap: { [key: string]: TaskUtil.Fetcher<Face> } = {};\n  familyPrefix: string;\n  familyCounter: number = 0;\n\n  constructor(\n    public readonly head: Element,\n    public readonly body: Element,\n    opt_familyPrefix?: string,\n  ) {\n    this.familyPrefix = opt_familyPrefix || \"Fnt_\";\n  }\n\n  getViewFontFamily(srcFace: Face, documentFaces: DocumentFaces): string {\n    const srcFamily = srcFace.family as string;\n    let viewFamily = documentFaces.familyMap[srcFamily];\n    if (viewFamily) {\n      return viewFamily;\n    }\n    viewFamily = this.familyPrefix + ++this.familyCounter;\n    documentFaces.familyMap[srcFamily] = viewFamily;\n    return viewFamily;\n  }\n\n  /**\n   * @param fontBytes deobfuscated font bytes (if deobfuscation is needed)\n   */\n  private initFont(\n    srcFace: Face,\n    fontBytes: Blob,\n    documentFaces: DocumentFaces,\n  ): Task.Result<Face> {\n    const frame: Task.Frame<Face> = Task.newFrame(\"initFont\");\n    const src = srcFace.src as string;\n    const props = {} as { [key: string]: Css.Val };\n    for (const prop in traitProps) {\n      props[prop] = srcFace.properties[prop];\n    }\n    const fontFamily = this.getViewFontFamily(srcFace, documentFaces);\n    props[\"font-family\"] = Css.getName(fontFamily);\n    const viewFontFace = new Face(props);\n    const style = this.head.ownerDocument.createElement(\"style\");\n    style.textContent = viewFontFace.makeAtRule(src, fontBytes);\n    this.head.appendChild(style);\n    Logging.logger.debug(\"Load font:\", src);\n    frame.finish(viewFontFace);\n    return frame.result();\n  }\n\n  loadFont(\n    srcFace: Face,\n    documentFaces: DocumentFaces,\n  ): TaskUtil.Fetcher<Face> {\n    const src = srcFace.src as string;\n    const srcFamilySrc = srcFace.family + \";\" + src;\n    let fetcher = this.srcURLMap[srcFamilySrc];\n    if (fetcher) {\n      fetcher.piggyback((viewFaceParam) => {\n        const viewFace = viewFaceParam as Face;\n        if (!viewFace.traitsEqual(srcFace)) {\n          Logging.logger.warn(\"E_FONT_FACE_INCOMPATIBLE\", srcFace.src);\n        } else {\n          documentFaces.registerFamily(srcFace, viewFace);\n          Logging.logger.debug(\"Found already-loaded font:\", src);\n        }\n      });\n    } else {\n      fetcher = new TaskUtil.Fetcher(() => {\n        const frame: Task.Frame<Face> = Task.newFrame(\"loadFont\");\n        const deobfuscator = documentFaces.deobfuscator\n          ? documentFaces.deobfuscator(src)\n          : null;\n        if (deobfuscator) {\n          Net.ajax(src, Net.XMLHttpRequestResponseType.BLOB).then((xhr) => {\n            if (!xhr.responseBlob) {\n              frame.finish(null);\n              return;\n            }\n            deobfuscator(xhr.responseBlob).then((fontBytes) => {\n              this.initFont(srcFace, fontBytes, documentFaces).thenFinish(\n                frame,\n              );\n            });\n          });\n        } else {\n          this.initFont(srcFace, null, documentFaces).thenFinish(frame);\n        }\n        return frame.result();\n      }, `loadFont ${src}`);\n      this.srcURLMap[srcFamilySrc] = fetcher;\n      fetcher.start();\n    }\n    return fetcher;\n  }\n\n  findOrLoadFonts(\n    srcFaces: Face[],\n    documentFaces: DocumentFaces,\n  ): Task.Result<boolean> {\n    const fetchers = [] as TaskUtil.Fetcher<Face>[];\n    for (const srcFace of srcFaces) {\n      if (!srcFace.src || !srcFace.family) {\n        Logging.logger.warn(\"E_FONT_FACE_INVALID\");\n        continue;\n      }\n      fetchers.push(this.loadFont(srcFace, documentFaces));\n    }\n    return TaskUtil.waitForFetchers(fetchers).thenAsync(() =>\n      this.waitFontLoading(),\n    );\n  }\n\n  waitFontLoading(): Task.Result<boolean> {\n    const fonts = this.head.ownerDocument.fonts; // FontFaceSet\n    let unloadedCount = 0;\n    fonts.forEach((fontFace) => {\n      if (fontFace.status === \"unloaded\") {\n        unloadedCount++;\n        fontFace.load();\n      }\n    });\n    if (unloadedCount === 0) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"waitFontLoading\");\n    frame\n      .loop(() => {\n        return frame.sleep(20).thenAsync(() => {\n          if (fonts.status === \"loading\") {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview PageMaster - Deal with page masters, partition groups, and partitions.\n */\nimport * as Base from \"./base\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Vtree from \"./vtree\";\n\nexport let keyCount: number = 1;\n\n/**\n * Represent an at-rule which creates a page-level CSS box (page-master,\n * partition, and partition-group).\n */\nexport abstract class PageBox<\n  I extends PageBoxInstance = PageBoxInstance<any>,\n> {\n  // styles specified in the at-rule\n  specified: CssCascade.ElementStyle = {};\n  children: PageBox[] = [];\n  pageMaster: PageMaster = null;\n  index: number = 0;\n  key: string;\n\n  protected _scope: Exprs.LexicalScope;\n\n  get scope(): Exprs.LexicalScope {\n    return this._scope;\n  }\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    public readonly name: string | null,\n    public readonly pseudoName: string | null,\n    public readonly classes: string[],\n    public readonly parent: PageBox,\n  ) {\n    this._scope = scope;\n    this.key = `p${keyCount++}`;\n    if (parent) {\n      this.index = parent.children.length;\n      parent.children.push(this);\n    }\n  }\n\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Clone the PageBox.\n   * @param param parent: The parent of the cloned PageBox.\n   *     pseudoName: Assign this value as the pseudoName of the cloned PageBox.\n   */\n  clone(param: { parent?: PageBox; pseudoName?: string }): PageBox<I> {\n    throw new Error(\"E_UNEXPECTED_CALL\");\n  }\n\n  /**\n   * Copy 'specified' properties to another instance.\n   * @param dest The PageBox into which 'specified' properties are copied\n   */\n  protected copySpecified(dest: PageBox) {\n    const specified = this.specified;\n    const destSpecified = dest.specified;\n    for (const prop in specified) {\n      if (Object.prototype.hasOwnProperty.call(specified, prop)) {\n        destSpecified[prop] = specified[prop];\n      }\n    }\n  }\n\n  /**\n   * Clone children with the specified PageBox as their parent.\n   */\n  protected cloneChildren(parent: PageBox) {\n    for (let i = 0; i < this.children.length; i++) {\n      // the cloned child is added to parent.children in the child constructor.\n      this.children[i].clone({ parent });\n    }\n  }\n}\n\n/**\n * Parent of all page masters\n */\nexport class RootPageBox extends PageBox<RootPageBoxInstance> {\n  constructor(scope: Exprs.LexicalScope) {\n    super(scope, null, null, [], null);\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n  }\n}\n\nexport class PageMasterScope extends Exprs.LexicalScope {\n  constructor(scope: Exprs.LexicalScope, public pageMaster: PageMaster) {\n    super(scope, resolver);\n    const self = this;\n    function resolver(qualifiedName, isFunc) {\n      const r = qualifiedName.match(/^([^.]+)\\.([^.]+)$/);\n      if (r) {\n        const key = self.pageMaster.keyMap[r[1]];\n        if (key) {\n          const holder = this as InstanceHolder;\n          const boxInstance = holder.lookupInstance(key);\n          if (boxInstance) {\n            if (isFunc) {\n              return boxInstance.resolveFunc(r[2]);\n            } else {\n              return boxInstance.resolveName(r[2]);\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }\n}\n\n/**\n * Represent a page-master rule\n */\nexport class PageMaster<\n  I extends PageMasterInstance = PageMasterInstance<any>,\n> extends PageBox<I> {\n  keyMap: { [key: string]: string } = {};\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: RootPageBox,\n    public readonly condition: Exprs.Val,\n    public readonly specificity: number,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    // if PageMasterScope object is passed, use (share) it.\n    if (!(scope instanceof PageMasterScope)) {\n      this._scope = new PageMasterScope(scope, this);\n    }\n    this.pageMaster = this;\n    this.specified[\"width\"] = new CssCascade.CascadeValue(Css.fullWidth, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(Css.fullHeight, 0);\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n\n    // Shift 1px to workaround Chrome printing bug\n    // this.specified[\"top\"] = new CssCascade.CascadeValue(new Css.Numeric(-1, \"px\"), 0);\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PageMasterInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PageMaster {\n    // The cloned page master shares the same scope object with the original\n    // one.\n    const cloned = new PageMaster(\n      this.scope,\n      this.name,\n      param.pseudoName || this.pseudoName,\n      this.classes,\n      this.parent as RootPageBox,\n      this.condition,\n      this.specificity,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n\n  /**\n   * Point the pageMaster reference in the PageMasterScope to the current page\n   * master. This is needed when a page master is cloned and shares a common\n   * scope with the original page master. Since every Exprs.Val which the\n   * page master holds has a reference to the scope and uses it for variable\n   * resolution, this reference must be updated properly before the page master\n   * instance is used.\n   */\n  resetScope() {\n    (this.scope as any).pageMaster = this;\n  }\n}\n\n/**\n * Represent a partition-group rule\n */\nexport class PartitionGroup extends PageBox<PartitionGroupInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n    this.specified[\"wrap-flow\"] = new CssCascade.CascadeValue(\n      Css.ident.auto,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance: PageBoxInstance): PageBoxInstance {\n    return new PartitionGroupInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): PartitionGroup {\n    const cloned = new PartitionGroup(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n/**\n * Represent a partition rule\n */\nexport class Partition<\n  I extends PartitionInstance = PartitionInstance,\n> extends PageBox<I> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n    parent: PageBox,\n  ) {\n    super(scope, name, pseudoName, classes, parent);\n    this.pageMaster = parent.pageMaster;\n    if (name) {\n      this.pageMaster.keyMap[name] = this.key;\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageBoxInstance {\n    return new PartitionInstance(parentInstance, this);\n  }\n\n  /**\n   * @override\n   */\n  clone(param): Partition {\n    const cloned = new Partition(\n      param.parent.scope,\n      this.name,\n      this.pseudoName,\n      this.classes,\n      param.parent,\n    );\n    this.copySpecified(cloned);\n    this.cloneChildren(cloned);\n    return cloned;\n  }\n}\n\n//---------------------------- Instance --------------------------------\n\n/**\n * @param def default value\n */\nexport function toExprIdent(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: string,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return new Exprs.Const(scope, def);\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport function toExprAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprNormal(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.normal || Css.isDefaultingValue(val)) {\n    return null;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprZero(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || val === Css.ident.auto || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\n/**\n * If the value is not specified (null), returns zero.\n * If the value is 'auto', returns null.\n * Otherwise, return the value itself.\n */\nexport function toExprZeroAuto(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  } else if (val === Css.ident.auto) {\n    return null;\n  } else {\n    return val.toExpr(scope, ref);\n  }\n}\n\nexport function toExprZeroBorder(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  styleVal: Css.Val,\n  ref: Exprs.Val,\n): Exprs.Val {\n  if (!val || styleVal === Css.ident.none || Css.isDefaultingValue(val)) {\n    return scope.zero;\n  }\n  return val.toExpr(scope, ref);\n}\n\nexport function toExprBool(\n  scope: Exprs.LexicalScope,\n  val: Css.Val,\n  def: Exprs.Val,\n): Exprs.Val {\n  if (!val || Css.isDefaultingValue(val)) {\n    return def;\n  }\n  if (val === Css.ident._true) {\n    return scope._true;\n  }\n  if (val === Css.ident._false) {\n    return scope._false;\n  }\n  return val.toExpr(scope, scope.zero);\n}\n\nexport interface InstanceHolder extends Exprs.Context {\n  registerInstance(key: string, instance: PageBoxInstance): void;\n\n  /**\n   * @return instance\n   */\n  lookupInstance(key: string): PageBoxInstance;\n}\n\nexport class PageBoxInstance<P extends PageBox = PageBox<any>> {\n  /**\n   * cascaded styles, geometric ones converted to Css.Expr\n   */\n  protected cascaded: CssCascade.ElementStyle = {};\n  style: { [key: string]: Css.Val } = {};\n  private autoWidth: Exprs.Native = null;\n  private autoHeight: Exprs.Native = null;\n  children: PageBoxInstance[] = [];\n  isAutoWidth: boolean = false;\n  isAutoHeight: boolean = false;\n  isTopDependentOnAutoHeight: boolean = false;\n  isRightDependentOnAutoWidth: boolean = false;\n  private calculatedWidth: number = 0;\n  private calculatedHeight: number = 0;\n  pageMasterInstance: PageMasterInstance = null;\n  namedValues: { [key: string]: Exprs.Val } = {};\n  namedFuncs: { [key: string]: Exprs.Val } = {};\n  vertical: boolean = false;\n  rtl: boolean = false;\n  suppressEmptyBoxGeneration: boolean = false;\n\n  constructor(\n    public readonly parentInstance: PageBoxInstance,\n    public readonly pageBox: P,\n  ) {\n    if (parentInstance) {\n      parentInstance.children.push(this);\n    }\n  }\n\n  /**\n   * Reset information related to layout.\n   */\n  reset() {\n    this.calculatedWidth = 0;\n    this.calculatedHeight = 0;\n  }\n\n  private addNamedValues(name1: string, name2: string): Exprs.Val {\n    const v1 = this.resolveName(name1);\n    const v2 = this.resolveName(name2);\n    if (!v1 || !v2) {\n      throw new Error(\"E_INTERNAL\");\n    }\n    return Exprs.add(this.pageBox.scope, v1, v2);\n  }\n\n  resolveName(name: string): Exprs.Val {\n    let expr = this.namedValues[name];\n    if (expr) {\n      return expr;\n    }\n    const val = this.style[name];\n    if (val) {\n      expr = val.toExpr(this.pageBox.scope, this.pageBox.scope.zero);\n    }\n    switch (name) {\n      case \"margin-left-edge\":\n        expr = this.resolveName(\"left\");\n        break;\n      case \"margin-top-edge\":\n        expr = this.resolveName(\"top\");\n        break;\n      case \"margin-right-edge\":\n        expr = this.addNamedValues(\"border-right-edge\", \"margin-right\");\n        break;\n      case \"margin-bottom-edge\":\n        expr = this.addNamedValues(\"border-bottom-edge\", \"margin-bottom\");\n        break;\n      case \"border-left-edge\":\n        expr = this.addNamedValues(\"margin-left-edge\", \"margin-left\");\n        break;\n      case \"border-top-edge\":\n        expr = this.addNamedValues(\"margin-top-edge\", \"margin-top\");\n        break;\n      case \"border-right-edge\":\n        expr = this.addNamedValues(\"padding-right-edge\", \"border-right-width\");\n        break;\n      case \"border-bottom-edge\":\n        expr = this.addNamedValues(\n          \"padding-bottom-edge\",\n          \"border-bottom-width\",\n        );\n        break;\n      case \"padding-left-edge\":\n        expr = this.addNamedValues(\"border-left-edge\", \"border-left-width\");\n        break;\n      case \"padding-top-edge\":\n        expr = this.addNamedValues(\"border-top-edge\", \"border-top-width\");\n        break;\n      case \"padding-right-edge\":\n        expr = this.addNamedValues(\"right-edge\", \"padding-right\");\n        break;\n      case \"padding-bottom-edge\":\n        expr = this.addNamedValues(\"bottom-edge\", \"padding-bottom\");\n        break;\n      case \"left-edge\":\n        expr = this.addNamedValues(\"padding-left-edge\", \"padding-left\");\n        break;\n      case \"top-edge\":\n        expr = this.addNamedValues(\"padding-top-edge\", \"padding-top\");\n        break;\n      case \"right-edge\":\n        expr = this.addNamedValues(\"left-edge\", \"width\");\n        break;\n      case \"bottom-edge\":\n        expr = this.addNamedValues(\"top-edge\", \"height\");\n        break;\n    }\n    if (!expr) {\n      let altName: string;\n      if (name == \"extent\") {\n        altName = this.vertical ? \"width\" : \"height\";\n      } else if (name == \"measure\") {\n        altName = this.vertical ? \"height\" : \"width\";\n      } else {\n        const map = this.vertical\n          ? CssCascade.couplingMapVert\n          : CssCascade.couplingMapHor;\n        altName = name;\n        for (const key in map) {\n          altName = altName.replace(key, map[key]);\n        }\n      }\n      if (altName != name) {\n        expr = this.resolveName(altName);\n      }\n    }\n    if (expr) {\n      this.namedValues[name] = expr;\n    }\n    return expr;\n  }\n\n  resolveFunc(name) {\n    let expr = this.namedFuncs[name];\n    if (expr) {\n      return expr;\n    }\n    switch (name) {\n      case \"columns\": {\n        // min(count,column-count) * (column-width + column-gap) - column-gap\n        const scope = this.pageBox.scope;\n        const count = new Exprs.Param(scope, 0);\n        const columnCount = this.resolveName(\"column-count\");\n        const columnWidth = this.resolveName(\"column-width\");\n        const columnGap = this.resolveName(\"column-gap\");\n        expr = Exprs.sub(\n          scope,\n          Exprs.mul(\n            scope,\n            new Exprs.Call(scope, \"min\", [count, columnCount]),\n            Exprs.add(scope, columnWidth, columnGap),\n          ),\n          columnGap,\n        );\n        break;\n      }\n    }\n    if (expr) {\n      this.namedFuncs[name] = expr;\n    }\n    return expr;\n  }\n\n  private initEnabled(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    let enabled = toExprBool(scope, style[\"enabled\"], scope._true);\n    const page = toExprAuto(scope, style[\"page\"], scope.zero);\n    if (page) {\n      const currentPage = new Exprs.Named(scope, \"page-number\");\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Eq(scope, page, currentPage),\n      );\n    }\n    const minPageWidth = toExprAuto(scope, style[\"min-page-width\"], scope.zero);\n    if (minPageWidth) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(scope, new Exprs.Named(scope, \"page-width\"), minPageWidth),\n      );\n    }\n    const minPageHeight = toExprAuto(\n      scope,\n      style[\"min-page-height\"],\n      scope.zero,\n    );\n    if (minPageHeight) {\n      enabled = Exprs.and(\n        scope,\n        enabled,\n        new Exprs.Ge(\n          scope,\n          new Exprs.Named(scope, \"page-height\"),\n          minPageHeight,\n        ),\n      );\n    }\n    enabled = this.boxSpecificEnabled(enabled);\n    style[\"enabled\"] = new Css.Expr(enabled);\n  }\n\n  protected boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    return enabled;\n  }\n\n  protected initHorizontal(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    let left = toExprAuto(scope, style[\"left\"], parentWidth);\n    let marginLeft = toExprAuto(scope, style[\"margin-left\"], parentWidth);\n    const borderLeftWidth = toExprZeroBorder(\n      scope,\n      style[\"border-left-width\"],\n      style[\"border-left-style\"],\n      parentWidth,\n    );\n    const paddingLeft = toExprZero(scope, style[\"padding-left\"], parentWidth);\n    let width = toExprAuto(scope, style[\"width\"], parentWidth);\n    let maxWidth = toExprAuto(scope, style[\"max-width\"], parentWidth);\n    const paddingRight = toExprZero(scope, style[\"padding-right\"], parentWidth);\n    const borderRightWidth = toExprZeroBorder(\n      scope,\n      style[\"border-right-width\"],\n      style[\"border-right-style\"],\n      parentWidth,\n    );\n    let marginRight = toExprAuto(scope, style[\"margin-right\"], parentWidth);\n    let right = toExprAuto(scope, style[\"right\"], parentWidth);\n    const leftBP = Exprs.add(scope, borderLeftWidth, paddingLeft);\n    const rightBP = Exprs.add(scope, borderLeftWidth, paddingRight);\n    if (left && right && width) {\n      let extra = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          width,\n          Exprs.add(scope, Exprs.add(scope, left, leftBP), rightBP),\n        ),\n      );\n      if (!marginLeft) {\n        extra = Exprs.sub(scope, extra, right);\n        if (!marginRight) {\n          marginLeft = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginRight = marginLeft;\n        } else {\n          marginLeft = Exprs.sub(scope, extra, marginRight);\n        }\n      } else {\n        if (!marginRight) {\n          marginRight = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, right, marginLeft),\n          );\n        } else {\n          // overconstraint\n          right = Exprs.sub(scope, extra, marginRight);\n        }\n      }\n    } else {\n      if (!marginLeft) {\n        marginLeft = scope.zero;\n      }\n      if (!marginRight) {\n        marginRight = scope.zero;\n      }\n      if (!left && !right && !width) {\n        left = scope.zero;\n      }\n      if (!left && !width) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      } else if (!left && !right) {\n        left = scope.zero;\n      } else if (!width && !right) {\n        width = this.autoWidth;\n        this.isAutoWidth = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentWidth,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginLeft, leftBP),\n          Exprs.add(scope, marginRight, rightBP),\n        ),\n      );\n      if (this.isAutoWidth) {\n        if (!maxWidth) {\n          // TODO: handle the case when right/left depends on width\n          maxWidth = Exprs.sub(scope, remains, left ? left : right);\n        }\n\n        // For multi-column layout, width is max-width.\n        if (\n          !this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          width = maxWidth;\n          this.isAutoWidth = false;\n        }\n      }\n      if (!left) {\n        left = Exprs.sub(scope, remains, Exprs.add(scope, right, width));\n      } else if (!width) {\n        width = Exprs.sub(scope, remains, Exprs.add(scope, left, right));\n      } else if (!right) {\n        right = Exprs.sub(scope, remains, Exprs.add(scope, left, width));\n      }\n    }\n\n    // snap-width is inherited\n    const snapWidthVal =\n      style[\"snap-width\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-width\"] : null);\n    const snapWidth = toExprZero(scope, snapWidthVal, parentWidth);\n    style[\"left\"] = new Css.Expr(left);\n    style[\"margin-left\"] = new Css.Expr(marginLeft);\n    style[\"border-left-width\"] = new Css.Expr(borderLeftWidth);\n    style[\"padding-left\"] = new Css.Expr(paddingLeft);\n    style[\"width\"] = new Css.Expr(width);\n    style[\"max-width\"] = new Css.Expr(maxWidth ? maxWidth : width);\n    style[\"padding-right\"] = new Css.Expr(paddingRight);\n    style[\"border-right-width\"] = new Css.Expr(borderRightWidth);\n    style[\"margin-right\"] = new Css.Expr(marginRight);\n    style[\"right\"] = new Css.Expr(right);\n    style[\"snap-width\"] = new Css.Expr(snapWidth);\n  }\n\n  protected initVertical(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const parentWidth = this.parentInstance\n      ? this.parentInstance.style[\"width\"].toExpr(scope, null)\n      : null;\n    const parentHeight = this.parentInstance\n      ? this.parentInstance.style[\"height\"].toExpr(scope, null)\n      : null;\n    let top = toExprAuto(scope, style[\"top\"], parentHeight);\n    let marginTop = toExprAuto(scope, style[\"margin-top\"], parentWidth);\n    const borderTopWidth = toExprZeroBorder(\n      scope,\n      style[\"border-top-width\"],\n      style[\"border-top-style\"],\n      parentWidth,\n    );\n    const paddingTop = toExprZero(scope, style[\"padding-top\"], parentWidth);\n    let height = toExprAuto(scope, style[\"height\"], parentHeight);\n    let maxHeight = toExprAuto(scope, style[\"max-height\"], parentHeight);\n    const paddingBottom = toExprZero(\n      scope,\n      style[\"padding-bottom\"],\n      parentWidth,\n    );\n    const borderBottomWidth = toExprZeroBorder(\n      scope,\n      style[\"border-bottom-width\"],\n      style[\"border-bottom-style\"],\n      parentWidth,\n    );\n    let marginBottom = toExprAuto(scope, style[\"margin-bottom\"], parentWidth);\n    let bottom = toExprAuto(scope, style[\"bottom\"], parentHeight);\n    const topBP = Exprs.add(scope, borderTopWidth, paddingTop);\n    const bottomBP = Exprs.add(scope, borderBottomWidth, paddingBottom);\n    if (top && bottom && height) {\n      let extra = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          height,\n          Exprs.add(scope, Exprs.add(scope, top, topBP), bottomBP),\n        ),\n      );\n      if (!marginTop) {\n        extra = Exprs.sub(scope, extra, bottom);\n        if (!marginBottom) {\n          marginTop = Exprs.mul(scope, extra, new Exprs.Const(scope, 0.5));\n          marginBottom = marginTop;\n        } else {\n          marginTop = Exprs.sub(scope, extra, marginBottom);\n        }\n      } else {\n        if (!marginBottom) {\n          marginBottom = Exprs.sub(\n            scope,\n            extra,\n            Exprs.add(scope, bottom, marginTop),\n          );\n        } else {\n          // overconstraint\n          bottom = Exprs.sub(scope, extra, marginTop);\n        }\n      }\n    } else {\n      if (!marginTop) {\n        marginTop = scope.zero;\n      }\n      if (!marginBottom) {\n        marginBottom = scope.zero;\n      }\n      if (!top && !bottom && !height) {\n        top = scope.zero;\n      }\n      if (!top && !height) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      } else if (!top && !bottom) {\n        top = scope.zero;\n      } else if (!height && !bottom) {\n        height = this.autoHeight;\n        this.isAutoHeight = true;\n      }\n      const remains = Exprs.sub(\n        scope,\n        parentHeight,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, marginTop, topBP),\n          Exprs.add(scope, marginBottom, bottomBP),\n        ),\n      );\n      if (this.isAutoHeight) {\n        if (!maxHeight) {\n          // TODO: handle the case when top/bottom depends on height\n          maxHeight = Exprs.sub(scope, remains, top ? top : bottom);\n        }\n\n        // For multi-column layout in vertical writing, height is max-height.\n        if (\n          this.vertical &&\n          (toExprAuto(scope, style[\"column-width\"], null) ||\n            toExprAuto(scope, style[\"column-count\"], null))\n        ) {\n          height = maxHeight;\n          this.isAutoHeight = false;\n        }\n      }\n      if (!top) {\n        top = Exprs.sub(scope, remains, Exprs.add(scope, bottom, height));\n      } else if (!height) {\n        height = Exprs.sub(scope, remains, Exprs.add(scope, bottom, top));\n      } else if (!bottom) {\n        bottom = Exprs.sub(scope, remains, Exprs.add(scope, top, height));\n      }\n    }\n\n    // snap-height is inherited\n    const snapHeightVal =\n      style[\"snap-height\"] ||\n      (this.parentInstance ? this.parentInstance.style[\"snap-height\"] : null);\n    const snapHeight = toExprZero(scope, snapHeightVal, parentWidth);\n    style[\"top\"] = new Css.Expr(top);\n    style[\"margin-top\"] = new Css.Expr(marginTop);\n    style[\"border-top-width\"] = new Css.Expr(borderTopWidth);\n    style[\"padding-top\"] = new Css.Expr(paddingTop);\n    style[\"height\"] = new Css.Expr(height);\n    style[\"max-height\"] = new Css.Expr(maxHeight ? maxHeight : height);\n    style[\"padding-bottom\"] = new Css.Expr(paddingBottom);\n    style[\"border-bottom-width\"] = new Css.Expr(borderBottomWidth);\n    style[\"margin-bottom\"] = new Css.Expr(marginBottom);\n    style[\"bottom\"] = new Css.Expr(bottom);\n    style[\"snap-height\"] = new Css.Expr(snapHeight);\n  }\n\n  private initColumns(): void {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const width = toExprAuto(\n      scope,\n      style[this.vertical ? \"height\" : \"width\"],\n      null,\n    );\n    let columnWidth = toExprAuto(scope, style[\"column-width\"], width);\n    let columnCount = toExprAuto(scope, style[\"column-count\"], null);\n    let columnGap = toExprNormal(scope, style[\"column-gap\"], null);\n    if (!columnGap) {\n      columnGap = new Exprs.Numeric(scope, 1, \"em\");\n    }\n    if (columnWidth && !columnCount) {\n      columnCount = new Exprs.Call(scope, \"floor\", [\n        Exprs.div(\n          scope,\n          Exprs.add(scope, width, columnGap),\n          Exprs.add(scope, columnWidth, columnGap),\n        ),\n      ]);\n      columnCount = new Exprs.Call(scope, \"max\", [scope.one, columnCount]);\n    }\n    if (!columnCount) {\n      columnCount = scope.one;\n    }\n    columnWidth = Exprs.sub(\n      scope,\n      Exprs.div(scope, Exprs.add(scope, width, columnGap), columnCount),\n      columnGap,\n    );\n    style[\"column-width\"] = new Css.Expr(columnWidth);\n    style[\"column-count\"] = new Css.Expr(columnCount);\n    style[\"column-gap\"] = new Css.Expr(columnGap);\n  }\n\n  private depends(\n    propName: string,\n    val: Exprs.Val,\n    context: Exprs.Context,\n  ): boolean {\n    return this.style[propName]\n      .toExpr(this.pageBox.scope, null)\n      .depend(val, context);\n  }\n\n  private init(context: Exprs.Context): void {\n    // If context does not implement InstanceHolder we would not be able to\n    // resolve \"partition.property\" names later.\n    const holder = context as InstanceHolder;\n    holder.registerInstance(this.pageBox.key, this);\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const regionIds = this.parentInstance\n      ? this.parentInstance.getActiveRegions(context)\n      : null;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      this.cascaded,\n      context,\n      regionIds,\n      false,\n      null,\n    );\n    this.vertical = CssCascade.isVertical(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.vertical : false,\n    );\n    this.rtl = CssCascade.isRtl(\n      cascMap,\n      context,\n      this.parentInstance ? this.parentInstance.rtl : false,\n    );\n    CssCascade.convertToPhysical(\n      cascMap,\n      style,\n      this.vertical,\n      this.rtl,\n      (name, cascVal) => cascVal.value,\n    );\n    this.autoWidth = new Exprs.Native(\n      scope,\n      () => this.calculatedWidth,\n      \"autoWidth\",\n    );\n    this.autoHeight = new Exprs.Native(\n      scope,\n      () => this.calculatedHeight,\n      \"autoHeight\",\n    );\n    this.initHorizontal();\n    this.initVertical();\n    this.initColumns();\n    this.initEnabled();\n  }\n\n  getProp(context: Exprs.Context, name: string): Css.Val {\n    let val = this.style[name];\n    if (!val && CssCascade.isInherited(name)) {\n      // inherit from root style\n      if (\n        name === \"font-size\" &&\n        context.isRelativeRootFontSize &&\n        context.rootFontSize\n      ) {\n        val = new Css.Numeric(context.rootFontSize, \"px\");\n      } else {\n        const rootStyle = (\n          context as Exprs.Context & {\n            styler: { rootStyle: { [key: string]: CssCascade.CascadeValue } };\n          }\n        ).styler?.rootStyle;\n        val = rootStyle[name]?.value;\n      }\n    }\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return val;\n  }\n\n  getPropAsNumber(context: Exprs.Context, name: string): number {\n    let val = this.style[name];\n    if (val) {\n      val = CssParser.evaluateCSSToCSS(context, val, name);\n    }\n    return Css.toNumber(val, context);\n  }\n\n  getSpecial(context: Exprs.Context, name: string): Css.Val[] {\n    const arr = CssCascade.getSpecial(this.cascaded, name);\n    if (arr) {\n      const result = [] as Css.Val[];\n      for (let i = 0; i < arr.length; i++) {\n        const v = arr[i].evaluate(context, \"\");\n        if (v && v !== Css.empty) {\n          result.push(v);\n        }\n      }\n      if (result.length) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  getActiveRegions(context: Exprs.Context): string[] {\n    const arr = this.getSpecial(context, \"region-id\");\n    if (arr) {\n      const result = [] as string[];\n      for (let i = 0; i < arr.length; i++) {\n        result[i] = arr[i].toString();\n      }\n      return result;\n    }\n    return null;\n  }\n\n  propagateProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    this.propagatePropertyToElement(context, container.element, name, docFaces);\n  }\n\n  propagatePropertyToElement(\n    context: Exprs.Context,\n    element: Element,\n    name: string,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    let val = this.getProp(context, name);\n    if (val) {\n      if (\n        val.isNumeric() &&\n        Exprs.needUnitConversion((val as Css.Numeric).unit)\n      ) {\n        val = Css.convertNumericToPx(val, context);\n      }\n      if (name === \"font-family\") {\n        val = docFaces.filterFontFamily(val);\n      }\n      Base.setCSSProperty(element, name, val.toString());\n    }\n  }\n\n  propagateDelayedProperty(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    name: string,\n    delayedItems: Vtree.DelayedItem[],\n  ): void {\n    const val = this.getProp(context, name);\n    if (val) {\n      delayedItems.push(new Vtree.DelayedItem(container.element, name, val));\n    }\n  }\n\n  assignLeftPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const left = this.getPropAsNumber(context, \"left\");\n    const marginLeft = this.getPropAsNumber(context, \"margin-left\");\n    const paddingLeft = this.getPropAsNumber(context, \"padding-left\");\n    const borderLeftWidth = this.getPropAsNumber(context, \"border-left-width\");\n    const width = this.getPropAsNumber(context, \"width\");\n    container.setHorizontalPosition(left, width);\n    Base.setCSSProperty(container.element, \"margin-left\", `${marginLeft}px`);\n    Base.setCSSProperty(container.element, \"padding-left\", `${paddingLeft}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-left-width\",\n      `${borderLeftWidth}px`,\n    );\n    container.marginLeft = marginLeft;\n    container.borderLeft = borderLeftWidth;\n    container.paddingLeft = paddingLeft;\n  }\n\n  assignRightPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const right = this.getPropAsNumber(context, \"right\");\n    const snapWidth = this.getPropAsNumber(context, \"snap-height\");\n    const marginRight = this.getPropAsNumber(context, \"margin-right\");\n    let paddingRight = this.getPropAsNumber(context, \"padding-right\");\n    const borderRightWidth = this.getPropAsNumber(\n      context,\n      \"border-right-width\",\n    );\n    Base.setCSSProperty(container.element, \"margin-right\", `${marginRight}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"padding-right\",\n      `${paddingRight}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-right-width\",\n      `${borderRightWidth}px`,\n    );\n    container.marginRight = marginRight;\n    container.borderRight = borderRightWidth;\n    if (this.vertical && snapWidth > 0) {\n      const xpos = right + container.getInsetRight();\n      const r = xpos - Math.floor(xpos / snapWidth) * snapWidth;\n      if (r > 0) {\n        container.snapOffsetX = snapWidth - r;\n        paddingRight += container.snapOffsetX;\n      }\n    }\n    container.paddingRight = paddingRight;\n    container.snapWidth = snapWidth;\n  }\n\n  assignTopPosition(context: Exprs.Context, container: Vtree.Container): void {\n    const snapHeight = this.getPropAsNumber(context, \"snap-height\");\n    const top = this.getPropAsNumber(context, \"top\");\n    const marginTop = this.getPropAsNumber(context, \"margin-top\");\n    let paddingTop = this.getPropAsNumber(context, \"padding-top\");\n    const borderTopWidth = this.getPropAsNumber(context, \"border-top-width\");\n    container.top = top;\n    container.marginTop = marginTop;\n    container.borderTop = borderTopWidth;\n    container.snapHeight = snapHeight;\n    if (!this.vertical && snapHeight > 0) {\n      const ypos = top + container.getInsetTop();\n      const r = ypos - Math.floor(ypos / snapHeight) * snapHeight;\n      if (r > 0) {\n        container.snapOffsetY = snapHeight - r;\n        paddingTop += container.snapOffsetY;\n      }\n    }\n    container.paddingTop = paddingTop;\n    Base.setCSSProperty(container.element, \"top\", `${top}px`);\n    Base.setCSSProperty(container.element, \"margin-top\", `${marginTop}px`);\n    Base.setCSSProperty(container.element, \"padding-top\", `${paddingTop}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"border-top-width\",\n      `${borderTopWidth}px`,\n    );\n  }\n\n  assignBottomPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    const marginBottom = this.getPropAsNumber(context, \"margin-bottom\");\n    const paddingBottom = this.getPropAsNumber(context, \"padding-bottom\");\n    const borderBottomWidth = this.getPropAsNumber(\n      context,\n      \"border-bottom-width\",\n    );\n    const height =\n      this.getPropAsNumber(context, \"height\") - container.snapOffsetY;\n    Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    Base.setCSSProperty(\n      container.element,\n      \"margin-bottom\",\n      `${marginBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"padding-bottom\",\n      `${paddingBottom}px`,\n    );\n    Base.setCSSProperty(\n      container.element,\n      \"border-bottom-width\",\n      `${borderBottomWidth}px`,\n    );\n    container.height = height - container.snapOffsetY;\n    container.marginBottom = marginBottom;\n    container.borderBottom = borderBottomWidth;\n    container.paddingBottom = paddingBottom;\n  }\n\n  assignBeforePosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignRightPosition(context, container);\n    } else {\n      this.assignTopPosition(context, container);\n    }\n  }\n\n  assignAfterPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignLeftPosition(context, container);\n    } else {\n      this.assignBottomPosition(context, container);\n    }\n  }\n\n  assignStartEndPosition(\n    context: Exprs.Context,\n    container: Vtree.Container,\n  ): void {\n    if (this.vertical) {\n      this.assignTopPosition(context, container);\n      this.assignBottomPosition(context, container);\n    } else {\n      this.assignRightPosition(context, container);\n      this.assignLeftPosition(context, container);\n    }\n  }\n\n  sizeWithMaxHeight(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-top-width\", \"0px\");\n    let height = this.getPropAsNumber(context, \"max-height\");\n    if (this.isTopDependentOnAutoHeight) {\n      container.setVerticalPosition(0, height);\n    } else {\n      this.assignTopPosition(context, container);\n      height -= container.snapOffsetY;\n      container.height = height;\n      Base.setCSSProperty(container.element, \"height\", `${height}px`);\n    }\n  }\n\n  sizeWithMaxWidth(context: Exprs.Context, container: Vtree.Container): void {\n    Base.setCSSProperty(container.element, \"border-left-width\", \"0px\");\n    let width = this.getPropAsNumber(context, \"max-width\");\n    if (this.isRightDependentOnAutoWidth) {\n      container.setHorizontalPosition(0, width);\n    } else {\n      this.assignRightPosition(context, container);\n      width -= container.snapOffsetX;\n      container.width = width;\n      const right = this.getPropAsNumber(context, \"right\");\n      Base.setCSSProperty(container.element, \"right\", `${right}px`);\n      Base.setCSSProperty(container.element, \"width\", `${width}px`);\n    }\n  }\n\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    if (!this.parentInstance || this.vertical != this.parentInstance.vertical) {\n      Base.setCSSProperty(\n        container.element,\n        \"writing-mode\",\n        this.vertical ? \"vertical-rl\" : \"horizontal-tb\",\n      );\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (this.vertical) {\n        this.sizeWithMaxWidth(context, container);\n      } else {\n        this.sizeWithMaxHeight(context, container);\n      }\n    } else {\n      this.assignBeforePosition(context, container);\n      this.assignAfterPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      if (this.vertical) {\n        this.sizeWithMaxHeight(context, container);\n      } else {\n        this.sizeWithMaxWidth(context, container);\n      }\n    } else {\n      this.assignStartEndPosition(context, container);\n    }\n    for (let i = 0; i < passPreProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPreProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferContentProps(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passContentProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  transferSinglUriContentProps(\n    context: Exprs.Context,\n    element: Element,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    for (let i = 0; i < passSingleUriContentProperties.length; i++) {\n      this.propagatePropertyToElement(\n        context,\n        element,\n        passSingleUriContentProperties[i],\n        docFaces,\n      );\n    }\n  }\n\n  /**\n   * @param column (null when content comes from the content property)\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    if (this.vertical) {\n      this.calculatedWidth =\n        container.computedBlockSize + container.snapOffsetX;\n    } else {\n      this.calculatedHeight =\n        container.computedBlockSize + container.snapOffsetY;\n    }\n    const readHeight = (this.vertical || !column) && this.isAutoHeight;\n    const readWidth = (!this.vertical || !column) && this.isAutoWidth;\n    let bbox: Vtree.ClientRect = null;\n    if (readWidth || readHeight) {\n      if (readWidth) {\n        Base.setCSSProperty(container.element, \"width\", \"auto\");\n      }\n      if (readHeight) {\n        Base.setCSSProperty(container.element, \"height\", \"auto\");\n      }\n      bbox = clientLayout.getElementClientRect(\n        column ? column.element : container.element,\n      );\n      if (readWidth) {\n        this.calculatedWidth = Math.ceil(\n          bbox.right -\n            bbox.left -\n            container.paddingLeft -\n            container.borderLeft -\n            container.paddingRight -\n            container.borderRight,\n        );\n        if (this.vertical) {\n          this.calculatedWidth += container.snapOffsetX;\n        }\n      }\n      if (readHeight) {\n        this.calculatedHeight =\n          bbox.bottom -\n          bbox.top -\n          container.paddingTop -\n          container.borderTop -\n          container.paddingBottom -\n          container.borderBottom;\n        if (!this.vertical) {\n          this.calculatedHeight += container.snapOffsetY;\n        }\n      }\n    }\n    if (this.vertical ? this.isAutoHeight : this.isAutoWidth) {\n      this.assignStartEndPosition(context, container);\n    }\n    if (this.vertical ? this.isAutoWidth : this.isAutoHeight) {\n      if (\n        this.vertical\n          ? this.isRightDependentOnAutoWidth\n          : this.isTopDependentOnAutoHeight\n      ) {\n        this.assignBeforePosition(context, container);\n      }\n      this.assignAfterPosition(context, container);\n    }\n    if (columnCount > 1) {\n      const ruleWidth = this.getPropAsNumber(context, \"column-rule-width\");\n      const ruleStyle = this.getProp(context, \"column-rule-style\");\n      const ruleColor = this.getProp(context, \"column-rule-color\");\n      if (\n        ruleWidth > 0 &&\n        ruleStyle &&\n        ruleStyle != Css.ident.none &&\n        ruleColor != Css.ident.transparent\n      ) {\n        const columnGap = this.getPropAsNumber(context, \"column-gap\");\n        const containerSize = this.vertical\n          ? container.height\n          : container.width;\n        const border = this.vertical ? \"border-top\" : \"border-left\";\n        for (let i = 1; i < columnCount; i++) {\n          const pos =\n            ((containerSize + columnGap) * i) / columnCount -\n            columnGap / 2 +\n            container.paddingLeft -\n            ruleWidth / 2;\n          const size =\n            container.height + container.paddingTop + container.paddingBottom;\n          const rule = container.element.ownerDocument.createElement(\"div\");\n          Base.setCSSProperty(rule, \"position\", \"absolute\");\n          Base.setCSSProperty(rule, this.vertical ? \"left\" : \"top\", \"0px\");\n          Base.setCSSProperty(rule, this.vertical ? \"top\" : \"left\", `${pos}px`);\n          Base.setCSSProperty(rule, this.vertical ? \"height\" : \"width\", \"0px\");\n          Base.setCSSProperty(\n            rule,\n            this.vertical ? \"width\" : \"height\",\n            `${size}px`,\n          );\n          Base.setCSSProperty(\n            rule,\n            border,\n            `${ruleWidth}px ${ruleStyle.toString()}${\n              ruleColor ? ` ${ruleColor.toString()}` : \"\"\n            }`,\n          );\n          container.element.insertBefore(rule, container.element.firstChild);\n        }\n      }\n    }\n    for (let i = 0; i < passPostProperties.length; i++) {\n      this.propagateProperty(\n        context,\n        container,\n        passPostProperties[i],\n        docFaces,\n      );\n    }\n    for (let i = 0; i < delayedProperties.length; i++) {\n      this.propagateDelayedProperty(\n        context,\n        container,\n        delayedProperties[i],\n        page.delayedItems,\n      );\n    }\n  }\n\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    const specified = this.pageBox.specified;\n    for (const name in specified) {\n      if (CssCascade.isPropName(name)) {\n        CssCascade.setProp(style, name, CssCascade.getProp(specified, name));\n      }\n    }\n    if (this.pageBox.pseudoName == userAgentPageMasterPseudo) {\n      for (const name in docElementStyle) {\n        if (name.match(/^background-/) || name == \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    if (this.pageBox.pseudoName == \"layout-host\") {\n      for (const name in docElementStyle) {\n        if (!name.match(/^background-/) && name != \"writing-mode\") {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    cascade.pushRule(this.pageBox.classes, null, style);\n    const content = style[\"content\"] as CssCascade.CascadeValue;\n    if (content) {\n      style[\"content\"] = content.filterValue(\n        new CssCascade.ContentPropVisitor(\n          cascade,\n          null,\n          cascade.counterResolver,\n        ),\n      );\n    }\n    this.init(cascade.context);\n    for (const child of this.pageBox.children) {\n      const childInstance = child.createInstance(this);\n      childInstance.applyCascadeAndInit(cascade, docElementStyle);\n    }\n    cascade.popRule();\n  }\n\n  resolveAutoSizing(context: Exprs.Context): void {\n    // all implicit dependencies are set up at this point\n    if (this.isAutoWidth) {\n      this.isRightDependentOnAutoWidth =\n        this.depends(\"right\", this.autoWidth, context) ||\n        this.depends(\"margin-right\", this.autoWidth, context) ||\n        this.depends(\"border-right-width\", this.autoWidth, context) ||\n        this.depends(\"padding-right\", this.autoWidth, context);\n    }\n    if (this.isAutoHeight) {\n      this.isTopDependentOnAutoHeight =\n        this.depends(\"top\", this.autoHeight, context) ||\n        this.depends(\"margin-top\", this.autoHeight, context) ||\n        this.depends(\"border-top-width\", this.autoHeight, context) ||\n        this.depends(\"padding-top\", this.autoHeight, context);\n    }\n    for (const childInstance of this.children) {\n      childInstance.resolveAutoSizing(context);\n    }\n  }\n}\n\n/**\n * Properties that are passed through before the layout.\n */\nexport const passPreProperties = [\n  \"border-left-style\",\n  \"border-right-style\",\n  \"border-top-style\",\n  \"border-bottom-style\",\n  \"border-left-color\",\n  \"border-right-color\",\n  \"border-top-color\",\n  \"border-bottom-color\",\n  \"outline-style\",\n  \"outline-color\",\n  \"outline-width\",\n  \"overflow\",\n  \"visibility\",\n];\n\n/**\n * Properties that are passed through after the layout.\n */\nexport const passPostProperties = [\n  \"border-top-left-radius\",\n  \"border-top-right-radius\",\n  \"border-bottom-right-radius\",\n  \"border-bottom-left-radius\",\n  \"border-image-source\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"border-image-outset\",\n  \"border-image-repeat\",\n  \"background-attachment\",\n  \"background-color\",\n  \"background-image\",\n  \"background-repeat\",\n  \"background-position\",\n  \"background-clip\",\n  \"background-origin\",\n  \"background-size\",\n  \"opacity\",\n  \"z-index\",\n  \"background-blend-mode\",\n  \"isolation\",\n  \"mix-blend-mode\",\n  \"filter\",\n];\n\n/**\n * Only passed when there is content assigned by the content property.\n */\nexport const passContentProperties = [\n  \"color\",\n  \"font-family\",\n  \"font-size\",\n  \"font-style\",\n  \"font-weight\",\n  \"line-height\",\n  \"letter-spacing\",\n  \"text-align\",\n  \"text-decoration\",\n  \"text-indent\",\n  \"text-transform\",\n  \"white-space\",\n  \"word-spacing\",\n  \"font-feature-settings\",\n  \"font-kerning\",\n  \"font-size-adjust\",\n  \"font-variant-ligatures\",\n  \"font-variant-caps\",\n  \"font-variant-numeric\",\n  \"font-variant-east-asian\",\n  \"font-stretch\",\n  \"text-decoration-color\",\n  \"text-decoration-line\",\n  \"text-decoration-skip\",\n  \"text-decoration-style\",\n  \"text-emphasis\",\n  \"text-emphasis-color\",\n  \"text-emphasis-position\",\n  \"text-emphasis-style\",\n  \"text-orientation\",\n  \"text-shadow\",\n  \"text-underline-position\",\n];\n\nexport const passSingleUriContentProperties = [\n  \"width\",\n  \"height\",\n  \"image-resolution\",\n  \"object-fit\",\n  \"object-position\",\n];\n\nexport const delayedProperties = [\"transform\", \"transform-origin\"];\n\nexport const userAgentPageMasterPseudo = \"background-host\";\n\nexport class RootPageBoxInstance extends PageBoxInstance<RootPageBox> {\n  constructor(pageBox: RootPageBox) {\n    super(null, pageBox);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    super.applyCascadeAndInit(cascade, docElementStyle);\n\n    // Sort page masters using order and specificity.\n    const pageMasters = this.children;\n    (pageMasters as PageMasterInstance[]).sort(\n      (a, b) =>\n        (b.pageBox as any).specificity - (a.pageBox as any).specificity || // probably cause NaN\n        a.pageBox.index - b.pageBox.index,\n    );\n  }\n}\n\nexport class PageMasterInstance<\n  P extends PageMaster = PageMaster<PageMasterInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = this;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const pageMaster = this.pageBox.pageMaster;\n    if (pageMaster.condition) {\n      enabled = Exprs.and(pageMaster.scope, enabled, pageMaster.condition);\n    }\n    return enabled;\n  }\n\n  /**\n   * Called after layout of contents of the page has done to adjust the overall\n   * page layout. Override in subclasses.\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {}\n}\n\nexport class PartitionGroupInstance extends PageBoxInstance<PartitionGroup> {\n  constructor(parentInstance: PageBoxInstance, pageBox: PageBox) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n}\n\nexport class PartitionInstance<\n  P extends Partition = Partition<PartitionInstance<any>>,\n> extends PageBoxInstance<P> {\n  constructor(parentInstance: PageBoxInstance, pageBox: P) {\n    super(parentInstance, pageBox);\n    this.pageMasterInstance = parentInstance.pageMasterInstance;\n  }\n\n  processPartitionList(\n    enabled: Exprs.Val,\n    listVal: Css.Val,\n    conflicting: boolean,\n  ): Exprs.Val {\n    let list: Css.Val[] = null;\n    if (listVal instanceof Css.Ident) {\n      list = [listVal];\n    }\n    if (listVal instanceof Css.CommaList) {\n      list = (listVal as Css.CommaList).values;\n    }\n    if (list) {\n      const scope = this.pageBox.scope;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] instanceof Css.Ident) {\n          const qname = Exprs.makeQualifiedName(\n            (list[i] as Css.Ident).name,\n            \"enabled\",\n          );\n          let term: Exprs.Val = new Exprs.Named(scope, qname);\n          if (conflicting) {\n            term = new Exprs.Not(scope, term);\n          }\n          enabled = Exprs.and(scope, enabled, term);\n        }\n      }\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  boxSpecificEnabled(enabled: Exprs.Val): Exprs.Val {\n    const scope = this.pageBox.scope;\n    const style = this.style;\n    const required =\n      toExprBool(scope, style[\"required\"], scope._false) !== scope._false;\n    if (required || this.isAutoHeight) {\n      const flowName = toExprIdent(scope, style[\"flow-from\"], \"body\");\n      const hasContent = new Exprs.Call(scope, \"has-content\", [flowName]);\n      enabled = Exprs.and(scope, enabled, hasContent);\n    }\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"required-partitions\"],\n      false,\n    );\n    enabled = this.processPartitionList(\n      enabled,\n      style[\"conflicting-partitions\"],\n      true,\n    );\n    if (required) {\n      const pmEnabledVal = this.pageMasterInstance.style[\"enabled\"];\n      let pmEnabled = pmEnabledVal\n        ? pmEnabledVal.toExpr(scope, null)\n        : scope._true;\n      pmEnabled = Exprs.and(scope, pmEnabled, enabled);\n      this.pageMasterInstance.style[\"enabled\"] = new Css.Expr(pmEnabled);\n    }\n    return enabled;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n}\n\n//--------------------- parsing -----------------------\nexport class PageBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly target: PageBox,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    this.target.specified[name] = new CssCascade.CascadeValue(\n      value,\n      important\n        ? CssParser.SPECIFICITY_STYLE\n        : CssParser.SPECIFICITY_STYLE_IMPORTANT,\n    );\n  }\n}\n\nexport class PartitionParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: Partition,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n}\n\nexport class PartitionGroupParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PartitionGroup,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n    target.specified[\"width\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n    target.specified[\"height\"] = new CssCascade.CascadeValue(\n      Css.hundredPercent,\n      0,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\nexport class PageMasterParserHandler extends PageBoxParserHandler {\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    target: PageMaster,\n    validatorSet: CssValidator.ValidatorSet,\n  ) {\n    super(scope, owner, target, validatorSet);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partition = new Partition(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionParserHandler(\n      this.scope,\n      this.owner,\n      partition,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n\n  /**\n   * @override\n   */\n  startPartitionGroupRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const partitionGroup = new PartitionGroup(\n      this.scope,\n      name,\n      pseudoName,\n      classes,\n      this.target,\n    );\n    const handler = new PartitionGroupParserHandler(\n      this.scope,\n      this.owner,\n      partitionGroup,\n      this.validatorSet,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CssPage - `@page` rule (CSS Paged Media) support https://drafts.csswg.org/css-page/\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as PageMaster from \"./page-master\";\nimport * as Sizing from \"./sizing\";\nimport * as Vtree from \"./vtree\";\n\n/**\n * Resolve page progression direction from writing-mode and direction.\n */\nexport function resolvePageProgression(\n  style: CssCascade.ElementStyle,\n): Constants.PageProgression {\n  const writingMode = (style[\"writing-mode\"] as CssCascade.CascadeValue)?.value;\n  const direction = (style[\"direction\"] as CssCascade.CascadeValue)?.value;\n  if (\n    writingMode === Css.ident.vertical_lr ||\n    (writingMode !== Css.ident.vertical_rl && direction !== Css.ident.rtl)\n  ) {\n    return Constants.PageProgression.LTR;\n  } else {\n    return Constants.PageProgression.RTL;\n  }\n}\nexport type PageSize = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n};\n\n/**\n * Named page sizes.\n */\nexport const pageSizes: { [key: string]: PageSize } = {\n  a10: { width: new Css.Numeric(26, \"mm\"), height: new Css.Numeric(37, \"mm\") },\n  a9: { width: new Css.Numeric(37, \"mm\"), height: new Css.Numeric(52, \"mm\") },\n  a8: { width: new Css.Numeric(52, \"mm\"), height: new Css.Numeric(74, \"mm\") },\n  a7: { width: new Css.Numeric(74, \"mm\"), height: new Css.Numeric(105, \"mm\") },\n  a6: { width: new Css.Numeric(105, \"mm\"), height: new Css.Numeric(148, \"mm\") },\n  a5: { width: new Css.Numeric(148, \"mm\"), height: new Css.Numeric(210, \"mm\") },\n  a4: { width: new Css.Numeric(210, \"mm\"), height: new Css.Numeric(297, \"mm\") },\n  a3: { width: new Css.Numeric(297, \"mm\"), height: new Css.Numeric(420, \"mm\") },\n  a2: { width: new Css.Numeric(420, \"mm\"), height: new Css.Numeric(594, \"mm\") },\n  a1: { width: new Css.Numeric(594, \"mm\"), height: new Css.Numeric(841, \"mm\") },\n  a0: {\n    width: new Css.Numeric(841, \"mm\"),\n    height: new Css.Numeric(1189, \"mm\"),\n  },\n  b10: { width: new Css.Numeric(31, \"mm\"), height: new Css.Numeric(44, \"mm\") },\n  b9: { width: new Css.Numeric(44, \"mm\"), height: new Css.Numeric(62, \"mm\") },\n  b8: { width: new Css.Numeric(62, \"mm\"), height: new Css.Numeric(88, \"mm\") },\n  b7: { width: new Css.Numeric(88, \"mm\"), height: new Css.Numeric(125, \"mm\") },\n  b6: { width: new Css.Numeric(125, \"mm\"), height: new Css.Numeric(176, \"mm\") },\n  b5: { width: new Css.Numeric(176, \"mm\"), height: new Css.Numeric(250, \"mm\") },\n  b4: { width: new Css.Numeric(250, \"mm\"), height: new Css.Numeric(353, \"mm\") },\n  b3: { width: new Css.Numeric(353, \"mm\"), height: new Css.Numeric(500, \"mm\") },\n  b2: { width: new Css.Numeric(500, \"mm\"), height: new Css.Numeric(707, \"mm\") },\n  b1: {\n    width: new Css.Numeric(707, \"mm\"),\n    height: new Css.Numeric(1000, \"mm\"),\n  },\n  b0: {\n    width: new Css.Numeric(1000, \"mm\"),\n    height: new Css.Numeric(1414, \"mm\"),\n  },\n  c10: { width: new Css.Numeric(28, \"mm\"), height: new Css.Numeric(40, \"mm\") },\n  c9: { width: new Css.Numeric(40, \"mm\"), height: new Css.Numeric(57, \"mm\") },\n  c8: { width: new Css.Numeric(57, \"mm\"), height: new Css.Numeric(81, \"mm\") },\n  c7: { width: new Css.Numeric(81, \"mm\"), height: new Css.Numeric(114, \"mm\") },\n  c6: { width: new Css.Numeric(114, \"mm\"), height: new Css.Numeric(162, \"mm\") },\n  c5: { width: new Css.Numeric(162, \"mm\"), height: new Css.Numeric(229, \"mm\") },\n  c4: { width: new Css.Numeric(229, \"mm\"), height: new Css.Numeric(324, \"mm\") },\n  c3: { width: new Css.Numeric(324, \"mm\"), height: new Css.Numeric(458, \"mm\") },\n  c2: { width: new Css.Numeric(458, \"mm\"), height: new Css.Numeric(648, \"mm\") },\n  c1: { width: new Css.Numeric(648, \"mm\"), height: new Css.Numeric(917, \"mm\") },\n  c0: {\n    width: new Css.Numeric(917, \"mm\"),\n    height: new Css.Numeric(1297, \"mm\"),\n  },\n  \"jis-b10\": {\n    width: new Css.Numeric(32, \"mm\"),\n    height: new Css.Numeric(45, \"mm\"),\n  },\n  \"jis-b9\": {\n    width: new Css.Numeric(45, \"mm\"),\n    height: new Css.Numeric(64, \"mm\"),\n  },\n  \"jis-b8\": {\n    width: new Css.Numeric(64, \"mm\"),\n    height: new Css.Numeric(91, \"mm\"),\n  },\n  \"jis-b7\": {\n    width: new Css.Numeric(91, \"mm\"),\n    height: new Css.Numeric(128, \"mm\"),\n  },\n  \"jis-b6\": {\n    width: new Css.Numeric(128, \"mm\"),\n    height: new Css.Numeric(182, \"mm\"),\n  },\n  \"jis-b5\": {\n    width: new Css.Numeric(182, \"mm\"),\n    height: new Css.Numeric(257, \"mm\"),\n  },\n  \"jis-b4\": {\n    width: new Css.Numeric(257, \"mm\"),\n    height: new Css.Numeric(364, \"mm\"),\n  },\n  \"jis-b3\": {\n    width: new Css.Numeric(364, \"mm\"),\n    height: new Css.Numeric(515, \"mm\"),\n  },\n  \"jis-b2\": {\n    width: new Css.Numeric(515, \"mm\"),\n    height: new Css.Numeric(728, \"mm\"),\n  },\n  \"jis-b1\": {\n    width: new Css.Numeric(728, \"mm\"),\n    height: new Css.Numeric(1030, \"mm\"),\n  },\n  \"jis-b0\": {\n    width: new Css.Numeric(1030, \"mm\"),\n    height: new Css.Numeric(1456, \"mm\"),\n  },\n  letter: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(11, \"in\"),\n  },\n  legal: {\n    width: new Css.Numeric(8.5, \"in\"),\n    height: new Css.Numeric(14, \"in\"),\n  },\n  ledger: {\n    width: new Css.Numeric(11, \"in\"),\n    height: new Css.Numeric(17, \"in\"),\n  },\n};\n\n/**\n * Default value for line width of printer marks\n */\nexport const defaultPrinterMarkLineWidth: Css.Numeric = new Css.Numeric(\n  0.24,\n  \"pt\",\n);\n\n/**\n * Default value for distance between an edge of the page and printer marks\n */\nexport const defaultPrinterMarkOffset: Css.Numeric = new Css.Numeric(3, \"mm\");\n\n/**\n * Default value for line length of the (shorter) line of a crop mark and the\n * shorter line of a cross mark\n */\nexport const defaultPrinterMarkLineLength: Css.Numeric = new Css.Numeric(\n  10,\n  \"mm\",\n);\n\n/**\n * Default value for bleed offset (= defaultPrinterMarkOffset +\n * defaultPrinterMarkLineLength)\n */\nexport const defaultBleedOffset: Css.Numeric = new Css.Numeric(3 + 10, \"mm\");\n\nexport type PageSizeAndBleed = {\n  width: Css.Numeric;\n  height: Css.Numeric;\n  bleed: Css.Numeric;\n  bleedOffset: Css.Numeric;\n  cropOffset: Css.Numeric;\n};\n\nexport function resolvePageSizeAndBleed(style: {\n  [key: string]: CssCascade.CascadeValue;\n}): PageSizeAndBleed {\n  // default value (fit to viewport, no bleed)\n  const pageSizeAndBleed: PageSizeAndBleed = {\n    width: Css.fullWidth,\n    height: Css.fullHeight,\n    bleed: Css.numericZero,\n    bleedOffset: Css.numericZero,\n    cropOffset: Css.numericZero,\n  };\n  const size: CssCascade.CascadeValue = style[\"size\"];\n\n  if (!size || size.value === Css.ident.auto) {\n    // if size is auto, fit to the viewport (use default value)\n  } else {\n    /** !type {!Css.Val} */\n    const value = size.value;\n    let val1: Css.Val;\n    let val2: Css.Val;\n    if (value.isSpaceList()) {\n      val1 = (value as Css.SpaceList).values[0];\n      val2 = (value as Css.SpaceList).values[1];\n    } else {\n      val1 = value;\n      val2 = null;\n    }\n    if (val1.isNumeric()) {\n      // <length>{1,2}\n      pageSizeAndBleed.width = val1 as Css.Numeric;\n      pageSizeAndBleed.height = (val2 || val1) as Css.Numeric;\n    } else {\n      // <page-size> || [ portrait | landscape ]\n      const s =\n        (val1 as any).name && pageSizes[(val1 as Css.Ident).name.toLowerCase()];\n      if (!s) {\n        // portrait or landscape is specified alone. fallback to fit to the\n        // viewport (use default value)\n      } else if (val2 && val2 === Css.ident.landscape) {\n        // swap\n        pageSizeAndBleed.width = s.height;\n        pageSizeAndBleed.height = s.width;\n      } else {\n        // return {\n        pageSizeAndBleed.width = s.width;\n        pageSizeAndBleed.height = s.height;\n      }\n    }\n  }\n  const marksCV = style[\"marks\"];\n  const bleedCV = style[\"bleed\"];\n  const marks =\n    marksCV && !Css.isDefaultingValue(marksCV.value)\n      ? marksCV.value\n      : Css.ident.none;\n  const bleed =\n    bleedCV && !Css.isDefaultingValue(bleedCV.value)\n      ? bleedCV.value\n      : Css.ident.auto;\n  if (bleed === Css.ident.auto) {\n    // \"('auto' value) Computes to 6pt if marks has crop and to zero\n    // otherwise.\" https://drafts.csswg.org/css-page/#valdef-page-bleed-auto\n    if (marks !== Css.ident.none) {\n      let hasCrop = false;\n      if (marks.isSpaceList()) {\n        hasCrop = (marks as Css.SpaceList).values.some(\n          (v) => v === Css.ident.crop,\n        );\n      } else {\n        hasCrop = marks === Css.ident.crop;\n      }\n      if (hasCrop) {\n        pageSizeAndBleed.bleed = new Css.Numeric(6, \"pt\");\n      }\n    }\n  } else if (bleed.isNumeric()) {\n    pageSizeAndBleed.bleed = bleed as Css.Numeric;\n  }\n\n  // crop-offset (Issue #913)\n  const cropOffsetCV = style[\"crop-offset\"];\n  const cropOffset =\n    cropOffsetCV && !Css.isDefaultingValue(cropOffsetCV.value)\n      ? cropOffsetCV.value\n      : Css.ident.auto;\n  if (cropOffset === Css.ident.auto) {\n    if (marks !== Css.ident.none) {\n      pageSizeAndBleed.bleedOffset = defaultBleedOffset;\n    }\n  } else if (cropOffset.isNumeric()) {\n    pageSizeAndBleed.cropOffset = cropOffset as Css.Numeric;\n  }\n  return pageSizeAndBleed;\n}\n\nexport type EvaluatedPageSizeAndBleed = {\n  pageWidth: number;\n  pageHeight: number;\n  bleed: number;\n  bleedOffset: number;\n  cropOffset: number;\n};\n\n/**\n * Evaluate actual page width, height and bleed from style specified in page\n * context.\n */\nexport function evaluatePageSizeAndBleed(\n  pageSizeAndBleed: PageSizeAndBleed,\n  context: Exprs.Context,\n): EvaluatedPageSizeAndBleed {\n  const evaluated = {} as EvaluatedPageSizeAndBleed;\n  const bleed =\n    Math.max(0, pageSizeAndBleed.bleed.num) *\n    context.queryUnitSize(pageSizeAndBleed.bleed.unit, false);\n  const bleedOffset =\n    !pageSizeAndBleed.cropOffset.num && pageSizeAndBleed.bleedOffset.num\n      ? pageSizeAndBleed.bleedOffset.num *\n        context.queryUnitSize(pageSizeAndBleed.bleedOffset.unit, false)\n      : Math.max(\n          0,\n          pageSizeAndBleed.cropOffset.num *\n            context.queryUnitSize(pageSizeAndBleed.cropOffset.unit, false) -\n            bleed,\n        );\n  const cropOffset = bleed + bleedOffset;\n  const width = pageSizeAndBleed.width;\n  if (width === Css.fullWidth) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageWidth =\n        context.pref.defaultPaperSize.width *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageWidth =\n        (context.pref.spreadView\n          ? Math.floor(context.viewportWidth / 2) - context.pref.pageBorder\n          : context.viewportWidth) -\n        cropOffset * 2;\n    }\n  } else {\n    evaluated.pageWidth = width.num * context.queryUnitSize(width.unit, false);\n  }\n  const height = pageSizeAndBleed.height;\n  if (height === Css.fullHeight) {\n    if (context.pref.defaultPaperSize) {\n      evaluated.pageHeight =\n        context.pref.defaultPaperSize.height *\n        context.queryUnitSize(\"px\", false);\n    } else {\n      evaluated.pageHeight = context.viewportHeight - cropOffset * 2;\n    }\n  } else {\n    evaluated.pageHeight =\n      height.num * context.queryUnitSize(height.unit, false);\n  }\n  evaluated.bleed = bleed;\n  evaluated.bleedOffset = bleedOffset;\n  evaluated.cropOffset = cropOffset;\n  return evaluated;\n}\n\n/**\n * Create an 'svg' element for a printer mark.\n */\nexport function createPrinterMarkSvg(\n  doc: Document,\n  width: number,\n  height: number,\n): Element {\n  const mark = doc.createElementNS(Base.NS.SVG, \"svg\");\n  mark.setAttribute(\"width\", width);\n  mark.setAttribute(\"height\", height);\n  mark.style.position = \"absolute\";\n  return mark;\n}\n\n/**\n * Create an SVG element for a printer mark line.\n * @param elementType Specifies which type of element to create. Default value\n *     is \"polyline\".\n */\nexport function createPrinterMarkElement(\n  doc: Document,\n  lineWidth: number,\n  elementType?: string,\n): Element {\n  elementType = elementType || \"polyline\";\n  const line = doc.createElementNS(Base.NS.SVG, elementType);\n  line.setAttribute(\"stroke\", \"#010101\");\n  line.setAttribute(\"stroke-width\", lineWidth);\n  line.setAttribute(\"fill\", \"none\");\n  return line;\n}\n\n/**\n * Position of a corner mark\n * @enum {string}\n */\nexport enum CornerMarkPosition {\n  TOP_LEFT = \"top left\",\n  TOP_RIGHT = \"top right\",\n  BOTTOM_LEFT = \"bottom left\",\n  BOTTOM_RIGHT = \"bottom right\",\n}\n\n/**\n * Create a corner mark.\n */\nexport function createCornerMark(\n  doc: Document,\n  position: CornerMarkPosition,\n  lineWidth: number,\n  cropMarkLineLength: number,\n  bleed: number,\n  offset: number,\n): Element {\n  let bleedMarkLineLength = cropMarkLineLength;\n\n  // bleed mark line should be longer than bleed + 2mm\n  if (bleedMarkLineLength <= bleed + 2 * Exprs.defaultUnitSizes[\"mm\"]) {\n    bleedMarkLineLength = bleed + cropMarkLineLength / 2;\n  }\n  const maxLineLength = Math.max(cropMarkLineLength, bleedMarkLineLength);\n  const svgWidth = bleed + maxLineLength + lineWidth / 2;\n  const mark = createPrinterMarkSvg(doc, svgWidth, svgWidth);\n  let points1 = [\n    [0, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength],\n    [cropMarkLineLength, bleed + cropMarkLineLength - bleedMarkLineLength],\n  ];\n\n  // reflect with respect to y=x\n  let points2 = points1.map((p) => [p[1], p[0]]);\n  if (\n    position === CornerMarkPosition.TOP_RIGHT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n    points2 = points2.map((p) => [bleed + maxLineLength - p[0], p[1]]);\n  }\n  if (\n    position === CornerMarkPosition.BOTTOM_LEFT ||\n    position === CornerMarkPosition.BOTTOM_RIGHT\n  ) {\n    // reflect with respect to a vertical axis\n    points1 = points1.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n    points2 = points2.map((p) => [p[0], bleed + maxLineLength - p[1]]);\n  }\n  const line1 = createPrinterMarkElement(doc, lineWidth);\n  line1.setAttribute(\"points\", points1.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line1);\n  const line2 = createPrinterMarkElement(doc, lineWidth);\n  line2.setAttribute(\"points\", points2.map((p) => p.join(\",\")).join(\" \"));\n  mark.appendChild(line2);\n  position.split(\" \").forEach((side) => {\n    (mark as any).style[side] = `${offset}px`;\n  });\n  return mark;\n}\n\n/**\n * Position of a cross mark\n * @enum {string}\n */\nexport enum CrossMarkPosition {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n}\n\n/**\n * Create a cross mark.\n */\nexport function createCrossMark(\n  doc: Document,\n  position: CrossMarkPosition,\n  lineWidth: number,\n  lineLength: number,\n  offset: number,\n): Element {\n  const longLineLength = lineLength * 2;\n  let width: number;\n  let height: number;\n  if (\n    position === CrossMarkPosition.TOP ||\n    position === CrossMarkPosition.BOTTOM\n  ) {\n    width = longLineLength;\n    height = lineLength;\n  } else {\n    width = lineLength;\n    height = longLineLength;\n  }\n  const mark = createPrinterMarkSvg(doc, width, height);\n  const horizontalLine = createPrinterMarkElement(doc, lineWidth);\n  horizontalLine.setAttribute(\n    \"points\",\n    `0,${height / 2} ${width},${height / 2}`,\n  );\n  mark.appendChild(horizontalLine);\n  const verticalLine = createPrinterMarkElement(doc, lineWidth);\n  verticalLine.setAttribute(\"points\", `${width / 2},0 ${width / 2},${height}`);\n  mark.appendChild(verticalLine);\n  const circle = createPrinterMarkElement(doc, lineWidth, \"circle\");\n  circle.setAttribute(\"cx\", width / 2);\n  circle.setAttribute(\"cy\", height / 2);\n  circle.setAttribute(\"r\", lineLength / 4);\n  mark.appendChild(circle);\n  let opposite: CrossMarkPosition;\n  switch (position) {\n    case CrossMarkPosition.TOP:\n      opposite = CrossMarkPosition.BOTTOM;\n      break;\n    case CrossMarkPosition.BOTTOM:\n      opposite = CrossMarkPosition.TOP;\n      break;\n    case CrossMarkPosition.LEFT:\n      opposite = CrossMarkPosition.RIGHT;\n      break;\n    case CrossMarkPosition.RIGHT:\n      opposite = CrossMarkPosition.LEFT;\n      break;\n  }\n  Object.keys(CrossMarkPosition).forEach((key) => {\n    const side = CrossMarkPosition[key];\n    if (side === position) {\n      (mark as any).style[side] = `${offset}px`;\n    } else if (side !== opposite) {\n      (mark as any).style[side] = \"0\";\n      (mark as any).style[`margin-${side}`] = \"auto\";\n    }\n  });\n  return mark;\n}\n\n/**\n * Add printer marks to the page.\n */\nexport function addPrinterMarks(\n  cascadedPageStyle: CssCascade.ElementStyle,\n  evaluatedPageSizeAndBleed: EvaluatedPageSizeAndBleed,\n  page: Vtree.Page,\n  context: Exprs.Context,\n): void {\n  let crop = false;\n  let cross = false;\n  const marks = cascadedPageStyle[\"marks\"] as CssCascade.CascadeValue;\n  if (marks) {\n    const value = marks.value;\n    if (value instanceof Css.SpaceList) {\n      value.values.forEach((v) => {\n        if (v === Css.ident.crop) {\n          crop = true;\n        } else if (v === Css.ident.cross) {\n          cross = true;\n        }\n      });\n    } else if (value === Css.ident.crop) {\n      crop = true;\n    } else if (value === Css.ident.cross) {\n      cross = true;\n    }\n  }\n\n  const bleed = evaluatedPageSizeAndBleed.bleed;\n  if (bleed) {\n    const bgcolor = cascadedPageStyle[\n      \"background-color\"\n    ] as CssCascade.CascadeValue;\n    if (bgcolor && bgcolor.value) {\n      page.bleedBox.style.backgroundColor = bgcolor.value.stringValue();\n    }\n  }\n  if (!crop && !cross) {\n    return;\n  }\n  const container = page.container;\n  const doc = container.ownerDocument as Document;\n  Asserts.assert(doc);\n  const lineWidth = Css.toNumber(defaultPrinterMarkLineWidth, context);\n  const printerMarkOffset = Math.max(\n    0,\n    evaluatedPageSizeAndBleed.bleedOffset -\n      Css.toNumber(defaultPrinterMarkLineLength, context),\n  );\n  const lineLength = evaluatedPageSizeAndBleed.bleedOffset - printerMarkOffset;\n\n  // corner marks\n  if (crop) {\n    Object.keys(CornerMarkPosition).forEach((key) => {\n      const position = CornerMarkPosition[key];\n      const mark = createCornerMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        bleed,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n\n  // cross marks\n  if (cross) {\n    Object.keys(CrossMarkPosition).forEach((key) => {\n      const position = CrossMarkPosition[key];\n      const mark = createCrossMark(\n        doc,\n        position,\n        lineWidth,\n        lineLength,\n        printerMarkOffset,\n      );\n      container.appendChild(mark);\n    });\n  }\n}\n\n/**\n * Properties transfered from the PageRuleMaster to the PageRulePartition\n */\nexport const propertiesAppliedToPartition = (() => {\n  const sides = [\n    \"left\",\n    \"right\",\n    \"top\",\n    \"bottom\",\n    \"before\",\n    \"after\",\n    \"start\",\n    \"end\",\n    \"block-start\",\n    \"block-end\",\n    \"inline-start\",\n    \"inline-end\",\n  ];\n  const props = {\n    width: true,\n    height: true,\n    \"block-size\": true,\n    \"inline-size\": true,\n    margin: true,\n    padding: true,\n    border: true,\n    outline: true,\n    \"outline-width\": true,\n    \"outline-style\": true,\n    \"outline-color\": true,\n  };\n  sides.forEach((side) => {\n    props[`margin-${side}`] = true;\n    props[`padding-${side}`] = true;\n    props[`border-${side}-width`] = true;\n    props[`border-${side}-style`] = true;\n    props[`border-${side}-color`] = true;\n  });\n  return props;\n})();\n\n/**\n * Represents position of a margin box along the variable dimension of the page.\n * START and END can be interpreted as 'inline-start' and 'inline-end' in\n * horizontal and vertical writing modes. For example, for top margin boxes\n * (@top-left-corner, @top-left, @top-center, @top-right, @top-right-corner),\n * @top-left corresponds to START, @top-center to CENTER, and @top-right to END.\n * The corner boxes (@top-left-corner and @top-right-corner) have a 'null'\n * position.\n * @enum {string}\n */\nexport enum MarginBoxPositionAlongVariableDimension {\n  START = \"start\",\n  CENTER = \"center\",\n  END = \"end\",\n}\n\nexport type PageMarginBoxInformation = {\n  order: number;\n  isInTopRow: boolean;\n  isInBottomRow: boolean;\n  isInLeftColumn: boolean;\n  isInRightColumn: boolean;\n  positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension;\n};\n\n/**\n * Page-margin boxes.\n * @dict\n */\nexport const pageMarginBoxes: { [key: string]: PageMarginBoxInformation } = {\n  \"top-left-corner\": {\n    order: 1,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"top-left\": {\n    order: 2,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"top-center\": {\n    order: 3,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"top-right\": {\n    order: 4,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"top-right-corner\": {\n    order: 5,\n    isInTopRow: true,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"right-top\": {\n    order: 6,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"right-middle\": {\n    order: 7,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"right-bottom\": {\n    order: 8,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-right-corner\": {\n    order: 9,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: true,\n    positionAlongVariableDimension: null,\n  },\n  \"bottom-right\": {\n    order: 10,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"bottom-center\": {\n    order: 11,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"bottom-left\": {\n    order: 12,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: false,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n  \"bottom-left-corner\": {\n    order: 13,\n    isInTopRow: false,\n    isInBottomRow: true,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: null,\n  },\n  \"left-bottom\": {\n    order: 14,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension: MarginBoxPositionAlongVariableDimension.END,\n  },\n  \"left-middle\": {\n    order: 15,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.CENTER,\n  },\n  \"left-top\": {\n    order: 16,\n    isInTopRow: false,\n    isInBottomRow: false,\n    isInLeftColumn: true,\n    isInRightColumn: false,\n    positionAlongVariableDimension:\n      MarginBoxPositionAlongVariableDimension.START,\n  },\n};\n\n/**\n * Names for page-margin boxes order in the default painting order.\n */\nexport const pageMarginBoxNames: string[] = (() => {\n  const boxes = pageMarginBoxes;\n  return Object.keys(boxes).sort((a, b) => boxes[a].order - boxes[b].order);\n})();\n\n/**\n * Indicates that the page master is generated for `@page` rules.\n */\nexport const pageRuleMasterPseudoName = \"vivliostyle-page-rule-master\";\n\n/**\n * Key for properties in margin contexts.\n * Styles in margin contexts are stored in pageStyle[\"_marginBoxes\"][(margin\n * box's name)].\n */\nexport const marginBoxesKey: string = \"_marginBoxes\";\n\n/**\n * Represent a page master generated for `@page` rules\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRuleMaster extends PageMaster.PageMaster<PageRuleMasterInstance> {\n  private bodyPartitionKey: string;\n  private pageMarginBoxes = {} as {\n    [key: string]: PageMarginBoxPartition;\n  };\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageMaster.RootPageBox,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, pageRuleMasterPseudoName, [], parent, null, 0);\n    const pageSize = resolvePageSizeAndBleed(style as any);\n    const partition = new PageRulePartition(this.scope, this, style, pageSize);\n    this.bodyPartitionKey = partition.key;\n    this.createPageMarginBoxes(style);\n    this.applySpecified(style, pageSize);\n  }\n\n  /**\n   * Create page-margin boxes\n   */\n  createPageMarginBoxes(style: CssCascade.ElementStyle) {\n    const marginBoxesMap = style[marginBoxesKey];\n    if (marginBoxesMap) {\n      pageMarginBoxNames.forEach((name) => {\n        if (marginBoxesMap[name]) {\n          this.pageMarginBoxes[name] = new PageMarginBoxPartition(\n            this.scope,\n            this,\n            name,\n            style,\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle, pageSize: PageSize) {\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.relative,\n      0,\n    );\n    this.specified[\"width\"] = new CssCascade.CascadeValue(pageSize.width, 0);\n    this.specified[\"height\"] = new CssCascade.CascadeValue(pageSize.height, 0);\n    for (const name in style) {\n      if (!propertiesAppliedToPartition[name] && name !== \"background-clip\") {\n        this.specified[name] = style[name];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageRuleMasterInstance {\n    return new PageRuleMasterInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition placed in a PageRuleMaster\n * @param style Cascaded style for `@page` rules\n */\nexport class PageRulePartition extends PageMaster.Partition<PageRulePartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    style: CssCascade.ElementStyle,\n    public readonly pageSize: PageSize,\n  ) {\n    super(scope, null, null, [], parent);\n    this.specified[\"z-index\"] = new CssCascade.CascadeValue(new Css.Int(0), 0);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageBox\n   */\n  private applySpecified(style: CssCascade.ElementStyle) {\n    this.specified[\"flow-from\"] = new CssCascade.CascadeValue(\n      Css.getName(\"body\"),\n      0,\n    );\n\n    // Use absolute positioning so that this partition's margins don't collapse\n    // with its parent's margins\n    this.specified[\"position\"] = new CssCascade.CascadeValue(\n      Css.ident.absolute,\n      0,\n    );\n    this.specified[\"overflow\"] = new CssCascade.CascadeValue(\n      Css.ident.visible,\n      0,\n    );\n    for (const prop in propertiesAppliedToPartition) {\n      if (propertiesAppliedToPartition.hasOwnProperty(prop)) {\n        this.specified[prop] = style[prop];\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageRulePartitionInstance(parentInstance, this);\n  }\n}\n\n/**\n * Represent a partition for a page-margin box\n */\nexport class PageMarginBoxPartition extends PageMaster.Partition<PageMarginBoxPartitionInstance> {\n  constructor(\n    scope: Exprs.LexicalScope,\n    parent: PageRuleMaster,\n    public readonly marginBoxName: string,\n    style: CssCascade.ElementStyle,\n  ) {\n    super(scope, null, null, [], parent);\n    this.applySpecified(style);\n  }\n\n  /**\n   * Transfer cascaded style for `@page` rules to 'specified' style of this\n   * PageMarginBox\n   */\n  applySpecified(style: CssCascade.ElementStyle) {\n    const ownStyle = style[marginBoxesKey][\n      this.marginBoxName\n    ] as CssCascade.ElementStyle;\n\n    // Inherit properties in the page context to the page-margin context\n    for (const prop in style) {\n      const val = style[prop] as CssCascade.CascadeValue;\n      const ownVal = ownStyle[prop] as CssCascade.CascadeValue;\n      if (\n        CssCascade.inheritedProps[prop] ||\n        (ownVal && ownVal.value === Css.ident.inherit)\n      ) {\n        this.specified[prop] = val;\n      }\n    }\n    for (const prop in ownStyle) {\n      if (Object.prototype.hasOwnProperty.call(ownStyle, prop)) {\n        const val = ownStyle[prop] as CssCascade.CascadeValue;\n        if (\n          val &&\n          val.value !== Css.empty &&\n          val.value !== Css.ident.inherit &&\n          val.value !== Css.ident.unset &&\n          val.value !== Css.ident.revert\n        ) {\n          this.specified[prop] = val;\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  createInstance(parentInstance): PageMaster.PageBoxInstance {\n    return new PageMarginBoxPartitionInstance(parentInstance, this);\n  }\n}\n\n//---------------------------- Instance --------------------------------\nexport type PageAreaDimension = {\n  borderBoxWidth: Exprs.Val;\n  borderBoxHeight: Exprs.Val;\n  marginTop: Exprs.Val;\n  marginBottom: Exprs.Val;\n  marginLeft: Exprs.Val;\n  marginRight: Exprs.Val;\n};\n\nexport class PageRuleMasterInstance extends PageMaster.PageMasterInstance<PageRuleMaster> {\n  pageAreaDimension: PageAreaDimension | null = null;\n  pageMarginBoxInstances: {\n    [key: string]: PageMarginBoxPartitionInstance;\n  } = {};\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRuleMaster: PageRuleMaster,\n  ) {\n    super(parentInstance, pageRuleMaster);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        switch (name) {\n          case \"writing-mode\":\n          case \"direction\":\n            style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const style = this.style;\n    style[\"left\"] = Css.numericZero;\n    style[\"margin-left\"] = Css.numericZero;\n    style[\"border-left-width\"] = Css.numericZero;\n    style[\"padding-left\"] = Css.numericZero;\n    style[\"padding-right\"] = Css.numericZero;\n    style[\"border-right-width\"] = Css.numericZero;\n    style[\"margin-right\"] = Css.numericZero;\n    style[\"right\"] = Css.numericZero;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const style = this.style;\n\n    // Shift 1px to workaround Chrome printing bug\n    // style[\"top\"] = new Css.Numeric(-1, \"px\");\n    style[\"top\"] = Css.numericZero;\n    style[\"margin-top\"] = Css.numericZero;\n    style[\"border-top-width\"] = Css.numericZero;\n    style[\"padding-top\"] = Css.numericZero;\n    style[\"padding-bottom\"] = Css.numericZero;\n    style[\"border-bottom-width\"] = Css.numericZero;\n    style[\"margin-bottom\"] = Css.numericZero;\n    style[\"bottom\"] = Css.numericZero;\n  }\n\n  setPageAreaDimension(dim: PageAreaDimension) {\n    this.pageAreaDimension = dim;\n    const style = this.style;\n    style[\"width\"] = new Css.Expr(dim.borderBoxWidth);\n    style[\"height\"] = new Css.Expr(dim.borderBoxHeight);\n    style[\"padding-left\"] = new Css.Expr(dim.marginLeft);\n    style[\"padding-right\"] = new Css.Expr(dim.marginRight);\n    style[\"padding-top\"] = new Css.Expr(dim.marginTop);\n    style[\"padding-bottom\"] = new Css.Expr(dim.marginBottom);\n  }\n\n  /**\n   * @override\n   */\n  adjustPageLayout(\n    context: Exprs.Context,\n    page: Vtree.Page,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const marginBoxContainers = page.marginBoxes;\n    const horizontalDimensions = {\n      start: this.pageAreaDimension.marginLeft,\n      end: this.pageAreaDimension.marginRight,\n      extent: this.pageAreaDimension.borderBoxWidth,\n    };\n    const verticalDimensions = {\n      start: this.pageAreaDimension.marginTop,\n      end: this.pageAreaDimension.marginBottom,\n      extent: this.pageAreaDimension.borderBoxHeight,\n    };\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.top,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.bottom,\n      true,\n      horizontalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.left,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n    this.sizeMarginBoxesAlongVariableDimension(\n      marginBoxContainers.right,\n      false,\n      verticalDimensions,\n      context,\n      clientLayout,\n    );\n  }\n\n  /**\n   * Determine and set margin boxes' sizes along variable dimension using an\n   * algorithm specified in CSS Paged Media spec.\n   * @param marginBoxContainers Containers corresponding to the target margin\n   *     boxes in one page edge (top, bottom, left, right)\n   * @param isHorizontal Indicates if the target margin boxes are on the\n   *     horizontal edge (top or bottom) or not (left or right).\n   * @param dimensions Page dimensions. start: margin-left or margin-top. end:\n   *     margin-right or margin-bottom. extent: border-box width or height of\n   *     the page area (= available width or height for the target margin boxes)\n   */\n  private sizeMarginBoxesAlongVariableDimension(\n    marginBoxContainers: { [key: string]: Vtree.Container },\n    isHorizontal: boolean,\n    dimensions: { start: Exprs.Val; end: Exprs.Val; extent: Exprs.Val },\n    context: Exprs.Context,\n    clientLayout: Vtree.ClientLayout,\n  ) {\n    const START = MarginBoxPositionAlongVariableDimension.START;\n    const CENTER = MarginBoxPositionAlongVariableDimension.CENTER;\n    const END = MarginBoxPositionAlongVariableDimension.END;\n\n    // prepare parameters\n    const scope = this.pageBox.scope;\n    const containers: {\n      [key in MarginBoxPositionAlongVariableDimension]?: Vtree.Container;\n    } = {};\n    const boxInstances: {\n      [key in MarginBoxPositionAlongVariableDimension]?: PageMarginBoxPartitionInstance;\n    } = {};\n    const boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    } = {};\n    for (const name in marginBoxContainers) {\n      const boxInfo = pageMarginBoxes[name];\n      if (boxInfo) {\n        const container = marginBoxContainers[name];\n        const boxInstance = this.pageMarginBoxInstances[name];\n        const boxParam = new SingleBoxMarginBoxSizingParam(\n          container,\n          (boxInstance as any).style,\n          isHorizontal,\n          scope,\n          clientLayout,\n        );\n        containers[boxInfo.positionAlongVariableDimension] = container;\n        boxInstances[boxInfo.positionAlongVariableDimension] = boxInstance;\n        boxParams[boxInfo.positionAlongVariableDimension] = boxParam;\n      }\n    }\n\n    // determine sizes\n    const evaluatedDim = {\n      start: dimensions.start.evaluate(context) as number,\n      end: dimensions.end.evaluate(context) as number,\n      extent: dimensions.extent.evaluate(context) as number,\n    };\n    let sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n      boxParams,\n      evaluatedDim.extent,\n    );\n    let needRecalculate: boolean = false;\n\n    // Check max-width/max-height\n    const maxOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const maxSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"max-width\" : \"max-height\"],\n        dimensions.extent,\n      );\n      if (maxSize) {\n        const evaluatedMaxSize = maxSize.evaluate(context) as number;\n        if (sizes[name] > evaluatedMaxSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMaxSize,\n          ));\n          maxOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      needRecalculate = false;\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = maxOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // Check min-width/min-height\n    const minOuterSizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    Object.keys(containers).forEach((n) => {\n      const name = n as MarginBoxPositionAlongVariableDimension;\n      const minSize = PageMaster.toExprAuto(\n        scope,\n        boxInstances[name].style[isHorizontal ? \"min-width\" : \"min-height\"],\n        dimensions.extent,\n      );\n      if (minSize) {\n        const evaluatedMinSize = minSize.evaluate(context) as number;\n        if (sizes[name] < evaluatedMinSize) {\n          const p = (boxParams[name] = new FixedSizeMarginBoxSizingParam(\n            containers[name],\n            boxInstances[name].style,\n            isHorizontal,\n            scope,\n            clientLayout,\n            evaluatedMinSize,\n          ));\n          minOuterSizes[name] = p.getOuterSize();\n          needRecalculate = true;\n        }\n      }\n    });\n    if (needRecalculate) {\n      sizes = this.getSizesOfMarginBoxesAlongVariableDimension(\n        boxParams,\n        evaluatedDim.extent,\n      );\n      [START, CENTER, END].forEach((name) => {\n        sizes[name] = minOuterSizes[name] || sizes[name];\n      });\n    }\n\n    // set sizes\n    const endEdge = evaluatedDim.start + evaluatedDim.extent;\n    const startEndSum =\n      evaluatedDim.start + (evaluatedDim.start + evaluatedDim.extent);\n    [START, CENTER, END].forEach((name) => {\n      const outerSize = sizes[name];\n      if (outerSize) {\n        const container = containers[name];\n        let offset = 0;\n        switch (name) {\n          case START:\n            offset = isHorizontal ? container.left : container.top;\n            break;\n          case CENTER:\n            offset = (startEndSum - outerSize) / 2;\n            break;\n          case END:\n            offset = endEdge - outerSize;\n            break;\n        }\n        if (isHorizontal) {\n          container.setHorizontalPosition(\n            offset,\n            outerSize - container.getInsetLeft() - container.getInsetRight(),\n          );\n        } else {\n          container.setVerticalPosition(\n            offset,\n            outerSize - container.getInsetTop() - container.getInsetBottom(),\n          );\n        }\n      }\n    });\n  }\n\n  private getSizesOfMarginBoxesAlongVariableDimension(\n    boxParams: {\n      [key in MarginBoxPositionAlongVariableDimension]?: MarginBoxSizingParam;\n    },\n    availableSize: number,\n  ): { [key in MarginBoxPositionAlongVariableDimension]?: number } {\n    const startBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.START];\n    const centerBoxParam =\n      boxParams[MarginBoxPositionAlongVariableDimension.CENTER];\n    const endBoxParam = boxParams[MarginBoxPositionAlongVariableDimension.END];\n    const sizes: {\n      [key in MarginBoxPositionAlongVariableDimension]?: number;\n    } = {};\n    if (!centerBoxParam) {\n      const startEndSizes = this.distributeAutoMarginBoxSizes(\n        startBoxParam,\n        endBoxParam,\n        availableSize,\n      );\n      if (startEndSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] =\n          startEndSizes.xSize;\n      }\n      if (startEndSizes.ySize) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] =\n          startEndSizes.ySize;\n      }\n    } else {\n      const params = [startBoxParam, endBoxParam].filter((p) => p);\n      const startEndBoxParam = params.length\n        ? new MultipleBoxesMarginBoxSizingParam(params)\n        : null;\n      const centerSizes = this.distributeAutoMarginBoxSizes(\n        centerBoxParam,\n        startEndBoxParam,\n        availableSize,\n      );\n      if (centerSizes.xSize) {\n        sizes[MarginBoxPositionAlongVariableDimension.CENTER] =\n          centerSizes.xSize;\n      }\n      const centerSize = centerSizes.xSize || centerBoxParam.getOuterSize();\n      const startEndAutoSize = (availableSize - centerSize) / 2;\n      if (startBoxParam && startBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.START] = startEndAutoSize;\n      }\n      if (endBoxParam && endBoxParam.hasAutoSize()) {\n        sizes[MarginBoxPositionAlongVariableDimension.END] = startEndAutoSize;\n      }\n    }\n    return sizes;\n  }\n\n  /**\n   * Distribute auto margin sizes among two margin boxes using an algorithm\n   * specified in CSS Paged Media spec.\n   * @param x Parameter for the first margin box. null if the box is not\n   *     generated.\n   * @param y Parameter for the second margin box. null if the box is not\n   *     generated.\n   * @param availableSize Available size for the margin boxes.\n   * @returns Determined sizes for the two boxes. Each value is present only\n   *     when the size of the corresponding box is 'auto'.\n   */\n  private distributeAutoMarginBoxSizes(\n    x: MarginBoxSizingParam,\n    y: MarginBoxSizingParam,\n    availableSize: number,\n  ): { xSize: number | null; ySize: number | null } {\n    const result: { xSize: number | null; ySize: number | null } = {\n      xSize: null,\n      ySize: null,\n    };\n    if (x && y) {\n      if (x.hasAutoSize() && y.hasAutoSize()) {\n        const xOuterMaxContentSize = x.getOuterMaxContentSize();\n        const yOuterMaxContentSize = y.getOuterMaxContentSize();\n        if (xOuterMaxContentSize > 0 && yOuterMaxContentSize > 0) {\n          const maxContentSizeSum = xOuterMaxContentSize + yOuterMaxContentSize;\n          if (maxContentSizeSum < availableSize) {\n            result.xSize =\n              (availableSize * xOuterMaxContentSize) / maxContentSizeSum;\n          } else {\n            const xOuterMinContentSize = x.getOuterMinContentSize();\n            const yOuterMinContentSize = y.getOuterMinContentSize();\n            const minContentSizeSum =\n              xOuterMinContentSize + yOuterMinContentSize;\n            if (minContentSizeSum < availableSize) {\n              result.xSize =\n                xOuterMinContentSize +\n                ((availableSize - minContentSizeSum) *\n                  (xOuterMaxContentSize - xOuterMinContentSize)) /\n                  (maxContentSizeSum - minContentSizeSum);\n            } else if (minContentSizeSum > 0) {\n              result.xSize =\n                (availableSize * xOuterMinContentSize) / minContentSizeSum;\n            }\n          }\n          if (result.xSize > 0) {\n            result.ySize = availableSize - result.xSize;\n          }\n        } else if (xOuterMaxContentSize > 0) {\n          result.xSize = availableSize;\n        } else if (yOuterMaxContentSize > 0) {\n          result.ySize = availableSize;\n        }\n      } else if (x.hasAutoSize()) {\n        result.xSize = Math.max(availableSize - y.getOuterSize(), 0);\n      } else if (y.hasAutoSize()) {\n        result.ySize = Math.max(availableSize - x.getOuterSize(), 0);\n      }\n    } else if (x) {\n      if (x.hasAutoSize()) {\n        result.xSize = availableSize;\n      }\n    } else if (y) {\n      if (y.hasAutoSize()) {\n        result.ySize = availableSize;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n\n    // Add an attribute to the element so that it can be refered from external\n    // style sheets.\n    container.element.setAttribute(\"data-vivliostyle-page-box\", true);\n  }\n}\n\n/**\n * Interface used for parameters passed to distributeAutoMarginBoxSizes method.\n */\ninterface MarginBoxSizingParam {\n  hasAutoSize(): boolean;\n\n  getOuterMaxContentSize(): number;\n\n  getOuterMinContentSize(): number;\n\n  getOuterSize(): number;\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n */\nclass SingleBoxMarginBoxSizingParam implements MarginBoxSizingParam {\n  private hasAutoSize_: boolean;\n  private size: { [key in Sizing.Size]: number } | null = null;\n\n  constructor(\n    protected readonly container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    protected readonly isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    private readonly clientLayout: Vtree.ClientLayout,\n  ) {\n    this.hasAutoSize_ = !PageMaster.toExprAuto(\n      scope,\n      style[isHorizontal ? \"width\" : \"height\"],\n      new Exprs.Numeric(scope, 0, \"px\"),\n    );\n  }\n\n  /**\n   *  @override\n   */\n  hasAutoSize(): boolean {\n    return this.hasAutoSize_;\n  }\n\n  private getSize(): { [key in Sizing.Size]: number } {\n    if (!this.size) {\n      const sizes = this.isHorizontal\n        ? [Sizing.Size.MAX_CONTENT_WIDTH, Sizing.Size.MIN_CONTENT_WIDTH]\n        : [Sizing.Size.MAX_CONTENT_HEIGHT, Sizing.Size.MIN_CONTENT_HEIGHT];\n      this.size = Sizing.getSize(\n        this.clientLayout,\n        this.container.element,\n        sizes,\n      );\n    }\n    return this.size;\n  }\n\n  /**\n   * @override\n   */\n  getOuterMaxContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MAX_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MAX_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterMinContentSize(): number {\n    const size = this.getSize();\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        size[Sizing.Size.MIN_CONTENT_WIDTH] +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        size[Sizing.Size.MIN_CONTENT_HEIGHT] +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.container.width +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.container.height +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\n/**\n * MarginBoxSizingParam with which multiple margin boxes are treated as one\n * margin box. Each method querying a dimension returns the maximum of the boxes\n * multiplied by the number of the boxes.\n * @param params MarginBoxSizingParam's of the target margin boxes.\n */\nclass MultipleBoxesMarginBoxSizingParam implements MarginBoxSizingParam {\n  constructor(private readonly params: MarginBoxSizingParam[]) {}\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return this.params.some((p) => p.hasAutoSize());\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMaxContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    const sizes = this.params.map((p) => p.getOuterMinContentSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterSize(): number {\n    const sizes = this.params.map((p) => p.getOuterSize());\n    return Math.max.apply(null, sizes) * sizes.length;\n  }\n}\n\n/**\n * MarginBoxSizingParam for a single page-margin box with a fixed size along the\n * variable dimension.\n * @param container A container corresponding to the target margin box.\n * @param style Styles specified to the target margin box.\n * @param size The fixed size (width or height) along the variable dimension.\n */\nclass FixedSizeMarginBoxSizingParam extends SingleBoxMarginBoxSizingParam {\n  private fixedSize: number;\n\n  constructor(\n    container: Vtree.Container,\n    style: { [key: string]: Css.Val },\n    isHorizontal: boolean,\n    scope: Exprs.LexicalScope,\n    clientLayout: Vtree.ClientLayout,\n    size: number,\n  ) {\n    super(container, style, isHorizontal, scope, clientLayout);\n    this.fixedSize = size;\n  }\n\n  /**\n   * @override\n   */\n  hasAutoSize(): boolean {\n    return false;\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMaxContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   *  @override\n   */\n  getOuterMinContentSize(): number {\n    return this.getOuterSize();\n  }\n\n  /**\n   * @override\n   */\n  getOuterSize(): number {\n    if (this.isHorizontal) {\n      return (\n        this.container.getInsetLeft() +\n        this.fixedSize +\n        this.container.getInsetRight()\n      );\n    } else {\n      return (\n        this.container.getInsetTop() +\n        this.fixedSize +\n        this.container.getInsetBottom()\n      );\n    }\n  }\n}\n\nexport class PageRulePartitionInstance extends PageMaster.PartitionInstance<PageRulePartition> {\n  borderBoxWidth: Exprs.Val = null;\n  borderBoxHeight: Exprs.Val = null;\n  marginTop: Exprs.Val = null;\n  marginRight: Exprs.Val = null;\n  marginBottom: Exprs.Val = null;\n  marginLeft: Exprs.Val = null;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageRulePartition: PageRulePartition,\n  ) {\n    super(parentInstance, pageRulePartition);\n  }\n\n  /**\n   * @override\n   */\n  applyCascadeAndInit(\n    cascade: CssCascade.CascadeInstance,\n    docElementStyle: CssCascade.ElementStyle,\n  ): void {\n    const style = this.cascaded;\n    for (const name in docElementStyle) {\n      if (Object.prototype.hasOwnProperty.call(docElementStyle, name)) {\n        if (name.match(/^column.*$/) || name.match(/^background-/)) {\n          style[name] = docElementStyle[name];\n        }\n      }\n    }\n    super.applyCascadeAndInit(cascade, docElementStyle);\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.setPageAreaDimension({\n      borderBoxWidth: this.borderBoxWidth,\n      borderBoxHeight: this.borderBoxHeight,\n      marginTop: this.marginTop,\n      marginRight: this.marginRight,\n      marginBottom: this.marginBottom,\n      marginLeft: this.marginLeft,\n    });\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"left\",\n      end: \"right\",\n      extent: \"width\",\n    });\n    this.borderBoxWidth = dim.borderBoxExtent;\n    this.marginLeft = dim.marginStart;\n    this.marginRight = dim.marginEnd;\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const dim = this.resolvePageBoxDimensions({\n      start: \"top\",\n      end: \"bottom\",\n      extent: \"height\",\n    });\n    this.borderBoxHeight = dim.borderBoxExtent;\n    this.marginTop = dim.marginStart;\n    this.marginBottom = dim.marginEnd;\n  }\n\n  /**\n   * Calculate page dimensions as specified in CSS Paged Media\n   * (http://dev.w3.org/csswg/css-page/#page-model) Page border box extent and\n   * margins. Since the containing block can be resized in the over-constrained\n   * case, the sum of these values is not necessarily same to the original page\n   * dimension specified in the page at-rules.\n   */\n  private resolvePageBoxDimensions(names: {\n    start: string;\n    end: string;\n    extent: string;\n  }): {\n    borderBoxExtent: Exprs.Val;\n    marginStart: Exprs.Val;\n    marginEnd: Exprs.Val;\n  } {\n    const style = this.style;\n    const pageSize = this.pageBox.pageSize;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const pageExtent = pageSize[extentName].toExpr(scope, null);\n    let extent = PageMaster.toExprAuto(scope, style[extentName], pageExtent);\n    let marginStart = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${startSide}`],\n      pageExtent,\n    );\n    let marginEnd = PageMaster.toExprAuto(\n      scope,\n      style[`margin-${endSide}`],\n      pageExtent,\n    );\n    const paddingStart = PageMaster.toExprZero(\n      scope,\n      style[`padding-${startSide}`],\n      pageExtent,\n    );\n    const paddingEnd = PageMaster.toExprZero(\n      scope,\n      style[`padding-${endSide}`],\n      pageExtent,\n    );\n    const borderStartWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${startSide}-width`],\n      style[`border-${startSide}-style`],\n      pageExtent,\n    );\n    const borderEndWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${endSide}-width`],\n      style[`border-${endSide}-style`],\n      pageExtent,\n    );\n    let remains = Exprs.sub(\n      scope,\n      pageExtent,\n      Exprs.add(\n        scope,\n        Exprs.add(scope, borderStartWidth, paddingStart),\n        Exprs.add(scope, borderEndWidth, paddingEnd),\n      ),\n    );\n\n    // The dimensions are calculated as for a non-replaced block element in\n    // normal flow (http://www.w3.org/TR/CSS21/visudet.html#blockwidth)\n    if (!extent) {\n      if (!marginStart) {\n        marginStart = scope.zero;\n      }\n      if (!marginEnd) {\n        marginEnd = scope.zero;\n      }\n      extent = Exprs.sub(\n        scope,\n        remains,\n        Exprs.add(scope, marginStart, marginEnd),\n      );\n    } else {\n      remains = Exprs.sub(scope, remains, extent);\n      if (!marginStart && !marginEnd) {\n        marginStart = Exprs.mul(scope, remains, new Exprs.Const(scope, 0.5));\n        marginEnd = marginStart;\n      } else if (marginStart) {\n        marginEnd = Exprs.sub(scope, remains, marginStart);\n      } else {\n        marginStart = Exprs.sub(scope, remains, marginEnd);\n      }\n    }\n\n    // TODO over-constrained case\n    // \"if the values are over-constrained, instead of ignoring any margins, the\n    // containing block is resized to coincide with the margin edges of the page\n    // box.\" (CSS Paged Media http://dev.w3.org/csswg/css-page/#page-model)\n    style[startSide] = new Css.Expr(marginStart);\n    style[endSide] = new Css.Expr(marginEnd);\n    style[`margin-${startSide}`] = Css.numericZero;\n    style[`margin-${endSide}`] = Css.numericZero;\n    style[`padding-${startSide}`] = new Css.Expr(paddingStart);\n    style[`padding-${endSide}`] = new Css.Expr(paddingEnd);\n    style[`border-${startSide}-width`] = new Css.Expr(borderStartWidth);\n    style[`border-${endSide}-width`] = new Css.Expr(borderEndWidth);\n    style[extentName] = new Css.Expr(extent);\n    style[`max-${extentName}`] = new Css.Expr(extent);\n    return {\n      borderBoxExtent: Exprs.sub(\n        scope,\n        pageExtent,\n        Exprs.add(scope, marginStart, marginEnd),\n      ),\n      marginStart,\n      marginEnd,\n    };\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n    page.pageAreaElement = container.element as HTMLElement;\n\n    // Set page area size for vw/vh unit calculation\n    context.pageAreaWidth = parseFloat(page.pageAreaElement.style.width);\n    context.pageAreaHeight = parseFloat(page.pageAreaElement.style.height);\n  }\n}\n\nexport class PageMarginBoxPartitionInstance extends PageMaster.PartitionInstance<PageMarginBoxPartition> {\n  boxInfo: PageMarginBoxInformation;\n  suppressEmptyBoxGeneration: boolean = true;\n\n  constructor(\n    parentInstance: PageMaster.PageBoxInstance,\n    pageMarginBoxPartition: PageMarginBoxPartition,\n  ) {\n    super(parentInstance, pageMarginBoxPartition);\n    const name = pageMarginBoxPartition.marginBoxName;\n    this.boxInfo = pageMarginBoxes[name];\n    const pageRuleMasterInstance = parentInstance as PageRuleMasterInstance;\n    pageRuleMasterInstance.pageMarginBoxInstances[name] = this;\n  }\n\n  /**\n   * @override\n   */\n  prepareContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    docFaces: Font.DocumentFaces,\n    clientLayout: Vtree.ClientLayout,\n  ): void {\n    this.applyVerticalAlign(context, container.element);\n    super.prepareContainer(context, container, page, docFaces, clientLayout);\n  }\n\n  private applyVerticalAlign(context: Exprs.Context, element: Element) {\n    Base.setCSSProperty(element, \"display\", \"flex\");\n    const verticalAlign: Css.Val = this.getProp(context, \"vertical-align\");\n    let flexAlign: string | null = null;\n    if (verticalAlign === Css.getName(\"middle\")) {\n      flexAlign = \"center\";\n    } else if (verticalAlign === Css.getName(\"top\")) {\n      flexAlign = \"flex-start\";\n    } else if (verticalAlign === Css.getName(\"bottom\")) {\n      flexAlign = \"flex-end\";\n    }\n    if (flexAlign) {\n      Base.setCSSProperty(\n        element,\n        \"flex-flow\",\n        this.vertical ? \"row\" : \"column\",\n      );\n      Base.setCSSProperty(element, \"justify-content\", flexAlign);\n      if (this.vertical) {\n        let align = \"center\";\n        if (this.boxInfo.isInTopRow || this.boxInfo.isInBottomRow) {\n          if (\n            this.boxInfo.isInLeftColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.END\n          ) {\n            align = \"start\";\n          } else if (\n            this.boxInfo.isInRightColumn ||\n            this.boxInfo.positionAlongVariableDimension ===\n              MarginBoxPositionAlongVariableDimension.START\n          ) {\n            align = \"end\";\n          }\n        }\n        Base.setCSSProperty(element, \"align-items\", align);\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the variable dimension of the\n   * page. For CENTER and END margin boxes, the position is calculated only if\n   * the dimension (width or height) is non-auto, so that it can be resolved at\n   * this point. If the dimension is auto, the calculation is deffered.\n   */\n  private positionAlongVariableDimension(\n    names: { start: string; end: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const startSide = names.start;\n    const endSide = names.end;\n    const extentName = names.extent;\n    const isHorizontal = startSide === \"left\";\n    const availableExtent = isHorizontal\n      ? dim.borderBoxWidth\n      : dim.borderBoxHeight;\n    const extent = PageMaster.toExprAuto(\n      scope,\n      style[extentName],\n      availableExtent,\n    );\n    const startOffset = isHorizontal ? dim.marginLeft : dim.marginTop;\n    if (\n      this.boxInfo.positionAlongVariableDimension ===\n      MarginBoxPositionAlongVariableDimension.START\n    ) {\n      style[startSide] = new Css.Expr(startOffset);\n    } else if (extent) {\n      const marginStart = PageMaster.toExprZero(\n        scope,\n        style[`margin-${startSide}`],\n        availableExtent,\n      );\n      const marginEnd = PageMaster.toExprZero(\n        scope,\n        style[`margin-${endSide}`],\n        availableExtent,\n      );\n      const paddingStart = PageMaster.toExprZero(\n        scope,\n        style[`padding-${startSide}`],\n        availableExtent,\n      );\n      const paddingEnd = PageMaster.toExprZero(\n        scope,\n        style[`padding-${endSide}`],\n        availableExtent,\n      );\n      const borderStartWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${startSide}-width`],\n        style[`border-${startSide}-style`],\n        availableExtent,\n      );\n      const borderEndWidth = PageMaster.toExprZeroBorder(\n        scope,\n        style[`border-${endSide}-width`],\n        style[`border-${endSide}-style`],\n        availableExtent,\n      );\n      const outerExtent = Exprs.add(\n        scope,\n        extent,\n        Exprs.add(\n          scope,\n          Exprs.add(scope, paddingStart, paddingEnd),\n          Exprs.add(\n            scope,\n            Exprs.add(scope, borderStartWidth, borderEndWidth),\n            Exprs.add(scope, marginStart, marginEnd),\n          ),\n        ),\n      );\n      switch (this.boxInfo.positionAlongVariableDimension) {\n        case MarginBoxPositionAlongVariableDimension.CENTER:\n          style[startSide] = new Css.Expr(\n            Exprs.add(\n              scope,\n              startOffset,\n              Exprs.div(\n                scope,\n                Exprs.sub(scope, availableExtent, outerExtent),\n                new Exprs.Const(scope, 2),\n              ),\n            ),\n          );\n          break;\n        case MarginBoxPositionAlongVariableDimension.END:\n          style[startSide] = new Css.Expr(\n            Exprs.sub(\n              scope,\n              Exprs.add(scope, startOffset, availableExtent),\n              outerExtent,\n            ),\n          );\n          break;\n      }\n    }\n  }\n\n  /**\n   * Calculate page-margin boxes positions along the fixed dimension of the\n   * page.\n   */\n  private positionAndSizeAlongFixedDimension(\n    names: { inside: string; outside: string; extent: string },\n    dim: PageAreaDimension | null,\n  ): void {\n    const style = this.style;\n    const scope = this.pageBox.scope;\n    const insideName = names.inside;\n    const outsideName = names.outside;\n    const extentName = names.extent;\n    const pageMargin =\n      dim[\n        `margin${outsideName.charAt(0).toUpperCase()}${outsideName.substring(\n          1,\n        )}`\n      ];\n    const marginInside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${insideName}`],\n      pageMargin,\n    );\n    const marginOutside = PageMaster.toExprZeroAuto(\n      scope,\n      style[`margin-${outsideName}`],\n      pageMargin,\n    );\n    const paddingInside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${insideName}`],\n      pageMargin,\n    );\n    const paddingOutside = PageMaster.toExprZero(\n      scope,\n      style[`padding-${outsideName}`],\n      pageMargin,\n    );\n    const borderInsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${insideName}-width`],\n      style[`border-${insideName}-style`],\n      pageMargin,\n    );\n    const borderOutsideWidth = PageMaster.toExprZeroBorder(\n      scope,\n      style[`border-${outsideName}-width`],\n      style[`border-${outsideName}-style`],\n      pageMargin,\n    );\n    const extent = PageMaster.toExprAuto(scope, style[extentName], pageMargin);\n    let result: {\n      extent: Exprs.Result;\n      marginInside: Exprs.Result;\n      marginOutside: Exprs.Result;\n    } = null;\n\n    function getComputedValues(context: Exprs.Context): {\n      extent: Exprs.Result | null;\n      marginInside: Exprs.Result | null;\n      marginOutside: Exprs.Result | null;\n    } {\n      if (result) {\n        return result;\n      }\n      result = {\n        extent: extent ? extent.evaluate(context) : null,\n        marginInside: marginInside ? marginInside.evaluate(context) : null,\n        marginOutside: marginOutside ? marginOutside.evaluate(context) : null,\n      };\n      const pageMarginValue = pageMargin.evaluate(context);\n      let borderAndPadding = 0;\n      [\n        borderInsideWidth,\n        paddingInside,\n        paddingOutside,\n        borderOutsideWidth,\n      ].forEach((x) => {\n        if (x) {\n          borderAndPadding += x.evaluate(context) as number;\n        }\n      });\n      if (result.marginInside === null || result.marginOutside === null) {\n        const total =\n          borderAndPadding +\n          (result.extent as number) +\n          (result.marginInside as number) +\n          (result.marginOutside as number);\n        if (total > pageMarginValue) {\n          if (result.marginInside === null) {\n            result.marginInside = 0;\n          }\n          if (result.marginOutside === null) {\n            result.marginOutside = 0;\n          }\n        }\n      }\n      if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        // over-constrained\n        result.marginOutside = null;\n      }\n      if (\n        result.extent === null &&\n        result.marginInside !== null &&\n        result.marginOutside !== null\n      ) {\n        result.extent =\n          pageMarginValue -\n          borderAndPadding -\n          (result.marginInside as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        (result.marginInside as number) === null &&\n        (result.marginOutside as number) !== null\n      ) {\n        result.marginInside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginOutside as number);\n      } else if (\n        result.extent !== null &&\n        result.marginInside !== null &&\n        result.marginOutside === null\n      ) {\n        result.marginOutside =\n          pageMarginValue -\n          borderAndPadding -\n          (result.extent as number) -\n          (result.marginInside as number);\n      } else if (result.extent === null) {\n        result.marginInside = result.marginOutside = 0;\n        result.extent = pageMarginValue - borderAndPadding;\n      } else {\n        result.marginInside = result.marginOutside =\n          (pageMarginValue - borderAndPadding - (result.extent as number)) / 2;\n      }\n      return result;\n    }\n    style[extentName] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).extent;\n          return value === null ? 0 : value;\n        },\n        extentName,\n      ),\n    );\n    style[`margin-${insideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginInside;\n          return value === null ? 0 : value;\n        },\n        `margin-${insideName}`,\n      ),\n    );\n    style[`margin-${outsideName}`] = new Css.Expr(\n      new Exprs.Native(\n        scope,\n        function () {\n          const value = getComputedValues(this).marginOutside;\n          return value === null ? 0 : value;\n        },\n        `margin-${outsideName}`,\n      ),\n    );\n    if (insideName === \"left\") {\n      style[\"left\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginLeft, dim.borderBoxWidth),\n      );\n    } else if (insideName === \"top\") {\n      style[\"top\"] = new Css.Expr(\n        Exprs.add(scope, dim.marginTop, dim.borderBoxHeight),\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initHorizontal(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInLeftColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"right\", outside: \"left\", extent: \"width\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInRightColumn) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"left\", outside: \"right\", extent: \"width\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"left\", end: \"right\", extent: \"width\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  initVertical(): void {\n    const pageRuleMasterInstance = this\n      .parentInstance as PageRuleMasterInstance;\n    const dim = pageRuleMasterInstance.pageAreaDimension;\n    if (this.boxInfo.isInTopRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"bottom\", outside: \"top\", extent: \"height\" },\n        dim,\n      );\n    } else if (this.boxInfo.isInBottomRow) {\n      this.positionAndSizeAlongFixedDimension(\n        { inside: \"top\", outside: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    } else {\n      this.positionAlongVariableDimension(\n        { start: \"top\", end: \"bottom\", extent: \"height\" },\n        dim,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  finishContainer(\n    context: Exprs.Context,\n    container: Vtree.Container,\n    page: Vtree.Page,\n    column: Vtree.Container,\n    columnCount: number,\n    clientLayout: Vtree.ClientLayout,\n    docFaces: Font.DocumentFaces,\n  ): void {\n    super.finishContainer(\n      context,\n      container,\n      page,\n      column,\n      columnCount,\n      clientLayout,\n      docFaces,\n    );\n\n    // finishContainer is called only when the margin box is generated.\n    // In this case, store the generated container for the margin box in the\n    // page object. (except when it is a corner margin box, because size of a\n    // corner margin box does not need to be adjusted after the layout)\n    const marginBoxes = page.marginBoxes;\n    const name = (this.pageBox as any).marginBoxName;\n    const boxInfo = this.boxInfo;\n    if (!boxInfo.isInLeftColumn && !boxInfo.isInRightColumn) {\n      if (boxInfo.isInTopRow) {\n        marginBoxes.top[name] = container;\n      } else if (boxInfo.isInBottomRow) {\n        marginBoxes.bottom[name] = container;\n      }\n    } else if (!boxInfo.isInTopRow && !boxInfo.isInBottomRow) {\n      if (boxInfo.isInLeftColumn) {\n        marginBoxes.left[name] = container;\n      } else if (boxInfo.isInRightColumn) {\n        marginBoxes.right[name] = container;\n      }\n    }\n  }\n}\n\n/**\n * Dynamically generate and manage page masters corresponding to page at-rules.\n */\nexport class PageManager {\n  private pageMasterCache: any = {} as {\n    [key: string]: PageMaster.PageMasterInstance;\n  };\n\n  constructor(\n    private readonly cascadeInstance: CssCascade.CascadeInstance,\n    private readonly pageScope: Exprs.LexicalScope,\n    private readonly rootPageBoxInstance: PageMaster.RootPageBoxInstance,\n    private readonly context: Exprs.Context,\n    private readonly docElementStyle: CssCascade.ElementStyle,\n  ) {\n    this.definePageProgression();\n  }\n\n  /**\n   * Determine the page progression and define left/right/recto/verso pages.\n   */\n  private definePageProgression() {\n    // If a page break is forced before the root element, recto/verso pages\n    // are no longer odd/even pages. left/right are reversed too.\n    const scope = this.pageScope;\n    const styleInstance: any /* Ops.StyleInstance */ = this.context;\n    const isVersoFirstPage = styleInstance.isVersoFirstPage;\n    const pageNumber = new Exprs.Named(scope, \"page-number\");\n    const isVersoPage = new Exprs.Eq(\n      scope,\n      new Exprs.Modulo(scope, pageNumber, new Exprs.Const(scope, 2)),\n      isVersoFirstPage ? scope.one : scope.zero,\n    );\n    scope.defineName(\"recto-page\", new Exprs.Not(scope, isVersoPage));\n    scope.defineName(\"verso-page\", isVersoPage);\n    const pageProgression =\n      styleInstance.pageProgression ||\n      resolvePageProgression(this.docElementStyle);\n    if (pageProgression === Constants.PageProgression.LTR) {\n      scope.defineName(\"left-page\", isVersoPage);\n      scope.defineName(\"right-page\", new Exprs.Not(scope, isVersoPage));\n    } else {\n      scope.defineName(\"left-page\", new Exprs.Not(scope, isVersoPage));\n      scope.defineName(\"right-page\", isVersoPage);\n    }\n  }\n\n  /**\n   * Get cascaded page style specified in page context for the current page.\n   */\n  getCascadedPageStyle(pageType: string): CssCascade.ElementStyle {\n    const style = {} as CssCascade.ElementStyle;\n    this.cascadeInstance.pushRule([], pageType, style);\n    this.cascadeInstance.popRule();\n    return style;\n  }\n\n  /**\n   * Return a PageMasterInstance with page rules applied. Return a cached\n   * instance if there already exists one with the same styles.\n   * @param pageMasterInstance The original page master instance.\n   * @param cascadedPageStyle Cascaded page style specified in page context.\n   */\n  getPageRulePageMaster(\n    pageMasterInstance: PageMaster.PageMasterInstance,\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const pageMaster = pageMasterInstance.pageBox as PageMaster.PageMaster;\n\n    // If no properies are specified in @page rules, use the original page\n    // master.\n    if (Object.keys(cascadedPageStyle).length === 0) {\n      pageMaster.resetScope();\n      return pageMasterInstance;\n    }\n    const key = this.makeCacheKey(cascadedPageStyle, pageMaster);\n    let applied = this.pageMasterCache[key];\n    if (!applied) {\n      if (pageMaster.pseudoName === PageMaster.userAgentPageMasterPseudo) {\n        // If the passed page master is a UA page master,\n        // ignore it and generate a new page master from @page rules.\n        applied = this.generatePageRuleMaster(cascadedPageStyle);\n      } else {\n        // Otherwise cascade some properties from @page rules to the page\n        // master.\n        applied = this.generateCascadedPageMaster(\n          cascadedPageStyle,\n          pageMaster,\n        );\n      }\n      this.pageMasterCache[key] = applied;\n    }\n    applied.pageBox.resetScope();\n    return applied;\n  }\n\n  /**\n   * Generate a cache key from the specified styles and the original page master\n   * key.\n   */\n  private makeCacheKey(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): string {\n    const propsStr = this.makeCascadeValueObjectKey(style);\n    return `${pageMaster.key}^${propsStr}`;\n  }\n\n  private makeCascadeValueObjectKey(object: CssCascade.ElementStyle): string {\n    const props = [] as string[];\n    for (const prop in object) {\n      if (Object.prototype.hasOwnProperty.call(object, prop)) {\n        const val = object[prop] as CssCascade.CascadeValue;\n        let str: string;\n        if (val instanceof CssCascade.CascadeValue) {\n          str = `${val.value}`;\n        } else {\n          str = this.makeCascadeValueObjectKey(val);\n        }\n        props.push(prop + str + (val.priority || \"\"));\n      }\n    }\n    return props.sort().join(\"^\");\n  }\n\n  private generatePageRuleMaster(\n    style: CssCascade.ElementStyle,\n  ): PageRuleMasterInstance {\n    const pageMaster = new PageRuleMaster(\n      this.pageScope,\n      this.rootPageBoxInstance.pageBox as PageMaster.RootPageBox,\n      style,\n    );\n    const pageMasterInstance = pageMaster.createInstance(\n      this.rootPageBoxInstance,\n    );\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n\n  /**\n   * Cascade some properties from `@page` rules to a page master.\n   * For now, only 'width' and 'height' resolved from 'size' value are cascaded.\n   * @param style Cascaded style in the page context\n   * @param pageMaster The original page master\n   */\n  private generateCascadedPageMaster(\n    style: CssCascade.ElementStyle,\n    pageMaster: PageMaster.PageMaster,\n  ): PageMaster.PageMasterInstance {\n    const newPageMaster = pageMaster.clone({\n      pseudoName: pageRuleMasterPseudoName,\n    });\n    const pageMasterStyle = newPageMaster.specified;\n    const size = style[\"size\"] as CssCascade.CascadeValue;\n    if (size && !Css.isDefaultingValue(size.value)) {\n      const pageSize = resolvePageSizeAndBleed(style as any);\n      const priority = size.priority;\n      pageMasterStyle[\"width\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"width\"] as CssCascade.CascadeValue,\n        new CssCascade.CascadeValue(pageSize.width, priority),\n      );\n      pageMasterStyle[\"height\"] = CssCascade.cascadeValues(\n        this.context,\n        pageMasterStyle[\"height\"] as CssCascade.CascadeValue,\n        new CssCascade.CascadeValue(pageSize.height, priority),\n      );\n    }\n\n    // Transfer counter properties to the page style so that these specified in\n    // the page master are also effective. Note that these values (if specified)\n    // always override values in page contexts.\n    [\"counter-reset\", \"counter-increment\"].forEach((name) => {\n      if (pageMasterStyle[name]) {\n        style[name] = pageMasterStyle[name];\n      }\n    });\n    const pageMasterInstance = newPageMaster.createInstance(\n      this.rootPageBoxInstance,\n    ) as PageMaster.PageMasterInstance;\n\n    // Do the same initialization as in Ops.StyleInstance.prototype.init\n    pageMasterInstance.applyCascadeAndInit(\n      this.cascadeInstance,\n      this.docElementStyle,\n    );\n    pageMasterInstance.resolveAutoSizing(this.context);\n    return pageMasterInstance;\n  }\n}\n\nexport class CheckPageTypeAction extends CssCascade.ChainedAction {\n  constructor(public readonly pageType: string) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    if (cascadeInstance.currentPageType === this.pageType) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 3;\n  }\n\n  /**\n   * @override\n   */\n  makePrimary(cascade: CssCascade.Cascade): boolean {\n    if (this.chained) {\n      cascade.insertInTable(cascade.pagetypes, this.pageType, this.chained);\n    }\n    return true;\n  }\n}\n\nexport class IsFirstPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const pageNumber = new Exprs.Named(this.scope, \"page-number\");\n    if (pageNumber.evaluate(cascadeInstance.context) === 1) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsBlankPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const blankPage = new Exprs.Named(this.scope, \"blank-page\");\n    if (blankPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\nexport class IsLeftPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const leftPage = new Exprs.Named(this.scope, \"left-page\");\n    if (leftPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRightPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rightPage = new Exprs.Named(this.scope, \"right-page\");\n    if (rightPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsRectoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const rectoPage = new Exprs.Named(this.scope, \"recto-page\");\n    if (rectoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsVersoPageAction extends CssCascade.ChainedAction {\n  constructor(public readonly scope: Exprs.LexicalScope) {\n    super();\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const versoPage = new Exprs.Named(this.scope, \"verso-page\");\n    if (versoPage.evaluate(cascadeInstance.context)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 1;\n  }\n}\n\nexport class IsNthPageAction extends CssCascade.IsNthAction {\n  constructor(\n    public readonly scope: Exprs.LexicalScope,\n    public readonly a: number,\n    public readonly b: number,\n  ) {\n    super(a, b);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    const styleInstance: any /* Ops.StyleInstance */ = cascadeInstance.context;\n    let pageNumber = styleInstance.layoutPositionAtPageStart.page;\n    if (styleInstance.blankPageAtStart) {\n      pageNumber--;\n    }\n    if (pageNumber && this.matchANPlusB(pageNumber)) {\n      this.chained.apply(cascadeInstance);\n    }\n  }\n\n  /**\n   * @override\n   */\n  getPriority(): number {\n    return 2;\n  }\n}\n\n/**\n * Action applying an at-page rule\n */\nexport class ApplyPageRuleAction extends CssCascade.ApplyRuleAction {\n  constructor(style: CssCascade.ElementStyle, specificity: number) {\n    super(style, specificity, null, null, null);\n  }\n\n  /**\n   * @override\n   */\n  apply(cascadeInstance: CssCascade.CascadeInstance): void {\n    mergeInPageRule(\n      cascadeInstance.context,\n      cascadeInstance.currentStyle,\n      this.style,\n      this.specificity,\n      cascadeInstance,\n    );\n  }\n}\n\n/**\n * Merge page styles, including styles specified on page-margin boxes,\n * considering specificity. Intended to be used in place of\n * CssCascade.mergeIn, which is for element styles.\n */\nexport function mergeInPageRule(\n  context: Exprs.Context,\n  target: CssCascade.ElementStyle,\n  style: CssCascade.ElementStyle,\n  specificity: number,\n  cascadeInstance: CssCascade.CascadeInstance,\n): void {\n  CssCascade.mergeIn(context, target, style, specificity, null, null, null);\n  const marginBoxes = style[marginBoxesKey];\n  if (marginBoxes) {\n    const targetMap = CssCascade.getMutableStyleMap(target, marginBoxesKey);\n    for (const boxName in marginBoxes) {\n      if (marginBoxes.hasOwnProperty(boxName)) {\n        let targetBox = targetMap[boxName];\n        if (!targetBox) {\n          targetBox = {} as CssCascade.ElementStyle;\n          targetMap[boxName] = targetBox;\n        }\n        CssCascade.mergeIn(\n          context,\n          targetBox,\n          marginBoxes[boxName],\n          specificity,\n          null,\n          null,\n          null,\n        );\n      }\n    }\n  }\n}\n\n/**\n * ParserHandler for `@page` rules. It handles properties specified with page\n * contexts. It also does basic cascading (which can be done without information\n * other than the page rules themselves) and stores the result in `pageProps`\n * object as a map from page selectors to sets of properties. This result is\n * later used for adding `@page` rules to the real DOM, which are then used by\n * the PDF renderer (Chromium) to determine page sizes.\n */\nexport class PageParserHandler\n  extends CssCascade.CascadeParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  private currentPageSelectors: {\n    selectors: string[] | null;\n    specificity: number;\n  }[] = [];\n  private currentNamedPageSelector: string = \"\";\n  private currentPseudoPageClassSelectors: string[] = [];\n\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    parent: CssCascade.CascadeParserHandler,\n    validatorSet: CssValidator.ValidatorSet,\n    private readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    super(scope, owner, parent?.condition, parent, null, validatorSet, false);\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  tagSelector(ns: string | null, name: string | null): void {\n    Asserts.assert(name);\n    this.currentNamedPageSelector = name;\n    if (name) {\n      this.chain.push(new CheckPageTypeAction(name));\n      this.specificity += 65536;\n    }\n  }\n\n  /**\n   * @override\n   */\n  pseudoclassSelector(name: string, params: (number | string)[]): void {\n    name = name.toLowerCase();\n    if (params) {\n      switch (name) {\n        case \"nth\":\n          {\n            const [a, b] = params as number[];\n            this.currentPseudoPageClassSelectors.push(\n              `:${name}(${a}n${b < 0 ? b : \"+\" + b})`,\n            );\n            this.chain.push(new IsNthPageAction(this.scope, a, b));\n            this.specificity += 256;\n          }\n          break;\n        default:\n          this.reportAndSkip(\n            `E_INVALID_PAGE_SELECTOR :${name}(${params.join(\"\")})`,\n          );\n          break;\n      }\n    } else {\n      this.currentPseudoPageClassSelectors.push(`:${name}`);\n      switch (name) {\n        case \"first\":\n          this.chain.push(new IsFirstPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"blank\":\n          this.chain.push(new IsBlankPageAction(this.scope));\n          this.specificity += 256;\n          break;\n        case \"left\":\n          this.chain.push(new IsLeftPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"right\":\n          this.chain.push(new IsRightPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"recto\":\n          this.chain.push(new IsRectoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        case \"verso\":\n          this.chain.push(new IsVersoPageAction(this.scope));\n          this.specificity += 1;\n          break;\n        default:\n          this.reportAndSkip(`E_INVALID_PAGE_SELECTOR :${name}`);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Save currently processed selector and reset variables.\n   */\n  private finishSelector() {\n    let selectors: string[];\n    if (\n      !this.currentNamedPageSelector &&\n      !this.currentPseudoPageClassSelectors.length\n    ) {\n      selectors = null;\n    } else {\n      selectors = [this.currentNamedPageSelector].concat(\n        this.currentPseudoPageClassSelectors.sort(),\n      );\n    }\n    this.currentPageSelectors.push({\n      selectors,\n      specificity: this.specificity,\n    });\n    this.currentNamedPageSelector = \"\";\n    this.currentPseudoPageClassSelectors = [];\n  }\n\n  /**\n   * @override\n   */\n  nextSelector(): void {\n    this.finishSelector();\n    super.nextSelector();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    this.finishSelector();\n    super.startRuleBody();\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    // we limit 'bleed' and 'marks' to be effective only when specified without\n    // page selectors\n    if (\n      (name === \"bleed\" || name === \"marks\") &&\n      !this.currentPageSelectors.some((s) => s.selectors === null)\n    ) {\n      return;\n    }\n    super.simpleProperty(name, value, important);\n    const cascVal = CssCascade.getProp(this.elementStyle, name);\n    const pageProps = this.pageProps;\n    if (name === \"bleed\" || name === \"marks\") {\n      if (!pageProps[\"\"]) {\n        pageProps[\"\"] = {} as CssCascade.ElementStyle;\n      }\n\n      // we can simply overwrite without considering specificity\n      // since 'bleed' and 'marks' always come from a page rule without page\n      // selectors.\n      Object.keys(pageProps).forEach((selector) => {\n        CssCascade.setProp(pageProps[selector], name, cascVal);\n      });\n    } else if (name === \"size\") {\n      const noPageSelectorProps = pageProps[\"\"];\n      this.currentPageSelectors.forEach((s) => {\n        // update specificity to reflect the specificity of the selector\n        let result = new CssCascade.CascadeValue(\n          cascVal.value,\n          cascVal.priority + s.specificity,\n        );\n        const selector = s.selectors ? s.selectors.join(\"\") : \"\";\n        let props = pageProps[selector];\n        if (!props) {\n          // since no properties for this selector have been stored before,\n          // we can simply set the 'size', 'bleed' and 'marks' properties.\n          props = pageProps[selector] = {} as CssCascade.ElementStyle;\n          CssCascade.setProp(props, name, result);\n          if (noPageSelectorProps) {\n            [\"bleed\", \"marks\"].forEach((n) => {\n              if (noPageSelectorProps[n]) {\n                CssCascade.setProp(\n                  props,\n                  n,\n                  noPageSelectorProps[n] as CssCascade.CascadeValue,\n                );\n              }\n            });\n          }\n        } else {\n          // consider specificity when setting 'size' property.\n          // we don't have to set 'bleed' and 'marks' since they should have\n          // been already updated.\n          const prevCascVal = CssCascade.getProp(props, name);\n          result = prevCascVal\n            ? CssCascade.cascadeValues(null, result, prevCascVal)\n            : result;\n          CssCascade.setProp(props, name, result);\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  insertNonPrimary(action: CssCascade.CascadeAction): void {\n    // We represent page rules without selectors by *, though it is illegal in\n    // CSS\n    this.cascade.insertInTable(this.cascade.pagetypes, \"*\", action);\n  }\n\n  /**\n   * @override\n   */\n  makeApplyRuleAction(specificity: number): CssCascade.ApplyRuleAction {\n    return new ApplyPageRuleAction(this.elementStyle, specificity);\n  }\n\n  /**\n   * @override\n   */\n  startPageMarginBoxRule(name: string): void {\n    const marginBoxMap = CssCascade.getMutableStyleMap(\n      this.elementStyle,\n      marginBoxesKey,\n    );\n    let boxStyle = marginBoxMap[name];\n    if (!boxStyle) {\n      boxStyle = {} as CssCascade.ElementStyle;\n      marginBoxMap[name] = boxStyle;\n    }\n    const handler = new PageMarginBoxParserHandler(\n      this.scope,\n      this.owner,\n      this.validatorSet,\n      boxStyle,\n    );\n    this.owner.pushHandler(handler);\n  }\n}\n\n/**\n * Parser handler for a page-margin box rule.\n */\nexport class PageMarginBoxParserHandler\n  extends CssParser.SlaveParserHandler\n  implements CssValidator.PropertyReceiver\n{\n  constructor(\n    scope: Exprs.LexicalScope,\n    owner: CssParser.DispatchParserHandler,\n    public readonly validatorSet: CssValidator.ValidatorSet,\n    public readonly boxStyle: CssCascade.ElementStyle,\n  ) {\n    super(scope, owner, false);\n  }\n\n  /**\n   * @override\n   */\n  property(name: string, value: Css.Val, important: boolean): void {\n    this.validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      value,\n      important,\n      this,\n    );\n  }\n\n  /**\n   * @override\n   */\n  invalidPropertyValue(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY_VALUE ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  unknownProperty(name: string, value: Css.Val): void {\n    this.report(`E_INVALID_PROPERTY ${name}: ${value.toString()}`);\n  }\n\n  /**\n   * @override\n   */\n  simpleProperty(name: string, value: Css.Val, important): void {\n    const specificity = important\n      ? this.getImportantSpecificity()\n      : this.getBaseSpecificity();\n    const cascval = new CssCascade.CascadeValue(value, specificity);\n    CssCascade.setProp(this.boxStyle, name, cascval);\n  }\n}\n","/**\n * Copyright 2022 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Scripts - Supports JavaScript in source document.\n */\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Task from \"./task\";\nimport * as Logging from \"./logging\";\nimport * as TaskUtil from \"./task-util\";\n\n/**\n * Enable or disable JavaScript in html support\n */\nexport let allowScripts = true;\nexport function setAllowScripts(value: boolean): void {\n  allowScripts = value;\n}\n\nconst deferredScripts: HTMLScriptElement[] = [];\n\nfunction sameScripts(s1: HTMLScriptElement, s2: HTMLScriptElement): boolean {\n  return (\n    s1 === s2 ||\n    (s1.src || s2.src ? s1.src === s2.src : s1.textContent === s2.textContent)\n  );\n}\n\nfunction getScriptsInOrNearHead(document: Document): HTMLScriptElement[] {\n  // To support Chrome < 88 and Firefox < 84, we cannot use\n  // the selector \"body > script:not(:not(script, link, style) ~ *)\".\n  // (Issue #919)\n  const scriptsInBodyNotNearHead = Array.from(\n    document.querySelectorAll(\n      \"body > :not(script):not(link):not(style) ~ script\",\n    ),\n  ) as HTMLScriptElement[];\n  return (\n    Array.from(\n      document.querySelectorAll(\"head > script, body > script\"),\n    ) as HTMLScriptElement[]\n  ).filter((script) => !scriptsInBodyNotNearHead.includes(script));\n}\n\nexport function loadScript(\n  srcScriptElem: HTMLScriptElement,\n  window: Window,\n  flags?: { inHead?: boolean; atEnd?: boolean; forceDefer?: boolean },\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  if (\n    !flags?.inHead &&\n    !flags?.atEnd &&\n    getScriptsInOrNearHead(srcScriptElem.ownerDocument).includes(srcScriptElem)\n  ) {\n    // The script elements at beginning of body have already been processed.\n    return Task.newResult(false);\n  }\n\n  const scriptContent = srcScriptElem.textContent;\n  const src = srcScriptElem.src;\n  const isModule = srcScriptElem.type === \"module\";\n  const async = (isModule || src) && srcScriptElem.async;\n  const defer = (isModule && !async) || (src && srcScriptElem.defer);\n  const needDefer = !flags?.atEnd && (flags?.forceDefer || defer || async);\n\n  if (!hasScripts(window)) {\n    // `window.onload = startViewer`, which was set by vivliostyle-viewer,\n    // has to be unset to prevent `startViewer` restarting because of\n    // `window.dispatchEvent(new Event(\"load\"))` in `loadScriptsAtEnd()`.\n    window.onload = null;\n  }\n\n  if (needDefer) {\n    if (!deferredScripts.some((s) => sameScripts(s, srcScriptElem))) {\n      deferredScripts.push(srcScriptElem);\n    }\n    return Task.newResult(true);\n  }\n\n  if (src.includes(\"/mathjax\")) {\n    const builtinMathJax2 = window.document.head.querySelector(\n      \"script[src*='MathJax.js']:not([data-vivliostyle-scripting])\",\n    );\n    if (builtinMathJax2) {\n      if (src.includes(\"/mathjax@3\")) {\n        // Remove the builtin MathJax 2 when MathJax 3 is specified\n        window.document.head.removeChild(builtinMathJax2);\n        if (window[\"MathJax\"]?.version?.startsWith(\"2.\")) {\n          delete window[\"MathJax\"];\n        }\n      } else if (src.includes(\"/MathJax.js\")) {\n        // Ignore the specified MathJax 2, and use the builtin MathJax 2\n        return Task.newResult(true);\n      }\n    }\n  }\n\n  for (const s of window.document.head.getElementsByTagName(\"script\")) {\n    if (\n      s.hasAttribute(\"data-vivliostyle-scripting\") &&\n      sameScripts(s, srcScriptElem)\n    ) {\n      // If same script is already loaded, remove the already loaded one before load the new one.\n      window.document.head.removeChild(s);\n    }\n  }\n\n  const scriptElem = window.document.createElement(\"script\");\n  scriptElem.textContent = scriptContent;\n  if (src) {\n    scriptElem.src = src;\n  }\n  scriptElem.async = async;\n  scriptElem.defer = defer;\n  scriptElem.setAttribute(\"data-vivliostyle-scripting\", \"true\");\n\n  for (const attr of srcScriptElem.attributes) {\n    if (![\"src\", \"async\", \"defer\"].includes(attr.name)) {\n      scriptElem.setAttribute(attr.name, attr.value);\n    }\n  }\n  Logging.logger.debug(\"script:\", src);\n  if (!src) {\n    window.document.head.appendChild(scriptElem);\n    return Task.newResult(true);\n  } else {\n    const fetcher = TaskUtil.loadElement(scriptElem);\n    window.document.head.appendChild(scriptElem);\n    return TaskUtil.waitForFetchers([fetcher]);\n  }\n}\n\nfunction getAllFontFamilyList(\n  srcDocument: Document,\n  styler: CssStyler.Styler,\n): string {\n  const fontFamilySet = {};\n  const findFontFamilyInStyle = (style: any): void => {\n    const fontFamily = style[\"font-family\"]?.value;\n    if (fontFamily) {\n      if (fontFamily.values) {\n        for (const family1 of fontFamily.values) {\n          fontFamilySet[family1.stringValue()] = true;\n        }\n      } else {\n        fontFamilySet[fontFamily.stringValue()] = true;\n      }\n    }\n    const marginBoxes = style[\"_marginBoxes\"];\n    if (marginBoxes) {\n      for (const marginBoxStyle of Object.values(marginBoxes)) {\n        findFontFamilyInStyle(marginBoxStyle);\n      }\n    }\n  };\n  const findAllFontFamily = (arg: any): void => {\n    if (arg instanceof CssCascade.ApplyRuleAction) {\n      findFontFamilyInStyle(arg.style);\n    } else if (arg instanceof CssCascade.CascadeAction || Array.isArray(arg)) {\n      for (const v of Object.values(arg)) {\n        findAllFontFamily(v);\n      }\n    }\n  };\n  // Find all font-family values in stylesheets.\n  for (const obj of Object.values(styler.cascade.code)) {\n    for (const arg of Object.values(obj ?? {})) {\n      findAllFontFamily(arg);\n    }\n  }\n  // Find all font-family values in inline style.\n  for (const elem of srcDocument.querySelectorAll(\"[style]\")) {\n    if (elem instanceof HTMLElement && elem.style.fontFamily) {\n      fontFamilySet[elem.style.fontFamily] = true;\n    }\n  }\n  return Object.keys(fontFamilySet).join(\",\");\n}\n\nfunction prepareTextContentForWebFonts(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): HTMLElement {\n  const textContentDiv: HTMLElement =\n    window.document.querySelector(\"[data-vivliostyle-textcontent]\") ??\n    window.document.createElement(\"div\");\n  textContentDiv.style.position = \"fixed\";\n  textContentDiv.style.fontSize = \"0\";\n  textContentDiv.setAttribute(\"data-vivliostyle-textcontent\", \"true\");\n  textContentDiv.setAttribute(\"aria-hidden\", \"true\");\n  textContentDiv.style.fontFamily = getAllFontFamilyList(srcDocument, styler);\n  textContentDiv.textContent = srcDocument.documentElement.textContent;\n  window.document.body.appendChild(textContentDiv);\n  return textContentDiv;\n}\n\nexport function loadScriptsInHead(\n  srcDocument: Document,\n  window: Window,\n  styler: CssStyler.Styler,\n): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  // Process script elements in head and also beginning of body\n  const srcScripts: HTMLScriptElement[] = getScriptsInOrNearHead(srcDocument);\n  if (srcScripts.length === 0) {\n    return Task.newResult(false);\n  }\n  const needPrepareForWebFonts = srcScripts.some(\n    (s) => !(s.async || s.defer || s.type === \"module\"),\n  );\n\n  // Web fonts needs text content of the document\n  const textContentDiv = needPrepareForWebFonts\n    ? prepareTextContentForWebFonts(srcDocument, window, styler)\n    : null;\n  const fonts = window.document.fonts; // FontFaceSet\n  const savedDollar = window[\"$\"];\n  let forceDefer = false;\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (srcScripts.length === 0) {\n        if (!needPrepareForWebFonts) {\n          return Task.newResult(false); // break\n        }\n        return frame.sleep(20).thenAsync(() => {\n          if (\n            fonts.status === \"loading\" ||\n            // for Typekit Web Font Loader (Adobe Fonts)\n            window.document.documentElement.classList.contains(\"wf-loading\") ||\n            // For DynaFont\n            // FIXME: checking the global variable `ret` set in https://dfo.dynacw.co.jp/JSDynaFont/DynaFont.js\n            // would be not very good, because it seems to have been made global by mistake.\n            (window[\"FontJSON\"]?.Font &&\n              window[\"ret\"]?.readyState &&\n              window[\"ret\"].readyState < 4)\n          ) {\n            return Task.newResult(true); // continue\n          }\n          return Task.newResult(false); // break\n        });\n      }\n      const srcScriptElem = srcScripts.shift();\n      return loadScript(srcScriptElem, window, {\n        inHead: true,\n        forceDefer,\n      }).thenAsync(() => {\n        if (!forceDefer && window[\"$\"] !== savedDollar) {\n          // jQuery `$(…)` does not work before document is loaded, so need to defer\n          deferredScripts.push(srcScriptElem);\n          forceDefer = true;\n        }\n        if (srcScripts.length === 0) {\n          if (needPrepareForWebFonts) {\n            // Some web font loaders (DynaFont, FONTPLUS) need DOMContentLoaded event\n            Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (document)\");\n            window.document.dispatchEvent(new Event(\"DOMContentLoaded\"));\n          }\n        }\n        return Task.newResult(true); // continue\n      });\n    })\n    .then(() => {\n      if (textContentDiv) {\n        textContentDiv.remove();\n      }\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function loadScriptsAtEnd(window: Window): Task.Result<boolean> {\n  if (!allowScripts) {\n    return Task.newResult(false);\n  }\n  const frame: Task.Frame<boolean> = Task.newFrame(\"loadScripts\");\n  frame\n    .loop(() => {\n      if (deferredScripts.length === 0) {\n        return Task.newResult(false);\n      }\n      return loadScript(deferredScripts.shift(), window, {\n        atEnd: true,\n      }).thenReturn(deferredScripts.length > 0);\n    })\n    .then(() => {\n      Logging.logger.debug(\"dispatchEvent: DOMContentLoaded (window)\");\n      window.dispatchEvent(new Event(\"DOMContentLoaded\"));\n      Logging.logger.debug(\"dispatchEvent: load (window)\");\n      window.dispatchEvent(new Event(\"load\"));\n      frame.finish(true);\n    });\n  return frame.result();\n}\n\nexport function hasScripts(window: Window) {\n  if (!allowScripts) {\n    return false;\n  }\n  return (\n    deferredScripts.length > 0 ||\n    !!window.document.head.querySelector(\"script[data-vivliostyle-scripting]\")\n  );\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Urls - URL Utilities\n */\n\n/**\n * transform all urls in attributeValue using documentURLTransformer.\n *\n * @returns transformed attributeValue\n */\n\nexport const transformURIs = (\n  attributeValue,\n  baseUrl,\n  documentURLTransformer,\n) =>\n  attributeValue\n    .replace(\n      /[uU][rR][lL]\\(\\s*\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"\\r\\n])+)\"/gm,\n      (match, m1) =>\n        `url(\"${documentURLTransformer.transformURL(m1, baseUrl)}\"`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^'\\r\\n])+)'/gm,\n      (match, m1) =>\n        `url('${documentURLTransformer.transformURL(m1, baseUrl)}'`,\n    )\n    .replace(\n      /[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\"'\\r\\n\\)\\s])+)/gm,\n      (match, m1) => `url(${documentURLTransformer.transformURL(m1, baseUrl)}`,\n    );\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Vgen - View tree generator.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as Diff from \"./diff\";\nimport * as Display from \"./display\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Matchers from \"./matchers\";\nimport * as PageFloats from \"./page-floats\";\nimport * as Plugin from \"./plugin\";\nimport * as PseudoElement from \"./pseudo-element\";\nimport * as RepetitiveElement from \"./repetitive-element\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Urls from \"./urls\";\nimport * as Vtree from \"./vtree\";\nimport * as Layout from \"./layout\";\nimport { XmlDoc } from \"./types\";\n\nconst namespacePrefixMap: { [key: string]: string } = {};\n\nexport const frontEdgeBlackListHor: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-top\": \"0px\",\n  \"padding-top\": \"0px\",\n  \"border-top-width\": \"0px\",\n  \"border-top-style\": \"none\",\n  \"border-top-color\": \"transparent\",\n  \"border-top-left-radius\": \"0px\",\n  \"border-top-right-radius\": \"0px\",\n};\n\nexport const frontEdgeBlackListVert: { [key: string]: string } = {\n  \"text-indent\": \"0px\",\n  \"margin-right\": \"0px\",\n  \"padding-right\": \"0px\",\n  \"border-right-width\": \"0px\",\n  \"border-right-style\": \"none\",\n  \"border-right-color\": \"transparent\",\n  \"border-top-right-radius\": \"0px\",\n  \"border-bottom-right-radius\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListHor: { [key: string]: string } = {\n  \"margin-top\": \"0px\",\n};\n\nexport const frontEdgeUnforcedBreakBlackListVert: { [key: string]: string } = {\n  \"margin-right\": \"0px\",\n};\n\nexport type CustomRenderer = (\n  p1: Element,\n  p2: Element,\n  p3: { [key: string]: Css.Val },\n) => Task.Result<Element>;\n\nexport interface CustomRendererFactory {\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): CustomRenderer;\n}\n\n/**\n * Creates an epubReadingSystem object in the iframe.contentWindow.navigator\n * when load event fires.\n */\nexport function initIFrame(iframe: HTMLIFrameElement): void {\n  iframe.addEventListener(\n    \"load\",\n    () => {\n      iframe.contentWindow.navigator[\"epubReadingSystem\"] = {\n        name: \"adapt\",\n        version: \"0.1\",\n        layoutStyle: \"paginated\",\n        hasFeature: function (name, version) {\n          switch (name) {\n            case \"mouse-events\":\n              return true;\n          }\n          return false;\n        },\n      };\n    },\n    false,\n  );\n}\n\nexport interface StylerProducer {\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler;\n}\n\nexport class ViewFactory\n  extends Base.SimpleEventTarget\n  implements Vtree.LayoutContext\n{\n  private static SVG_URL_ATTRIBUTES: string[] = [\n    \"color-profile\",\n    \"clip-path\",\n    \"cursor\",\n    \"filter\",\n    \"marker\",\n    \"marker-start\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"fill\",\n    \"stroke\",\n    \"mask\",\n  ];\n  document: Document;\n  exprContentListener: Vtree.ExprContentListener;\n\n  // provided by layout\n  nodeContext: Vtree.NodeContext | null = null;\n  viewRoot: Element | null = null;\n  isFootnote: boolean = false;\n  sourceNode: Node | null = null;\n  offsetInNode: number = 0;\n\n  // computed\n  // TODO: only set it on NodeContext\n  viewNode: Node | null = null;\n\n  constructor(\n    public readonly flowName: string,\n    public readonly context: Exprs.Context,\n    public readonly viewport: Viewport,\n    public readonly styler: CssStyler.Styler,\n    public readonly regionIds: string[],\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    public readonly docFaces: Font.DocumentFaces,\n    public readonly footnoteStyle: CssCascade.ElementStyle,\n    public readonly stylerProducer: StylerProducer,\n    public readonly page: Vtree.Page,\n    public readonly customRenderer: CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n  ) {\n    super();\n    this.document = viewport.document;\n    this.exprContentListener = styler.counterListener.getExprContentListener();\n  }\n\n  /**\n   * @override\n   */\n  clone(): Vtree.LayoutContext {\n    return new ViewFactory(\n      this.flowName,\n      this.context,\n      this.viewport,\n      this.styler,\n      this.regionIds,\n      this.xmldoc,\n      this.docFaces,\n      this.footnoteStyle,\n      this.stylerProducer,\n      this.page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n  }\n\n  createPseudoelementShadow(\n    element: Element,\n    isRoot: boolean,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Vtree.ShadowContext {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return subShadow;\n    }\n    const addedNames = [];\n    const root = PseudoElement.document.createElementNS(Base.NS.SHADOW, \"root\");\n    let att = root;\n    for (const name of PseudoElement.pseudoNames) {\n      let elem: Element;\n      if (name) {\n        if (!pseudoMap[name]) {\n          continue;\n        }\n        if (name == \"footnote-marker\" && !(isRoot && this.isFootnote)) {\n          continue;\n        }\n        if (name.match(/^first-/)) {\n          const display = computedStyle[\"display\"];\n          if (!display || display === Css.ident.inline) {\n            continue;\n          }\n        }\n        if (name === \"before\" || name === \"after\") {\n          const content = pseudoMap[name][\"content\"] as CssCascade.CascadeValue;\n          if (!content || !Vtree.nonTrivialContent(content.value)) {\n            continue;\n          }\n        }\n        addedNames.push(name);\n        elem = PseudoElement.document.createElementNS(Base.NS.XHTML, \"span\");\n        PseudoElement.setPseudoName(elem, name);\n      } else {\n        elem = PseudoElement.document.createElementNS(\n          Base.NS.SHADOW,\n          \"content\",\n        );\n      }\n      att.appendChild(elem);\n      if (name.match(/^first-/)) {\n        att = elem;\n      }\n    }\n    if (!addedNames.length) {\n      return subShadow;\n    }\n    const shadowStyler = new PseudoElement.PseudoelementStyler(\n      element,\n      cascStyle,\n      styler,\n      context,\n      this.exprContentListener,\n    );\n    return new Vtree.ShadowContext(\n      element,\n      root,\n      null,\n      parentShadow,\n      subShadow,\n      Vtree.ShadowType.ROOTLESS,\n      shadowStyler,\n    );\n  }\n\n  getPseudoMap(\n    cascStyle: CssCascade.ElementStyle,\n    regionIds: string[],\n    isFootnote: boolean,\n    nodeContext: Vtree.NodeContext,\n    context: Exprs.Context,\n  ): CssCascade.ElementStyleMap {\n    const pseudoMap = CssCascade.getStyleMap(cascStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return null;\n    }\n    const computedPseudoStyleMap: CssCascade.ElementStyleMap = {};\n    for (const key in pseudoMap) {\n      const computedPseudoStyle: { [key: string]: CssCascade.CascadeValue } =\n        (computedPseudoStyleMap[key] = {});\n      CssCascade.mergeStyle(computedPseudoStyle, pseudoMap[key], context);\n      CssCascade.mergeViewConditionalStyles(\n        computedPseudoStyle,\n        context,\n        pseudoMap[key],\n      );\n      CssCascade.forEachStylesInRegion(\n        pseudoMap[key],\n        regionIds,\n        isFootnote,\n        (regionId, regionStyle) => {\n          CssCascade.mergeStyle(computedPseudoStyle, regionStyle, context);\n          CssCascade.forEachViewConditionalStyles(\n            regionStyle,\n            (viewConditionalStyles) => {\n              CssCascade.mergeStyle(\n                computedPseudoStyle,\n                viewConditionalStyles,\n                context,\n              );\n            },\n          );\n        },\n      );\n    }\n    return computedPseudoStyleMap;\n  }\n\n  createRefShadow(\n    href: string,\n    type: Vtree.ShadowType,\n    element: Element,\n    parentShadow: Vtree.ShadowContext,\n    subShadow: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createRefShadow\");\n    this.xmldoc.store.load(href).then((refDocParam) => {\n      const refDoc = refDocParam;\n      if (refDoc) {\n        const refElement = refDoc.getElement(href);\n        if (refElement) {\n          const refStyler = this.stylerProducer.getStylerForDoc(refDoc);\n          subShadow = new Vtree.ShadowContext(\n            element,\n            refElement,\n            refDoc,\n            parentShadow,\n            subShadow,\n            type,\n            refStyler,\n          );\n        }\n      }\n      frame.finish(subShadow);\n    });\n    return frame.result();\n  }\n\n  createShadows(\n    element: Element,\n    isRoot,\n    cascStyle: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n    shadowContext: Vtree.ShadowContext,\n  ): Task.Result<Vtree.ShadowContext> {\n    const frame: Task.Frame<Vtree.ShadowContext> =\n      Task.newFrame(\"createShadows\");\n    const shadow: Vtree.ShadowContext = null;\n    const templateURLVal = computedStyle[\"template\"];\n    let cont: Task.Result<Vtree.ShadowContext>;\n    if (templateURLVal instanceof Css.URL) {\n      const url = (templateURLVal as Css.URL).url;\n      cont = this.createRefShadow(\n        url,\n        Vtree.ShadowType.ROOTLESS,\n        element,\n        shadowContext,\n        shadow,\n      );\n    } else {\n      cont = Task.newResult(shadow);\n    }\n    cont.then((shadow) => {\n      let cont1: Task.Result<Vtree.ShadowContext> = null;\n      if (element.namespaceURI == Base.NS.SHADOW) {\n        if (element.localName == \"include\") {\n          let href = element.getAttribute(\"href\");\n          let xmldoc: XmlDoc.XMLDocHolder = null;\n          if (href) {\n            xmldoc = shadowContext ? shadowContext.xmldoc : this.xmldoc;\n          } else if (shadowContext) {\n            if (shadowContext.owner.namespaceURI == Base.NS.XHTML) {\n              href = shadowContext.owner.getAttribute(\"href\");\n            } else {\n              href = shadowContext.owner.getAttributeNS(Base.NS.XLINK, \"href\");\n            }\n            xmldoc = shadowContext.parentShadow\n              ? shadowContext.parentShadow.xmldoc\n              : this.xmldoc;\n          }\n          if (href) {\n            href = Base.resolveURL(href, xmldoc.url);\n            cont1 = this.createRefShadow(\n              href,\n              Vtree.ShadowType.ROOTED,\n              element,\n              shadowContext,\n              shadow,\n            );\n          }\n        }\n      }\n      if (cont1 == null) {\n        cont1 = Task.newResult(shadow);\n      }\n      let cont2: Task.Result<Vtree.ShadowContext> = null;\n      cont1.then((shadow) => {\n        if (computedStyle[\"display\"] === Css.ident.table_cell) {\n          const url = Base.resolveURL(\n            \"user-agent.xml#table-cell\",\n            Base.resourceBaseURL,\n          );\n          cont2 = this.createRefShadow(\n            url,\n            Vtree.ShadowType.ROOTLESS,\n            element,\n            shadowContext,\n            shadow,\n          );\n        } else {\n          cont2 = Task.newResult(shadow);\n        }\n      });\n      cont2.then((shadow) => {\n        shadow = this.createPseudoelementShadow(\n          element,\n          isRoot,\n          cascStyle,\n          computedStyle,\n          styler,\n          context,\n          shadowContext,\n          shadow,\n        );\n        frame.finish(shadow);\n      });\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setViewRoot(viewRoot: Element, isFootnote: boolean) {\n    this.viewRoot = viewRoot;\n    this.isFootnote = isFootnote;\n  }\n\n  /**\n   * @return vertical\n   */\n  computeStyle(\n    vertical: boolean,\n    rtl: boolean,\n    style: CssCascade.ElementStyle,\n    computedStyle: { [key: string]: Css.Val },\n  ): boolean {\n    const context = this.context;\n    const cascMap = CssCascade.flattenCascadedStyle(\n      style,\n      context,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n    );\n    vertical = CssCascade.isVertical(cascMap, context, vertical);\n    rtl = CssCascade.isRtl(cascMap, context, rtl);\n    CssCascade.convertToPhysical(\n      cascMap,\n      computedStyle,\n      vertical,\n      rtl,\n      (name, cascVal) => {\n        let value = cascVal.evaluate(context, name);\n        if (name == \"font-family\") {\n          value = this.docFaces.filterFontFamily(value);\n        }\n        return value;\n      },\n    );\n\n    // Compute values of display, position and float\n    const position = computedStyle[\"position\"] as Css.Ident;\n    const float = computedStyle[\"float\"] as Css.Ident;\n    const displayValues = Display.getComputedDislayValue(\n      (computedStyle[\"display\"] as Css.Ident) || Css.ident.inline,\n      position,\n      float,\n      this.sourceNode === this.xmldoc.root,\n    );\n    [\"display\", \"position\", \"float\"].forEach((name) => {\n      if (displayValues[name]) {\n        computedStyle[name] = displayValues[name];\n      }\n    });\n    return vertical;\n  }\n\n  private inheritFromSourceParent(elementStyle: CssCascade.ElementStyle): {\n    lang: string | null;\n    elementStyle: CssCascade.ElementStyle;\n  } {\n    let node = this.nodeContext.sourceNode;\n    const styles = [];\n    let lang: string | null = null;\n\n    // TODO: this is hacky. We need to recover the path through the shadow\n    // trees, but we do not have the full shadow tree structure at this point.\n    // This code handles coming out of the shadow trees, but does not go back in\n    // (through shadow:content element).\n    let shadowContext = this.nodeContext.shadowContext;\n    let steps = -1;\n    while (node && node.nodeType == 1) {\n      const shadowRoot = shadowContext && shadowContext.root == node;\n      if (!shadowRoot || shadowContext.type == Vtree.ShadowType.ROOTLESS) {\n        const styler = shadowContext\n          ? (shadowContext.styler as CssStyler.AbstractStyler)\n          : this.styler;\n        const nodeStyle = styler.getStyle(node as Element, false);\n        styles.push(nodeStyle);\n        lang = lang || Base.getLangAttribute(node as Element);\n      }\n      if (shadowRoot) {\n        node = shadowContext.owner;\n        shadowContext = shadowContext.parentShadow;\n      } else {\n        node = node.parentNode;\n        steps++;\n      }\n    }\n    const isRoot = steps === 0;\n    const fontSize = this.context.queryUnitSize(\"em\", isRoot);\n    const props = {\n      \"font-size\": new CssCascade.CascadeValue(\n        new Css.Numeric(fontSize, \"px\"),\n        0,\n      ),\n    } as CssCascade.ElementStyle;\n    const inheritanceVisitor = new CssCascade.InheritanceVisitor(\n      props,\n      this.context,\n    );\n    for (let i = styles.length - 1; i >= 0; --i) {\n      const style = styles[i];\n      const propList = [];\n      for (const propName in style) {\n        if (CssCascade.isInherited(propName)) {\n          propList.push(propName);\n        }\n      }\n      propList.sort(Css.processingOrderFn);\n      for (const name of propList) {\n        inheritanceVisitor.setPropName(name);\n        const value = CssCascade.getProp(style, name);\n        if (!Css.isDefaultingValue(value.value)) {\n          if (\n            name === \"font-size\" &&\n            i === styles.length - 1 &&\n            this.context.isRelativeRootFontSize &&\n            this.context.rootFontSize\n          ) {\n            // Fix for issue #608, #549\n            props[name] = new CssCascade.CascadeValue(\n              new Css.Numeric(this.context.rootFontSize, \"px\"),\n              value.priority,\n            );\n            continue;\n          }\n          props[name] = value.filterValue(inheritanceVisitor);\n        }\n      }\n    }\n    for (const sname in elementStyle) {\n      if (!CssCascade.isInherited(sname)) {\n        props[sname] = elementStyle[sname];\n      }\n    }\n    return { lang, elementStyle: props };\n  }\n\n  resolveURL(url: string): string {\n    url = Base.resolveURL(url, this.xmldoc.url);\n    return this.fallbackMap[url] || url;\n  }\n\n  inheritLangAttribute() {\n    this.nodeContext.lang =\n      Base.getLangAttribute(this.nodeContext.sourceNode as Element) ||\n      (this.nodeContext.parent && this.nodeContext.parent.lang) ||\n      this.nodeContext.lang;\n  }\n\n  transferPolyfilledInheritedProps(computedStyle: { [key: string]: Css.Val }) {\n    const polyfilledInheritedProps =\n      CssCascade.getPolyfilledInheritedProps().filter(\n        (name) => computedStyle[name],\n      );\n    if (polyfilledInheritedProps.length) {\n      let props = this.nodeContext.inheritedProps;\n      if (this.nodeContext.parent) {\n        props = this.nodeContext.inheritedProps = {};\n        for (const n in this.nodeContext.parent.inheritedProps) {\n          props[n] = this.nodeContext.parent.inheritedProps[n];\n        }\n      }\n      polyfilledInheritedProps.forEach((name) => {\n        const value = computedStyle[name];\n        if (value) {\n          if (Css.isDefaultingValue(value)) {\n            if (value === Css.ident.initial) {\n              props[name] = undefined;\n            }\n          } else if (value instanceof Css.Int) {\n            props[name] = (value as Css.Int).num;\n          } else if (value instanceof Css.Ident) {\n            props[name] = (value as Css.Ident).name;\n          } else if (value instanceof Css.Numeric) {\n            const numericVal = value as Css.Numeric;\n            switch (numericVal.unit) {\n              case \"dpi\":\n              case \"dpcm\":\n              case \"dppx\":\n                props[name] =\n                  numericVal.num * Exprs.defaultUnitSizes[numericVal.unit];\n                break;\n              default:\n                props[name] = value;\n            }\n          } else {\n            props[name] = value;\n          }\n          delete computedStyle[name];\n        }\n      });\n    }\n  }\n\n  resolveFormattingContext(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    display: Css.Ident,\n    position: Css.Ident,\n    float: Css.Ident,\n    isRoot: boolean,\n  ) {\n    const hooks: Plugin.ResolveFormattingContextHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.RESOLVE_FORMATTING_CONTEXT,\n    );\n    for (let i = 0; i < hooks.length; i++) {\n      const formattingContext = hooks[i](\n        nodeContext,\n        firstTime,\n        display,\n        position,\n        float,\n        isRoot,\n      );\n      if (formattingContext) {\n        nodeContext.formattingContext = formattingContext;\n        return;\n      }\n    }\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  private createElementView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    let needToProcessChildren = true;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createElementView\");\n\n    // Figure out element's styles\n    let element = this.sourceNode as Element;\n    const styler = this.nodeContext.shadowContext\n      ? (this.nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    if (!this.nodeContext.shadowContext) {\n      const offset = this.xmldoc.getElementOffset(element);\n      Matchers.NthFragmentMatcher.registerFragmentIndex(\n        offset,\n        this.nodeContext.fragmentIndex,\n        0,\n      );\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    if (!this.nodeContext.parent) {\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    const floatReferenceCV: CssCascade.CascadeValue =\n      elementStyle[\"float-reference\"];\n    const floatReference =\n      floatReferenceCV && !Css.isDefaultingValue(floatReferenceCV.value)\n        ? PageFloats.floatReferenceOf(floatReferenceCV.value.toString())\n        : null;\n    if (\n      this.nodeContext.parent &&\n      floatReference &&\n      PageFloats.isPageFloat(floatReference)\n    ) {\n      // Since a page float will be detached from a view node of its parent,\n      // inherited properties need to be inherited from its source parent.\n      const inheritedValues = this.inheritFromSourceParent(elementStyle);\n      elementStyle = inheritedValues.elementStyle;\n      this.nodeContext.lang = inheritedValues.lang;\n    }\n    this.nodeContext.vertical = this.computeStyle(\n      this.nodeContext.vertical,\n      this.nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    styler.processContent(\n      element,\n      computedStyle,\n      this.nodeContext.viewNode ?? this.nodeContext.parent?.viewNode,\n    );\n    this.transferPolyfilledInheritedProps(computedStyle);\n    this.inheritLangAttribute();\n    if (computedStyle[\"direction\"]) {\n      this.nodeContext.direction = computedStyle[\"direction\"].toString();\n    }\n\n    // Sort out the properties\n    const flow = computedStyle[\"flow-into\"];\n    if (flow && flow.toString() != this.flowName) {\n      // foreign flow, don't create a view\n      frame.finish(false);\n      return frame.result();\n    }\n    if (Scripts.allowScripts && element instanceof HTMLScriptElement) {\n      Scripts.loadScript(element, this.viewport.window).thenFinish(frame);\n      return frame.result();\n    }\n    let display = computedStyle[\"display\"] as Css.Ident;\n    if (Css.isDefaultingValue(display)) {\n      if (display === Css.ident.initial || display === Css.ident.unset) {\n        display = Css.ident.inline;\n      } else if (display === Css.ident.inherit) {\n        display =\n          this.nodeContext.parent?.display &&\n          Css.getName(this.nodeContext.parent?.display);\n      } else {\n        display = null;\n      }\n    }\n    if (display === Css.ident.none) {\n      // no content\n      frame.finish(false);\n      return frame.result();\n    }\n    const isRoot = this.nodeContext.parent == null;\n    this.nodeContext.flexContainer = display === Css.ident.flex;\n    this.createShadows(\n      element,\n      isRoot,\n      elementStyle,\n      computedStyle,\n      styler,\n      this.context,\n      this.nodeContext.shadowContext as Vtree.ShadowContext,\n    ).then((shadowParam) => {\n      this.nodeContext.nodeShadow = shadowParam;\n      const position = computedStyle[\"position\"] as Css.Ident;\n      let floatSide = computedStyle[\"float\"] as Css.Ident;\n      let clearSide = computedStyle[\"clear\"] as Css.Ident;\n      const writingMode = this.nodeContext.vertical\n        ? Css.ident.vertical_rl\n        : Css.ident.horizontal_tb;\n      const parentWritingMode = this.nodeContext.parent\n        ? this.nodeContext.parent.vertical\n          ? Css.ident.vertical_rl\n          : Css.ident.horizontal_tb\n        : writingMode;\n      const isFlowRoot = Display.isFlowRoot(element);\n      this.nodeContext.establishesBFC = Display.establishesBFC(\n        display,\n        position,\n        floatSide,\n        computedStyle[\"overflow\"] as Css.Ident,\n        writingMode,\n        parentWritingMode,\n        isFlowRoot,\n      );\n      this.nodeContext.containingBlockForAbsolute =\n        Display.establishesCBForAbsolute(position);\n      if (\n        this.nodeContext.isInsideBFC() &&\n        floatSide !== Css.ident.footnote &&\n        !(floatReference && PageFloats.isPageFloat(floatReference))\n      ) {\n        // When the element is already inside a block formatting context\n        // (except one from the root), float and clear can be controlled by\n        // the browser and we don't need to care.\n        floatSide = null;\n        clearSide = null;\n      }\n      let floating =\n        floatSide === Css.ident.left ||\n        floatSide === Css.ident.right ||\n        floatSide === Css.ident.top ||\n        floatSide === Css.ident.bottom ||\n        floatSide === Css.ident.inline_start ||\n        floatSide === Css.ident.inline_end ||\n        floatSide === Css.ident.block_start ||\n        floatSide === Css.ident.block_end ||\n        floatSide === Css.ident.snap_block ||\n        floatSide === Css.ident.footnote;\n      if (floatSide) {\n        // Don't want to set it in view DOM CSS.\n        delete computedStyle[\"float\"];\n        if (floatSide === Css.ident.footnote) {\n          if (this.isFootnote) {\n            // No footnotes inside footnotes. this is most likely the root\n            // of the footnote body being rendered in footnote area. Treat\n            // as block.\n            floating = false;\n            computedStyle[\"display\"] = Css.ident.block;\n          } else {\n            computedStyle[\"display\"] = Css.ident.inline;\n          }\n        }\n      }\n      if (clearSide) {\n        if (clearSide === Css.ident.inherit) {\n          if (this.nodeContext.parent && this.nodeContext.parent.clearSide) {\n            clearSide = Css.getName(this.nodeContext.parent.clearSide);\n          }\n        }\n        if (\n          clearSide === Css.ident.left ||\n          clearSide === Css.ident.right ||\n          clearSide === Css.ident.top ||\n          clearSide === Css.ident.bottom ||\n          clearSide === Css.ident.both ||\n          clearSide === Css.ident.all ||\n          clearSide === Css.ident.same\n        ) {\n          delete computedStyle[\"clear\"];\n          if (\n            computedStyle[\"display\"] &&\n            computedStyle[\"display\"] != Css.ident.inline\n          ) {\n            this.nodeContext.clearSide = clearSide.toString();\n          }\n        }\n      }\n      const listItem =\n        display === Css.ident.list_item && computedStyle[\"ua-list-item-count\"];\n      const breakInside = computedStyle[\"break-inside\"];\n      if (\n        floating ||\n        (breakInside &&\n          !Css.isDefaultingValue(breakInside) &&\n          breakInside !== Css.ident.auto)\n      ) {\n        this.nodeContext.breakPenalty++;\n      }\n      if (\n        display &&\n        display !== Css.ident.inline &&\n        Display.isInlineLevel(display)\n      ) {\n        // Don't break inside ruby, inline-block, etc.\n        this.nodeContext.breakPenalty++;\n      }\n      this.nodeContext.inline =\n        (!floating && !display) ||\n        Display.isInlineLevel(display) ||\n        Display.isRubyInternalDisplay(display);\n      this.nodeContext.display = display ? display.toString() : \"inline\";\n      this.nodeContext.floatSide = floating ? floatSide.toString() : null;\n      this.nodeContext.floatReference =\n        floatReference || PageFloats.FloatReference.INLINE;\n      const floatMinWrapBlock = computedStyle[\"float-min-wrap-block\"];\n      this.nodeContext.floatMinWrapBlock =\n        floatMinWrapBlock && !Css.isDefaultingValue(floatMinWrapBlock)\n          ? (floatMinWrapBlock as Css.Numeric)\n          : null;\n      const columnSpan = computedStyle[\"column-span\"];\n      this.nodeContext.columnSpan =\n        columnSpan && !Css.isDefaultingValue(columnSpan) ? columnSpan : null;\n      if (!this.nodeContext.inline) {\n        const breakAfter = computedStyle[\"break-after\"];\n        if (breakAfter && !Css.isDefaultingValue(breakAfter)) {\n          this.nodeContext.breakAfter = breakAfter.toString();\n        }\n        const breakBefore = computedStyle[\"break-before\"];\n        if (breakBefore && !Css.isDefaultingValue(breakBefore)) {\n          this.nodeContext.breakBefore = breakBefore.toString();\n        }\n        // Named page type\n        const pageVal: Css.Val = computedStyle[\"page\"];\n        let pageType =\n          pageVal && !Css.isDefaultingValue(pageVal) && pageVal.toString();\n        if (!pageType || pageType.toLowerCase() === \"auto\") {\n          pageType = this.nodeContext.pageType;\n        } else {\n          this.nodeContext.pageType = pageType;\n        }\n        if (this.styler.cascade.currentPageType !== pageType) {\n          if (!this.isAtForcedBreak()) {\n            this.nodeContext.breakBefore = \"page\";\n          }\n          this.styler.cascade.previousPageType =\n            this.styler.cascade.currentPageType;\n          this.styler.cascade.currentPageType = pageType;\n        }\n      }\n      this.nodeContext.verticalAlign =\n        (computedStyle[\"vertical-align\"] &&\n          computedStyle[\"vertical-align\"].toString()) ||\n        \"baseline\";\n      this.nodeContext.captionSide =\n        (computedStyle[\"caption-side\"] &&\n          computedStyle[\"caption-side\"].toString()) ||\n        \"top\";\n      const borderCollapse = computedStyle[\"border-collapse\"];\n      if (!borderCollapse || borderCollapse === Css.getName(\"separate\")) {\n        const borderSpacing = computedStyle[\"border-spacing\"];\n        let inlineBorderSpacing: Css.Val;\n        let blockBorderSpacing: Css.Val;\n        if (borderSpacing) {\n          if (borderSpacing instanceof Css.SpaceList) {\n            inlineBorderSpacing = borderSpacing.values[0];\n            blockBorderSpacing = borderSpacing.values[1];\n          } else {\n            inlineBorderSpacing = blockBorderSpacing = borderSpacing;\n          }\n          if (inlineBorderSpacing.isNumeric()) {\n            this.nodeContext.inlineBorderSpacing = Css.toNumber(\n              inlineBorderSpacing,\n              this.context,\n            );\n          }\n          if (blockBorderSpacing.isNumeric()) {\n            this.nodeContext.blockBorderSpacing = Css.toNumber(\n              blockBorderSpacing,\n              this.context,\n            );\n          }\n        }\n      }\n      const footnotePolicy = computedStyle[\"footnote-policy\"] as Css.Ident;\n      this.nodeContext.footnotePolicy =\n        footnotePolicy && !Css.isDefaultingValue(footnotePolicy)\n          ? footnotePolicy\n          : null;\n      const firstPseudo = computedStyle[\"x-first-pseudo\"] as Css.Int;\n      if (firstPseudo) {\n        const outerPseudo = this.nodeContext.parent\n          ? this.nodeContext.parent.firstPseudo\n          : null;\n        this.nodeContext.firstPseudo = new Vtree.FirstPseudo(\n          outerPseudo,\n          /** Css.Int */\n          firstPseudo.num,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.processAfterIfcontinues(\n          element,\n          elementStyle,\n          styler,\n          this.context,\n        );\n      }\n      const whitespace = computedStyle[\"white-space\"];\n      if (whitespace) {\n        const whitespaceValue = Vtree.whitespaceFromPropertyValue(\n          whitespace.toString(),\n        );\n        if (whitespaceValue !== null) {\n          this.nodeContext.whitespace = whitespaceValue;\n        }\n      }\n      const hyphenateCharacter = computedStyle[\"hyphenate-character\"];\n      if (hyphenateCharacter && hyphenateCharacter instanceof Css.Str) {\n        this.nodeContext.hyphenateCharacter = hyphenateCharacter.str;\n      }\n      const wordBreak = computedStyle[\"word-break\"];\n      const lineBreak = computedStyle[\"line-break\"];\n      const overflowWrap = computedStyle[\"overflow-wrap\"];\n      this.nodeContext.breakWord =\n        wordBreak === Css.ident.break_all ||\n        lineBreak === Css.ident.anywhere ||\n        overflowWrap === Css.ident.break_word ||\n        overflowWrap === Css.ident.anywhere;\n\n      // Resolve formatting context\n      this.resolveFormattingContext(\n        this.nodeContext,\n        firstTime,\n        display,\n        position,\n        floatSide,\n        isRoot,\n      );\n      if (\n        this.nodeContext.parent &&\n        this.nodeContext.parent.formattingContext\n      ) {\n        firstTime = this.nodeContext.parent.formattingContext.isFirstTime(\n          this.nodeContext,\n          firstTime,\n        );\n      }\n      if (!this.nodeContext.inline) {\n        this.nodeContext.repeatOnBreak =\n          this.processRepeatOnBreak(computedStyle);\n        this.findAndProcessRepeatingElements(element, styler);\n      }\n\n      // Create the view element\n      let custom = false;\n      let inner: Element = null;\n      const fetchers = [];\n      let ns = element.namespaceURI;\n      let tag = element.localName;\n      if (ns == Base.NS.XHTML) {\n        if (\n          tag == \"html\" ||\n          tag == \"body\" ||\n          tag == \"script\" ||\n          tag == \"link\" ||\n          tag == \"meta\"\n        ) {\n          tag = \"div\";\n        } else if (tag == \"vide_\") {\n          tag = \"video\";\n        } else if (tag == \"audi_\") {\n          tag = \"audio\";\n        } else if (tag == \"object\") {\n          custom = !!this.customRenderer;\n        }\n        if (element.getAttribute(PseudoElement.PSEUDO_ATTR)) {\n          if (elementStyle[\"content\"]?.value?.url) {\n            tag = \"img\";\n          }\n        }\n      } else if (ns == Base.NS.epub) {\n        tag = \"span\";\n        ns = Base.NS.XHTML;\n      } else if (ns == Base.NS.NCX) {\n        ns = Base.NS.XHTML;\n        if (tag == \"ncx\" || tag == \"navPoint\") {\n          tag = \"div\";\n        } else if (tag == \"navLabel\") {\n          // Cheat here. Translate source to HTML, so it will plug\n          // in into the rest of the pipeline.\n          tag = \"span\";\n          const navParent = element.parentNode;\n          if (navParent) {\n            // find the content element\n            let href: string | null = null;\n            for (let c: Node = navParent.firstChild; c; c = c.nextSibling) {\n              if (c.nodeType != 1) {\n                continue;\n              }\n              const childElement = c as Element;\n              if (\n                childElement.namespaceURI == Base.NS.NCX &&\n                childElement.localName == \"content\"\n              ) {\n                href = childElement.getAttribute(\"src\");\n                break;\n              }\n            }\n            if (href) {\n              tag = \"a\";\n              element = element.ownerDocument.createElementNS(ns, \"a\");\n              element.setAttribute(\"href\", href);\n            }\n          }\n        } else {\n          tag = \"span\";\n        }\n      } else if (ns == Base.NS.SHADOW) {\n        ns = Base.NS.XHTML;\n        tag = this.nodeContext.inline ? \"span\" : \"div\";\n      } else {\n        custom = !!this.customRenderer;\n      }\n      if (listItem) {\n        if (firstTime) {\n          tag = \"li\";\n        } else {\n          tag = \"div\";\n          display = Css.ident.block;\n          computedStyle[\"display\"] = display;\n        }\n      } else if (tag == \"body\" || tag == \"li\") {\n        tag = \"div\";\n      } else if (tag == \"q\") {\n        tag = \"span\";\n      } else if (tag == \"a\") {\n        const hp = computedStyle[\"hyperlink-processing\"];\n        if (hp && hp.toString() != \"normal\") {\n          tag = \"span\";\n        }\n      }\n      if (computedStyle[\"behavior\"]) {\n        const behavior = computedStyle[\"behavior\"].toString();\n        if (behavior != \"none\" && this.customRenderer) {\n          custom = true;\n        }\n      }\n      if (\n        (element as HTMLElement).dataset &&\n        element.getAttribute(\"data-math-typeset\") === \"true\"\n      ) {\n        custom = true;\n      }\n      let elemResult: Task.Result<Element>;\n      if (custom) {\n        const parentNode = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : null;\n        elemResult = this.customRenderer(\n          element,\n          parentNode as Element,\n          computedStyle,\n        );\n      } else {\n        elemResult = Task.newResult(null);\n      }\n      elemResult.then((result) => {\n        if (result) {\n          if (custom) {\n            needToProcessChildren =\n              result.getAttribute(\"data-adapt-process-children\") == \"true\";\n          }\n        } else if (computedStyle[\"display\"] === Css.ident.none) {\n          // No element should be created if display:none is set.\n          // (Fix issue #924)\n          frame.finish(false);\n          return;\n        } else {\n          result = this.createElement(ns, tag);\n        }\n        if (tag == \"a\") {\n          result.addEventListener(\"click\", this.page.hrefHandler, false);\n        }\n        if (inner) {\n          this.applyPseudoelementStyle(this.nodeContext, \"inner\", inner);\n          result.appendChild(inner);\n        }\n        if (\n          result.localName == \"iframe\" &&\n          result.namespaceURI == Base.NS.XHTML\n        ) {\n          initIFrame(result as HTMLIFrameElement);\n        }\n        const imageResolution = this.nodeContext.inheritedProps[\n          \"image-resolution\"\n        ] as number | undefined;\n        const images: {\n          image: HTMLElement;\n          element: HTMLElement;\n          fetcher: TaskUtil.Fetcher<string>;\n        }[] = [];\n        const cssWidth = computedStyle[\"width\"];\n        const cssHeight = computedStyle[\"height\"];\n        const attrWidth = element.getAttribute(\"width\");\n        const attrHeight = element.getAttribute(\"height\");\n        const hasAutoWidth =\n          cssWidth === Css.ident.auto || (!cssWidth && !attrWidth);\n        const hasAutoHeight =\n          cssHeight === Css.ident.auto || (!cssHeight && !attrHeight);\n        const attributes = element.attributes;\n        const attributeCount = attributes.length;\n        let delayedSrc: string | null = null;\n        for (let i = 0; i < attributeCount; i++) {\n          const attribute = attributes[i];\n          const attributeNS = attribute.namespaceURI;\n          let attributeName = attribute.localName;\n          let attributeValue = attribute.nodeValue;\n          if (!attributeNS) {\n            if (!Scripts.allowScripts && attributeName.match(/^on/)) {\n              continue; // don't propagate JavaScript code\n            }\n            if (attributeName == \"style\") {\n              continue; // we do styling ourselves\n            }\n            if (attributeName == \"id\" || attributeName == \"name\") {\n              // Propagate transformed ids and collect them on the page\n              // (only first time).\n              if (firstTime) {\n                const transformedValue =\n                  this.documentURLTransformer.transformFragment(\n                    attributeValue,\n                    this.xmldoc.url,\n                  );\n                if (\n                  Scripts.allowScripts &&\n                  !(\n                    result.namespaceURI === Base.NS.SVG &&\n                    result.localName !== \"svg\"\n                  ) &&\n                  !result.ownerDocument.getElementById(attributeValue)\n                ) {\n                  // Keep original id value so that JavaScript can manipulate it\n                  result.setAttribute(attributeName, attributeValue);\n                  result.setAttribute(\"data-vivliostyle-id\", transformedValue);\n\n                  // Create an anchor element with transformed id, necessary for internal links in output PDF\n                  // (issue #877)\n                  const anchorElem = result.ownerDocument.createElement(\"a\");\n                  anchorElem.setAttribute(attributeName, transformedValue);\n                  anchorElem.style.position = \"absolute\";\n                  result.appendChild(anchorElem);\n                } else {\n                  result.setAttribute(attributeName, transformedValue);\n                }\n                this.page.registerElementWithId(result, transformedValue);\n                continue;\n              }\n            }\n\n            // TODO: understand the element we are working with.\n            if (\n              attributeName == \"src\" ||\n              attributeName == \"href\" ||\n              attributeName == \"poster\"\n            ) {\n              attributeValue = this.resolveURL(attributeValue);\n              if (attributeName === \"href\") {\n                attributeValue = this.documentURLTransformer.transformURL(\n                  attributeValue,\n                  this.xmldoc.url,\n                );\n              }\n            } else if (attributeName == \"srcset\") {\n              attributeValue = attributeValue\n                .split(\",\")\n                .map((value) => this.resolveURL(value.trim()))\n                .join(\",\");\n            }\n            if (\n              attributeName === \"poster\" &&\n              tag === \"video\" &&\n              ns === Base.NS.XHTML &&\n              hasAutoWidth &&\n              hasAutoHeight\n            ) {\n              const image = new Image();\n              const fetcher = TaskUtil.loadElement(image, attributeValue);\n              fetchers.push(fetcher);\n              images.push({\n                image,\n                element: result as HTMLElement,\n                fetcher,\n              });\n            }\n          } else if (attributeNS == \"http://www.w3.org/2000/xmlns/\") {\n            continue; // namespace declaration (in Firefox)\n          } else if (attributeNS == Base.NS.XLINK) {\n            if (attributeName == \"href\") {\n              attributeValue = this.resolveURL(attributeValue);\n            }\n          }\n          if (ns == Base.NS.SVG && /^[A-Z\\-]+$/.test(attributeName)) {\n            // Workaround for Edge bug\n            // See\n            // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5579311/\n            attributeName = attributeName.toLowerCase();\n          }\n          if (this.isSVGUrlAttribute(attributeName)) {\n            attributeValue = Urls.transformURIs(\n              attributeValue,\n              this.xmldoc.url,\n              this.documentURLTransformer,\n            );\n          }\n          if (attributeNS) {\n            const attributePrefix = namespacePrefixMap[attributeNS];\n            if (attributePrefix) {\n              attributeName = `${attributePrefix}:${attributeName}`;\n            }\n          }\n          if (\n            attributeName == \"src\" &&\n            !attributeNS &&\n            (tag == \"img\" || tag == \"input\") &&\n            ns == Base.NS.XHTML\n          ) {\n            // HTML img element should start loading only once all\n            // attributes are assigned.\n            delayedSrc = attributeValue;\n          } else if (\n            attributeName == \"href\" &&\n            tag == \"image\" &&\n            ns == Base.NS.SVG &&\n            attributeNS == Base.NS.XLINK\n          ) {\n            this.page.fetchers.push(\n              TaskUtil.loadElement(result, attributeValue),\n            );\n          } else {\n            // When the document is not XML document (e.g. non-XML HTML)\n            // attributeNS can be null\n            if (attributeNS) {\n              result.setAttributeNS(attributeNS, attributeName, attributeValue);\n            } else {\n              try {\n                result.setAttribute(attributeName, attributeValue);\n              } catch (err) {\n                Logging.logger.warn(err);\n              }\n            }\n          }\n        }\n        if (delayedSrc) {\n          const image = tag === \"input\" ? new Image() : result;\n          const imageFetcher = TaskUtil.loadElement(image, delayedSrc);\n          if (image !== result) {\n            (result as HTMLImageElement).src = delayedSrc;\n          }\n          if (!hasAutoWidth && !hasAutoHeight) {\n            // No need to wait for the image, does not affect layout\n            this.page.fetchers.push(imageFetcher);\n          } else {\n            if (\n              hasAutoWidth &&\n              hasAutoHeight &&\n              imageResolution &&\n              imageResolution !== 1\n            ) {\n              images.push({\n                image: image as HTMLElement,\n                element: result as HTMLElement,\n                fetcher: imageFetcher,\n              });\n            }\n            fetchers.push(imageFetcher);\n          }\n        }\n        delete computedStyle[\"content\"];\n        const listStyleImage = computedStyle[\"list-style-image\"];\n        if (listStyleImage && listStyleImage instanceof Css.URL) {\n          const listStyleURL = (listStyleImage as Css.URL).url;\n          fetchers.push(TaskUtil.loadElement(new Image(), listStyleURL));\n        }\n        this.preprocessElementStyle(computedStyle);\n        this.applyComputedStyles(result, computedStyle);\n        if (!this.nodeContext.inline) {\n          let blackList: { [key: string]: string } = null;\n          if (!firstTime) {\n            if (\n              this.nodeContext.inheritedProps[\"box-decoration-break\"] !==\n              \"clone\"\n            ) {\n              blackList = this.nodeContext.vertical\n                ? frontEdgeBlackListVert\n                : frontEdgeBlackListHor;\n            } else {\n              // When box-decoration-break: clone, cloned margins are always\n              // truncated to zero.\n              blackList = this.nodeContext.vertical\n                ? frontEdgeUnforcedBreakBlackListVert\n                : frontEdgeUnforcedBreakBlackListHor;\n            }\n          } else if (atUnforcedBreak && !this.isAtForcedBreak()) {\n            blackList = this.nodeContext.vertical\n              ? frontEdgeUnforcedBreakBlackListVert\n              : frontEdgeUnforcedBreakBlackListHor;\n          }\n          if (blackList) {\n            for (const propName in blackList) {\n              // Fix for issue #737\n              if (propName === \"text-indent\" && !this.isParagraph(element)) {\n                continue;\n              }\n              Base.setCSSProperty(result, propName, blackList[propName]);\n            }\n          }\n        }\n        if (listItem) {\n          result.setAttribute(\n            \"value\",\n            computedStyle[\"ua-list-item-count\"].stringValue(),\n          );\n        }\n        this.viewNode = result;\n        if (fetchers.length) {\n          TaskUtil.waitForFetchers(fetchers).then(() => {\n            if (imageResolution > 0) {\n              this.modifyElemDimensionWithImageResolution(\n                images,\n                imageResolution,\n                computedStyle,\n                this.nodeContext.vertical,\n              );\n            }\n            frame.finish(needToProcessChildren);\n          });\n        } else {\n          frame.timeSlice().then(() => {\n            frame.finish(needToProcessChildren);\n          });\n        }\n      });\n    });\n    return frame.result();\n  }\n\n  private isParagraph(element: Element): boolean {\n    switch (element.localName) {\n      case \"p\":\n        return true;\n      case \"html\":\n      case \"body\":\n      case \"main\":\n      case \"article\":\n      case \"section\":\n        return false;\n    }\n    const textLevelElements = {\n      a: true,\n      abbr: true,\n      b: true,\n      bdi: true,\n      bdo: true,\n      cite: true,\n      code: true,\n      data: true,\n      del: true,\n      dfn: true,\n      em: true,\n      i: true,\n      ins: true,\n      kbd: true,\n      mark: true,\n      q: true,\n      ruby: true,\n      s: true,\n      samp: true,\n      small: true,\n      span: true,\n      strong: true,\n      sub: true,\n      sup: true,\n      time: true,\n      u: true,\n      var: true,\n    };\n    for (\n      let childNode = element.firstChild;\n      childNode;\n      childNode = childNode.nextSibling\n    ) {\n      switch (childNode.nodeType) {\n        case Node.TEXT_NODE:\n          if (childNode.nodeValue.trim().length > 0) {\n            return true;\n          }\n          break;\n        case Node.ELEMENT_NODE:\n          if (textLevelElements[(childNode as Element).localName]) {\n            return true;\n          }\n          break;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if the current position is at a forced break\n   * (Fix for Issue #690)\n   */\n  private isAtForcedBreak(): boolean {\n    for (\n      let nodeContext = this.nodeContext;\n      nodeContext && !nodeContext.after;\n      nodeContext = nodeContext.parent\n    ) {\n      if (Break.isForcedBreakValue(nodeContext.breakBefore)) {\n        return true;\n      }\n      if (\n        nodeContext.parent &&\n        (nodeContext.parent.sourceNode as Element).firstElementChild !==\n          nodeContext.sourceNode\n      ) {\n        break;\n      }\n    }\n    return false;\n  }\n\n  private processAfterIfcontinues(\n    element: Element,\n    cascStyle: CssCascade.ElementStyle,\n    styler: CssStyler.AbstractStyler,\n    context: Exprs.Context,\n  ) {\n    const pseudoMap = this.getPseudoMap(\n      cascStyle,\n      this.regionIds,\n      this.isFootnote,\n      this.nodeContext,\n      context,\n    );\n    if (!pseudoMap) {\n      return;\n    }\n    if (\n      pseudoMap[\"after-if-continues\"] &&\n      pseudoMap[\"after-if-continues\"][\"content\"]\n    ) {\n      const shadowStyler = new PseudoElement.PseudoelementStyler(\n        element,\n        cascStyle,\n        styler,\n        context,\n        this.exprContentListener,\n      );\n      this.nodeContext.afterIfContinues = new Layout.AfterIfContinues(\n        element,\n        shadowStyler,\n      );\n    }\n  }\n\n  /**\n   * @return isSVGUrlAttribute\n   */\n  isSVGUrlAttribute(attributeName: string): boolean {\n    return ViewFactory.SVG_URL_ATTRIBUTES.includes(attributeName.toLowerCase());\n  }\n\n  modifyElemDimensionWithImageResolution(\n    images: {\n      image: HTMLElement;\n      element: HTMLElement;\n      fetcher: TaskUtil.Fetcher<string>;\n    }[],\n    imageResolution: number,\n    computedStyle: { [key: string]: Css.Val },\n    isVertical: boolean,\n  ) {\n    images.forEach((param) => {\n      if (param.fetcher.get().get() === \"load\") {\n        const img = param.image;\n        let scaledWidth = (img as HTMLImageElement).width / imageResolution;\n        let scaledHeight = (img as HTMLImageElement).height / imageResolution;\n        const elem = param.element;\n        if (scaledWidth > 0 && scaledHeight > 0) {\n          if (computedStyle[\"box-sizing\"] === Css.ident.border_box) {\n            if (computedStyle[\"border-left-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-left-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-right-style\"] !== Css.ident.none) {\n              scaledWidth += Css.toNumber(\n                computedStyle[\"border-right-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-top-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-top-width\"],\n                this.context,\n              );\n            }\n            if (computedStyle[\"border-bottom-style\"] !== Css.ident.none) {\n              scaledHeight += Css.toNumber(\n                computedStyle[\"border-bottom-width\"],\n                this.context,\n              );\n            }\n          }\n          if (imageResolution > 1) {\n            const maxWidth = computedStyle[\"max-width\"] || Css.ident.none;\n            const maxHeight = computedStyle[\"max-height\"] || Css.ident.none;\n            if (maxWidth === Css.ident.none && maxHeight === Css.ident.none) {\n              Base.setCSSProperty(elem, \"max-width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth !== Css.ident.none &&\n              maxHeight === Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              maxWidth === Css.ident.none &&\n              maxHeight !== Css.ident.none\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // maxWidth != none && maxHeight != none\n              Asserts.assert(maxWidth.isNumeric());\n              Asserts.assert(maxHeight.isNumeric());\n              const numericMaxWidth = maxWidth as Css.Numeric;\n              const numericMaxHeight = maxHeight as Css.Numeric;\n              if (numericMaxWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-width\",\n                  `${Math.min(\n                    scaledWidth,\n                    Css.toNumber(numericMaxWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMaxHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"max-height\",\n                  `${Math.min(\n                    scaledHeight,\n                    Css.toNumber(numericMaxHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          } else if (imageResolution < 1) {\n            const minWidth = computedStyle[\"min-width\"] || Css.numericZero;\n            const minHeight = computedStyle[\"min-height\"] || Css.numericZero;\n            Asserts.assert(minWidth.isNumeric());\n            Asserts.assert(minWidth.isNumeric());\n            const numericMinWidth = minWidth as Css.Numeric;\n            const numericMinHeight = minHeight as Css.Numeric;\n            if (numericMinWidth.num === 0 && numericMinHeight.num === 0) {\n              Base.setCSSProperty(elem, \"min-width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num !== 0 &&\n              numericMinHeight.num === 0\n            ) {\n              Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n            } else if (\n              numericMinWidth.num === 0 &&\n              numericMinHeight.num !== 0\n            ) {\n              Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n            } else {\n              // minWidth != 0 && minHeight != 0\n              if (numericMinWidth.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-width\",\n                  `${Math.max(\n                    scaledWidth,\n                    Css.toNumber(numericMinWidth, this.context),\n                  )}px`,\n                );\n              } else if (numericMinHeight.unit !== \"%\") {\n                Base.setCSSProperty(\n                  elem,\n                  \"min-height\",\n                  `${Math.max(\n                    scaledHeight,\n                    Css.toNumber(numericMinHeight, this.context),\n                  )}px`,\n                );\n              } else {\n                if (isVertical) {\n                  Base.setCSSProperty(elem, \"height\", `${scaledHeight}px`);\n                } else {\n                  Base.setCSSProperty(elem, \"width\", `${scaledWidth}px`);\n                }\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private preprocessElementStyle(computedStyle: { [key: string]: Css.Val }) {\n    const hooks: Plugin.PreProcessElementStyleHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_ELEMENT_STYLE,\n    );\n    hooks.forEach((hook) => {\n      hook(this.nodeContext, computedStyle);\n    });\n  }\n\n  private findAndProcessRepeatingElements(\n    element: Element,\n    styler: CssStyler.AbstractStyler,\n  ) {\n    for (\n      let child: Node = element.firstChild;\n      child;\n      child = child.nextSibling\n    ) {\n      if (child.nodeType !== 1) {\n        continue;\n      }\n      const computedStyle: { [key: string]: Css.Val } = {};\n      const elementStyle = styler.getStyle(child as Element, false);\n      this.computeStyle(\n        this.nodeContext.vertical,\n        this.nodeContext.direction === \"rtl\",\n        elementStyle,\n        computedStyle,\n      );\n      const processRepeatOnBreak = this.processRepeatOnBreak(computedStyle);\n      if (!processRepeatOnBreak) {\n        continue;\n      }\n      if (\n        this.nodeContext.formattingContext instanceof\n          RepetitiveElement.RepetitiveElementsOwnerFormattingContext &&\n        !this.nodeContext.belongsTo(this.nodeContext.formattingContext)\n      ) {\n        return;\n      }\n      const parent = this.nodeContext.parent;\n      const parentFormattingContext = parent && parent.formattingContext;\n      this.nodeContext.formattingContext =\n        new RepetitiveElement.RepetitiveElementsOwnerFormattingContext(\n          parentFormattingContext,\n          this.nodeContext.sourceNode as Element,\n        );\n      (\n        this.nodeContext\n          .formattingContext as RepetitiveElement.RepetitiveElementsOwnerFormattingContext\n      ).initializeRepetitiveElements(this.nodeContext.vertical);\n      return;\n    }\n  }\n\n  private processRepeatOnBreak(computedStyle: { [key: string]: Css.Val }) {\n    let repeatOnBreak = computedStyle[\"repeat-on-break\"];\n    if (repeatOnBreak !== Css.ident.none) {\n      if (\n        repeatOnBreak === Css.ident.auto ||\n        Css.isDefaultingValue(repeatOnBreak)\n      ) {\n        if (computedStyle[\"display\"] === Css.ident.table_header_group) {\n          repeatOnBreak = Css.ident.header;\n        } else if (computedStyle[\"display\"] === Css.ident.table_footer_group) {\n          repeatOnBreak = Css.ident.footer;\n        } else {\n          repeatOnBreak = Css.ident.none;\n        }\n      }\n      if (repeatOnBreak && repeatOnBreak !== Css.ident.none) {\n        return repeatOnBreak.toString();\n      }\n    }\n    return null;\n  }\n\n  private createTextNodeView(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createTextNodeView\");\n    this.preprocessTextContent().then(() => {\n      const offsetInNode = this.offsetInNode || 0;\n      const textContent = Diff.restoreNewText(\n        this.nodeContext.preprocessedTextContent,\n      ).substr(offsetInNode);\n      this.viewNode = document.createTextNode(textContent);\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  private preprocessTextContent(): Task.Result<boolean> {\n    if (this.nodeContext.preprocessedTextContent != null) {\n      return Task.newResult(true);\n    }\n    let originl: string;\n    let textContent = (originl = this.sourceNode.textContent);\n    const frame: Task.Frame<boolean> = Task.newFrame(\"preprocessTextContent\");\n    const hooks: Plugin.PreProcessTextContentHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.PREPROCESS_TEXT_CONTENT,\n    );\n    let index = 0;\n    frame\n      .loop(() => {\n        if (index >= hooks.length) {\n          return Task.newResult(false);\n        }\n        return hooks[index++](this.nodeContext, textContent).thenAsync(\n          (processedText) => {\n            textContent = processedText;\n            return Task.newResult(true);\n          },\n        );\n      })\n      .then(() => {\n        this.nodeContext.preprocessedTextContent = Diff.diffChars(\n          originl,\n          textContent,\n        );\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true if children should be processed\n   */\n  createNodeView(\n    firstTime: boolean,\n    atUnforcedBreak: boolean,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"createNodeView\");\n    let result: Task.Result<boolean>;\n    let needToProcessChildren = true;\n    if (this.sourceNode.nodeType == 1) {\n      result = this.createElementView(firstTime, atUnforcedBreak);\n    } else {\n      if (this.sourceNode.nodeType == 8) {\n        this.viewNode = null; // comment node\n        result = Task.newResult(true);\n      } else {\n        result = this.createTextNodeView();\n      }\n    }\n    result.then((processChildren) => {\n      needToProcessChildren = processChildren;\n      this.nodeContext.viewNode = this.viewNode;\n      if (this.viewNode) {\n        const parent = this.nodeContext.parent\n          ? this.nodeContext.parent.viewNode\n          : this.viewRoot;\n        if (parent) {\n          parent.appendChild(this.viewNode);\n        }\n      }\n      frame.finish(needToProcessChildren);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @override\n   */\n  setCurrent(\n    nodeContext: Vtree.NodeContext,\n    firstTime: boolean,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<boolean> {\n    this.nodeContext = nodeContext;\n    if (nodeContext) {\n      this.sourceNode = nodeContext.sourceNode;\n      this.offsetInNode = nodeContext.offsetInNode;\n    } else {\n      this.sourceNode = null;\n      this.offsetInNode = -1;\n    }\n    this.viewNode = null;\n    if (this.nodeContext) {\n      return this.createNodeView(firstTime, !!atUnforcedBreak);\n    }\n    return Task.newResult(true);\n  }\n\n  processShadowContent(pos: Vtree.NodeContext): Vtree.NodeContext {\n    if (\n      pos.shadowContext == null ||\n      (pos.sourceNode as Element).localName != \"content\" ||\n      (pos.sourceNode as Element).namespaceURI != Base.NS.SHADOW\n    ) {\n      return pos;\n    }\n    const boxOffset = pos.boxOffset;\n    const shadow = pos.shadowContext;\n    const parent = pos.parent;\n\n    // content that will be inserted\n    let contentNode: Node;\n    let contentShadowType: Vtree.ShadowType;\n    const contentShadow = shadow.subShadow || shadow.parentShadow;\n    if (shadow.subShadow) {\n      contentNode = shadow.root;\n      contentShadowType = shadow.type;\n      if (contentShadowType == Vtree.ShadowType.ROOTLESS) {\n        contentNode = contentNode.firstChild;\n      }\n    } else {\n      contentNode = shadow.owner.firstChild;\n      contentShadowType = Vtree.ShadowType.ROOTLESS;\n    }\n    const nextSibling = pos.sourceNode.nextSibling;\n    if (nextSibling) {\n      pos.sourceNode = nextSibling;\n      pos.resetView();\n    } else if (pos.shadowSibling) {\n      pos = pos.shadowSibling;\n    } else if (contentNode) {\n      pos = null;\n    } else {\n      pos = pos.parent.modify();\n      pos.after = true;\n    }\n    if (contentNode) {\n      const r = new Vtree.NodeContext(contentNode, parent, boxOffset);\n      r.shadowContext = contentShadow;\n      r.shadowType = contentShadowType;\n      r.shadowSibling = pos;\n      return r;\n    }\n    pos.boxOffset = boxOffset;\n    return pos;\n  }\n\n  private nextPositionInTree(pos: Vtree.NodeContext): Vtree.NodeContext {\n    let boxOffset = pos.boxOffset + 1; // offset for the next position\n    if (pos.after) {\n      // root, that was the last possible position\n      if (!pos.parent) {\n        return null;\n      }\n\n      // we are done with this sourceNode, see if there is a next sibling,\n      // unless this is the root of the shadow tree\n      if (pos.shadowType != Vtree.ShadowType.ROOTED) {\n        const next = pos.sourceNode.nextSibling;\n        if (next) {\n          pos = pos.modify();\n\n          // keep shadowType\n          pos.boxOffset = boxOffset;\n          pos.sourceNode = next;\n          pos.resetView();\n          return this.processShadowContent(pos);\n        }\n      }\n\n      // if no viable siblings, check if there are shadow siblings\n      if (pos.shadowSibling) {\n        // our next position is the element after shadow:content in the parent\n        // shadow tree\n        pos = pos.shadowSibling.modify();\n        pos.boxOffset = boxOffset;\n        return pos;\n      }\n\n      // if not rootless shadow, move to the \"after\" position for the parent\n      pos = pos.parent.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    } else {\n      // any shadow trees?\n      if (pos.nodeShadow) {\n        let shadowNode: Node | null = pos.nodeShadow.root;\n        if (pos.nodeShadow.type == Vtree.ShadowType.ROOTLESS) {\n          shadowNode = shadowNode.firstChild;\n        }\n        if (shadowNode) {\n          const sr = new Vtree.NodeContext(shadowNode, pos, boxOffset);\n          sr.shadowContext = pos.nodeShadow;\n          sr.shadowType = pos.nodeShadow.type;\n          return this.processShadowContent(sr);\n        }\n      }\n\n      // any children?\n      const child = pos.sourceNode.firstChild;\n      if (child) {\n        return this.processShadowContent(\n          new Vtree.NodeContext(child, pos, boxOffset),\n        );\n      }\n\n      // no children - was there text content?\n      if (pos.sourceNode.nodeType != 1) {\n        const content = Diff.restoreNewText(pos.preprocessedTextContent);\n        boxOffset += content.length - 1 - pos.offsetInNode;\n      }\n      pos = pos.modify();\n      pos.boxOffset = boxOffset;\n      pos.after = true;\n      return pos;\n    }\n  }\n\n  isTransclusion(\n    element: Element,\n    elementStyle: CssCascade.ElementStyle,\n    transclusionType: string | null,\n  ) {\n    const proc = CssCascade.getProp(elementStyle, \"hyperlink-processing\");\n    if (!proc) {\n      return false;\n    }\n    const prop = proc.evaluate(this.context, \"hyperlink-processing\");\n    if (!prop) {\n      return false;\n    }\n    return prop.toString() == transclusionType;\n  }\n\n  /**\n   * @override\n   */\n  nextInTree(\n    position: Vtree.NodeContext,\n    atUnforcedBreak?: boolean,\n  ): Task.Result<Vtree.NodeContext> {\n    let nodeContext = this.nextPositionInTree(position);\n    if (!nodeContext || nodeContext.after) {\n      return Task.newResult(nodeContext);\n    }\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"nextInTree\");\n    this.setCurrent(nodeContext, true, atUnforcedBreak).then(\n      (processChildren) => {\n        if (!nodeContext.viewNode || !processChildren) {\n          nodeContext = nodeContext.modify();\n          nodeContext.after = true; // skip\n          if (!nodeContext.viewNode) {\n            nodeContext.inline = true;\n          }\n        }\n        this.dispatchEvent({ type: \"nextInTree\", nodeContext } as any);\n        frame.finish(nodeContext);\n      },\n    );\n    return frame.result();\n  }\n\n  addImageFetchers(bg: Css.Val) {\n    if (bg instanceof Css.CommaList) {\n      const values = (bg as Css.CommaList).values;\n      for (let i = 0; i < values.length; i++) {\n        this.addImageFetchers(values[i]);\n      }\n    } else if (bg instanceof Css.URL) {\n      const url = (bg as Css.URL).url;\n      this.page.fetchers.push(TaskUtil.loadElement(new Image(), url));\n    }\n  }\n\n  applyComputedStyles(\n    target: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ) {\n    const bg = computedStyle[\"background-image\"];\n    if (bg) {\n      this.addImageFetchers(bg);\n    }\n    const isRelativePositioned =\n      computedStyle[\"position\"] === Css.ident.relative;\n    const isRoot =\n      this.nodeContext?.parent === null &&\n      this.sourceNode?.parentElement === null &&\n      !!this.viewRoot?.parentElement;\n\n    for (const propName in computedStyle) {\n      if (propertiesNotPassedToDOM[propName]) {\n        continue;\n      }\n      let value = computedStyle[propName];\n      if (!value || (value === Css.empty && !Css.isCustomPropName(propName))) {\n        continue;\n      }\n      value = value.visit(\n        new CssProp.UrlTransformVisitor(\n          this.xmldoc.url,\n          this.documentURLTransformer,\n        ),\n      );\n      if (\n        value.isNumeric() &&\n        Exprs.needUnitConversion((value as Css.Numeric).unit)\n      ) {\n        // font-size for the root element is already converted to px\n        value = Css.convertNumericToPx(value, this.context);\n      }\n      if (\n        Vtree.delayedProps[propName] ||\n        (isRelativePositioned &&\n          Vtree.delayedPropsIfRelativePositioned[propName])\n      ) {\n        // Set it after page layout is done.\n        this.page.delayedItems.push(\n          new Vtree.DelayedItem(target, propName, value),\n        );\n        continue;\n      }\n      if (target.localName === \"rt\" && propName === \"font-size\") {\n        // Fix for Issue #673\n        if (this.fixRubyTextFontSize(target, value)) {\n          continue;\n        }\n      }\n      if (\n        isRoot &&\n        this.page.pageAreaElement &&\n        CssCascade.isInherited(propName)\n      ) {\n        // Fix for Issue #568\n        Base.setCSSProperty(\n          this.page.pageAreaElement.parentElement,\n          propName,\n          value.toString(),\n        );\n      } else {\n        Base.setCSSProperty(target, propName, value.toString());\n      }\n    }\n  }\n\n  /**\n   * Fix ruby text font size.\n   * Issue #673: Minimum font size setting in Chrome causes ruby font size problem\n   * @param target the rt element\n   * @param value the font-size value\n   * @returns true if the font-size fix is done\n   */\n  fixRubyTextFontSize(target: Element, value: Css.Val): boolean {\n    if (!/Chrome/.test(navigator.userAgent)) {\n      // Do nothing if the browser engine is not \"Chrome\"\n      return false;\n    }\n    if (!value.isNumeric()) {\n      return false;\n    }\n    const numeric = value as Css.Numeric;\n    let fontSizeInPx: number;\n    if (numeric.unit === \"%\" || numeric.unit === \"em\") {\n      const parentElem = this.nodeContext?.parent?.viewNode as Element;\n      const parentFontSize =\n        parentElem &&\n        parseFloat(this.viewport.window.getComputedStyle(parentElem).fontSize);\n      fontSizeInPx =\n        (parentFontSize * numeric.num) / (numeric.unit === \"%\" ? 100 : 1);\n    } else {\n      fontSizeInPx = Css.convertNumericToPx(numeric, this.context).num;\n    }\n    if (!fontSizeInPx) {\n      return false;\n    }\n    const minFontSizeInPx = 10; // Default minimum font size setting in Chrome\n    if (fontSizeInPx >= minFontSizeInPx) {\n      return false;\n    }\n    if (!(target instanceof HTMLElement && \"zoom\" in target.style)) {\n      return false;\n    }\n    const zoom = fontSizeInPx / minFontSizeInPx;\n    Base.setCSSProperty(target, \"font-size\", `${minFontSizeInPx}px`);\n    Base.setCSSProperty(target, \"zoom\", `${zoom}`);\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  applyPseudoelementStyle(\n    nodeContext: Vtree.NodeContext,\n    pseudoName: string,\n    target: Element,\n  ): void {\n    if (nodeContext.after) {\n      return;\n    }\n    const element = this.sourceNode as Element;\n    const styler = nodeContext.shadowContext\n      ? (nodeContext.shadowContext.styler as CssStyler.AbstractStyler)\n      : this.styler;\n    let elementStyle = styler.getStyle(element, false);\n    const pseudoMap = CssCascade.getStyleMap(elementStyle, \"_pseudos\");\n    if (!pseudoMap) {\n      return;\n    }\n    elementStyle = pseudoMap[pseudoName];\n    if (!elementStyle) {\n      return;\n    }\n    const computedStyle: { [key: string]: Css.Val } = {};\n    nodeContext.vertical = this.computeStyle(\n      nodeContext.vertical,\n      nodeContext.direction === \"rtl\",\n      elementStyle,\n      computedStyle,\n    );\n    const content = computedStyle[\"content\"];\n    if (Vtree.nonTrivialContent(content)) {\n      content.visit(\n        new Vtree.ContentPropertyHandler(\n          target,\n          this.context,\n          content,\n          this.exprContentListener,\n        ),\n      );\n      delete computedStyle[\"content\"];\n    }\n    this.applyComputedStyles(target, computedStyle);\n  }\n\n  /**\n   * @override\n   */\n  peelOff(\n    nodeContext: Vtree.NodeContext,\n    nodeOffset: number,\n  ): Task.Result<Vtree.NodeContext> {\n    const frame: Task.Frame<Vtree.NodeContext> = Task.newFrame(\"peelOff\");\n    const firstPseudo = nodeContext.firstPseudo;\n    let offsetInNode = nodeContext.offsetInNode;\n    const after = nodeContext.after;\n    if (nodeOffset > 0) {\n      const text = nodeContext.viewNode.textContent;\n      nodeContext.viewNode.textContent = text.substr(0, nodeOffset);\n      offsetInNode += nodeOffset;\n    } else if (!after && nodeContext.viewNode && offsetInNode == 0) {\n      const parent = nodeContext.viewNode.parentNode;\n      if (parent) {\n        parent.removeChild(nodeContext.viewNode);\n      }\n    }\n    const boxOffset = nodeContext.boxOffset + nodeOffset;\n    const arr = [];\n    while (nodeContext.firstPseudo === firstPseudo) {\n      arr.push(nodeContext);\n      nodeContext = nodeContext.parent;\n    }\n    let pn = arr.pop(); // container for that pseudoelement\n    let shadowSibling = pn.shadowSibling;\n    frame\n      .loop(() => {\n        while (arr.length > 0) {\n          pn = arr.pop();\n          nodeContext = new Vtree.NodeContext(\n            pn.sourceNode,\n            nodeContext,\n            boxOffset,\n          );\n          if (arr.length == 0) {\n            nodeContext.offsetInNode = offsetInNode;\n            nodeContext.after = after;\n          }\n          nodeContext.shadowType = pn.shadowType;\n          (nodeContext.shadowContext = pn.shadowContext),\n            (nodeContext.nodeShadow = pn.nodeShadow);\n          nodeContext.shadowSibling = pn.shadowSibling\n            ? pn.shadowSibling\n            : shadowSibling;\n          shadowSibling = null;\n          const result = this.setCurrent(nodeContext, false);\n          if (result.isPending()) {\n            return result;\n          }\n        }\n        return Task.newResult(false);\n      })\n      .then(() => {\n        frame.finish(nodeContext);\n      });\n    return frame.result();\n  }\n\n  createElement(ns: string, tag: string): Element {\n    if (ns == Base.NS.XHTML) {\n      return this.document.createElement(tag);\n    }\n    return this.document.createElementNS(ns, tag);\n  }\n\n  /**\n   * @override\n   */\n  applyFootnoteStyle(\n    vertical: boolean,\n    rtl: boolean,\n    target: Element,\n  ): boolean {\n    const computedStyle: { [key: string]: Css.Val } = {};\n    const pseudoMap = CssCascade.getStyleMap(this.footnoteStyle, \"_pseudos\");\n    vertical = this.computeStyle(\n      vertical,\n      rtl,\n      this.footnoteStyle,\n      computedStyle,\n    );\n    if (pseudoMap && pseudoMap[\"before\"]) {\n      const childComputedStyle: { [key: string]: Css.Val } = {};\n      const span = this.createElement(Base.NS.XHTML, \"span\");\n      PseudoElement.setPseudoName(span, \"before\");\n      target.appendChild(span);\n      this.computeStyle(vertical, rtl, pseudoMap[\"before\"], childComputedStyle);\n      delete childComputedStyle[\"content\"];\n      this.applyComputedStyles(span, childComputedStyle);\n    }\n    delete computedStyle[\"content\"];\n    this.applyComputedStyles(target, computedStyle);\n    return vertical;\n  }\n\n  /**\n   * @override\n   */\n  processFragmentedBlockEdge(nodeContext: Vtree.NodeContext) {\n    if (nodeContext) {\n      nodeContext.walkUpBlocks((block) => {\n        const boxDecorationBreak = block.inheritedProps[\"box-decoration-break\"];\n        if (!boxDecorationBreak || boxDecorationBreak === \"slice\") {\n          const elem = block.viewNode as Element;\n          Asserts.assert(elem instanceof Element);\n          if (block.vertical) {\n            Base.setCSSProperty(elem, \"padding-left\", \"0\");\n            Base.setCSSProperty(elem, \"border-left\", \"none\");\n            Base.setCSSProperty(elem, \"border-top-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n          } else {\n            Base.setCSSProperty(elem, \"padding-bottom\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom\", \"none\");\n            Base.setCSSProperty(elem, \"border-bottom-left-radius\", \"0\");\n            Base.setCSSProperty(elem, \"border-bottom-right-radius\", \"0\");\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @override\n   */\n  convertLengthToPx(\n    numeric: Css.Numeric,\n    viewNode: Node,\n    clientLayout: Vtree.ClientLayout,\n  ): number | Css.Numeric {\n    const num = numeric.num;\n    const unit = numeric.unit;\n    if (Exprs.isFontRelativeLengthUnit(unit)) {\n      let elem = viewNode;\n      while (elem && elem.nodeType !== 1) {\n        elem = elem.parentNode;\n      }\n      Asserts.assert(elem);\n      const fontSize = parseFloat(\n        clientLayout.getElementComputedStyle(elem as Element)[\"font-size\"],\n      );\n      Asserts.assert(this.context);\n      return CssCascade.convertFontRelativeLengthToPx(\n        numeric,\n        fontSize,\n        this.context,\n      ).num;\n    } else {\n      const unitSize = this.context.queryUnitSize(unit, false);\n      if (unitSize) {\n        return num * unitSize;\n      } else {\n        return numeric;\n      }\n    }\n  }\n\n  /**\n   * Returns if two NodePositionStep are equivalent.\n   */\n  isSameNodePositionStep(\n    step1: Vtree.NodePositionStep,\n    step2: Vtree.NodePositionStep,\n  ): boolean {\n    if (step1.shadowContext) {\n      if (!step2.shadowContext) {\n        return false;\n      }\n      const elem1 =\n        step1.node.nodeType === 1\n          ? (step1.node as Element)\n          : (step1.node.parentElement as Element);\n      const elem2 =\n        step2.node.nodeType === 1\n          ? (step2.node as Element)\n          : (step2.node.parentElement as Element);\n      return (\n        step1.shadowContext.owner === step2.shadowContext.owner &&\n        PseudoElement.getPseudoName(elem1) ===\n          PseudoElement.getPseudoName(elem2)\n      );\n    } else {\n      return step1.node === step2.node;\n    }\n  }\n\n  /**\n   * @override\n   */\n  isSameNodePosition(\n    nodePosition1: Vtree.NodePosition,\n    nodePosition2: Vtree.NodePosition,\n  ): boolean {\n    return (\n      nodePosition1.offsetInNode === nodePosition2.offsetInNode &&\n      nodePosition1.after == nodePosition2.after &&\n      nodePosition1.steps.length === nodePosition2.steps.length &&\n      nodePosition1.steps.every((step1, i) => {\n        const step2 = nodePosition2.steps[i];\n        return this.isSameNodePositionStep(step1, step2);\n      })\n    );\n  }\n\n  isPseudoelement(elem) {\n    return !!PseudoElement.getPseudoName(elem);\n  }\n}\n\nexport const propertiesNotPassedToDOM = {\n  \"box-decoration-break\": true,\n  \"float-min-wrap-block\": true,\n  \"float-reference\": true,\n  \"flow-into\": true,\n  \"flow-linger\": true,\n  \"flow-options\": true,\n  \"flow-priority\": true,\n  \"footnote-policy\": true,\n  page: true,\n};\n\nexport class DefaultClientLayout implements Vtree.ClientLayout {\n  layoutBox: Element;\n  window: Window;\n\n  constructor(viewport: Viewport) {\n    this.layoutBox = viewport.layoutBox;\n    this.window = viewport.window;\n  }\n\n  private subtractOffsets(\n    rect: Vtree.ClientRect,\n    originRect: Vtree.ClientRect,\n  ): Vtree.ClientRect {\n    const viewportLeft = originRect.left;\n    const viewportTop = originRect.top;\n    return {\n      left: rect.left - viewportLeft,\n      top: rect.top - viewportTop,\n      right: rect.right - viewportLeft,\n      bottom: rect.bottom - viewportTop,\n      width: rect.width,\n      height: rect.height,\n    } as Vtree.ClientRect;\n  }\n\n  /**\n   * @override\n   */\n  getRangeClientRects(range: Range): Vtree.ClientRect[] {\n    const rects = range.getClientRects();\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return Array.from(rects).map((rect) =>\n      this.subtractOffsets(rect, layoutBoxRect),\n    );\n  }\n\n  /**\n   * @override\n   */\n  getElementClientRect(element: Element): Vtree.ClientRect {\n    const htmlElement = element as HTMLElement;\n    const rect = htmlElement.getBoundingClientRect() as Vtree.ClientRect;\n    if (\n      rect.left === 0 &&\n      rect.top === 0 &&\n      rect.right === 0 &&\n      rect.bottom === 0\n    ) {\n      // getBoundingClientRect() returns 0,0,0,0 for WBR element (Chrome)\n      // (Fix for issue #802)\n      return rect;\n    }\n    const layoutBoxRect = this.layoutBox.getBoundingClientRect();\n    return this.subtractOffsets(rect, layoutBoxRect);\n  }\n\n  /**\n   * @override\n   */\n  getElementComputedStyle(element: Element): CSSStyleDeclaration {\n    return this.window.getComputedStyle(element, null);\n  }\n}\n\nexport class Viewport {\n  document: Document;\n  root: HTMLElement;\n  private outerZoomBox: HTMLElement;\n  contentContainer: HTMLElement;\n  layoutBox: Element;\n  width: number;\n  height: number;\n\n  constructor(\n    public readonly window: Window,\n    public readonly fontSize: number,\n    opt_root?: HTMLElement,\n    opt_width?: number,\n    opt_height?: number,\n  ) {\n    this.document = window.document;\n    this.root = opt_root || this.document.body;\n    let outerZoomBox = this.root.firstElementChild;\n    if (!outerZoomBox) {\n      outerZoomBox = this.document.createElement(\"div\");\n      outerZoomBox.setAttribute(\"data-vivliostyle-outer-zoom-box\", \"true\");\n      this.root.appendChild(outerZoomBox);\n    }\n    let contentContainer = outerZoomBox.firstElementChild;\n    if (!contentContainer) {\n      contentContainer = this.document.createElement(\"div\");\n      contentContainer.setAttribute(\n        \"data-vivliostyle-spread-container\",\n        \"true\",\n      );\n      outerZoomBox.appendChild(contentContainer);\n    }\n    let layoutBox = outerZoomBox.nextElementSibling;\n    if (!layoutBox) {\n      layoutBox = this.document.createElement(\"div\");\n      layoutBox.setAttribute(\"data-vivliostyle-layout-box\", \"true\");\n      this.root.appendChild(layoutBox);\n    }\n    this.outerZoomBox = outerZoomBox as HTMLElement;\n    this.contentContainer = contentContainer as HTMLElement;\n    this.layoutBox = layoutBox as HTMLElement;\n    const clientLayout = new DefaultClientLayout(this);\n    const computedStyle = clientLayout.getElementComputedStyle(this.root);\n    this.width =\n      opt_width || parseFloat(computedStyle[\"width\"]) || window.innerWidth;\n    this.height =\n      opt_height || parseFloat(computedStyle[\"height\"]) || window.innerHeight;\n\n    // Use the fallbackPageSize if window size is 0 or browser is in headless mode.\n    const fallbackPageSize = {\n      // compromise between A4 (210mm 297mm) and letter (8.5in 11in)\n      width: 794, // 210mm (8.27in)\n      height: 1056, // 279.4mm (11in)\n    };\n    const isHeadlessBrowser =\n      (!window.outerWidth && !window.outerHeight) ||\n      /Headless/.test(navigator.userAgent) ||\n      (navigator.webdriver &&\n        window.innerWidth === 800 &&\n        window.innerHeight === 600);\n\n    if (!this.width || (!opt_width && isHeadlessBrowser)) {\n      this.width = fallbackPageSize.width;\n    }\n    if (!this.height || (!opt_height && isHeadlessBrowser)) {\n      this.height = fallbackPageSize.height;\n    }\n  }\n\n  /**\n   * Reset zoom.\n   */\n  resetZoom() {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", \"\");\n    Base.setCSSProperty(this.outerZoomBox, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"width\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"height\", \"\");\n    Base.setCSSProperty(this.contentContainer, \"transform\", \"\");\n  }\n\n  /**\n   * Zoom viewport.\n   * @param width Overall width of contents before scaling (px)\n   * @param height Overall height of contents before scaling (px)\n   * @param scale Factor to which the viewport will be scaled.\n   */\n  zoom(width: number, height: number, scale: number) {\n    Base.setCSSProperty(this.outerZoomBox, \"width\", `${width * scale}px`);\n    Base.setCSSProperty(this.outerZoomBox, \"height\", `${height * scale}px`);\n    Base.setCSSProperty(this.contentContainer, \"width\", `${width}px`);\n    Base.setCSSProperty(this.contentContainer, \"height\", `${height}px`);\n    Base.setCSSProperty(this.contentContainer, \"transform\", `scale(${scale})`);\n  }\n\n  /**\n   * Remove all pages inside the viewport.\n   */\n  clear() {\n    const root = this.root;\n    while (root.lastChild) {\n      root.removeChild(root.lastChild);\n    }\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview XmlDoc - Utility functions to work with XML (mostly XHTML)\n * documents.\n */\nimport * as Base from \"./base\";\nimport * as Net from \"./net\";\nimport * as Task from \"./task\";\nimport { XmlDoc } from \"./types\";\n\nexport type XMLDocStore = XmlDoc.XMLDocStore;\n\nexport class XMLDocHolder implements XmlDoc.XMLDocHolder {\n  lang: string | null = null;\n  totalOffset: number = -1;\n  root: Element;\n  body: Element;\n  head: Element;\n  last: Element;\n  lastOffset: number = 1;\n  idMap: { [key: string]: Element };\n\n  constructor(\n    public readonly store: XMLDocStore,\n    public readonly url: string,\n    public readonly document: Document,\n  ) {\n    this.root = document.documentElement; // html element\n    let body: Element = null;\n    let head: Element = null;\n    if (this.root.namespaceURI == Base.NS.XHTML) {\n      for (\n        let child: Node = this.root.firstChild;\n        child;\n        child = child.nextSibling\n      ) {\n        if (child.nodeType != 1) {\n          continue;\n        }\n        const elem = child as Element;\n        if (elem.namespaceURI == Base.NS.XHTML) {\n          switch (elem.localName) {\n            case \"head\":\n              head = elem;\n              break;\n            case \"body\":\n              body = elem;\n              break;\n          }\n        }\n      }\n      this.lang = this.root.getAttribute(\"lang\");\n    }\n    this.body = body as Element;\n    this.head = head as Element;\n    this.last = this.root;\n    this.last.setAttribute(Base.ELEMENT_OFFSET_ATTR, \"0\");\n  }\n\n  doc(): XmlDoc.NodeList {\n    return new NodeList([this.document]);\n  }\n\n  getElementOffset(element: Element): number {\n    const offsetStr = element.getAttribute(Base.ELEMENT_OFFSET_ATTR);\n    if (offsetStr) {\n      return parseInt(offsetStr, 10);\n    }\n    let offset = this.lastOffset;\n    let last: Node | null = this.last;\n    while (last != element) {\n      let next: Node | null = last.firstChild;\n      if (!next) {\n        while (true) {\n          next = last.nextSibling;\n          if (next) {\n            break;\n          }\n          last = last.parentNode;\n          if (last == null) {\n            throw new Error(\"Internal error\");\n          }\n        }\n      }\n      last = next;\n      if (next.nodeType == 1) {\n        const nextElement = next as Element;\n        nextElement.setAttribute(Base.ELEMENT_OFFSET_ATTR, offset.toString());\n        ++offset;\n      } else {\n        offset += (next.textContent as string).length;\n      }\n    }\n    this.lastOffset = offset;\n    this.last = element;\n    return offset - 1;\n  }\n\n  getNodeOffset(srcNode: Node, offsetInNode: number, after: boolean) {\n    let extraOffset = 0;\n    let node: Node | null = srcNode;\n    let prev: Node | null = null;\n    if (node.nodeType == 1) {\n      // after = true is only valid for elements\n      if (!after) {\n        return this.getElementOffset(node as Element);\n      }\n    } else {\n      // offsetInNode is only valid for text nodes\n      extraOffset = offsetInNode;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        extraOffset += 1;\n        return this.getElementOffset(node as Element) + extraOffset;\n      }\n      node = prev;\n    }\n    while (true) {\n      while (node.lastChild) {\n        node = node.lastChild;\n      }\n      if (node.nodeType == 1) {\n        // empty element\n        break;\n      }\n      extraOffset += (node.textContent as string).length;\n      prev = node.previousSibling;\n      if (!prev) {\n        node = node.parentNode;\n        break;\n      }\n      node = prev;\n    }\n    extraOffset += 1;\n    return this.getElementOffset(node as Element) + extraOffset;\n  }\n\n  getTotalOffset(): number {\n    if (this.totalOffset < 0) {\n      this.totalOffset = this.getNodeOffset(this.root, 0, true);\n    }\n    return this.totalOffset;\n  }\n\n  /**\n   * @return last node such that its offset is less or equal to the given\n   */\n  getNodeByOffset(offset: number): Node {\n    let elementOffset: number;\n\n    // First, find the last element in the document, such that\n    // this.getElementOffset(element) <= offset; if offest matches\n    // exactly, just return it.\n    let element = this.root;\n    while (true) {\n      elementOffset = this.getElementOffset(element);\n      if (elementOffset >= offset) {\n        return element;\n      }\n      const children = element.children; // Element children\n      if (!children) {\n        break;\n      }\n      const index = Base.binarySearch(children.length, (index) => {\n        const child = children[index];\n        const childOffset = this.getElementOffset(child);\n        return childOffset > offset;\n      });\n      if (index == 0) {\n        break;\n      }\n      if (VIVLIOSTYLE_DEBUG) {\n        if (index < children.length) {\n          const elemOffset = this.getElementOffset(children[index]);\n          if (elemOffset <= offset) {\n            throw new Error(\"Consistency check failed!\");\n          }\n        }\n      }\n      element = children[index - 1];\n    }\n\n    // Now we have element with offset less than desired. Find following\n    // (non-element) node with the right offset.\n    let nodeOffset = elementOffset + 1;\n    let node: Node | null = element;\n    let next: Node | null = node.firstChild || node.nextSibling;\n    let lastGood: Node | null = null;\n    while (true) {\n      if (next) {\n        if (next.nodeType == 1) {\n          break;\n        }\n        node = next;\n        lastGood = node;\n        nodeOffset += (next.textContent as string).length;\n        if (nodeOffset > offset && !/^\\s*$/.test(next.textContent)) {\n          break;\n        }\n      } else {\n        node = node.parentNode;\n        if (!node) {\n          break;\n        }\n      }\n      next = node.nextSibling;\n    }\n    if (next && lastGood && /^\\s*$/.test(lastGood.textContent)) {\n      // skip white-space text node\n      lastGood = next;\n    }\n    return lastGood || element;\n  }\n\n  private buildIdMap(e: Element): void {\n    const id = e.getAttribute(\"id\");\n    if (id && !this.idMap[id]) {\n      this.idMap[id] = e;\n    }\n    const xmlid = e.getAttributeNS(Base.NS.XML, \"id\");\n    if (xmlid && !this.idMap[xmlid]) {\n      this.idMap[xmlid] = e;\n    }\n    for (let c = e.firstElementChild; c; c = c.nextElementSibling) {\n      this.buildIdMap(c);\n    }\n  }\n\n  /**\n   * Get element by URL in the source document(s). URL must be in either '#id'\n   * or 'url#id' form.\n   */\n  getElement(url: string): Element | null {\n    const m = url.match(/([^#]*)#(.+)$/);\n    if (!m || (m[1] && m[1] != this.url)) {\n      return null;\n    }\n    const id = m[2];\n    let r: Element = this.document.getElementById(id);\n    if (!r && this.document.getElementsByName) {\n      r = this.document.getElementsByName(id)[0];\n    }\n    if (!r) {\n      if (!this.idMap) {\n        this.idMap = {};\n        this.buildIdMap(this.document.documentElement);\n      }\n      r = this.idMap[id];\n    }\n    return r;\n  }\n}\n\n/**\n * cf. https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n * @enum {string}\n */\nexport enum DOMParserSupportedType {\n  TEXT_HTML = \"text/html\",\n  TEXT_XML = \"text/xml\",\n  APPLICATION_XML = \"application/xml\",\n  APPLICATION_XHTML_XML = \"application/xhtml+xml\",\n  IMAGE_SVG_XML = \"image/svg+xml\",\n}\n\n/**\n * Parses a string with a DOMParser and returns the document.\n * If a parse error occurs, return null.\n */\nexport function parseAndReturnNullIfError(\n  str: string,\n  type: string,\n  opt_parser?: DOMParser,\n): Document | null {\n  const parser = opt_parser || new DOMParser();\n  let doc: Document;\n  try {\n    doc = parser.parseFromString(str, type as DOMParserSupportedType);\n  } catch (e) {}\n  if (!doc) {\n    return null;\n  } else {\n    const docElement = doc.documentElement;\n    const errorTagName = \"parsererror\";\n    if (docElement.localName === errorTagName) {\n      return null;\n    } else {\n      for (let c = docElement.firstElementChild; c; c = c.nextElementSibling) {\n        if (c.localName === errorTagName) {\n          return null;\n        }\n      }\n    }\n  }\n  return doc;\n}\n\n/**\n * @returns null if contentType cannot be inferred from HTTP header and file\n *     extension\n */\nexport function resolveContentType(response: Net.Response): string | null {\n  const contentType = response.contentType;\n  if (contentType) {\n    const supportedKeys = Object.keys(DOMParserSupportedType);\n    for (let i = 0; i < supportedKeys.length; i++) {\n      if (DOMParserSupportedType[supportedKeys[i]] === contentType) {\n        return contentType;\n      }\n    }\n    if (contentType.match(/\\+xml$/)) {\n      return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  const match = response.url.match(/\\.([^./]+)$/);\n  if (match) {\n    const extension = match[1];\n    switch (extension) {\n      case \"html\":\n      case \"htm\":\n        return DOMParserSupportedType.TEXT_HTML;\n      case \"xhtml\":\n      case \"xht\":\n        return DOMParserSupportedType.APPLICATION_XHTML_XML;\n      case \"svg\":\n      case \"svgz\":\n        return DOMParserSupportedType.IMAGE_SVG_XML;\n      case \"opf\":\n      case \"xml\":\n        return DOMParserSupportedType.APPLICATION_XML;\n    }\n  }\n  return null;\n}\n\nexport function parseXMLResource(\n  response: Net.Response,\n  store: XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  let doc = response.responseXML;\n  if (!doc) {\n    const parser = new DOMParser();\n    const text = response.responseText;\n    if (text) {\n      const contentType = resolveContentType(response);\n      doc = parseAndReturnNullIfError(\n        text,\n        contentType || DOMParserSupportedType.APPLICATION_XML,\n        parser,\n      );\n\n      // When contentType cannot be inferred from HTTP header and file\n      // extension, we use root element's tag name to infer the contentType. If\n      // it is html or svg, we re-parse the source with an appropriate\n      // contentType.\n      if (doc && !contentType) {\n        const root = doc.documentElement;\n        if (root.localName.toLowerCase() === \"html\" && !root.namespaceURI) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.TEXT_HTML,\n            parser,\n          );\n        } else if (\n          root.localName.toLowerCase() === \"svg\" &&\n          (doc as any).contentType !== DOMParserSupportedType.IMAGE_SVG_XML\n        ) {\n          doc = parseAndReturnNullIfError(\n            text,\n            DOMParserSupportedType.IMAGE_SVG_XML,\n            parser,\n          );\n        }\n      }\n      if (!doc) {\n        // Fallback to HTML parsing\n        doc = parseAndReturnNullIfError(\n          text,\n          DOMParserSupportedType.TEXT_HTML,\n          parser,\n        );\n      }\n    }\n  }\n  const xmldoc = doc ? new XMLDocHolder(store, response.url, doc) : null;\n  return Task.newResult(xmldoc);\n}\n\nexport function newXMLDocStore(): XMLDocStore {\n  return new Net.ResourceStore(\n    parseXMLResource,\n    Net.XMLHttpRequestResponseType.DOCUMENT,\n  );\n}\n\nexport class Predicate implements XmlDoc.Predicate {\n  constructor(public readonly fn: (p1: Node) => boolean) {}\n\n  check(node: Node): boolean {\n    return this.fn(node);\n  }\n\n  withAttribute(name: string, value: string): Predicate {\n    return new Predicate(\n      (node) =>\n        this.check(node) &&\n        node.nodeType == 1 &&\n        (node as Element).getAttribute(name) == value,\n    );\n  }\n\n  withChild(name: string, opt_childPredicate?: Predicate): Predicate {\n    return new Predicate((node) => {\n      if (!this.check(node)) {\n        return false;\n      }\n      let list = new NodeList([node]);\n      list = list.child(name);\n      if (opt_childPredicate) {\n        list = list.predicate(opt_childPredicate);\n      }\n      return list.size() > 0;\n    });\n  }\n}\n\nexport const predicate = new Predicate((node) => true);\n\nexport class NodeList implements XmlDoc.NodeList {\n  constructor(public readonly nodes: Node[]) {}\n\n  asArray(): Node[] {\n    return this.nodes;\n  }\n\n  size(): number {\n    return this.nodes.length;\n  }\n\n  /**\n   * Filter with predicate\n   */\n  predicate(pr: Predicate): NodeList {\n    const arr = [];\n    for (const n of this.nodes) {\n      if (pr.check(n)) {\n        arr.push(n);\n      }\n    }\n    return new NodeList(arr);\n  }\n\n  forEachNode(fn: (p1: Node, p2: (p1: Node) => void) => void): NodeList {\n    const arr = [];\n    const add = (n) => {\n      arr.push(n);\n    };\n    for (let i = 0; i < this.nodes.length; i++) {\n      fn(this.nodes[i], add);\n    }\n    return new NodeList(arr);\n  }\n\n  /**\n   * @template T\n   */\n  forEach<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      arr.push(fn(this.nodes[i]));\n    }\n    return arr;\n  }\n\n  /**\n   * @template T\n   */\n  forEachNonNull<T>(fn: (p1: Node) => T): T[] {\n    const arr = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      const t = fn(this.nodes[i]);\n      if (t != null) {\n        arr.push(t);\n      }\n    }\n    return arr;\n  }\n\n  child(tag: string): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1 && (c as Element).localName == tag) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  childElements(): NodeList {\n    return this.forEachNode((node, add) => {\n      for (let c: Node = node.firstChild; c; c = c.nextSibling) {\n        if (c.nodeType == 1) {\n          add(c);\n        }\n      }\n    });\n  }\n\n  attribute(name: string): (string | null)[] {\n    return this.forEachNonNull((node) => {\n      if (node.nodeType == 1) {\n        return (node as Element).getAttribute(name);\n      }\n      return null;\n    });\n  }\n\n  textContent(): (string | null)[] {\n    return this.forEach((node) => node.textContent);\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Ops - Render EPUB content files by applying page masters,\n * styling and layout.\n */\nimport \"./footnotes\";\nimport \"./table\";\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Break from \"./break\";\nimport * as Columns from \"./columns\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssProp from \"./css-prop\";\nimport * as CssStyler from \"./css-styler\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as CssValidator from \"./css-validator\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as GeometryUtil from \"./geometry-util\";\nimport * as Layout from \"./layout\";\nimport * as LayoutProcessor from \"./layout-processor\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as PageFloats from \"./page-floats\";\nimport * as CssPage from \"./css-page\";\nimport * as Plugin from \"./plugin\";\nimport * as PageMaster from \"./page-master\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as TextPolyfill from \"./text-polyfill\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\nimport { Layout as LayoutType } from \"./types\";\nimport { UserAgentBaseCss, UserAgentPageCss } from \"./assets\";\n\nexport const uaStylesheetBaseFetcher: TaskUtil.Fetcher<boolean> =\n  new TaskUtil.Fetcher(() => {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"uaStylesheetBase\");\n    const validatorSet = CssValidator.baseValidatorSet();\n    const url = Base.resolveURL(\"user-agent-base.css\", Base.resourceBaseURL);\n    const handler = new CssCascade.CascadeParserHandler(\n      null,\n      null,\n      null,\n      null,\n      null,\n      validatorSet,\n      true,\n    );\n    handler.startStylesheet(CssParser.StylesheetFlavor.USER_AGENT);\n    CssCascade.setUABaseCascade(handler.cascade);\n    CssParser.parseStylesheetFromText(\n      UserAgentBaseCss,\n      handler,\n      url,\n      null,\n      null,\n    ).thenFinish(frame);\n    return frame.result();\n  }, \"uaStylesheetBaseFetcher\");\n\nexport function loadUABase(): Task.Result<boolean> {\n  return uaStylesheetBaseFetcher.get();\n}\n\nexport type FontFace = {\n  properties: CssCascade.ElementStyle;\n  condition: Exprs.Val;\n};\n\nexport class Style {\n  fontDeobfuscator:\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null;\n  validatorSet: CssValidator.ValidatorSet;\n\n  constructor(\n    public readonly store: OPSDocStore,\n    public readonly rootScope: Exprs.LexicalScope,\n    public readonly pageScope: Exprs.LexicalScope,\n    public readonly cascade: CssCascade.Cascade,\n    public readonly rootBox: PageMaster.RootPageBox,\n    public readonly fontFaces: FontFace[],\n    public readonly footnoteProps: CssCascade.ElementStyle,\n    public readonly flowProps: { [key: string]: CssCascade.ElementStyle },\n    public readonly viewportProps: CssCascade.ElementStyle[],\n    public readonly pageProps: { [key: string]: CssCascade.ElementStyle },\n  ) {\n    this.fontDeobfuscator = store.fontDeobfuscator;\n    this.validatorSet = store.validatorSet;\n    this.pageScope.defineBuiltIn(\"has-content\", function (name) {\n      name = name as string;\n      const styleInstance = this as StyleInstance;\n      const cp = styleInstance.currentLayoutPosition;\n      const flowChunk = cp.firstFlowChunkOfFlow(name);\n      return (\n        styleInstance.matchPageSide(cp.startSideOfFlow(name as string)) &&\n        cp.hasContent(name as string, styleInstance.lookupOffset) &&\n        !!flowChunk &&\n        !styleInstance.flowChunkIsAfterParentFlowForcedBreak(flowChunk)\n      );\n    });\n    this.pageScope.defineName(\n      \"page-number\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          return (\n            styleInstance.pageNumberOffset +\n            styleInstance.currentLayoutPosition.page\n          );\n        },\n        \"page-number\",\n      ),\n    );\n    this.pageScope.defineName(\n      \"blank-page\",\n      new Exprs.Native(\n        this.pageScope,\n        function () {\n          const styleInstance = this as StyleInstance;\n          const cp = styleInstance.currentLayoutPosition;\n          return cp?.isBlankPage;\n        },\n        \"blank-page\",\n      ),\n    );\n  }\n\n  sizeViewport(\n    viewportWidth: number,\n    viewportHeight: number,\n    fontSize: number,\n    pref?: Exprs.Preferences,\n  ): { width: number; height: number; fontSize: number } {\n    if (this.viewportProps.length) {\n      const context = new Exprs.Context(\n        this.rootScope,\n        viewportWidth,\n        viewportHeight,\n        fontSize,\n      );\n      const viewportProps = CssCascade.mergeAll(context, this.viewportProps);\n      const width = viewportProps[\"width\"] as CssCascade.CascadeValue;\n      const height = viewportProps[\"height\"] as CssCascade.CascadeValue;\n      const textZoom = viewportProps[\"text-zoom\"] as CssCascade.CascadeValue;\n      let scaleFactor = 1;\n      if ((width && height) || textZoom) {\n        const defaultFontSize = Exprs.defaultUnitSizes[\"em\"];\n        const zoomVal = textZoom\n          ? textZoom.evaluate(context, \"text-zoom\")\n          : null;\n        if (zoomVal === Css.ident.scale) {\n          scaleFactor = defaultFontSize / fontSize;\n          fontSize = defaultFontSize;\n          viewportWidth *= scaleFactor;\n          viewportHeight *= scaleFactor;\n        }\n        if (width && height) {\n          const widthVal = Css.toNumber(\n            width.evaluate(context, \"width\"),\n            context,\n          );\n          const heightVal = Css.toNumber(\n            height.evaluate(context, \"height\"),\n            context,\n          );\n          if (widthVal > 0 && heightVal > 0) {\n            const spreadWidth =\n              pref && pref.spreadView\n                ? (widthVal + pref.pageBorder) * 2\n                : widthVal;\n            return { width: spreadWidth, height: heightVal, fontSize };\n          }\n        }\n      }\n    }\n    return { width: viewportWidth, height: viewportHeight, fontSize };\n  }\n}\n\n//-------------------------------------------------------------------------------\nexport class StyleInstance\n  extends Exprs.Context\n  implements\n    CssStyler.FlowListener,\n    PageMaster.InstanceHolder,\n    Vgen.StylerProducer\n{\n  lang: string | null;\n  primaryFlows = { body: true } as { [key: string]: boolean };\n  rootPageBoxInstance: PageMaster.RootPageBoxInstance = null;\n  styler: CssStyler.Styler = null;\n  stylerMap: { [key: string]: CssStyler.Styler } = null;\n  currentLayoutPosition: Vtree.LayoutPosition = null;\n  layoutPositionAtPageStart: Vtree.LayoutPosition = null;\n  lookupOffset: number = 0;\n  faces: Font.DocumentFaces;\n  pageBoxInstances: { [key: string]: PageMaster.PageBoxInstance } = {};\n  pageManager: CssPage.PageManager = null;\n  private rootPageFloatLayoutContext: PageFloats.PageFloatLayoutContext;\n  pageBreaks: { [key: string]: boolean } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  isVersoFirstPage: boolean = false;\n  blankPageAtStart: boolean = false;\n  pageSheetSize: { [key: string]: { width: number; height: number } } = {};\n  pageSheetHeight: number = 0;\n  pageSheetWidth: number = 0;\n\n  constructor(\n    public readonly style: Style,\n    public readonly xmldoc: XmlDoc.XMLDocHolder,\n    defaultLang: string | null,\n    public readonly viewport: Vgen.Viewport,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    public readonly customRenderer: Vgen.CustomRenderer,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly pageNumberOffset: number,\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n    pageProgression?: Constants.PageProgression,\n    isVersoFirstPage?: boolean,\n  ) {\n    super(style.rootScope, viewport.width, viewport.height, viewport.fontSize);\n    this.lang = xmldoc.lang || defaultLang;\n    this.faces = new Font.DocumentFaces(this.style.fontDeobfuscator);\n    this.rootPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n    );\n    this.pageProgression = pageProgression || null;\n    this.isVersoFirstPage = !!isVersoFirstPage;\n    for (const flowName in style.flowProps) {\n      const flowStyle = style.flowProps[flowName];\n      const consume = CssCascade.getProp(flowStyle, \"flow-consume\");\n      if (consume) {\n        const consumeVal = consume.evaluate(this, \"flow-consume\");\n        if (consumeVal == Css.ident.all) {\n          this.primaryFlows[flowName] = true;\n        } else {\n          delete this.primaryFlows[flowName];\n        }\n      }\n    }\n  }\n\n  init(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"StyleInstance.init\");\n    const counterListener = this.counterStore.createCounterListener(\n      this.xmldoc.url,\n    );\n    const counterResolver = this.counterStore.createCounterResolver(\n      this.xmldoc.url,\n      this.style.rootScope,\n      this.style.pageScope,\n    );\n    this.styler = new CssStyler.Styler(\n      this.xmldoc,\n      this.style.cascade,\n      this.style.rootScope,\n      this,\n      this.primaryFlows,\n      this.style.validatorSet,\n      counterListener,\n      counterResolver,\n    );\n    counterResolver.setStyler(this.styler);\n    this.styler.resetFlowChunkStream(this);\n    this.stylerMap = {};\n    this.stylerMap[this.xmldoc.url] = this.styler;\n    const docElementStyle = this.styler.getTopContainerStyle();\n    if (!this.pageProgression) {\n      this.pageProgression = CssPage.resolvePageProgression(docElementStyle);\n    }\n\n    // Check the spread break at beginning of a document that may cause\n    // the first page verso side or cause a blank page (issue #666)\n    if (!this.matchStartPageSide(this.styler.breakBeforeValues[0])) {\n      if (this.pageNumberOffset === 0) {\n        this.isVersoFirstPage = true;\n      } else {\n        this.blankPageAtStart = true;\n      }\n    }\n\n    const rootBox = this.style.rootBox;\n    this.rootPageBoxInstance = new PageMaster.RootPageBoxInstance(rootBox);\n    const cascadeInstance = this.style.cascade.createInstance(\n      this,\n      counterListener,\n      counterResolver,\n      this.lang,\n    );\n\n    // Named page type at first page\n    this.styler.cascade.currentPageType = this.styler.cascade.firstPageType;\n\n    this.rootPageBoxInstance.applyCascadeAndInit(\n      cascadeInstance,\n      docElementStyle,\n    );\n    this.rootPageBoxInstance.resolveAutoSizing(this);\n    this.pageManager = new CssPage.PageManager(\n      cascadeInstance,\n      this.style.pageScope,\n      this.rootPageBoxInstance,\n      this,\n      docElementStyle,\n    );\n    const srcFaces = [] as Font.Face[];\n    for (const fontFace of this.style.fontFaces) {\n      if (fontFace.condition && !fontFace.condition.evaluate(this)) {\n        continue;\n      }\n      const properties = Font.prepareProperties(fontFace.properties, this);\n      const srcFace = new Font.Face(properties);\n      srcFaces.push(srcFace);\n    }\n    this.fontMapper.findOrLoadFonts(srcFaces, this.faces).then(() => {\n      // JavaScript in HTML documents support\n      Scripts.loadScriptsInHead(\n        this.xmldoc.document,\n        this.viewport.window,\n        this.styler,\n      ).thenFinish(frame);\n    });\n\n    // Determine page sheet sizes corresponding to page selectors\n    const pageProps = this.style.pageProps;\n    if (!pageProps[\"\"]) {\n      pageProps[\"\"] = {};\n    }\n    Object.keys(pageProps).forEach((selector) => {\n      let pageStyle = pageProps[selector] as {\n        [key: string]: CssCascade.CascadeValue;\n      };\n\n      // Substitute var() in @page\n      this.styler.cascade.applyVarFilter([pageStyle], this.styler, null);\n\n      // Calculate calc()\n      this.styler.cascade.applyCalcFilter(pageStyle, this.styler);\n\n      const pageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(pageStyle),\n        this,\n      );\n      this.pageSheetSize[selector] = {\n        width: pageSizeAndBleed.pageWidth + pageSizeAndBleed.cropOffset * 2,\n        height: pageSizeAndBleed.pageHeight + pageSizeAndBleed.cropOffset * 2,\n      };\n    });\n    return frame.result();\n  }\n\n  private matchStartPageSide(side: string): boolean {\n    const isRectoStart =\n      this.pageNumberOffset % 2 == (this.isVersoFirstPage ? 1 : 0);\n    const isLTR = this.pageProgression == Constants.PageProgression.LTR;\n    switch (side) {\n      case \"left\":\n        return isRectoStart !== isLTR;\n      case \"right\":\n        return isRectoStart === isLTR;\n      case \"recto\":\n        return isRectoStart;\n      case \"verso\":\n        return !isRectoStart;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getStylerForDoc(xmldoc: XmlDoc.XMLDocHolder): CssStyler.AbstractStyler {\n    let styler = this.stylerMap[xmldoc.url];\n    if (!styler) {\n      const style = this.style.store.getStyleForDoc(xmldoc);\n\n      // We need a separate content, so that variables can get potentially\n      // different values.\n      const context = new Exprs.Context(\n        style.rootScope,\n        this.pageWidth(),\n        this.pageHeight(),\n        this.initialFontSize,\n      );\n      const counterListener = this.counterStore.createCounterListener(\n        xmldoc.url,\n      );\n      const counterResolver = this.counterStore.createCounterResolver(\n        xmldoc.url,\n        style.rootScope,\n        style.pageScope,\n      );\n      styler = new CssStyler.Styler(\n        xmldoc,\n        style.cascade,\n        style.rootScope,\n        context,\n        this.primaryFlows,\n        style.validatorSet,\n        counterListener,\n        counterResolver,\n      );\n      this.stylerMap[xmldoc.url] = styler;\n    }\n    return styler;\n  }\n\n  /**\n   * @override\n   */\n  registerInstance(key: string, instance: PageMaster.PageBoxInstance): void {\n    this.pageBoxInstances[key] = instance;\n  }\n\n  /**\n   * @override\n   */\n  lookupInstance(key: string): PageMaster.PageBoxInstance {\n    return this.pageBoxInstances[key];\n  }\n\n  /**\n   * @override\n   */\n  encounteredFlowChunk(flowChunk: Vtree.FlowChunk, flow: Vtree.Flow): any {\n    const cp = this.currentLayoutPosition;\n    if (cp) {\n      if (!cp.flows[flowChunk.flowName]) {\n        cp.flows[flowChunk.flowName] = flow;\n      } else {\n        flow = cp.flows[flowChunk.flowName];\n      }\n      let flowPosition = cp.flowPositions[flowChunk.flowName];\n      if (!flowPosition) {\n        flowPosition = new Vtree.FlowPosition();\n        cp.flowPositions[flowChunk.flowName] = flowPosition;\n      }\n      const nodePosition = Vtree.newNodePositionFromNode(flowChunk.element);\n      const chunkPosition = new Vtree.ChunkPosition(nodePosition);\n      const flowChunkPosition = new Vtree.FlowChunkPosition(\n        chunkPosition,\n        flowChunk,\n      );\n      flowPosition.positions.push(flowChunkPosition);\n    }\n  }\n\n  /**\n   * @override\n   */\n  evalSupportsTest(name: string, value: string, isFunc: boolean): boolean {\n    if (isFunc) {\n      if (name === \"selector\") {\n        // TODO: `@supports selector(...)`\n      }\n      return false;\n    }\n    if (!name) {\n      // `(...)` without `name:`\n      return false;\n    }\n\n    let supported = true;\n\n    class SupportsReceiver implements CssValidator.PropertyReceiver {\n      unknownProperty(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      invalidPropertyValue(name: string, value: Css.Val): void {\n        supported = false;\n      }\n      simpleProperty(name: string, value: Css.Val, important): void {}\n    }\n\n    const supportsReceiver = new SupportsReceiver();\n    const val = CssParser.parseValue(\n      this.style.rootScope,\n      new CssTokenizer.Tokenizer(value, null),\n      \"\",\n    );\n    if (!val) {\n      return false;\n    }\n    const validatorSet = (this.xmldoc.store as OPSDocStore).validatorSet;\n    validatorSet.validatePropertyAndHandleShorthand(\n      name,\n      val,\n      false,\n      supportsReceiver,\n    );\n    return supported;\n  }\n\n  getConsumedOffset(flowPosition: Vtree.FlowPosition): number {\n    let offset = Number.POSITIVE_INFINITY;\n    for (let i = 0; i < flowPosition.positions.length; i++) {\n      const pos = flowPosition.positions[i].chunkPosition.primary;\n      let node = pos.steps[0].node;\n      let offsetInNode = pos.offsetInNode;\n      let after = pos.after;\n      let k = 0;\n      while (node.ownerDocument != this.xmldoc.document) {\n        k++;\n        node = pos.steps[k].node;\n        after = false;\n        offsetInNode = 0;\n      }\n      const chunkOffset = this.xmldoc.getNodeOffset(node, offsetInNode, after);\n      if (chunkOffset < offset) {\n        offset = chunkOffset;\n      }\n    }\n    return offset;\n  }\n\n  /**\n   * @param noLookAhead Do not look ahead elements that are not styled yet\n   * @return document offset of the given layoutPosition\n   */\n  getPosition(\n    layoutPosition?: Vtree.LayoutPosition,\n    noLookAhead?: boolean,\n  ): number {\n    if (!layoutPosition) {\n      return 0;\n    }\n    let currentPosition = Number.POSITIVE_INFINITY;\n    for (const flowName in this.primaryFlows) {\n      let flowPosition = layoutPosition.flowPositions[flowName];\n      if (\n        !noLookAhead &&\n        (!flowPosition || flowPosition.positions.length == 0) &&\n        this.currentLayoutPosition\n      ) {\n        this.styler.styleUntilFlowIsReached(flowName);\n        flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n        if (layoutPosition != this.currentLayoutPosition) {\n          if (flowPosition) {\n            flowPosition = flowPosition.clone();\n            layoutPosition.flowPositions[flowName] = flowPosition;\n          }\n        }\n      }\n      if (flowPosition) {\n        const consumedOffset = this.getConsumedOffset(flowPosition);\n        if (consumedOffset < currentPosition) {\n          currentPosition = consumedOffset;\n        }\n      }\n    }\n    return currentPosition;\n  }\n\n  dumpLocation(position) {\n    Logging.logger.debug(\"Location - page\", this.currentLayoutPosition.page);\n    Logging.logger.debug(\"  current:\", position);\n    Logging.logger.debug(\"  lookup:\", this.lookupOffset);\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (const p of flowPosition.positions) {\n        Logging.logger.debug(\n          \"  Chunk\",\n          `${flowName}:`,\n          p.flowChunk.startOffset,\n        );\n      }\n    }\n  }\n\n  matchPageSide(side: string): boolean {\n    switch (side) {\n      case \"left\":\n      case \"right\":\n      case \"recto\":\n      case \"verso\":\n        return new Exprs.Named(this.style.pageScope, `${side}-page`).evaluate(\n          this,\n        ) as boolean;\n      default:\n        return true;\n    }\n  }\n\n  updateStartSide(layoutPosition: Vtree.LayoutPosition) {\n    for (const name in layoutPosition.flowPositions) {\n      const flowPos = layoutPosition.flowPositions[name];\n      if (flowPos && flowPos.positions.length > 0) {\n        const flowChunk = flowPos.positions[0].flowChunk;\n        if (this.getConsumedOffset(flowPos) === flowChunk.startOffset) {\n          const flowChunkBreakBefore =\n            flowPos.positions[0].flowChunk.breakBefore;\n          const flowBreakAfter = Break.startSideValueToBreakValue(\n            flowPos.startSide,\n          );\n          flowPos.startSide = Break.breakValueToStartSideValue(\n            Break.resolveEffectiveBreakValue(\n              flowBreakAfter,\n              flowChunkBreakBefore,\n            ),\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @param cascadedPageStyle Cascaded page style specified in page context\n   */\n  selectPageMaster(\n    cascadedPageStyle: CssCascade.ElementStyle,\n  ): PageMaster.PageMasterInstance {\n    const cp = this.currentLayoutPosition;\n\n    // 3.5. Page Layout Processing Model\n    // 1. Determine current position in the document: Find the minimal\n    // consumed-offset for all elements not fully-consumed in each primary flow.\n    // Current position is maximum of the results among all primary flows.\n    const currentPosition = this.getPosition(cp);\n    if (currentPosition == Number.POSITIVE_INFINITY) {\n      // end of primary content is reached\n      return null;\n    }\n\n    // 2. Page master selection: for each page master:\n    const pageMasters = this.rootPageBoxInstance\n      .children as PageMaster.PageMasterInstance[];\n    let pageMaster: PageMaster.PageMasterInstance;\n    for (let i = 0; i < pageMasters.length; i++) {\n      pageMaster = pageMasters[i];\n\n      // Skip a page master generated for @page rules\n      if (pageMaster.pageBox.pseudoName === CssPage.pageRuleMasterPseudoName) {\n        continue;\n      }\n      let coeff = 1;\n\n      // A. Calculate lookup position using current position and utilization\n      // (see -epubx-utilization property)\n      const utilization = pageMaster.getProp(this, \"utilization\");\n      if (utilization && utilization.isNum()) {\n        coeff = (utilization as Css.Num).num;\n      }\n      const em = this.queryUnitSize(\"em\", false);\n      const pageArea = this.pageWidth() * this.pageHeight();\n      const lookup = Math.ceil((coeff * pageArea) / (em * em));\n\n      // B. Determine element eligibility. Each element in a flow is considered\n      // eligible if it is is not marked as fully consumed and it comes in the\n      // document before the lookup position. Feed lookupOffset and flow\n      // availability into the context\n      this.lookupOffset = this.styler.styleUntil(currentPosition, lookup);\n      Asserts.assert(cp);\n      this.updateStartSide(cp);\n\n      // update layoutPositionAtPageStart since startSide of FlowChunks may be\n      // updated\n      this.layoutPositionAtPageStart = cp.clone();\n      this.initLingering();\n      this.clearScope(this.style.pageScope);\n\n      // C. Determine content availability. Flow has content available if it\n      // contains eligible elements. D. Determine if page master is enabled\n      // using rules in Section 3.4.7\n      const enabled = pageMaster.getProp(this, \"enabled\");\n\n      // E. First enabled page master is used for the next page\n      if (!enabled || enabled === Css.ident._true) {\n        if (VIVLIOSTYLE_DEBUG) {\n          this.dumpLocation(currentPosition);\n        }\n\n        // The blank page caused by a spread break between two documents\n        // should have no margin box content (issue #666)\n        if (cp.page === 1 && this.blankPageAtStart) {\n          pageMaster.style = {}; // clear root background-color/image\n          const size = cascadedPageStyle[\"size\"];\n          cascadedPageStyle = {}; // clear margin boxes\n          if (size) {\n            // Restore page size (fix for issue #743)\n            cascadedPageStyle[\"size\"] = size;\n          }\n        }\n\n        // Apply @page rules\n        return this.pageManager.getPageRulePageMaster(\n          pageMaster,\n          cascadedPageStyle,\n        );\n      }\n    }\n    throw new Error(\"No enabled page masters\");\n  }\n\n  flowChunkIsAfterParentFlowForcedBreak(flowChunk: Vtree.FlowChunk): boolean {\n    const flows = this.layoutPositionAtPageStart.flows;\n    const parentFlowName = flows[flowChunk.flowName].parentFlowName;\n    if (parentFlowName) {\n      const startOffset = flowChunk.startOffset;\n      const forcedBreakOffsets = flows[parentFlowName].forcedBreakOffsets;\n      if (!forcedBreakOffsets.length || startOffset < forcedBreakOffsets[0]) {\n        return false;\n      }\n      const breakOffsetBeforeStartIndex =\n        Base.binarySearch(\n          forcedBreakOffsets.length,\n          (i) => forcedBreakOffsets[i] > startOffset,\n        ) - 1;\n      const breakOffsetBeforeStart =\n        forcedBreakOffsets[breakOffsetBeforeStartIndex];\n      const parentFlowPosition =\n        this.layoutPositionAtPageStart.flowPositions[parentFlowName];\n      const parentStartOffset = this.getConsumedOffset(parentFlowPosition);\n      if (breakOffsetBeforeStart < parentStartOffset) {\n        return false;\n      }\n      if (parentStartOffset < breakOffsetBeforeStart) {\n        return true;\n      }\n\n      // Special case: parentStartOffset === breakOffsetBeforeStart\n      // In this case, the flowChunk can be used if the start side of the parent\n      // flow matches the current page side.\n      return !this.matchPageSide(parentFlowPosition.startSide);\n    }\n    return false;\n  }\n\n  setFormattingContextToColumn(column: LayoutType.Column, flowName: string) {\n    const flow = this.currentLayoutPosition.flows[flowName];\n    if (!flow.formattingContext) {\n      flow.formattingContext = new LayoutProcessor.BlockFormattingContext(null);\n    }\n    column.flowRootFormattingContext = flow.formattingContext;\n  }\n\n  layoutDeferredPageFloats(column: LayoutType.Column): Task.Result<boolean> {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getDeferredPageFloatContinuations();\n\n    // Prevent deferred page floats from appearing in the preceding pages,\n    // e.g., during re-layout the TOC page with target-counter() referencing\n    // later sections containing page floats. (Issue #681)\n    const checkPageFloatForLaterPage = (\n      float: PageFloats.PageFloat,\n    ): boolean => {\n      // FIXME: This check is incomplete when float-reference is other than \"page\".\n      // so give up for now to prevent another problem (Issue #962).\n      if (\n        !this.pageAreaWidth &&\n        !this.pageAreaHeight &&\n        float.floatReference !== PageFloats.FloatReference.PAGE\n      ) {\n        return false;\n      }\n      const pageStartPos = this.layoutPositionAtPageStart.flowPositions.body;\n      const pageStartOffset =\n        pageStartPos && this.getConsumedOffset(pageStartPos);\n      const deferredFloatOffset = this.xmldoc.getNodeOffset(\n        float.nodePosition.steps[0].node,\n        0,\n        false,\n      );\n      return (\n        deferredFloatOffset != null &&\n        pageStartOffset != null &&\n        deferredFloatOffset > pageStartOffset\n      );\n    };\n\n    const frame = Task.newFrame<boolean>(\"layoutDeferredPageFloats\");\n    let invalidated = false;\n    let i = 0;\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === deferredFloats.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const continuation = deferredFloats[i++];\n        const float = continuation.float;\n\n        // Prevent deferred page floats from appearing in the preceding pages\n        // (Issue #681)\n        if (checkPageFloatForLaterPage(float)) {\n          loopFrame.breakLoop();\n          return;\n        }\n\n        const strategy =\n          new PageFloats.PageFloatLayoutStrategyResolver().findByFloat(float);\n        const pageFloatFragment = strategy.findPageFloatFragment(\n          float,\n          pageFloatLayoutContext,\n        );\n        if (pageFloatFragment && pageFloatFragment.hasFloat(float)) {\n          loopFrame.continueLoop();\n          return;\n        } else if (\n          pageFloatLayoutContext.isForbidden(float) ||\n          pageFloatLayoutContext.hasPrecedingFloatsDeferredToNext(float)\n        ) {\n          pageFloatLayoutContext.deferPageFloat(continuation);\n          loopFrame.breakLoop();\n          return;\n        }\n        column\n          .layoutPageFloatInner(continuation, strategy, null, pageFloatFragment)\n          .then((success) => {\n            if (!success) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const parentInvalidated =\n              pageFloatLayoutContext.parent.isInvalidated();\n            if (parentInvalidated) {\n              loopFrame.breakLoop();\n              return;\n            } else if (\n              pageFloatLayoutContext.isInvalidated() &&\n              !parentInvalidated\n            ) {\n              invalidated = true;\n              pageFloatLayoutContext.validate();\n            }\n            loopFrame.continueLoop();\n          });\n      })\n      .then(() => {\n        if (invalidated) {\n          pageFloatLayoutContext.invalidate();\n        }\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getLastAfterPositionIfDeferredFloatsExists(\n    column: LayoutType.Column,\n    newPosition: Vtree.ChunkPosition | null,\n  ): Vtree.ChunkPosition | null {\n    const pageFloatLayoutContext = column.pageFloatLayoutContext;\n    const deferredFloats =\n      pageFloatLayoutContext.getPageFloatContinuationsDeferredToNext();\n    if (deferredFloats.length > 0) {\n      if (column.lastAfterPosition) {\n        let result: Vtree.ChunkPosition;\n        if (newPosition) {\n          // Need overflown footnotes owned by newPosition\n          result = newPosition.clone();\n          result.primary = column.lastAfterPosition;\n        } else {\n          result = new Vtree.ChunkPosition(column.lastAfterPosition);\n        }\n        return result;\n      } else {\n        Asserts.assert(\"column.lastAfterPosition === null\");\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutColumn(\n    column: LayoutType.Column,\n    flowName: string,\n  ): Task.Result<boolean> {\n    const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n    if (!flowPosition || !this.matchPageSide(flowPosition.startSide)) {\n      return Task.newResult(true);\n    }\n    flowPosition.startSide = \"any\";\n    this.setFormattingContextToColumn(column, flowName);\n    column.init();\n    if (this.primaryFlows[flowName] && column.bands.length > 0) {\n      // In general, we force non-fitting content. Exception is only for primary\n      // flow columns that have exclusions.\n      column.forceNonfitting = false;\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutColumn\");\n    this.layoutDeferredPageFloats(column).then(() => {\n      if (column.pageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n\n      // Record indices of repeated positions and removed positions\n      const repeatedIndices = [] as number[];\n      const removedIndices = [] as number[];\n      let leadingEdge = true;\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (\n            column.pageFloatLayoutContext.hasContinuingFloatFragmentsInFlow(\n              flowName,\n            )\n          ) {\n            loopFrame.breakLoop();\n            return;\n          }\n          while (flowPosition.positions.length - removedIndices.length > 0) {\n            let index = 0;\n\n            // Skip all removed positions\n            while (removedIndices.includes(index)) {\n              index++;\n            }\n            let selected = flowPosition.positions[index];\n            if (\n              selected.flowChunk.startOffset > this.lookupOffset ||\n              this.flowChunkIsAfterParentFlowForcedBreak(selected.flowChunk)\n            ) {\n              break;\n            }\n            for (let k = index + 1; k < flowPosition.positions.length; k++) {\n              if (removedIndices.includes(k)) {\n                continue; // Skip removed positions\n              }\n              const alt = flowPosition.positions[k];\n              if (\n                alt.flowChunk.startOffset > this.lookupOffset ||\n                this.flowChunkIsAfterParentFlowForcedBreak(alt.flowChunk)\n              ) {\n                break;\n              }\n              if (alt.flowChunk.isBetter(selected.flowChunk)) {\n                selected = alt;\n                index = k;\n              }\n            }\n            const flowChunk = selected.flowChunk;\n            let pending = true;\n            column\n              .layout(\n                selected.chunkPosition,\n                leadingEdge,\n                flowPosition.breakAfter,\n              )\n              .then((newPosition) => {\n                if (column.pageFloatLayoutContext.isInvalidated()) {\n                  loopFrame.breakLoop();\n                  return;\n                }\n                leadingEdge = false;\n\n                // static: keep in the flow\n                if (\n                  selected.flowChunk.repeated &&\n                  (newPosition === null || flowChunk.exclusive)\n                ) {\n                  repeatedIndices.push(index);\n                }\n                if (flowChunk.exclusive) {\n                  // exclusive, only can have one, remove from the flow even\n                  // if it did not fit\n                  removedIndices.push(index);\n                  loopFrame.breakLoop();\n                  return;\n                } else {\n                  // not exclusive\n                  const endOfColumn = !!newPosition || !!column.pageBreakType;\n                  const lastAfterPosition =\n                    this.getLastAfterPositionIfDeferredFloatsExists(\n                      column,\n                      newPosition,\n                    );\n                  if (column.pageBreakType && lastAfterPosition) {\n                    selected.chunkPosition = lastAfterPosition;\n\n                    // TODO propagate pageBreakType\n                    flowPosition.breakAfter = column.pageBreakType;\n                    column.pageBreakType = null;\n                  } else {\n                    // go to the next element in the flow\n                    removedIndices.push(index);\n                    if (newPosition || lastAfterPosition) {\n                      // did not fit completely\n                      selected.chunkPosition = newPosition || lastAfterPosition;\n                      repeatedIndices.push(index);\n                    }\n                    if (column.pageBreakType) {\n                      // forced break\n                      flowPosition.startSide = Break.breakValueToStartSideValue(\n                        column.pageBreakType,\n                      );\n                    }\n                  }\n                  if (endOfColumn) {\n                    loopFrame.breakLoop();\n                    return;\n                  }\n                }\n\n                // Since at least one flowChunk has been placed in the\n                // column, the next flowChunk of the flow can be deferred to\n                // the next partition if there is not enough space in the\n                // current partition.\n                column.forceNonfitting = false;\n                if (pending) {\n                  // Sync result\n                  pending = false;\n                } else {\n                  // Async result\n                  loopFrame.continueLoop();\n                }\n              });\n            if (pending) {\n              // Async result\n              pending = false;\n              return;\n            }\n          }\n\n          // Sync result\n          loopFrame.breakLoop();\n        })\n        .then(() => {\n          if (!column.pageFloatLayoutContext.isInvalidated()) {\n            // Keep positions repeated or not removed\n            flowPosition.positions = flowPosition.positions.filter(\n              (pos, i) =>\n                repeatedIndices.includes(i) || !removedIndices.includes(i),\n            );\n            if (flowPosition.breakAfter === \"column\") {\n              flowPosition.breakAfter = null;\n            }\n            column.saveDistanceToBlockEndFloats();\n            const edge = column.pageFloatLayoutContext.getMaxReachedAfterEdge();\n            column.updateMaxReachedAfterEdge(edge);\n          }\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  createLayoutConstraint(\n    pageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): LayoutType.LayoutConstraint {\n    const pageIndex = this.currentLayoutPosition.page - 1;\n    const counterConstraint =\n      this.counterStore.createLayoutConstraint(pageIndex);\n    return new Layout.AllLayoutConstraint(\n      [counterConstraint].concat(pageFloatLayoutContext.getLayoutConstraints()),\n    );\n  }\n\n  private createAndLayoutColumn(\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    layoutContainer: Vtree.Container,\n    currentColumnIndex: number,\n    flowNameStr: string,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    columnCount: number,\n    columnGap: number,\n    columnWidth: number,\n    innerShape: GeometryUtil.Shape,\n    layoutContext: Vtree.LayoutContext,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column> {\n    const dontApplyExclusions = boxInstance.vertical\n      ? boxInstance.isAutoWidth && boxInstance.isRightDependentOnAutoWidth\n      : boxInstance.isAutoHeight && boxInstance.isTopDependentOnAutoHeight;\n    const boxContainer = layoutContainer.element;\n    const columnPageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      regionPageFloatLayoutContext,\n      PageFloats.FloatReference.COLUMN,\n      null,\n      flowNameStr,\n      null,\n      null,\n      null,\n    );\n    const positionAtColumnStart = this.currentLayoutPosition.clone();\n    const frame: Task.Frame<LayoutType.Column> = Task.newFrame(\n      \"createAndLayoutColumn\",\n    );\n    let column: LayoutType.Column;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const layoutConstraint = this.createLayoutConstraint(\n          columnPageFloatLayoutContext,\n        );\n        if (columnCount > 1) {\n          const columnContainer = this.viewport.document.createElement(\"div\");\n          Base.setCSSProperty(columnContainer, \"position\", \"absolute\");\n          boxContainer.appendChild(columnContainer);\n          column = new Layout.Column(\n            columnContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.forceNonfitting = forceNonFitting;\n          column.vertical = layoutContainer.vertical;\n          column.snapHeight = layoutContainer.snapHeight;\n          column.snapWidth = layoutContainer.snapWidth;\n          if (layoutContainer.vertical) {\n            const columnY =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingTop;\n            const outerWidth = parseFloat(\n              (boxContainer as HTMLElement).style.width,\n            );\n            column.setHorizontalPosition(\n              layoutContainer.paddingLeft + outerWidth - layoutContainer.width,\n              layoutContainer.width,\n            );\n            column.setVerticalPosition(columnY, columnWidth);\n          } else {\n            const columnX =\n              currentColumnIndex * (columnWidth + columnGap) +\n              layoutContainer.paddingLeft;\n            column.setVerticalPosition(\n              layoutContainer.paddingTop,\n              layoutContainer.height,\n            );\n            column.setHorizontalPosition(columnX, columnWidth);\n          }\n          column.originX = offsetX;\n          column.originY = offsetY;\n        } else {\n          column = new Layout.Column(\n            boxContainer,\n            layoutContext,\n            this.clientLayout,\n            layoutConstraint,\n            columnPageFloatLayoutContext,\n          );\n          column.copyFrom(layoutContainer);\n        }\n        column.exclusions = dontApplyExclusions ? [] : exclusions.concat();\n        column.innerShape = innerShape;\n        columnPageFloatLayoutContext.setContainer(column);\n        if (column.width >= 0) {\n          // column.element.style.outline = \"1px dotted green\";\n          this.layoutColumn(column, flowNameStr).then(() => {\n            if (!columnPageFloatLayoutContext.isInvalidated()) {\n              columnPageFloatLayoutContext.finish();\n            }\n            if (\n              column.pageFloatLayoutContext.isInvalidated() &&\n              !regionPageFloatLayoutContext.isInvalidated()\n            ) {\n              column.pageFloatLayoutContext.validate();\n              this.currentLayoutPosition = positionAtColumnStart.clone();\n              if (column.element !== boxContainer) {\n                boxContainer.removeChild(column.element);\n              }\n              loopFrame.continueLoop();\n            } else {\n              loopFrame.breakLoop();\n            }\n          });\n        } else {\n          columnPageFloatLayoutContext.finish();\n          loopFrame.breakLoop();\n        }\n      })\n      .then(() => {\n        frame.finish(column);\n      });\n    return frame.result();\n  }\n\n  setPagePageFloatLayoutContextContainer(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n  ) {\n    if (\n      boxInstance instanceof CssPage.PageRulePartitionInstance ||\n      (boxInstance instanceof PageMaster.PageMasterInstance &&\n        !(boxInstance instanceof CssPage.PageRuleMasterInstance))\n    ) {\n      pagePageFloatLayoutContext.setContainer(layoutContainer);\n    }\n  }\n\n  getRegionPageFloatLayoutContext(\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    boxInstance: PageMaster.PageBoxInstance,\n    layoutContainer: Vtree.Container,\n    flowName: string,\n  ): PageFloats.PageFloatLayoutContext {\n    Asserts.assert(boxInstance instanceof PageMaster.PartitionInstance);\n    const writingMode = boxInstance.getProp(this, \"writing-mode\") || null;\n    const direction = boxInstance.getProp(this, \"direction\") || null;\n    return new PageFloats.PageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      PageFloats.FloatReference.REGION,\n      layoutContainer,\n      flowName,\n      null,\n      writingMode,\n      direction,\n    );\n  }\n\n  layoutFlowColumnsWithBalancing(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n  ): Task.Result<LayoutType.Column[]> {\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const regionPageFloatLayoutContext = this.getRegionPageFloatLayoutContext(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n      flowNameStr,\n    );\n    let isFirstTime = true;\n\n    const layoutColumns = () => {\n      this.currentLayoutPosition = positionAtContainerStart.clone();\n      return this.layoutFlowColumns(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n        isFirstTime,\n      ).thenAsync((columns) => {\n        if (columns) {\n          return Task.newResult({\n            columns,\n            position: this.currentLayoutPosition,\n          });\n        } else {\n          return Task.newResult(null);\n        }\n      });\n    };\n\n    return layoutColumns().thenAsync((generatorResult) => {\n      if (!generatorResult) {\n        return Task.newResult(null);\n      }\n      if (columnCount <= 1) {\n        return Task.newResult(generatorResult.columns);\n      }\n      const columnFill =\n        (boxInstance.getProp(this, \"column-fill\") as Css.Ident) ||\n        Css.ident.balance;\n      const flowPosition =\n        this.currentLayoutPosition.flowPositions[flowNameStr];\n      Asserts.assert(flowPosition);\n      const columnBalancer = Columns.createColumnBalancer(\n        columnCount,\n        columnFill,\n        layoutColumns,\n        regionPageFloatLayoutContext,\n        layoutContainer,\n        generatorResult.columns,\n        flowPosition,\n      );\n      if (!columnBalancer) {\n        return Task.newResult(generatorResult.columns);\n      }\n      isFirstTime = false;\n      pagePageFloatLayoutContext.lock();\n      regionPageFloatLayoutContext.lock();\n      return columnBalancer\n        .balanceColumns(generatorResult)\n        .thenAsync((result) => {\n          pagePageFloatLayoutContext.unlock();\n          pagePageFloatLayoutContext.validate();\n          regionPageFloatLayoutContext.unlock();\n          this.currentLayoutPosition = result.position;\n          return Task.newResult(result.columns);\n        });\n    });\n  }\n\n  layoutFlowColumns(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    regionPageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n    layoutContainer: Vtree.Container,\n    flowNameStr: string,\n    columnCount: number,\n    forceNonFitting: boolean,\n  ): Task.Result<LayoutType.Column[] | null> {\n    const frame: Task.Frame<LayoutType.Column[] | null> =\n      Task.newFrame(\"layoutFlowColumns\");\n    const positionAtContainerStart = this.currentLayoutPosition.clone();\n    const columnGap = boxInstance.getPropAsNumber(this, \"column-gap\");\n\n    // Don't query columnWidth when it's not needed, so that width calculation\n    // can be delayed for width: auto columns.\n    const columnWidth =\n      columnCount > 1\n        ? boxInstance.getPropAsNumber(this, \"column-width\")\n        : layoutContainer.width;\n    const regionIds = boxInstance.getActiveRegions(this);\n    const innerShapeVal = boxInstance.getProp(this, \"shape-inside\");\n    const innerShape = CssProp.toShape(\n      innerShapeVal,\n      0,\n      0,\n      layoutContainer.width,\n      layoutContainer.height,\n      this,\n    );\n    const layoutContext = new Vgen.ViewFactory(\n      flowNameStr,\n      this,\n      this.viewport,\n      this.styler,\n      regionIds,\n      this.xmldoc,\n      this.faces,\n      this.style.footnoteProps,\n      this,\n      page,\n      this.customRenderer,\n      this.fallbackMap,\n      this.documentURLTransformer,\n    );\n    let columnIndex = 0;\n    let column: LayoutType.Column = null;\n    let columns: LayoutType.Column[] = [];\n    frame\n      .loopWithFrame((loopFrame) => {\n        this.createAndLayoutColumn(\n          boxInstance,\n          offsetX,\n          offsetY,\n          exclusions,\n          layoutContainer,\n          columnIndex++,\n          flowNameStr,\n          regionPageFloatLayoutContext,\n          columnCount,\n          columnGap,\n          columnWidth,\n          innerShape,\n          layoutContext,\n          forceNonFitting,\n        ).then((c) => {\n          if (pagePageFloatLayoutContext.isInvalidated()) {\n            columns = null;\n            loopFrame.breakLoop();\n            return;\n          }\n          const forcedRegionBreak =\n            !!c.pageBreakType && c.pageBreakType !== \"column\";\n          if (\n            (forcedRegionBreak || columnIndex === columnCount) &&\n            !regionPageFloatLayoutContext.isInvalidated()\n          ) {\n            regionPageFloatLayoutContext.finish();\n          }\n          if (regionPageFloatLayoutContext.isInvalidated()) {\n            columnIndex = 0;\n            this.currentLayoutPosition = positionAtContainerStart.clone();\n            regionPageFloatLayoutContext.validate();\n            if (regionPageFloatLayoutContext.isLocked()) {\n              columns = null;\n              loopFrame.breakLoop();\n            } else {\n              loopFrame.continueLoop();\n            }\n            return;\n          }\n          column = c;\n          columns[columnIndex - 1] = column;\n          if (column.pageBreakType) {\n            if (column.pageBreakType != \"column\") {\n              // skip remaining columns\n              columnIndex = columnCount;\n              if (column.pageBreakType != \"region\") {\n                // skip remaining regions\n                this.pageBreaks[flowNameStr] = true;\n              }\n            }\n          }\n          if (columnIndex < columnCount) {\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(columns);\n      });\n    return frame.result();\n  }\n\n  /**\n   * @return holding true\n   */\n  layoutContainer(\n    page: Vtree.Page,\n    boxInstance: PageMaster.PageBoxInstance,\n    parentContainer: HTMLElement,\n    offsetX: number,\n    offsetY: number,\n    exclusions: GeometryUtil.Shape[],\n    pagePageFloatLayoutContext: PageFloats.PageFloatLayoutContext,\n  ): Task.Result<boolean> {\n    boxInstance.reset();\n    const enabled = boxInstance.getProp(this, \"enabled\");\n    if (enabled && enabled !== Css.ident._true) {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"layoutContainer\");\n    const wrapFlow = boxInstance.getProp(this, \"wrap-flow\");\n    const dontExclude = wrapFlow === Css.ident.auto;\n    const flowName = boxInstance.getProp(this, \"flow-from\");\n    const boxContainer = this.viewport.document.createElement(\"div\");\n    const position = boxInstance.getProp(this, \"position\");\n    Base.setCSSProperty(\n      boxContainer,\n      \"position\",\n      position ? (position as any).name : \"absolute\",\n    );\n\n    // The -epubx-page-master partitions are laid out in the reverse order\n    // (see the spec http://idpf.org/epub/pgt/ ),\n    // but for css-page rules, now use forward order, i.e., the page-area first.\n    // This is necessary for running headers named strings support.\n    const forwardOrderInLayout =\n      boxInstance instanceof CssPage.PageRuleMasterInstance;\n    const forwardOrderInTree =\n      boxInstance instanceof PageMaster.PartitionInstance;\n\n    if (forwardOrderInTree) {\n      parentContainer.appendChild(boxContainer);\n    } else {\n      parentContainer.insertBefore(boxContainer, parentContainer.firstChild);\n    }\n\n    let layoutContainer = new Vtree.Container(boxContainer);\n    layoutContainer.vertical = boxInstance.vertical;\n    layoutContainer.exclusions = exclusions;\n    boxInstance.prepareContainer(\n      this,\n      layoutContainer,\n      page,\n      this.faces,\n      this.clientLayout,\n    );\n\n    if (\n      boxInstance instanceof CssPage.PageRuleMasterInstance &&\n      (layoutContainer.width <= 0 || layoutContainer.height <= 0)\n    ) {\n      Logging.logger.warn(\"Negative or zero page area size\");\n    }\n\n    layoutContainer.originX = offsetX;\n    layoutContainer.originY = offsetY;\n    offsetX +=\n      layoutContainer.left +\n      layoutContainer.marginLeft +\n      layoutContainer.borderLeft;\n    offsetY +=\n      layoutContainer.top +\n      layoutContainer.marginTop +\n      layoutContainer.borderTop;\n    this.setPagePageFloatLayoutContextContainer(\n      pagePageFloatLayoutContext,\n      boxInstance,\n      layoutContainer,\n    );\n    let cont: Task.Result<boolean>;\n    let removed = false;\n    if (!flowName || !flowName.isIdent()) {\n      const contentVal = boxInstance.getProp(this, \"content\");\n      if (contentVal && Vtree.nonTrivialContent(contentVal)) {\n        let innerContainerTag = \"span\";\n        if ((contentVal as any).url) {\n          innerContainerTag = \"img\";\n        }\n        const innerContainer =\n          this.viewport.document.createElement(innerContainerTag);\n        contentVal.visit(\n          new Vtree.ContentPropertyHandler(\n            innerContainer,\n            this,\n            contentVal,\n            this.counterStore.getExprContentListener(),\n          ),\n        );\n        boxContainer.appendChild(innerContainer);\n        if (innerContainerTag == \"img\") {\n          boxInstance.transferSinglUriContentProps(\n            this,\n            innerContainer,\n            this.faces,\n          );\n        }\n        boxInstance.transferContentProps(\n          this,\n          layoutContainer,\n          page,\n          this.faces,\n        );\n        if (innerContainerTag == \"span\") {\n          // text-spacing & hanging-punctuation on margin boxes\n          TextPolyfill.processGeneratedContent(\n            innerContainer,\n            boxInstance.getProp(this, \"text-spacing\"),\n            boxInstance.getProp(this, \"hanging-punctuation\"),\n            this.lang,\n            boxInstance.vertical,\n          );\n        }\n      } else if (boxInstance.suppressEmptyBoxGeneration) {\n        parentContainer.removeChild(boxContainer);\n        removed = true;\n      }\n      if (!removed) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    } else if (!this.pageBreaks[flowName.toString()]) {\n      const innerFrame: Task.Frame<boolean> = Task.newFrame(\n        \"layoutContainer.inner\",\n      );\n      const flowNameStr = flowName.toString();\n\n      // for now only a single column in vertical case\n      const columnCount = boxInstance.getPropAsNumber(this, \"column-count\");\n      this.layoutFlowColumnsWithBalancing(\n        page,\n        boxInstance,\n        offsetX,\n        offsetY,\n        exclusions,\n        pagePageFloatLayoutContext,\n        layoutContainer,\n        flowNameStr,\n        columnCount,\n      ).then((columns) => {\n        if (!pagePageFloatLayoutContext.isInvalidated()) {\n          const column = columns[0];\n          Asserts.assert(column);\n          if (column.element === boxContainer) {\n            layoutContainer = column;\n          }\n          layoutContainer.computedBlockSize = Math.max.apply(\n            null,\n            columns.map((c) => c.computedBlockSize),\n          );\n          boxInstance.finishContainer(\n            this,\n            layoutContainer,\n            page,\n            column,\n            columnCount,\n            this.clientLayout,\n            this.faces,\n          );\n          const flowPosition =\n            this.currentLayoutPosition.flowPositions[flowNameStr];\n          if (flowPosition && flowPosition.breakAfter === \"region\") {\n            flowPosition.breakAfter = null;\n          }\n        }\n        innerFrame.finish(true);\n      });\n      cont = innerFrame.result();\n    } else {\n      if (!pagePageFloatLayoutContext.isInvalidated()) {\n        boxInstance.finishContainer(\n          this,\n          layoutContainer,\n          page,\n          null,\n          1,\n          this.clientLayout,\n          this.faces,\n        );\n      }\n      cont = Task.newResult(true);\n    }\n    cont.then(() => {\n      if (pagePageFloatLayoutContext.isInvalidated()) {\n        frame.finish(true);\n        return;\n      }\n      if (\n        !boxInstance.isAutoHeight ||\n        Math.floor(layoutContainer.computedBlockSize) > 0\n      ) {\n        if (!removed && !dontExclude) {\n          const outerShapeProp = boxInstance.getProp(this, \"shape-outside\");\n          const outerShape = layoutContainer.getOuterShape(\n            outerShapeProp,\n            this,\n          );\n\n          // Though it seems that LShapeFloatBug still exists in Firefox, it\n          // apparently does not occur on exclusion floats. See the test file:\n          // test/files/column-break-bug.html\n          // if (Base.checkLShapeFloatBug(this.viewport.root)) {\n          // \t// Simplistic bug workaround: add a copy of the shape translated up.\n          //     exclusions.push(outerShape.withOffset(0, -1.25 * this.queryUnitSize(\"em\", false)));\n          // }\n          exclusions.push(outerShape);\n        }\n      } else if (boxInstance.children.length == 0) {\n        parentContainer.removeChild(boxContainer);\n        frame.finish(true);\n        return;\n      }\n      let i = forwardOrderInLayout ? 0 : boxInstance.children.length - 1;\n      frame\n        .loop(() => {\n          while (i >= 0 && i < boxInstance.children.length) {\n            const child =\n              boxInstance.children[forwardOrderInLayout ? i++ : i--];\n            const r = this.layoutContainer(\n              page,\n              child,\n              boxContainer as HTMLElement,\n              offsetX,\n              offsetY,\n              exclusions,\n              pagePageFloatLayoutContext,\n            );\n            if (r.isPending()) {\n              return r.thenAsync(() =>\n                Task.newResult(!pagePageFloatLayoutContext.isInvalidated()),\n              );\n            } else if (pagePageFloatLayoutContext.isInvalidated()) {\n              break;\n            }\n          }\n          return Task.newResult(false);\n        })\n        .then(() => {\n          frame.finish(true);\n        });\n    });\n    return frame.result();\n  }\n\n  processLinger(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage >= 0 &&\n          pos.flowChunk.startPage + pos.flowChunk.linger - 1 <= pageNumber\n        ) {\n          flowPosition.positions.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  initLingering(): void {\n    const pageNumber = this.currentLayoutPosition.page;\n    for (const flowName in this.currentLayoutPosition.flowPositions) {\n      const flowPosition = this.currentLayoutPosition.flowPositions[flowName];\n      for (let i = flowPosition.positions.length - 1; i >= 0; i--) {\n        const pos = flowPosition.positions[i];\n        if (\n          pos.flowChunk.startPage < 0 &&\n          pos.flowChunk.startOffset < this.lookupOffset\n        ) {\n          pos.flowChunk.startPage = pageNumber;\n        }\n      }\n    }\n  }\n\n  noMorePrimaryFlows(cp: Vtree.LayoutPosition): boolean {\n    for (const flowName in this.primaryFlows) {\n      const flowPosition = cp.flowPositions[flowName];\n      if (flowPosition && flowPosition.positions.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  layoutNextPage(\n    page: Vtree.Page,\n    cp?: Vtree.LayoutPosition,\n  ): Task.Result<Vtree.LayoutPosition> {\n    // TOC box is special page container, no pagination\n    const isTocBox = page.container === page.bleedBox;\n\n    this.pageBreaks = {};\n    if (cp) {\n      this.currentLayoutPosition = cp.clone();\n      this.styler.replayFlowElementsFromOffset(cp.highestSeenOffset);\n    } else {\n      this.currentLayoutPosition = new Vtree.LayoutPosition();\n      this.styler.replayFlowElementsFromOffset(-1);\n    }\n    if (this.lang) {\n      page.bleedBox.setAttribute(\"lang\", this.lang);\n    }\n    cp = this.currentLayoutPosition;\n\n    // Limit number of pages to prevent endless page generation\n    const LIMIT_PAGES = 10000;\n    if (cp.page > LIMIT_PAGES) {\n      throw new Error(`Too many pages generated (over ${LIMIT_PAGES} pages)`);\n    }\n    cp.page++;\n\n    const startSide = cp.flowPositions[\"body\"]?.startSide;\n    cp.isBlankPage =\n      startSide && startSide !== \"any\" && this.matchPageSide(startSide);\n    page.isBlankPage = cp.isBlankPage;\n\n    this.clearScope(this.style.pageScope);\n    this.layoutPositionAtPageStart = cp.clone();\n\n    // Resolve page size before page master selection.\n    const cascadedPageStyle = isTocBox\n      ? ({} as CssCascade.ElementStyle)\n      : this.pageManager.getCascadedPageStyle(\n          (page.isBlankPage\n            ? this.styler.cascade.previousPageType\n            : this.styler.cascade.currentPageType) ?? \"\",\n        );\n\n    // Substitute var()\n    this.styler.cascade.applyVarFilter([cascadedPageStyle], this.styler, null);\n\n    // Calculate calc()\n    this.styler.cascade.applyCalcFilter(cascadedPageStyle, this.styler);\n\n    const pageMaster = this.selectPageMaster(cascadedPageStyle);\n    if (!pageMaster) {\n      // end of primary content\n      return Task.newResult(null as Vtree.LayoutPosition);\n    }\n    let bleedBoxPaddingEdge = 0;\n    if (!isTocBox) {\n      page.setAutoPageWidth(\n        (pageMaster.pageBox.specified[\"width\"] as CssCascade.CascadeValue)\n          .value === Css.fullWidth,\n      );\n      page.setAutoPageHeight(\n        (pageMaster.pageBox.specified[\"height\"] as CssCascade.CascadeValue)\n          .value === Css.fullHeight,\n      );\n      this.counterStore.setCurrentPage(page);\n      this.counterStore.updatePageCounters(cascadedPageStyle, this);\n\n      // setup bleed area and crop marks\n      const evaluatedPageSizeAndBleed = CssPage.evaluatePageSizeAndBleed(\n        CssPage.resolvePageSizeAndBleed(cascadedPageStyle as any),\n        this,\n      );\n      this.setPageSizeAndBleed(evaluatedPageSizeAndBleed, page);\n      CssPage.addPrinterMarks(\n        cascadedPageStyle,\n        evaluatedPageSizeAndBleed,\n        page,\n        this,\n      );\n      bleedBoxPaddingEdge =\n        evaluatedPageSizeAndBleed.bleedOffset + evaluatedPageSizeAndBleed.bleed;\n    }\n\n    const writingMode =\n      (!isTocBox && pageMaster.getProp(this, \"writing-mode\")) ||\n      Css.ident.horizontal_tb;\n\n    this.pageVertical = writingMode != Css.ident.horizontal_tb;\n\n    const direction = pageMaster.getProp(this, \"direction\") || Css.ident.ltr;\n    const pageFloatLayoutContext = new PageFloats.PageFloatLayoutContext(\n      this.rootPageFloatLayoutContext,\n      PageFloats.FloatReference.PAGE,\n      null,\n      null,\n      null,\n      writingMode,\n      direction,\n    );\n    const frame: Task.Frame<Vtree.LayoutPosition> =\n      Task.newFrame(\"layoutNextPage\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        // this.layoutContainer(page, pageMaster, page.bleedBox, bleedBoxPaddingEdge, bleedBoxPaddingEdge+1, // Compensate 'top: -1px' on page master\n        this.layoutContainer(\n          page,\n          pageMaster,\n          page.bleedBox,\n          bleedBoxPaddingEdge,\n          bleedBoxPaddingEdge,\n          [],\n          pageFloatLayoutContext,\n        ).then(() => {\n          if (!pageFloatLayoutContext.isInvalidated()) {\n            pageFloatLayoutContext.finish();\n          }\n          if (pageFloatLayoutContext.isInvalidated()) {\n            this.currentLayoutPosition = this.layoutPositionAtPageStart.clone();\n            pageFloatLayoutContext.validate();\n            loopFrame.continueLoop();\n          } else {\n            loopFrame.breakLoop();\n          }\n        });\n      })\n      .then(() => {\n        pageMaster.adjustPageLayout(this, page, this.clientLayout);\n        if (!isTocBox) {\n          const isLeftPage = new Exprs.Named(\n            pageMaster.pageBox.scope,\n            \"left-page\",\n          );\n          page.side = isLeftPage.evaluate(this)\n            ? Constants.PageSide.LEFT\n            : Constants.PageSide.RIGHT;\n          this.processLinger();\n          cp = this.currentLayoutPosition;\n          Object.keys(cp.flowPositions).forEach((flowName) => {\n            const flowPosition = cp.flowPositions[flowName];\n            const breakAfter = flowPosition.breakAfter;\n            if (\n              breakAfter &&\n              (breakAfter === \"page\" || !this.matchPageSide(breakAfter))\n            ) {\n              flowPosition.breakAfter = null;\n            }\n          });\n        }\n        this.currentLayoutPosition = this.layoutPositionAtPageStart = null;\n        cp.highestSeenOffset = this.styler.getReachedOffset();\n        const triggers = this.style.store.getTriggersForDoc(this.xmldoc);\n        page.finish(triggers, this.clientLayout);\n        if (this.noMorePrimaryFlows(cp)) {\n          cp = null;\n        }\n        frame.finish(cp);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Set actual page width, height and bleed from style specified in page\n   * context.\n   */\n  private setPageSizeAndBleed(\n    evaluatedPageSizeAndBleed: CssPage.EvaluatedPageSizeAndBleed,\n    page: Vtree.Page,\n  ) {\n    this.actualPageWidth = evaluatedPageSizeAndBleed.pageWidth;\n    this.actualPageHeight = evaluatedPageSizeAndBleed.pageHeight;\n    this.pageSheetWidth =\n      evaluatedPageSizeAndBleed.pageWidth +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    this.pageSheetHeight =\n      evaluatedPageSizeAndBleed.pageHeight +\n      evaluatedPageSizeAndBleed.cropOffset * 2;\n    page.container.style.width = `${this.pageSheetWidth}px`;\n    page.container.style.height = `${this.pageSheetHeight}px`;\n    page.bleedBox.style.left = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.right = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.top = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.bottom = `${evaluatedPageSizeAndBleed.bleedOffset}px`;\n    page.bleedBox.style.padding = `${evaluatedPageSizeAndBleed.bleed}px`;\n  }\n}\n\nexport class BaseParserHandler extends CssCascade.CascadeParserHandler {\n  insideRegion: boolean = false;\n\n  constructor(\n    public masterHandler: StyleParserHandler,\n    condition: Exprs.Val,\n    parent: BaseParserHandler,\n    regionId: string | null,\n  ) {\n    super(\n      masterHandler.rootScope,\n      masterHandler,\n      condition,\n      parent,\n      regionId,\n      masterHandler.validatorSet,\n      !parent,\n    );\n  }\n\n  /**\n   * @override\n   */\n  startPageTemplateRule(): void {}\n\n  /**\n   * @override\n   */\n  startPageMasterRule(\n    name: string | null,\n    pseudoName: string | null,\n    classes: string[],\n  ): void {\n    const pageMaster = new PageMaster.PageMaster(\n      this.masterHandler.pageScope,\n      name,\n      pseudoName,\n      classes,\n      this.masterHandler.rootBox,\n      this.condition,\n      this.owner.getBaseSpecificity(),\n    );\n    this.masterHandler.pushHandler(\n      new PageMaster.PageMasterParserHandler(\n        pageMaster.scope,\n        this.masterHandler,\n        pageMaster,\n        this.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startWhenRule(expr: Css.Expr): void {\n    let condition = expr.expr;\n    if (this.condition != null) {\n      condition = Exprs.and(this.scope, this.condition, condition);\n    }\n    this.masterHandler.pushHandler(\n      new BaseParserHandler(this.masterHandler, condition, this, this.regionId),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startDefineRule(): void {\n    this.masterHandler.pushHandler(\n      new CssCascade.DefineParserHandler(this.scope, this.owner),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFontFaceRule(): void {\n    const properties = {} as CssCascade.ElementStyle;\n    this.masterHandler.fontFaces.push({\n      properties,\n      condition: this.condition,\n    });\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        properties,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFlowRule(flowName: string): void {\n    let style = this.masterHandler.flowProps[flowName];\n    if (!style) {\n      style = {} as CssCascade.ElementStyle;\n      this.masterHandler.flowProps[flowName] = style;\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startViewportRule(): void {\n    const viewportProps = {} as CssCascade.ElementStyle;\n    this.masterHandler.viewportProps.push(viewportProps);\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        this.condition,\n        viewportProps,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startFootnoteRule(pseudoelem: string | null): void {\n    let style = this.masterHandler.footnoteProps;\n    if (pseudoelem) {\n      const pseudos = CssCascade.getMutableStyleMap(style, \"_pseudos\");\n      style = pseudos[pseudoelem];\n      if (!style) {\n        style = {} as CssCascade.ElementStyle;\n        pseudos[pseudoelem] = style;\n      }\n    }\n    this.masterHandler.pushHandler(\n      new CssCascade.PropSetParserHandler(\n        this.scope,\n        this.owner,\n        null,\n        style,\n        this.masterHandler.validatorSet,\n      ),\n    );\n  }\n\n  /**\n   * @override\n   */\n  startRegionRule(): void {\n    this.insideRegion = true;\n    this.startSelectorRule();\n  }\n\n  /**\n   * @override\n   */\n  startPageRule(): void {\n    const pageHandler = new CssPage.PageParserHandler(\n      this.masterHandler.pageScope,\n      this.masterHandler,\n      this,\n      this.validatorSet,\n      this.masterHandler.pageProps,\n    );\n    this.masterHandler.pushHandler(pageHandler);\n    pageHandler.startPageRule();\n  }\n\n  /**\n   * @override\n   */\n  startRuleBody(): void {\n    CssCascade.CascadeParserHandler.prototype.startRuleBody.call(this);\n    if (this.insideRegion) {\n      this.insideRegion = false;\n      const regionId = `R${this.masterHandler.regionCount++}`;\n      this.special(\"region-id\", Css.getName(regionId));\n      this.endRule();\n      const regionHandler = new BaseParserHandler(\n        this.masterHandler,\n        this.condition,\n        this,\n        regionId,\n      );\n      this.masterHandler.pushHandler(regionHandler);\n      regionHandler.startRuleBody();\n    }\n  }\n}\n\n// override, so we don't register an error\nexport function processViewportMeta(meta: Element): string {\n  let content = meta.getAttribute(\"content\");\n  if (!content) {\n    return \"\";\n  }\n  const vals = {};\n  let r: RegExpMatchArray;\n  while (\n    (r = content.match(\n      /^,?\\s*([-A-Za-z_.][-A-Za-z_0-9.]*)\\s*=\\s*([-+A-Za-z_0-9.]*)\\s*/,\n    )) != null\n  ) {\n    content = content.substr(r[0].length);\n    vals[r[1]] = r[2];\n  }\n  const width = vals[\"width\"] - 0;\n  const height = vals[\"height\"] - 0;\n  if (width && height) {\n    return `@-epubx-viewport{width:${width}px;height:${height}px;}`;\n  }\n  return \"\";\n}\n\nexport class StyleParserHandler extends CssParser.DispatchParserHandler {\n  rootScope: Exprs.LexicalScope;\n  pageScope: Exprs.LexicalScope;\n  rootBox: PageMaster.RootPageBox;\n  cascadeParserHandler: BaseParserHandler;\n  regionCount: number = 0;\n  fontFaces = [] as FontFace[];\n  footnoteProps = {} as CssCascade.ElementStyle;\n  flowProps = {} as { [key: string]: CssCascade.ElementStyle };\n  viewportProps = [] as CssCascade.ElementStyle[];\n  pageProps = {} as { [key: string]: CssCascade.ElementStyle };\n\n  constructor(public readonly validatorSet: CssValidator.ValidatorSet) {\n    super();\n    this.rootScope = new Exprs.LexicalScope(null);\n    this.pageScope = new Exprs.LexicalScope(this.rootScope);\n    this.rootBox = new PageMaster.RootPageBox(this.rootScope);\n    this.cascadeParserHandler = new BaseParserHandler(this, null, null, null);\n    this.slave = this.cascadeParserHandler;\n  }\n\n  /**\n   * @override\n   */\n  error(mnemonics: string, token: CssTokenizer.Token): void {\n    Logging.logger.warn(\"CSS parser:\", mnemonics, token);\n  }\n}\n\nexport type StyleSource = {\n  url: string;\n  text: string | null;\n  flavor: CssParser.StylesheetFlavor;\n  classes: string | null;\n  media: string | null;\n};\n\nexport function parseOPSResource(\n  response: Net.Response,\n  store: XmlDoc.XMLDocStore,\n): Task.Result<XmlDoc.XMLDocHolder> {\n  return (store as OPSDocStore).parseOPSResource(response);\n}\n\nexport class OPSDocStore extends Net.ResourceStore<XmlDoc.XMLDocHolder> {\n  styleByKey: { [key: string]: Style } = {};\n  styleFetcherByKey: { [key: string]: TaskUtil.Fetcher<Style> } = {};\n  styleByDocURL: { [key: string]: Style } = {};\n  triggersByDocURL: { [key: string]: Vtree.Trigger[] } = {};\n  validatorSet: CssValidator.ValidatorSet = null;\n  private styleSheets: StyleSource[] = [];\n  private triggerSingleDocumentPreprocessing: boolean = false;\n\n  constructor(\n    public fontDeobfuscator:\n      | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n      | null,\n  ) {\n    super(parseOPSResource, Net.XMLHttpRequestResponseType.DOCUMENT);\n  }\n\n  init(\n    authorStyleSheets: { url: string | null; text: string | null }[] | null,\n    userStyleSheets: { url: string | null; text: string | null }[] | null,\n  ): Task.Result<boolean> {\n    this.setStyleSheets(authorStyleSheets as any, userStyleSheets as any);\n    const userAgentXML = Base.resolveURL(\n      \"user-agent.xml\",\n      Base.resourceBaseURL,\n    );\n    const frame = Task.newFrame<boolean>(\"OPSDocStore.init\");\n    this.validatorSet = CssValidator.baseValidatorSet();\n    loadUABase().then(() => {\n      this.load(userAgentXML).then(() => {\n        this.triggerSingleDocumentPreprocessing = true;\n        frame.finish(true);\n      });\n    });\n    return frame.result();\n  }\n\n  getStyleForDoc(xmldoc: XmlDoc.XMLDocHolder): Style {\n    return this.styleByDocURL[xmldoc.url];\n  }\n\n  getTriggersForDoc(xmldoc: XmlDoc.XMLDocHolder): Vtree.Trigger[] {\n    return this.triggersByDocURL[xmldoc.url];\n  }\n\n  /**\n   * Set author stylesheets and user stylesheets. Existing style sheets are\n   * removed.\n   */\n  private setStyleSheets(\n    authorStyleSheets: StyleSource[] | null,\n    userStyleSheets: StyleSource[] | null,\n  ) {\n    this.clearStyleSheets();\n    if (authorStyleSheets) {\n      authorStyleSheets.forEach(this.addAuthorStyleSheet, this);\n    }\n    if (userStyleSheets) {\n      userStyleSheets.forEach(this.addUserStyleSheet, this);\n    }\n  }\n\n  private clearStyleSheets() {\n    this.styleSheets.splice(0);\n  }\n\n  private addAuthorStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.AUTHOR,\n      classes: null,\n      media: null,\n    });\n  }\n\n  private addUserStyleSheet(stylesheet: StyleSource) {\n    let url = stylesheet.url;\n    if (url) {\n      url = Base.resolveURL(Base.convertSpecialURL(url), Base.baseURL);\n    }\n    this.styleSheets.push({\n      url,\n      text: stylesheet.text,\n      flavor: CssParser.StylesheetFlavor.USER,\n      classes: null,\n      media: null,\n    });\n  }\n\n  parseOPSResource(response: Net.Response): Task.Result<XmlDoc.XMLDocHolder> {\n    const frame: Task.Frame<XmlDoc.XMLDocHolder> =\n      Task.newFrame(\"OPSDocStore.load\");\n    const url = response.url;\n\n    // Hack for TOCView.showTOC()\n    const isTocBox = url.endsWith(\"?viv-toc-box\");\n\n    XmlDoc.parseXMLResource(response, this).then(\n      (xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          frame.finish(null);\n          return;\n        }\n        if (this.triggerSingleDocumentPreprocessing) {\n          const hooks: Plugin.PreProcessSingleDocumentHook[] =\n            Plugin.getHooksForName(Plugin.HOOKS.PREPROCESS_SINGLE_DOCUMENT);\n          for (let i = 0; i < hooks.length; i++) {\n            try {\n              hooks[i](xmldoc.document);\n            } catch (e) {\n              Logging.logger.warn(\n                \"Error during single document preprocessing:\",\n                e,\n              );\n            }\n          }\n        }\n        const triggers = [];\n        const triggerList = xmldoc.document.getElementsByTagNameNS(\n          Base.NS.epub,\n          \"trigger\",\n        );\n        for (let i = 0; i < triggerList.length; i++) {\n          const triggerElem = triggerList[i];\n          const observer = triggerElem.getAttributeNS(Base.NS.EV, \"observer\");\n          const event = triggerElem.getAttributeNS(Base.NS.EV, \"event\");\n          const action = triggerElem.getAttribute(\"action\");\n          const ref = triggerElem.getAttribute(\"ref\");\n          if (observer && event && action && ref) {\n            triggers.push({ observer, event, action, ref });\n          }\n        }\n        this.triggersByDocURL[url] = triggers;\n        const sources = [] as StyleSource[];\n        const userAgentURL = Base.resolveURL(\n          \"user-agent-page.css\",\n          Base.resourceBaseURL,\n        );\n        sources.push({\n          url: userAgentURL,\n          text: UserAgentPageCss,\n          flavor: CssParser.StylesheetFlavor.USER_AGENT,\n          classes: null,\n          media: null,\n        });\n        if (!isTocBox) {\n          const elemList =\n            xmldoc.document.querySelectorAll(\"style, link, meta\");\n          for (const elem of elemList) {\n            const ns = elem.namespaceURI;\n            const localName = elem.localName;\n            if (ns == Base.NS.XHTML) {\n              if (localName == \"style\") {\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                const title = elem.getAttribute(\"title\");\n                sources.push({\n                  url,\n                  text: elem.textContent,\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: title ? classes : null,\n                  media,\n                });\n              } else if (localName == \"link\") {\n                const rel = elem.getAttribute(\"rel\");\n                const classes = elem.getAttribute(\"class\");\n                const media = elem.getAttribute(\"media\");\n                if (\n                  rel == \"stylesheet\" ||\n                  (rel == \"alternate stylesheet\" && classes)\n                ) {\n                  let src = elem.getAttribute(\"href\");\n                  src = Base.resolveURL(src, url);\n                  const title = elem.getAttribute(\"title\");\n                  sources.push({\n                    url: src,\n                    text: null,\n                    classes: title ? classes : null,\n                    media,\n                    flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  });\n                }\n              } else if (\n                localName == \"meta\" &&\n                elem.getAttribute(\"name\") == \"viewport\"\n              ) {\n                sources.push({\n                  url,\n                  text: processViewportMeta(elem),\n                  flavor: CssParser.StylesheetFlavor.AUTHOR,\n                  classes: null,\n                  media: null,\n                });\n              }\n            }\n          }\n          for (let i = 0; i < this.styleSheets.length; i++) {\n            sources.push(this.styleSheets[i]);\n          }\n        }\n        let key = \"\";\n        for (let i = 0; i < sources.length; i++) {\n          key += sources[i].url;\n          key += \"^\";\n          if (sources[i].text) {\n            key += sources[i].text;\n          }\n          key += \"^\";\n        }\n        let style = this.styleByKey[key];\n        if (style) {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n          return;\n        }\n        let fetcher = this.styleFetcherByKey[key];\n        if (!fetcher) {\n          fetcher = new TaskUtil.Fetcher(() => {\n            const innerFrame: Task.Frame<Style> =\n              Task.newFrame(\"fetchStylesheet\");\n            let index = 0;\n            const sph = new StyleParserHandler(this.validatorSet);\n            innerFrame\n              .loop(() => {\n                if (index < sources.length) {\n                  const source = sources[index++];\n                  sph.startStylesheet(source.flavor);\n                  if (source.text !== null) {\n                    return CssParser.parseStylesheetFromText(\n                      source.text,\n                      sph,\n                      source.url,\n                      source.classes,\n                      source.media,\n                    ).thenReturn(true);\n                  } else {\n                    return CssParser.parseStylesheetFromURL(\n                      source.url,\n                      sph,\n                      source.classes,\n                      source.media,\n                    );\n                  }\n                }\n                return Task.newResult(false);\n              })\n              .then(() => {\n                const cascade = sph.cascadeParserHandler.finish();\n                style = new Style(\n                  this,\n                  sph.rootScope,\n                  sph.pageScope,\n                  cascade,\n                  sph.rootBox,\n                  sph.fontFaces,\n                  sph.footnoteProps,\n                  sph.flowProps,\n                  sph.viewportProps,\n                  sph.pageProps,\n                );\n                this.styleByKey[key] = style;\n                delete this.styleFetcherByKey[key];\n                innerFrame.finish(style);\n              });\n            return innerFrame.result();\n          }, `FetchStylesheet ${url}`);\n          this.styleFetcherByKey[key] = fetcher;\n          fetcher.start();\n        }\n        fetcher.get().then((style) => {\n          this.styleByDocURL[url] = style;\n          frame.finish(xmldoc);\n        });\n      },\n    );\n    return frame.result();\n  }\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2017 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Sha1 - Calculate SHA1 hash of the given content.\n */\nimport * as Base from \"./base\";\n\n/**\n * @return big-endian byte sequence\n */\nexport function encode32(n: number): string {\n  return String.fromCharCode(\n    (n >>> 24) & 255,\n    (n >>> 16) & 255,\n    (n >>> 8) & 255,\n    n & 255,\n  );\n}\n\n/**\n * @param bytes big-endian byte sequence\n */\nexport function decode32(bytes: string): number {\n  // Important facts: \"\".charCodeAt(0) == NaN, NaN & 0xFF == 0\n  const b0 = bytes.charCodeAt(0) & 255;\n  const b1 = bytes.charCodeAt(1) & 255;\n  const b2 = bytes.charCodeAt(2) & 255;\n  const b3 = bytes.charCodeAt(3) & 255;\n  return (b0 << 24) | (b1 << 16) | (b2 << 8) | b3;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return big-endian uint32 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int32(bytes: string): number[] {\n  const sb = new Base.StringBuffer();\n  sb.append(bytes);\n  let appendCount = (55 - bytes.length) & 63;\n  sb.append(\"\\u0080\");\n  while (appendCount > 0) {\n    appendCount--;\n    sb.append(\"\\x00\");\n  }\n  sb.append(\"\\x00\\x00\\x00\\x00\");\n  sb.append(encode32(bytes.length * 8));\n  bytes = sb.toString();\n  const h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  const w =\n    /** @type Array.<number> */\n    [] as number[];\n  let i: number;\n  for (let bi = 0; bi < bytes.length; bi += 64) {\n    for (i = 0; i < 16; i++) {\n      w[i] = decode32(bytes.substr(bi + 4 * i, 4));\n    }\n    for (; i < 80; i++) {\n      const q = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n      w[i] = (q << 1) | (q >>> 31);\n    }\n    let a = h[0];\n    let b = h[1];\n    let c = h[2];\n    let d = h[3];\n    let e = h[4];\n    let f: number;\n    for (i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = ((b & c) | (~b & d)) + 1518500249;\n      } else if (i < 40) {\n        f = (b ^ c ^ d) + 1859775393;\n      } else if (i < 60) {\n        f = ((b & c) | (b & d) | (c & d)) + 2400959708;\n      } else {\n        f = (b ^ c ^ d) + 3395469782;\n      }\n      f += ((a << 5) | (a >>> 27)) + e + w[i];\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = f;\n    }\n    h[0] = (h[0] + a) | 0;\n    h[1] = (h[1] + b) | 0;\n    h[2] = (h[2] + c) | 0;\n    h[3] = (h[3] + d) | 0;\n    h[4] = (h[4] + e) | 0;\n  }\n  return h;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return uint8 numbers representing sha1 hash\n */\nexport function bytesToSHA1Int8(bytes: string): number[] {\n  const h = bytesToSHA1Int32(bytes);\n  const res = [];\n  for (const n of h) {\n    res.push((n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, n & 255);\n  }\n  return res;\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return chars with codes 0 - 255 equal to SHA1 hash of the input\n */\nexport function bytesToSHA1Bytes(bytes: string): string {\n  const h = bytesToSHA1Int32(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < h.length; i++) {\n    sb.append(encode32(h[i]));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return hex-encoded SHA1 hash\n */\nexport function bytesToSHA1Hex(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  for (let i = 0; i < sha1.length; i++) {\n    sb.append((sha1.charCodeAt(i) | 256).toString(16).substr(1));\n  }\n  return sb.toString();\n}\n\n/**\n * @param bytes chars with codes 0 - 255 that represent message byte values\n * @return base64-encoded SHA1 hash of the input\n */\nexport function bytesToSHA1Base64(bytes: string): string {\n  const sha1 = bytesToSHA1Bytes(bytes);\n  const sb = new Base.StringBuffer();\n  Base.appendBase64(sb, sha1);\n  return sb.toString();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2019 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Toc - Table of Contents view.\n */\nimport * as Base from \"./base\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as OPS from \"./ops\";\nimport * as Task from \"./task\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\n// closed: 25B8\n// open: 25BE\n// empty: 25B9\nexport const bulletClosed = \"\\u25b8\";\n\nexport const bulletOpen = \"\\u25be\";\n\nexport const bulletEmpty = \"\\u25b9\";\n\nexport type TOCItem = {\n  id: string;\n  title: string;\n  children: TOCItem[];\n};\n\nexport class TOCView implements Vgen.CustomRendererFactory {\n  pref: Exprs.Preferences;\n  page: Vtree.Page = null;\n  instance: OPS.StyleInstance = null;\n\n  constructor(\n    public readonly store: OPS.OPSDocStore,\n    public readonly url: string,\n    public readonly lang: string | null,\n    public readonly clientLayout: Vtree.ClientLayout,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly rendererFactory: Vgen.CustomRendererFactory,\n    public readonly fallbackMap: { [key: string]: string },\n    public readonly documentURLTransformer: Base.DocumentURLTransformer,\n    public readonly counterStore: Counters.CounterStore,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.pref.spreadView = false; // No spred view for TOC box\n  }\n\n  setAutoHeight(elem: Element, depth: number): void {\n    if (depth-- == 0) {\n      return;\n    }\n    for (let c: Node = elem.firstChild; c; c = c.nextSibling) {\n      if (c.nodeType == 1) {\n        const e = c as Element;\n        if (Base.getCSSProperty(e, \"height\", \"auto\") != \"auto\") {\n          Base.setCSSProperty(e, \"height\", \"auto\");\n          this.setAutoHeight(e, depth);\n        }\n        if (Base.getCSSProperty(e, \"position\", \"static\") == \"absolute\") {\n          Base.setCSSProperty(e, \"position\", \"relative\");\n          this.setAutoHeight(e, depth);\n        }\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    const renderer = this.rendererFactory.makeCustomRenderer(xmldoc);\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      const behavior = computedStyle[\"behavior\"];\n      if (behavior) {\n        switch (behavior.toString()) {\n          case \"body-child\":\n            if (\n              !srcElem.querySelector(\n                \"[role=doc-toc], [role=directory], nav li a, .toc, #toc\",\n              )\n            ) {\n              // hide elements not containing TOC.\n              computedStyle[\"display\"] = Css.ident.none;\n            }\n            break;\n          case \"toc-node-anchor\":\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n          case \"toc-node\":\n            computedStyle[\"display\"] = Css.ident.block;\n            computedStyle[\"margin\"] = Css.numericZero;\n            computedStyle[\"padding\"] = Css.numericZero;\n            computedStyle[\"padding-inline-start\"] = new Css.Numeric(1.25, \"em\");\n            break;\n          case \"toc-node-first-child\":\n            computedStyle[\"display\"] = Css.ident.inline_block;\n            computedStyle[\"margin\"] = new Css.Numeric(0.2, \"em\");\n            computedStyle[\"vertical-align\"] = Css.ident.top;\n            computedStyle[\"color\"] = Css.ident.inherit;\n            computedStyle[\"text-decoration\"] = Css.ident.none;\n            break;\n        }\n      }\n      if (\n        !behavior ||\n        (behavior.toString() != \"toc-node\" &&\n          behavior.toString() != \"toc-container\")\n      ) {\n        return renderer(srcElem, viewParent, computedStyle);\n      }\n      // Remove white-space textnode that becomes unwanted space between button and anchor element.\n      const firstChild = srcElem.firstChild;\n      if (\n        firstChild &&\n        firstChild.nodeType !== 1 &&\n        firstChild.textContent.trim() === \"\"\n      ) {\n        // To avoid \"Inconsistent offset\" error, create a comment node with same white-space text.\n        srcElem.replaceChild(\n          srcElem.ownerDocument.createComment(firstChild.textContent),\n          firstChild,\n        );\n      }\n      const adaptParentClass = viewParent.getAttribute(\"data-adapt-class\");\n      if (adaptParentClass == \"toc-node\") {\n        const button = viewParent.firstChild as Element;\n        if (button.textContent != bulletClosed) {\n          button.textContent = bulletClosed;\n          Base.setCSSProperty(button, \"cursor\", \"pointer\");\n          button.addEventListener(\"click\", toggleNodeExpansion, false);\n\n          button.setAttribute(\"role\", \"button\");\n          button.setAttribute(\"aria-expanded\", \"false\");\n          viewParent.setAttribute(\"aria-expanded\", \"false\");\n\n          // Enable tab move to the button unless hidden.\n          if ((viewParent as HTMLElement).style.height !== \"0px\") {\n            (button as HTMLElement).tabIndex = 0;\n          }\n        }\n      }\n      const element = viewParent.ownerDocument.createElement(\"div\");\n      element.setAttribute(\"data-adapt-process-children\", \"true\");\n      if (behavior.toString() == \"toc-node\") {\n        const button = viewParent.ownerDocument.createElement(\"div\");\n        button.textContent = bulletEmpty;\n\n        // TODO: define pseudo-element for the button?\n        Base.setCSSProperty(button, \"margin\", \"0.2em 0 0 -1em\");\n        Base.setCSSProperty(button, \"margin-inline-start\", \"-1em\");\n        Base.setCSSProperty(button, \"margin-inline-end\", \"0\");\n        Base.setCSSProperty(button, \"display\", \"inline-block\");\n        Base.setCSSProperty(button, \"width\", \"1em\");\n        Base.setCSSProperty(button, \"text-align\", \"center\");\n        Base.setCSSProperty(button, \"vertical-align\", \"top\");\n        Base.setCSSProperty(button, \"cursor\", \"default\");\n        Base.setCSSProperty(button, \"font-family\", \"Menlo,sans-serif\");\n        element.appendChild(button);\n        Base.setCSSProperty(element, \"overflow\", \"hidden\");\n        element.setAttribute(\"data-adapt-class\", \"toc-node\");\n        element.setAttribute(\"role\", \"treeitem\");\n\n        if (\n          adaptParentClass == \"toc-node\" ||\n          adaptParentClass == \"toc-container\"\n        ) {\n          Base.setCSSProperty(element, \"height\", \"0px\");\n\n          // Prevent tab move to hidden anchor.\n          const anchorElem = srcElem.firstElementChild;\n          if (anchorElem && anchorElem.localName === \"a\") {\n            (anchorElem as HTMLElement).tabIndex = -1;\n          }\n        } else {\n          viewParent.setAttribute(\"role\", \"tree\");\n        }\n      } else {\n        if (adaptParentClass == \"toc-node\") {\n          element.setAttribute(\"data-adapt-class\", \"toc-container\");\n          element.setAttribute(\"role\", \"group\");\n          element.setAttribute(\"aria-hidden\", \"true\");\n        }\n      }\n      return Task.newResult(element as Element);\n    };\n  }\n\n  showTOC(\n    elem: HTMLElement,\n    viewport: Vgen.Viewport,\n    width: number,\n    height: number,\n    fontSize: number,\n  ): Task.Result<Vtree.Page> {\n    if (this.page) {\n      return Task.newResult(this.page as Vtree.Page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    const page = new Vtree.Page(elem, elem);\n    this.page = page;\n\n    // The (X)HTML doc for the TOC box may be reused for the TOC page in the book,\n    // but they need different styles. So, add \"?viv-toc-box\" to distinguish with TOC page URL.\n    const tocBoxUrl = Base.stripFragment(this.url) + \"?viv-toc-box\";\n\n    this.store.load(tocBoxUrl).then((xmldoc) => {\n      // Mark if this doc is the primary entry page.\n      const nonTocBoxDoc = this.store.resources[this.url];\n\n      // Make hidden TOC visible in TOC box\n      for (const elem of xmldoc.document.querySelectorAll(\n        \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n      )) {\n        if (elem.hasAttribute(\"hidden\")) {\n          elem.removeAttribute(\"hidden\");\n        }\n      }\n\n      const style = this.store.getStyleForDoc(xmldoc);\n      const viewportSize = style.sizeViewport(width, 100000, fontSize);\n      viewport = new Vgen.Viewport(\n        viewport.window,\n        viewportSize.fontSize,\n        viewport.root,\n        viewportSize.width,\n        viewportSize.height,\n      );\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.fallbackMap,\n        0,\n        this.documentURLTransformer,\n        this.counterStore,\n      );\n      this.instance = instance;\n      instance.pref = this.pref;\n      instance.init().then(() => {\n        instance.layoutNextPage(page, null).then(() => {\n          Array.from(\n            page.container.querySelectorAll(\n              \"[data-vivliostyle-toc-box]>*>*>*>*>*[style*='display: none']\",\n            ),\n          ).forEach((bodyChildElem) => {\n            bodyChildElem.setAttribute(\"aria-hidden\", \"true\");\n            bodyChildElem.setAttribute(\"hidden\", \"hidden\");\n          });\n          this.setAutoHeight(elem, 2);\n          frame.finish(page);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.page) {\n      this.page.container.style.visibility = \"hidden\";\n      this.page.container.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.page && this.page.container.style.visibility === \"visible\";\n  }\n\n  getTOC(): TOCItem[] {\n    if (!this.page) {\n      return [];\n    }\n\n    function exportTree(tag): TOCItem[] {\n      if (!tag) {\n        return [];\n      }\n      const links = tag.querySelectorAll(\":scope > [role=treeitem] > a[href]\");\n      return Array.from(links).map(exportLink);\n    }\n\n    function exportLink(tag): TOCItem {\n      const url = new URL(tag.href);\n      const [, id] = url.hash.match(/^#?(.*)$/);\n\n      const title = tag.innerText;\n\n      const container = tag.parentElement.querySelector(\"[role=group]\");\n      const children = exportTree(container);\n\n      return { id, title, children };\n    }\n\n    const topLevelTree = this.page.container.querySelector(\"[role=tree]\");\n    return exportTree(topLevelTree);\n  }\n}\n\nexport function toggleNodeExpansion(evt: Event): void {\n  const elem = evt.target as Element;\n  const open = elem.textContent == bulletClosed;\n  elem.textContent = open ? bulletOpen : bulletClosed;\n  const tocNodeElem = elem.parentNode as Element;\n  elem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  tocNodeElem.setAttribute(\"aria-expanded\", open ? \"true\" : \"false\");\n  let c: Node = tocNodeElem.firstChild;\n  while (c) {\n    if (c.nodeType === 1) {\n      const ce = c as HTMLElement;\n      const adaptClass = ce.getAttribute(\"data-adapt-class\");\n      if (adaptClass === \"toc-container\") {\n        ce.setAttribute(\"aria-hidden\", !open ? \"true\" : \"false\");\n        if (ce.firstChild) {\n          c = ce.firstChild;\n          continue;\n        }\n      } else if (adaptClass === \"toc-node\") {\n        ce.style.height = open ? \"auto\" : \"0px\";\n\n        // Update enable/disable tab move to the button and anchor.\n        if (ce.children.length >= 2) {\n          (ce.children[1] as HTMLElement).tabIndex = open ? 0 : -1;\n        }\n        if (ce.children.length >= 3) {\n          (ce.children[0] as HTMLElement).tabIndex = open ? 0 : -1;\n          if (!open) {\n            const elem1 = ce.children[0];\n            if (elem1.textContent == bulletOpen) {\n              elem1.textContent = bulletClosed;\n              elem1.setAttribute(\"aria-expanded\", \"false\");\n              ce.setAttribute(\"aria-expanded\", \"false\");\n              c = ce.children[2];\n              continue;\n            }\n          }\n        }\n      }\n    }\n    while (!c.nextSibling && c.parentNode !== tocNodeElem) {\n      c = c.parentNode;\n    }\n    c = c.nextSibling;\n  }\n  evt.stopPropagation();\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview Epub - Deal with META-INF/ and .opf files in EPUB container.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as CFI from \"./cfi\";\nimport * as Constants from \"./constants\";\nimport * as Counters from \"./counters\";\nimport * as Css from \"./css\";\nimport * as CssCascade from \"./css-cascade\";\nimport * as CssParser from \"./css-parser\";\nimport * as CssTokenizer from \"./css-tokenizer\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Net from \"./net\";\nimport * as OPS from \"./ops\";\nimport * as SHA1 from \"./sha1\";\nimport * as Task from \"./task\";\nimport * as Toc from \"./toc\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport * as XmlDoc from \"./xml-doc\";\n\nexport type Position = {\n  spineIndex: number;\n  pageIndex: number;\n  offsetInItem: number;\n};\n\nexport class EPUBDocStore extends OPS.OPSDocStore {\n  plainXMLStore: XmlDoc.XMLDocStore;\n  jsonStore: Net.JSONStore;\n  opfByURL: { [key: string]: OPFDoc } = {};\n  primaryOPFByEPubURL: { [key: string]: OPFDoc } = {};\n  deobfuscators: { [key: string]: (p1: Blob) => Task.Result<Blob> } = {};\n  documents: { [key: string]: Task.Result<XmlDoc.XMLDocHolder> } = {};\n\n  constructor() {\n    super(null);\n    this.fontDeobfuscator = this.makeDeobfuscatorFactory();\n    this.plainXMLStore = XmlDoc.newXMLDocStore();\n    this.jsonStore = Net.newJSONStore();\n  }\n\n  makeDeobfuscatorFactory():\n    | ((p1: string) => ((p1: Blob) => Task.Result<Blob>) | null)\n    | null {\n    return (url: string): ((p1: Blob) => Task.Result<Blob>) | null => {\n      return this.deobfuscators[url];\n    };\n  }\n\n  loadAsPlainXML(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<XmlDoc.XMLDocHolder> {\n    return this.plainXMLStore.load(\n      url,\n      opt_required,\n      opt_message,\n    ) as Task.Result<XmlDoc.XMLDocHolder>;\n  }\n\n  startLoadingAsPlainXML(url: string): void {\n    this.plainXMLStore.fetch(url);\n  }\n\n  loadAsJSON(\n    url: string,\n    opt_required?: boolean,\n    opt_message?: string,\n  ): Task.Result<Base.JSON> {\n    return this.jsonStore.load(url, opt_required, opt_message);\n  }\n\n  startLoadingAsJSON(url: string): void {\n    this.jsonStore.fetch(url);\n  }\n\n  loadPubDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadPubDoc\");\n\n    Net.ajax(url, null, \"HEAD\").then((response) => {\n      if (response.status >= 400) {\n        // This url can be the root of an unzipped EPUB.\n        this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n          if (opf) {\n            frame.finish(opf);\n            return;\n          }\n          Logging.logger.error(\n            `Failed to fetch a source document from ${url} (${response.status}${\n              response.statusText ? \" \" + response.statusText : \"\"\n            })`,\n          );\n          frame.finish(null);\n        });\n      } else {\n        if (\n          !response.status &&\n          !response.responseXML &&\n          !response.responseText &&\n          !response.responseBlob &&\n          !response.contentType\n        ) {\n          // Empty response\n          if (/\\/[^/.]+(?:[#?]|$)/.test(url)) {\n            // Adding trailing \"/\" may solve the problem.\n            url = url.replace(/([#?]|$)/, \"/$1\");\n          } else {\n            // Ignore empty response of HEAD request, it may become OK with GET request.\n          }\n        }\n        if (\n          response.contentType == \"application/oebps-package+xml\" ||\n          /\\.opf(?:[#?]|$)/.test(url)\n        ) {\n          // EPUB OPF\n          const [, pubURL, root] = url.match(/^((?:.*\\/)?)([^/]*)$/);\n          this.loadOPF(pubURL, root, haveZipMetadata).thenFinish(frame);\n        } else if (\n          response.contentType == \"application/ld+json\" ||\n          response.contentType == \"application/webpub+json\" ||\n          response.contentType == \"application/audiobook+json\" ||\n          response.contentType == \"application/json\" ||\n          /\\.json(?:ld)?(?:[#?]|$)/.test(url)\n        ) {\n          // Web Publication Manifest\n          this.loadAsJSON(url, true).then((manifestObj) => {\n            if (!manifestObj) {\n              this.reportLoadError(url);\n              frame.finish(null);\n              return;\n            }\n            const opf = new OPFDoc(this, url);\n            opf.initWithWebPubManifest(manifestObj, undefined, url).then(() => {\n              frame.finish(opf);\n            });\n          });\n        } else {\n          // Web Publication primary entry (X)HTML\n          this.loadWebPub(url).then((opf) => {\n            if (opf) {\n              frame.finish(opf);\n              return;\n            }\n            // This url can be the root of an unzipped EPUB.\n            this.loadEPUBDoc(url, haveZipMetadata).then((opf) => {\n              if (opf) {\n                frame.finish(opf);\n                return;\n              }\n              Logging.logger.error(`Failed to load ${url}.`);\n              frame.finish(null);\n            });\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  loadEPUBDoc(url: string, haveZipMetadata: boolean): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadEPUBDoc\");\n    if (!url.endsWith(\"/\")) {\n      url = url + \"/\";\n    }\n    if (haveZipMetadata) {\n      this.startLoadingAsJSON(url + \"?r=list\");\n    }\n    this.startLoadingAsPlainXML(url + \"META-INF/encryption.xml\");\n    const containerURL = url + \"META-INF/container.xml\";\n    this.loadAsPlainXML(containerURL).then((containerXML) => {\n      if (containerXML) {\n        const roots = containerXML\n          .doc()\n          .child(\"container\")\n          .child(\"rootfiles\")\n          .child(\"rootfile\")\n          .attribute(\"full-path\");\n        for (const root of roots) {\n          if (root) {\n            this.loadOPF(url, root, haveZipMetadata).thenFinish(frame);\n            return;\n          }\n        }\n      }\n      frame.finish(null);\n    });\n    return frame.result();\n  }\n\n  loadOPF(\n    pubURL: string,\n    root: string,\n    haveZipMetadata: boolean,\n  ): Task.Result<OPFDoc> {\n    const url = pubURL + root;\n    let opf = this.opfByURL[url];\n    if (opf) {\n      return Task.newResult(opf);\n    }\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadOPF\");\n    this.loadAsPlainXML(url, true, `Failed to fetch EPUB OPF ${url}`).then(\n      (opfXML) => {\n        if (!opfXML) {\n          this.reportLoadError(url);\n        } else {\n          this.loadAsPlainXML(`${pubURL}META-INF/encryption.xml`).then(\n            (encXML) => {\n              const zipMetadataResult = haveZipMetadata\n                ? this.loadAsJSON(`${pubURL}?r=list`)\n                : Task.newResult(null);\n              zipMetadataResult.then((zipMetadata) => {\n                opf = new OPFDoc(this, pubURL);\n                opf\n                  .initWithXMLDoc(\n                    opfXML,\n                    encXML,\n                    zipMetadata,\n                    `${pubURL}?r=manifest`,\n                  )\n                  .then(() => {\n                    this.opfByURL[url] = opf;\n                    this.primaryOPFByEPubURL[pubURL] = opf;\n                    frame.finish(opf);\n                  });\n              });\n            },\n          );\n        }\n      },\n    );\n    return frame.result();\n  }\n\n  loadWebPub(url: string): Task.Result<OPFDoc> {\n    const frame: Task.Frame<OPFDoc> = Task.newFrame(\"loadWebPub\");\n\n    // Load the primary entry page (X)HTML\n    this.load(url).then((xmldoc) => {\n      if (!xmldoc) {\n        this.reportLoadError(url);\n      } else if (\n        xmldoc.document.querySelector(\n          \"a[href='META-INF/'],a[href$='/META-INF/']\",\n        )\n      ) {\n        // This is likely the directory listing of unzipped EPUB top directory\n        frame.finish(null);\n      } else {\n        const doc = xmldoc.document;\n        const opf = new OPFDoc(this, url);\n\n        if (doc.body) {\n          doc.body.setAttribute(\"data-vivliostyle-primary-entry\", true);\n        }\n        // Find manifest, W3C WebPublication or Readium Web Publication Manifest\n        const manifestLink = doc.querySelector(\n          \"link[rel='publication'],link[rel='manifest'][type='application/webpub+json']\",\n        );\n        if (manifestLink) {\n          const href = manifestLink.getAttribute(\"href\");\n          if (/^#/.test(href)) {\n            const manifestObj = Base.stringToJSON(\n              doc.getElementById(href.substr(1)).textContent,\n            );\n            opf.initWithWebPubManifest(manifestObj, doc).then(() => {\n              frame.finish(opf);\n            });\n          } else {\n            const manifestUrl = Base.resolveURL(\n              manifestLink.getAttribute(\"href\"),\n              url,\n            );\n            this.loadAsJSON(\n              manifestUrl,\n              true,\n              `Failed to fetch Publication Manifest ${manifestUrl}`,\n            ).then((manifestObj) => {\n              opf\n                .initWithWebPubManifest(manifestObj, doc, manifestUrl)\n                .then(() => {\n                  frame.finish(opf);\n                });\n            });\n          }\n        } else {\n          // No manifest\n          opf.initWithWebPubManifest({}, doc).then(() => {\n            if (opf.xhtmlToc && opf.xhtmlToc.src === xmldoc.url) {\n              // xhtmlToc is the primari entry (X)HTML\n              if (\n                !doc.querySelector(\n                  \"[role=doc-toc], [role=directory], nav, .toc, #toc\",\n                )\n              ) {\n                // TOC is not found in the primari entry (X)HTML\n                opf.xhtmlToc = null;\n              }\n            }\n            frame.finish(opf);\n          });\n        }\n      }\n    });\n    return frame.result();\n  }\n\n  addDocument(url: string, doc: Document) {\n    const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n    const docURL = Base.stripFragment(url);\n    const r = (this.documents[docURL] = this.parseOPSResource({\n      status: 200,\n      statusText: \"\",\n      url: docURL,\n      contentType: (doc as any).contentType,\n      responseText: null,\n      responseXML: doc,\n      responseBlob: null,\n    }));\n    r.thenFinish(frame);\n    return frame.result();\n  }\n\n  reportLoadError(docURL: string): void {\n    const removePath = (url: string) => {\n      return url.replace(/([^:/?#]|^)[/?#].*/, \"$1\");\n    };\n    const likelyCorsProblem = () => {\n      const domain = removePath(docURL);\n      if (domain === removePath(Base.baseURL)) {\n        // same domain, no CORS problem\n        return false;\n      }\n      const urls = Object.keys(this.resources);\n      if (\n        urls.find((url) => this.resources[url] && removePath(url) === domain)\n      ) {\n        // if there is an already loaded resource with the same domain, no CORS problem\n        return false;\n      }\n      if (/\\.(xhtml|xht|xml|opf)$/i.test(docURL)) {\n        // maybe, XML error\n        return false;\n      }\n      // likely, CORS problem\n      return true;\n    };\n\n    if (docURL.startsWith(\"data:\")) {\n      Logging.logger.error(`Failed to load ${docURL}. Invalid data.`);\n    } else if (\n      docURL.startsWith(\"http:\") &&\n      Base.baseURL.startsWith(\"https:\")\n    ) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. Mixed Content (\"http:\" content on \"https:\" context) is not allowed.`,\n      );\n    } else if (likelyCorsProblem()) {\n      Logging.logger.error(\n        `Failed to load ${docURL}. This may be caused by the server not allowing cross-origin resource sharing (CORS).`,\n      );\n    } else {\n      Logging.logger.error(\n        `Failed to load ${docURL}. The target resource is invalid.`,\n      );\n    }\n  }\n\n  /**\n   * @override\n   */\n  load(url: string): Task.Result<XmlDoc.XMLDocHolder> {\n    const docURL = Base.stripFragment(url);\n    let r = this.documents[docURL];\n    if (r) {\n      return r.isPending() ? r : Task.newResult(r.get());\n    } else {\n      const frame = Task.newFrame<XmlDoc.XMLDocHolder>(\"EPUBDocStore.load\");\n      r = super.load(\n        docURL,\n        true,\n        `Failed to fetch a source document from ${docURL}`,\n      );\n      r.then((xmldoc: XmlDoc.XMLDocHolder) => {\n        if (!xmldoc) {\n          this.reportLoadError(docURL);\n        } else {\n          frame.finish(xmldoc);\n        }\n      });\n      return frame.result();\n    }\n  }\n}\n\nexport type OPFItemParam = {\n  url: string;\n  index: number;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class OPFItem {\n  id: string | null = null;\n  src: string = \"\";\n  mediaType: string | null = null;\n  title: string | null = null;\n  itemRefElement: Element | null = null;\n  spineIndex: number = -1;\n  compressedSize: number = 0;\n  compressed: boolean | null = null;\n  epage: number = 0;\n  epageCount: number = 0;\n  startPage: number | null = null;\n  skipPagesBefore: number | null = null;\n  itemProperties: { [key: string]: boolean };\n\n  constructor() {\n    this.itemProperties = Base.emptyObj;\n  }\n\n  initWithElement(itemElem: Element, opfURL: string): void {\n    this.id = itemElem.getAttribute(\"id\");\n    this.src = Base.resolveURL(itemElem.getAttribute(\"href\"), opfURL);\n    this.mediaType = itemElem.getAttribute(\"media-type\");\n    const propStr = itemElem.getAttribute(\"properties\");\n    if (propStr) {\n      this.itemProperties = Base.arrayToSet(propStr.split(/\\s+/));\n    }\n  }\n\n  initWithParam(param: OPFItemParam) {\n    this.spineIndex = param.index;\n    this.id = `item${param.index + 1}`;\n    this.src = param.url;\n    this.startPage = param.startPage;\n    this.skipPagesBefore = param.skipPagesBefore;\n  }\n}\n\nexport function getOPFItemId(item: OPFItem): string | null {\n  return item.id;\n}\n\nexport function makeDeobfuscator(uid: string): (p1: Blob) => Task.Result<Blob> {\n  // TODO: use UTF8 of uid\n  const sha1Sum = SHA1.bytesToSHA1Int8(uid);\n  return (blob) => {\n    const frame = Task.newFrame(\"deobfuscator\") as Task.Frame<Blob>;\n    let head: Blob;\n    let tail: Blob;\n    if (blob.slice) {\n      head = blob.slice(0, 1040);\n      tail = blob.slice(1040, blob.size);\n    } else {\n      head = blob[\"webkitSlice\"](0, 1040);\n      tail = blob[\"webkitSlice\"](1040, blob.size - 1040);\n    }\n    Net.readBlob(head).then((buf) => {\n      const dataView = new DataView(buf);\n      for (let k = 0; k < dataView.byteLength; k++) {\n        let b = dataView.getUint8(k);\n        b ^= sha1Sum[k % 20];\n        dataView.setUint8(k, b);\n      }\n      frame.finish(Net.makeBlob([dataView, tail]));\n    });\n    return frame.result();\n  };\n}\n\nexport function makeObfuscationKey(uid: string): string {\n  return `1040:${SHA1.bytesToSHA1Hex(uid)}`;\n}\n\ntype RawMeta = {\n  [key: string]: RawMetaItem[];\n};\n\ntype RawMetaItem = {\n  name: string;\n  value: string;\n  id: string | null;\n  refines: string | null;\n  scheme: string | null;\n  lang: string | null;\n  order: number;\n  role: string | null;\n};\n\nexport interface Meta {\n  [key: string]: MetaItem[];\n}\n\nexport interface MetaItem {\n  v: string;\n  o?: number;\n  s?: string;\n  r?: Meta;\n}\n\nexport const predefinedPrefixes = {\n  dcterms: \"http://purl.org/dc/terms/\",\n  marc: \"http://id.loc.gov/vocabulary/\",\n  media: \"http://www.idpf.org/epub/vocab/overlays/#\",\n  rendition: \"http://www.idpf.org/vocab/rendition/#\",\n  onix: \"http://www.editeur.org/ONIX/book/codelists/current.html#\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  opf: \"http://www.idpf.org/2007/opf\",\n};\n\nexport const defaultIRI = \"http://idpf.org/epub/vocab/package/meta/#\";\n\nexport const metaTerms = {\n  language: `${predefinedPrefixes[\"dcterms\"]}language`,\n  title: `${predefinedPrefixes[\"dcterms\"]}title`,\n  creator: `${predefinedPrefixes[\"dcterms\"]}creator`,\n  layout: `${predefinedPrefixes[\"rendition\"]}layout`,\n  titleType: `${defaultIRI}title-type`,\n  displaySeq: `${defaultIRI}display-seq`,\n  alternateScript: `${defaultIRI}alternate-script`,\n  role: `${defaultIRI}role`,\n};\n\nexport function getMetadataComparator(\n  term: string,\n  lang: string,\n): (p1: MetaItem, p2: MetaItem) => number {\n  const empty = {};\n  return (item1, item2) => {\n    let m1: boolean;\n    let m2: boolean;\n    const r1 = item1[\"r\"] || empty;\n    const r2 = item2[\"r\"] || empty;\n    if (term == metaTerms.title) {\n      m1 = r1[metaTerms.titleType]?.[0].v == \"main\";\n      m2 = r2[metaTerms.titleType]?.[0].v == \"main\";\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    let i1 = parseInt(r1[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i1)) {\n      i1 = Number.MAX_VALUE;\n    }\n    let i2 = parseInt(r2[metaTerms.displaySeq]?.[0].v, 10);\n    if (isNaN(i2)) {\n      i2 = Number.MAX_VALUE;\n    }\n    if (i1 != i2) {\n      return i1 - i2;\n    }\n    if (term != metaTerms.language && lang) {\n      m1 =\n        (r1[metaTerms.language] || r1[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      m2 =\n        (r2[metaTerms.language] || r2[metaTerms.alternateScript])?.[0].v ==\n        lang;\n      if (m1 != m2) {\n        return m1 ? -1 : 1;\n      }\n    }\n    return item1[\"o\"] - item2[\"o\"];\n  };\n}\n\nexport function readMetadata(\n  mroot: XmlDoc.NodeList,\n  prefixes: string | null,\n): Meta {\n  // Parse prefix map (if any)\n  let prefixMap;\n  if (!prefixes) {\n    prefixMap = predefinedPrefixes;\n  } else {\n    prefixMap = {};\n    for (const pn in predefinedPrefixes) {\n      prefixMap[pn] = predefinedPrefixes[pn];\n    }\n    let r: RegExpMatchArray;\n\n    // This code permits any non-ASCII characters in the name to avoid bloating\n    // the pattern.\n    while (\n      (r = prefixes.match(\n        /^\\s*([A-Z_a-z\\u007F-\\uFFFF][-.A-Z_a-z0-9\\u007F-\\uFFFF]*):\\s*(\\S+)/,\n      )) != null\n    ) {\n      prefixes = prefixes.substr(r[0].length);\n      prefixMap[r[1]] = r[2];\n    }\n  }\n  const resolveProperty = (val: string | null): string | null => {\n    if (val) {\n      const r = val.match(/^\\s*(([^:]*):)?(\\S+)\\s*$/);\n      if (r) {\n        const iri = r[2] ? prefixMap[r[2]] : defaultIRI;\n        if (iri) {\n          return iri + r[3];\n        }\n      }\n    }\n    return null;\n  };\n  let order = 1;\n\n  // List of metadata items.\n  const rawItems = mroot.childElements().forEachNonNull((node: Element) => {\n    if (node.localName == \"meta\") {\n      const p = resolveProperty(node.getAttribute(\"property\"));\n      if (p) {\n        return {\n          name: p,\n          value: node.textContent,\n          id: node.getAttribute(\"id\"),\n          order: order++,\n          refines: node.getAttribute(\"refines\"),\n          lang: null,\n          scheme: resolveProperty(node.getAttribute(\"scheme\")),\n          role: null,\n        };\n      }\n    } else if (node.namespaceURI == Base.NS.DC) {\n      return {\n        name: predefinedPrefixes[\"dcterms\"] + node.localName,\n        order: order++,\n        lang: node.getAttribute(\"xml:lang\"),\n        value: node.textContent,\n        id: node.getAttribute(\"id\"),\n        refines: null,\n        scheme: null,\n        role: node.getAttribute(\"role\") || node.getAttribute(\"opf:role\"),\n      };\n    }\n    return null;\n  });\n\n  // Items grouped by their target id.\n  const rawItemsByTarget = Base.multiIndexArray(\n    rawItems,\n    (rawItem) => rawItem.refines,\n  );\n  const makeMetadata = (map: RawMeta): Meta =>\n    Base.mapObj(map, (rawItemArr, _itemName) =>\n      rawItemArr.map((rawItem) => {\n        const entry = { v: rawItem.value, o: rawItem.order };\n        if (rawItem.scheme) {\n          entry[\"s\"] = rawItem.scheme;\n        }\n        let refs = rawItemsByTarget[`#${rawItem.id}`] || [];\n        if (refs.length || rawItem.lang || rawItem.role) {\n          if (rawItem.lang) {\n            // Special handling for xml:lang\n            refs.push({\n              name: metaTerms.language,\n              value: rawItem.lang,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          if (rawItem.role) {\n            // Special handling for opf:role\n            refs.push({\n              name: metaTerms.role,\n              value: rawItem.role,\n              lang: null,\n              id: null,\n              refines: rawItem.id,\n              scheme: null,\n              order: rawItem.order,\n              role: null,\n            });\n          }\n          const entryMap = Base.multiIndexArray(\n            refs,\n            (rawItem) => rawItem.name,\n          );\n          entry[\"r\"] = makeMetadata(entryMap);\n        }\n        return entry;\n      }),\n    );\n  const metadata = makeMetadata(\n    Base.multiIndexArray(rawItems, (rawItem) =>\n      rawItem.refines ? null : rawItem.name,\n    ),\n  );\n  let lang: string | null = null;\n  if (metadata[metaTerms.language]) {\n    lang = metadata[metaTerms.language][0][\"v\"];\n  }\n  const sortMetadata = (metadata: Meta) => {\n    for (const term in metadata) {\n      const arr = metadata[term];\n      arr.sort(getMetadataComparator(term, lang));\n      for (let i = 0; i < arr.length; i++) {\n        const r = arr[i][\"r\"];\n        if (r) {\n          sortMetadata(r);\n        }\n      }\n    }\n  };\n  sortMetadata(metadata);\n  return metadata;\n}\n\nexport function getMathJaxHub(): object {\n  const math = window[\"MathJax\"];\n  if (math) {\n    return math[\"Hub\"];\n  }\n  return null;\n}\n\nexport function checkMathJax(): void {\n  if (getMathJaxHub()) {\n    CssCascade.supportedNamespaces[Base.NS.MATHML] = true;\n  }\n}\n\nexport const supportedMediaTypes = {\n  \"application/xhtml+xml\": true,\n  \"image/jpeg\": true,\n  \"image/png\": true,\n  \"image/svg+xml\": true,\n  \"image/gif\": true,\n  \"audio/mp3\": true,\n};\n\nexport const transformedIdPrefix = \"viv-id-\";\n\nexport class OPFDoc {\n  opfXML: XmlDoc.XMLDocHolder = null;\n  encXML: XmlDoc.XMLDocHolder = null;\n  items: OPFItem[] = null;\n  spine: OPFItem[] = null;\n  itemMap: { [key: string]: OPFItem } = null;\n  itemMapByPath: { [key: string]: OPFItem } = null;\n  uid: string | null = null;\n  bindings: { [key: string]: string } = {};\n  lang: string | null = null;\n  epageCount: number = 0;\n  prePaginated: boolean = false;\n  epageIsRenderedPage: boolean = true;\n  epageCountCallback: (p1: number) => void | null = null;\n  metadata: Meta = {};\n  ncxToc: OPFItem = null;\n  xhtmlToc: OPFItem = null;\n  cover: OPFItem = null;\n  fallbackMap: { [key: string]: string } = {};\n  pageProgression: Constants.PageProgression | null = null;\n  documentURLTransformer: Base.DocumentURLTransformer;\n\n  constructor(\n    public readonly store: EPUBDocStore,\n    public readonly pubURL: string,\n  ) {\n    this.documentURLTransformer = this.createDocumentURLTransformer();\n    checkMathJax();\n  }\n\n  // FIXME: TS4055\n  createDocumentURLTransformer(): Base.DocumentURLTransformer {\n    const self = this;\n    class OPFDocumentURLTransformer implements Base.DocumentURLTransformer {\n      /**\n       * @override\n       */\n      transformFragment(fragment: string, baseURL: string): string {\n        const url = baseURL + (fragment ? `#${fragment}` : \"\");\n        return transformedIdPrefix + Base.escapeNameStrToHex(url, \":\");\n      }\n\n      /**\n       * @override\n       */\n      transformURL(url: string, baseURL: string): string {\n        const r = url.match(/^([^#]*)#?(.*)$/);\n        if (r) {\n          const path = r[1] || baseURL;\n          const fragment = decodeURIComponent(r[2]);\n          if (path) {\n            if (self.items.some((item) => item.src === path)) {\n              return `#${this.transformFragment(fragment, path)}`;\n            }\n          }\n        }\n        return url;\n      }\n\n      /**\n       * @override\n       */\n      restoreURL(encoded: string): string[] {\n        if (encoded.charAt(0) === \"#\") {\n          encoded = encoded.substring(1);\n        }\n        if (encoded.indexOf(transformedIdPrefix) === 0) {\n          encoded = encoded.substring(transformedIdPrefix.length);\n        }\n        const decoded = Base.unescapeStrFromHex(encoded, \":\");\n        const r = decoded.match(/^([^#]*)#?(.*)$/);\n        return r ? [r[1], r[2]] : [];\n      }\n    }\n    return new OPFDocumentURLTransformer();\n  }\n\n  /**\n   * Metadata is organized in the following way: fully-expanded property names\n   * (with IRI prefixes prepended) point to an array of values. Array contains\n   * at least one element. First element is primary and should be used by\n   * default. Element values are objects have the following keys:\n   * - \"v\" - item value as string,\n   * - \"s\" - scheme,\n   * - \"o\" - index in the order of appearing in the source,\n   * - \"r\" - refinement submetadata (organized just like the top-level\n   * metadata).\n   */\n  getMetadata(): Meta {\n    return this.metadata;\n  }\n\n  getPathFromURL(url: string): string | null {\n    if (url.startsWith(\"data:\")) {\n      return url === this.pubURL ? \"\" : url;\n    }\n    if (this.pubURL) {\n      let epubBaseURL = Base.resolveURL(\"\", this.pubURL);\n      if (url === epubBaseURL || url + \"/\" === epubBaseURL) {\n        return \"\";\n      }\n      if (epubBaseURL.charAt(epubBaseURL.length - 1) != \"/\") {\n        epubBaseURL += \"/\";\n      }\n      return url.substr(0, epubBaseURL.length) == epubBaseURL\n        ? decodeURIComponent(url.substr(epubBaseURL.length))\n        : null;\n    } else {\n      return url;\n    }\n  }\n\n  initWithXMLDoc(\n    opfXML: XmlDoc.XMLDocHolder,\n    encXML: XmlDoc.XMLDocHolder,\n    zipMetadata: Base.JSON,\n    manifestURL: string,\n  ): Task.Result<any> {\n    this.opfXML = opfXML;\n    this.encXML = encXML;\n    const pkg = opfXML.doc().child(\"package\");\n    const uidref = pkg.attribute(\"unique-identifier\")[0];\n    if (uidref) {\n      const uidElem = opfXML.getElement(`${opfXML.url}#${uidref}`);\n      if (uidElem) {\n        this.uid = uidElem.textContent.replace(/[ \\n\\r\\t]/g, \"\");\n      }\n    }\n    const srcToFallbackId = {};\n    this.items = pkg\n      .child(\"manifest\")\n      .child(\"item\")\n      .asArray()\n      .map((node) => {\n        const item = new OPFItem();\n        const elem = node as Element;\n        item.initWithElement(elem, opfXML.url);\n        const fallback = elem.getAttribute(\"fallback\");\n        if (fallback && !supportedMediaTypes[item.mediaType]) {\n          srcToFallbackId[item.src] = fallback;\n        }\n        if (!this.xhtmlToc && item.itemProperties[\"nav\"]) {\n          this.xhtmlToc = item;\n        }\n        if (!this.cover && item.itemProperties[\"cover-image\"]) {\n          this.cover = item;\n        }\n        return item;\n      });\n    this.itemMap = Base.indexArray(\n      this.items,\n      getOPFItemId as (p1: OPFItem) => string | null,\n    );\n    this.itemMapByPath = Base.indexArray(this.items, (item) =>\n      this.getPathFromURL(item.src),\n    );\n    for (const src in srcToFallbackId) {\n      let fallbackSrc = src;\n      while (true) {\n        const item = this.itemMap[srcToFallbackId[fallbackSrc]];\n        if (!item) {\n          break;\n        }\n        if (supportedMediaTypes[item.mediaType]) {\n          this.fallbackMap[src] = item.src;\n          break;\n        }\n        fallbackSrc = item.src;\n      }\n    }\n    this.spine = pkg\n      .child(\"spine\")\n      .child(\"itemref\")\n      .asArray()\n      .map((node, index) => {\n        const elem = node as Element;\n        const id = elem.getAttribute(\"idref\");\n        const item = this.itemMap[id as string];\n        if (item) {\n          item.itemRefElement = elem;\n          item.spineIndex = index;\n        }\n        return item;\n      });\n    const tocAttr = pkg.child(\"spine\").attribute(\"toc\")[0];\n    if (tocAttr) {\n      this.ncxToc = this.itemMap[tocAttr];\n    }\n    const pageProgressionAttr = pkg\n      .child(\"spine\")\n      .attribute(\"page-progression-direction\")[0];\n    if (pageProgressionAttr) {\n      this.pageProgression = Constants.pageProgressionOf(pageProgressionAttr);\n    }\n    const idpfObfURLs = !encXML\n      ? []\n      : encXML\n          .doc()\n          .child(\"encryption\")\n          .child(\"EncryptedData\")\n          .predicate(\n            XmlDoc.predicate.withChild(\n              \"EncryptionMethod\",\n              XmlDoc.predicate.withAttribute(\n                \"Algorithm\",\n                \"http://www.idpf.org/2008/embedding\",\n              ),\n            ),\n          )\n          .child(\"CipherData\")\n          .child(\"CipherReference\")\n          .attribute(\"URI\");\n    const mediaTypeElems = pkg\n      .child(\"bindings\")\n      .child(\"mediaType\")\n      .asArray() as Element[];\n    for (let i = 0; i < mediaTypeElems.length; i++) {\n      const handlerId = mediaTypeElems[i].getAttribute(\"handler\");\n      const mediaType = mediaTypeElems[i].getAttribute(\"media-type\");\n      if (mediaType && handlerId && this.itemMap[handlerId]) {\n        this.bindings[mediaType] = this.itemMap[handlerId].src;\n      }\n    }\n    this.metadata = readMetadata(\n      pkg.child(\"metadata\"),\n      pkg.attribute(\"prefix\")[0],\n    );\n    if (this.metadata[metaTerms.language]) {\n      this.lang = this.metadata[metaTerms.language][0][\"v\"];\n    }\n    if (this.metadata[metaTerms.layout]) {\n      this.prePaginated =\n        this.metadata[metaTerms.layout][0][\"v\"] === \"pre-paginated\";\n    }\n\n    if (!zipMetadata) {\n      if (idpfObfURLs.length > 0 && this.uid) {\n        // Have to deobfuscate in JavaScript\n        const deobfuscator = makeDeobfuscator(this.uid);\n        for (let i = 0; i < idpfObfURLs.length; i++) {\n          this.store.deobfuscators[this.pubURL + idpfObfURLs[i]] = deobfuscator;\n        }\n      }\n      if (this.prePaginated) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n    const manifestText = new Base.StringBuffer();\n    const obfuscations = {};\n    if (idpfObfURLs.length > 0 && this.uid) {\n      // Deobfuscate in the server.\n      const obfuscationKey = makeObfuscationKey(this.uid);\n      for (let i = 0; i < idpfObfURLs.length; i++) {\n        obfuscations[idpfObfURLs[i]] = obfuscationKey;\n      }\n    }\n    for (let i = 0; i < zipMetadata.length; i++) {\n      const entry = zipMetadata[i];\n      const encodedPath = entry[\"n\"];\n      if (encodedPath) {\n        const path = decodeURIComponent(encodedPath);\n        const item = this.itemMapByPath[path];\n        let mediaType: string | null = null;\n        if (item) {\n          item.compressed = entry[\"m\"] != 0;\n          item.compressedSize = entry[\"c\"];\n          if (item.mediaType) {\n            mediaType = item.mediaType.replace(/\\s+/g, \"\");\n          }\n        }\n        const obfuscation = obfuscations[path];\n        if (mediaType || obfuscation) {\n          manifestText.append(encodedPath);\n          manifestText.append(\" \");\n          manifestText.append(mediaType || \"application/octet-stream\");\n          if (obfuscation) {\n            manifestText.append(\" \");\n            manifestText.append(obfuscation);\n          }\n          manifestText.append(\"\\n\");\n        }\n      }\n    }\n    this.assignAutoPages();\n    return Net.ajax(\n      manifestURL,\n      Net.XMLHttpRequestResponseType.DEFAULT,\n      \"POST\",\n      manifestText.toString(),\n      \"text/plain\",\n    );\n  }\n\n  assignAutoPages(): void {\n    let epage = 0;\n    for (const item of this.spine) {\n      const epageCount = this.prePaginated\n        ? 1\n        : Math.ceil(item.compressedSize / 1024);\n      item.epage = epage;\n      item.epageCount = epageCount;\n      epage += epageCount;\n    }\n    this.epageCount = epage;\n\n    if (this.epageCountCallback) {\n      this.epageCountCallback(this.epageCount);\n    }\n  }\n\n  setEPageCountMode(epageIsRenderedPage: boolean) {\n    this.epageIsRenderedPage = epageIsRenderedPage || this.prePaginated;\n  }\n\n  countEPages(\n    epageCountCallback: ((p1: number) => void) | null,\n  ): Task.Result<boolean> {\n    this.epageCountCallback = epageCountCallback;\n\n    if (this.epageIsRenderedPage) {\n      if (this.prePaginated && this.epageCount == 0) {\n        this.assignAutoPages();\n      }\n      return Task.newResult(true);\n    }\n\n    let epage = 0;\n    let i = 0;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"countEPages\");\n    frame\n      .loopWithFrame((loopFrame) => {\n        if (i === this.spine.length) {\n          loopFrame.breakLoop();\n          return;\n        }\n        const item = this.spine[i++];\n        item.epage = epage;\n        this.store.load(item.src).then((xmldoc) => {\n          // According to the old comment,\n          // \"Estimate that offset=2700 roughly corresponds to 1024 bytes of compressed size.\"\n          // However, it should depend on the language.\n          // Further adjustment needed.\n\n          //let offsetPerEPage = 2700;\n          let offsetPerEPage = 1800;\n          const lang = xmldoc.lang || this.lang;\n          if (lang && lang.match(/^(ja|ko|zh)/)) {\n            offsetPerEPage /= 3;\n          }\n          item.epageCount = Math.ceil(xmldoc.getTotalOffset() / offsetPerEPage);\n          epage += item.epageCount;\n          this.epageCount = epage;\n          if (this.epageCountCallback) {\n            this.epageCountCallback(this.epageCount);\n          }\n          loopFrame.continueLoop();\n        });\n      })\n      .thenFinish(frame);\n    return frame.result();\n  }\n\n  /**\n   * Creates a fake OPF \"document\" that contains OPS chapters.\n   */\n  initWithChapters(params: OPFItemParam[], doc?: Document | null) {\n    this.itemMap = {};\n    this.itemMapByPath = {};\n    this.items = [];\n    this.spine = this.items;\n\n    // create a minimum fake OPF XML for navigation with EPUB CFI\n    const opfXML = (this.opfXML = new XmlDoc.XMLDocHolder(\n      null,\n      \"\",\n      new DOMParser().parseFromString(\"<spine></spine>\", \"text/xml\"),\n    ));\n    params.forEach((param) => {\n      const item = new OPFItem();\n      item.initWithParam(param);\n      Asserts.assert(item.id);\n      const itemref = opfXML.document.createElement(\"itemref\");\n      itemref.setAttribute(\"idref\", item.id);\n      opfXML.root.appendChild(itemref);\n      item.itemRefElement = itemref;\n      this.itemMap[item.id] = item;\n      let path = this.getPathFromURL(param.url);\n      if (path == null) {\n        path = param.url;\n      }\n      this.itemMapByPath[path] = item;\n      this.items.push(item);\n    });\n    if (doc) {\n      return this.store.addDocument(params[0].url, doc);\n    } else {\n      return Task.newResult(null);\n    }\n  }\n\n  initWithWebPubManifest(\n    manifestObj: Base.JSON,\n    doc?: Document,\n    manifestUrl?: string,\n  ): Task.Result<boolean> {\n    if (manifestObj[\"readingProgression\"]) {\n      this.pageProgression = manifestObj[\"readingProgression\"];\n    }\n    if (this.metadata === undefined) {\n      this.metadata = {};\n    }\n    const title =\n      manifestObj[\"name\"] || manifestObj[\"metadata\"]?.[\"title\"] || doc?.title;\n    if (title) {\n      this.metadata[metaTerms.title] = (\n        Array.isArray(title) ? title : [title]\n      ).map((item) => ({ v: item.value ?? item }));\n    }\n    const author =\n      manifestObj[\"author\"] ||\n      manifestObj[\"creator\"] ||\n      manifestObj[\"metadata\"]?.[\"author\"] ||\n      Array.from(\n        doc?.querySelectorAll(\"meta[name='author'], meta[name='DC.Creator']\") ??\n          [],\n      ).map((meta: HTMLMetaElement) => meta.content);\n    if (author && author.length !== 0) {\n      this.metadata[metaTerms.creator] = (\n        Array.isArray(author) ? author : [author]\n      ).map((item) => ({ v: item.name ?? item }));\n    }\n    const language =\n      manifestObj[\"inLanguage\"] ||\n      manifestObj[\"metadata\"]?.[\"language\"] ||\n      doc?.documentElement.lang ||\n      doc?.documentElement.getAttribute(\"xml:lang\");\n    if (language) {\n      this.metadata[metaTerms.language] = (\n        Array.isArray(language) ? language : [language]\n      ).map((item) => ({ v: item }));\n    }\n    // TODO: other metadata...\n\n    const primaryEntryPath = this.getPathFromURL(this.pubURL);\n    if (!manifestObj[\"readingOrder\"] && doc && primaryEntryPath !== null) {\n      manifestObj[\"readingOrder\"] = [encodeURI(primaryEntryPath)];\n\n      // Find TOC in the primary entry (X)HTML\n      const selector =\n        \"[role=doc-toc] a[href],\" +\n        \"[role=directory] a[href],\" +\n        \"nav li a[href],\" +\n        \".toc a[href],\" +\n        \"#toc a[href]\";\n      for (const anchorElem of doc.querySelectorAll(selector)) {\n        const href = anchorElem.getAttribute(\"href\");\n        if (/^(https?:)?\\/\\//.test(href)) {\n          // Avoid link to external resources\n          continue;\n        }\n        if (/\\.(jpe?g|png|gif|pdf|svg|mml)([#?]|$)/.test(href)) {\n          // Avoid link to non-HTML resources\n          continue;\n        }\n        const hrefNoFragment = Base.stripFragment(\n          Base.resolveURL(href, this.pubURL),\n        );\n        const path = this.getPathFromURL(hrefNoFragment);\n        const url = path !== null ? encodeURI(path) : hrefNoFragment;\n        if (manifestObj[\"readingOrder\"].indexOf(url) == -1) {\n          manifestObj[\"readingOrder\"].push(url);\n        }\n      }\n    }\n\n    const params = [];\n    let itemCount = 0;\n    let tocFound = -1;\n    [manifestObj[\"readingOrder\"], manifestObj[\"resources\"]].forEach(\n      (readingOrderOrResources) => {\n        if (readingOrderOrResources instanceof Array) {\n          readingOrderOrResources.forEach((itemObj) => {\n            const isInReadingOrder =\n              manifestObj[\"readingOrder\"].includes(itemObj);\n            const url =\n              typeof itemObj === \"string\"\n                ? itemObj\n                : itemObj.url || itemObj.href;\n            const encodingFormat =\n              typeof itemObj === \"string\"\n                ? \"\"\n                : itemObj.encodingFormat ||\n                  (itemObj.href && itemObj.type) ||\n                  \"\";\n            if (\n              isInReadingOrder ||\n              encodingFormat === \"text/html\" ||\n              encodingFormat === \"application/xhtml+xml\" ||\n              /(^|\\/)([^/]+\\.(x?html|htm|xht)|[^/.]*)([#?]|$)/.test(url)\n            ) {\n              const baseUrl = manifestUrl\n                ? manifestUrl.replace(/\\/[^/]+$/, \"/\")\n                : this.pubURL;\n              const param = {\n                url: Base.resolveURL(Base.convertSpecialURL(url), baseUrl),\n                index: itemCount++,\n                startPage: null,\n                skipPagesBefore: null,\n              };\n              if (itemObj.rel === \"contents\" && tocFound === -1) {\n                tocFound = param.index;\n              }\n              params.push(param);\n\n              //TODO: items not in readingOrder should be excluded from linear reading but available with internal link navigation.\n            }\n          });\n        }\n      },\n    );\n    const frame: Task.Frame<boolean> = Task.newFrame(\"initWithWebPubManifest\");\n    this.initWithChapters(params).then(() => {\n      if (tocFound !== -1) {\n        this.xhtmlToc = this.items[tocFound];\n      }\n\n      if (!this.xhtmlToc) {\n        this.xhtmlToc = manifestUrl\n          ? this.items?.[0]\n          : this.itemMapByPath[primaryEntryPath];\n      }\n\n      frame.finish(true);\n    });\n    return frame.result();\n  }\n\n  /**\n   * @return cfi\n   */\n  getCFI(spineIndex: number, offsetInItem: number): Task.Result<string | null> {\n    const item = this.spine[spineIndex];\n    const frame: Task.Frame<string | null> = Task.newFrame(\"getCFI\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const node = xmldoc.getNodeByOffset(offsetInItem);\n      let cfi: string | null = null;\n      if (node) {\n        const startOffset = xmldoc.getNodeOffset(node, 0, false);\n        const offsetInNode = offsetInItem - startOffset;\n        const fragment = new CFI.Fragment();\n        fragment.prependPathFromNode(node, offsetInNode, false, null);\n        if (item.itemRefElement) {\n          fragment.prependPathFromNode(item.itemRefElement, 0, false, null);\n        }\n        cfi = fragment.toString();\n      }\n      frame.finish(cfi);\n    });\n    return frame.result();\n  }\n\n  resolveFragment(fragstr: string | null): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveFragment\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (!fragstr) {\n          frame.finish(null);\n          return;\n        }\n        let fragment = new CFI.Fragment();\n        fragment.fromString(fragstr);\n        let item: OPFItem;\n        if (this.opfXML) {\n          const opfNav = fragment.navigate(this.opfXML.document);\n          if (opfNav.node.nodeType != 1 || opfNav.after || !opfNav.ref) {\n            frame.finish(null);\n            return;\n          }\n          const elem = opfNav.node as Element;\n          const idref = elem.getAttribute(\"idref\");\n          if (elem.localName != \"itemref\" || !idref || !this.itemMap[idref]) {\n            frame.finish(null);\n            return;\n          }\n          item = this.itemMap[idref];\n          fragment = opfNav.ref;\n        } else {\n          item = this.spine[0];\n        }\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          const nodeNav = fragment.navigate(xmldoc.document);\n          const offset = xmldoc.getNodeOffset(\n            nodeNav.node,\n            nodeNav.offset,\n            nodeNav.after,\n          );\n          frame.finish({\n            spineIndex: item.spineIndex,\n            offsetInItem: offset,\n            pageIndex: -1,\n          });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve fragment:\", fragstr);\n        frame.finish(null);\n      },\n    );\n  }\n\n  resolveEPage(epage: number): Task.Result<Position | null> {\n    return Task.handle(\n      \"resolveEPage\",\n      (frame: Task.Frame<Position | null>): void => {\n        if (epage <= 0) {\n          frame.finish({ spineIndex: 0, offsetInItem: 0, pageIndex: -1 });\n          return;\n        }\n        if (this.epageIsRenderedPage) {\n          let spineIndex = this.spine.findIndex((item) => {\n            return (\n              (item.epage == 0 && item.epageCount == 0) ||\n              (item.epage <= epage && item.epage + item.epageCount > epage)\n            );\n          });\n          if (spineIndex == -1) {\n            spineIndex = this.spine.length - 1;\n          }\n          let item = this.spine[spineIndex];\n          if (!item || item.epageCount == 0) {\n            item = this.spine[--spineIndex];\n          }\n          const pageIndex = Math.floor(epage - item.epage);\n          frame.finish({ spineIndex, offsetInItem: -1, pageIndex: pageIndex });\n          return;\n        }\n        let spineIndex = Base.binarySearch(this.spine.length, (index) => {\n          const item = this.spine[index];\n          return item.epage + item.epageCount > epage;\n        });\n        if (spineIndex == this.spine.length) {\n          spineIndex--;\n        }\n        const item = this.spine[spineIndex];\n        this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n          epage -= item.epage;\n          if (epage > item.epageCount) {\n            epage = item.epageCount;\n          }\n          let offset = 0;\n          if (epage > 0) {\n            const totalOffset = xmldoc.getTotalOffset();\n            offset = Math.round((totalOffset * epage) / item.epageCount);\n            if (offset == totalOffset) {\n              offset--;\n            }\n          }\n          frame.finish({ spineIndex, offsetInItem: offset, pageIndex: -1 });\n        });\n      },\n      (frame: Task.Frame<Position | null>, err: Error): void => {\n        Logging.logger.warn(err, \"Cannot resolve epage:\", epage);\n        frame.finish(null);\n      },\n    );\n  }\n\n  getEPageFromPosition(position: Position): Task.Result<number> {\n    const item = this.spine[position.spineIndex];\n    if (this.epageIsRenderedPage) {\n      const epage = item.epage + position.pageIndex;\n      return Task.newResult(epage);\n    }\n    if (position.offsetInItem <= 0) {\n      return Task.newResult(item.epage);\n    }\n    const frame: Task.Frame<number> = Task.newFrame(\"getEPage\");\n    this.store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      const totalOffset = xmldoc.getTotalOffset();\n      const offset = Math.min(totalOffset, position.offsetInItem);\n      frame.finish(item.epage + (offset * item.epageCount) / totalOffset);\n    });\n    return frame.result();\n  }\n}\n\nexport type PageAndPosition = {\n  page: Vtree.Page;\n  position: Position;\n};\n\nexport const makePageAndPosition = (\n  page: Vtree.Page,\n  pageIndex: number,\n): PageAndPosition => ({\n  page,\n  position: {\n    spineIndex: page.spineIndex,\n    pageIndex,\n    offsetInItem: page.offset,\n  },\n});\n\nexport type OPFViewItem = {\n  item: OPFItem;\n  xmldoc: XmlDoc.XMLDocHolder;\n  instance: OPS.StyleInstance;\n  layoutPositions: Vtree.LayoutPosition[];\n  pages: Vtree.Page[];\n  complete: boolean;\n};\n\nexport class OPFView implements Vgen.CustomRendererFactory {\n  spineItems: OPFViewItem[] = [];\n  spineItemLoadingContinuations: Task.Continuation<any>[][] = [];\n  pref: Exprs.Preferences;\n  clientLayout: Vgen.DefaultClientLayout;\n  counterStore: Counters.CounterStore;\n  tocAutohide: boolean = false;\n  tocView?: Toc.TOCView;\n\n  constructor(\n    public readonly opf: OPFDoc,\n    public readonly viewport: Vgen.Viewport,\n    public readonly fontMapper: Font.Mapper,\n    pref: Exprs.Preferences,\n    public readonly pageSheetSizeReporter: (\n      p1: { width: number; height: number },\n      p2: { [key: string]: { width: number; height: number } },\n      p3: number,\n      p4: number,\n    ) => any,\n  ) {\n    this.pref = Exprs.clonePreferences(pref);\n    this.clientLayout = new Vgen.DefaultClientLayout(viewport);\n    this.counterStore = new Counters.CounterStore(opf.documentURLTransformer);\n  }\n\n  private getPage(position: Position): Vtree.Page {\n    const viewItem = this.spineItems[position.spineIndex];\n    return viewItem ? viewItem.pages[position.pageIndex] : null;\n  }\n\n  getCurrentPageProgression(\n    position: Position,\n  ): Constants.PageProgression | null {\n    if (this.opf.pageProgression) {\n      return this.opf.pageProgression;\n    } else {\n      const viewItem = this.spineItems[position ? position.spineIndex : 0];\n      return viewItem ? viewItem.instance.pageProgression : null;\n    }\n  }\n\n  private finishPageContainer(\n    viewItem: OPFViewItem,\n    page: Vtree.Page,\n    pageIndex: number,\n  ) {\n    page.container.style.display = \"none\";\n    page.container.style.visibility = \"visible\";\n    page.container.style.position = \"\";\n    page.container.style.top = \"\";\n    page.container.style.left = \"\";\n    page.container.setAttribute(\n      \"data-vivliostyle-page-side\",\n      page.side as string,\n    );\n    const oldPage = viewItem.pages[pageIndex];\n    page.isFirstPage = viewItem.item.spineIndex == 0 && pageIndex == 0;\n    viewItem.pages[pageIndex] = page;\n\n    if (this.opf.epageIsRenderedPage) {\n      if (pageIndex == 0 && viewItem.item.spineIndex > 0) {\n        const prevItem = this.opf.spine[viewItem.item.spineIndex - 1];\n        viewItem.item.epage = prevItem.epage + prevItem.epageCount;\n      }\n      viewItem.item.epageCount = viewItem.pages.length;\n      this.opf.epageCount = this.opf.spine.reduce(\n        (count, item) => count + item.epageCount,\n        0,\n      );\n\n      if (this.opf.epageCountCallback) {\n        this.opf.epageCountCallback(this.opf.epageCount);\n      }\n    }\n\n    if (oldPage) {\n      viewItem.instance.viewport.contentContainer.replaceChild(\n        page.container,\n        oldPage.container,\n      );\n      oldPage.dispatchEvent({\n        type: \"replaced\",\n        target: null,\n        currentTarget: null,\n        preventDefault: null,\n        newPage: page,\n      });\n    } else {\n      // Find insert position in contentContainer.\n      let insertPos: Element | null = null;\n      if (pageIndex > 0) {\n        insertPos = viewItem.pages[pageIndex - 1].container.nextElementSibling;\n      } else {\n        for (\n          let i = viewItem.item.spineIndex + 1;\n          i < this.spineItems.length;\n          i++\n        ) {\n          const item = this.spineItems[i];\n          if (item && item.pages[0]) {\n            insertPos = item.pages[0].container;\n            break;\n          }\n        }\n      }\n      viewItem.instance.viewport.contentContainer.insertBefore(\n        page.container,\n        insertPos,\n      );\n    }\n    this.pageSheetSizeReporter(\n      {\n        width: viewItem.instance.pageSheetWidth,\n        height: viewItem.instance.pageSheetHeight,\n      },\n      viewItem.instance.pageSheetSize,\n      viewItem.item.spineIndex,\n      viewItem.instance.pageNumberOffset + pageIndex,\n    );\n  }\n\n  /**\n   * Render a single page. If the new page contains elements with ids that are\n   * referenced from other pages by 'target-counter()', those pages are rendered\n   * too (calling `renderSinglePage` recursively).\n   */\n  private renderSinglePage(\n    viewItem: OPFViewItem,\n    pos: Vtree.LayoutPosition,\n  ): Task.Result<RenderSinglePageResult> {\n    const frame: Task.Frame<RenderSinglePageResult> =\n      Task.newFrame(\"renderSinglePage\");\n    let page = this.makePage(viewItem, pos);\n    viewItem.instance.layoutNextPage(page, pos).then((posParam) => {\n      pos = posParam as Vtree.LayoutPosition;\n      const pageIndex = pos\n        ? pos.page - 1\n        : viewItem.layoutPositions.length - 1;\n      this.finishPageContainer(viewItem, page, pageIndex);\n      this.counterStore.finishPage(page.spineIndex, pageIndex);\n\n      // If the position of the page break change, we should re-layout the next\n      // page too.\n      let cont: Task.Result<any> = null;\n      if (pos) {\n        const prevPos = viewItem.layoutPositions[pos.page];\n        viewItem.layoutPositions[pos.page] = pos;\n        if (prevPos && viewItem.pages[pos.page]) {\n          if (!pos.isSamePosition(prevPos)) {\n            cont = this.renderSinglePage(viewItem, pos);\n          }\n        }\n      }\n      if (!cont) {\n        cont = Task.newResult(true);\n      }\n      cont.then(() => {\n        const unresolvedRefs = this.counterStore.getUnresolvedRefsToPage(page);\n        let index = 0;\n        frame\n          .loopWithFrame((loopFrame) => {\n            index++;\n            if (index > unresolvedRefs.length) {\n              loopFrame.breakLoop();\n              return;\n            }\n            const refs = unresolvedRefs[index - 1];\n            refs.refs = refs.refs.filter((ref) => !ref.isResolved());\n            if (refs.refs.length === 0) {\n              loopFrame.continueLoop();\n              return;\n            }\n            this.getPageViewItem(refs.spineIndex).then((viewItem) => {\n              if (!viewItem) {\n                loopFrame.continueLoop();\n                return;\n              }\n              this.counterStore.pushPageCounters(refs.pageCounters);\n              this.counterStore.pushReferencesToSolve(refs.refs);\n              const pos = viewItem.layoutPositions[refs.pageIndex];\n              this.renderSinglePage(viewItem, pos).then((result) => {\n                this.counterStore.popPageCounters();\n                this.counterStore.popReferencesToSolve();\n                const resultPosition = result.pageAndPosition.position;\n                if (\n                  resultPosition.spineIndex === page.spineIndex &&\n                  resultPosition.pageIndex === pageIndex\n                ) {\n                  page = result.pageAndPosition.page;\n                }\n                loopFrame.continueLoop();\n              });\n            });\n          })\n          .then(() => {\n            if (!page.container.parentElement) {\n              // page is replaced\n              page = viewItem.pages[pageIndex];\n            }\n            page.isLastPage =\n              !pos && viewItem.item.spineIndex === this.opf.spine.length - 1;\n            if (page.isLastPage) {\n              Asserts.assert(this.viewport);\n              this.counterStore.finishLastPage(this.viewport);\n            }\n            frame.finish({\n              pageAndPosition: makePageAndPosition(page, pageIndex),\n              nextLayoutPosition: pos,\n            });\n          });\n      });\n    });\n    return frame.result();\n  }\n\n  private normalizeSeekPosition(\n    position: Position,\n    viewItem: OPFViewItem,\n  ): Position | null {\n    let pageIndex = position.pageIndex;\n    let seekOffset = -1;\n    if (pageIndex < 0) {\n      seekOffset = position.offsetInItem;\n\n      // page with offset higher than seekOffset\n      const seekOffsetPageIndex = Base.binarySearch(\n        viewItem.layoutPositions.length,\n        (pageIndex) => {\n          // 'noLookAhead' argument of getPosition must be true, since\n          // otherwise StyleInstance.currentLayoutPosition is modified\n          // unintentionally.\n          const offset = viewItem.instance.getPosition(\n            viewItem.layoutPositions[pageIndex],\n            true,\n          );\n          return offset > seekOffset;\n        },\n      );\n      if (seekOffsetPageIndex === viewItem.layoutPositions.length) {\n        if (viewItem.complete) {\n          pageIndex = viewItem.layoutPositions.length - 1;\n        } else {\n          // need to search through pages that are not yet produced\n          pageIndex = Number.POSITIVE_INFINITY;\n        }\n      } else {\n        // page that contains seekOffset\n        pageIndex = seekOffsetPageIndex - 1;\n      }\n    } else if (\n      pageIndex === Number.POSITIVE_INFINITY &&\n      position.offsetInItem !== -1\n    ) {\n      seekOffset = position.offsetInItem;\n    }\n    return {\n      spineIndex: position.spineIndex,\n      pageIndex,\n      offsetInItem: seekOffset,\n    } as Position;\n  }\n\n  /**\n   * Find a page corresponding to a specified position among already laid out\n   * pages.\n   * @param sync If true, find the page synchronously (not waiting another\n   *     rendering task)\n   */\n  private findPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"findPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      let resultPage: Vtree.Page = null;\n      let pageIndex: number;\n      frame\n        .loopWithFrame((loopFrame) => {\n          const normalizedPosition = this.normalizeSeekPosition(\n            position,\n            viewItem,\n          );\n          pageIndex = normalizedPosition.pageIndex;\n          resultPage = viewItem.pages[pageIndex];\n          if (resultPage) {\n            loopFrame.breakLoop();\n          } else if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            resultPage = viewItem.pages[pageIndex];\n            loopFrame.breakLoop();\n          } else if (sync) {\n            this.renderPage(normalizedPosition).then((result) => {\n              if (result) {\n                resultPage = result.page;\n                pageIndex = result.position.pageIndex;\n              }\n              loopFrame.breakLoop();\n            });\n          } else {\n            // Wait for the layout task and retry\n            frame.sleep(100).then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .then(() => {\n          Asserts.assert(resultPage);\n          frame.finish(makePageAndPosition(resultPage, pageIndex));\n        });\n    });\n    return frame.result();\n  }\n\n  /**\n   * Renders a page at the specified position.\n   */\n  renderPage(position: Position): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPage\");\n    this.getPageViewItem(position.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const normalizedPosition = this.normalizeSeekPosition(position, viewItem);\n      let pageIndex = normalizedPosition.pageIndex;\n      const seekOffset = normalizedPosition.offsetInItem;\n      let resultPage = viewItem.pages[pageIndex];\n      if (resultPage) {\n        frame.finish(makePageAndPosition(resultPage, pageIndex));\n        return;\n      }\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (pageIndex < viewItem.layoutPositions.length) {\n            loopFrame.breakLoop();\n            return;\n          }\n          if (viewItem.complete) {\n            pageIndex = viewItem.layoutPositions.length - 1;\n            loopFrame.breakLoop();\n            return;\n          }\n          let pos =\n            viewItem.layoutPositions[viewItem.layoutPositions.length - 1];\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            const page = result.pageAndPosition.page;\n            pos = result.nextLayoutPosition;\n            if (pos) {\n              if (seekOffset >= 0) {\n                // Searching for offset, don't know the page number.\n                const offset = viewItem.instance.getPosition(pos);\n                if (offset > seekOffset) {\n                  resultPage = page;\n                  pageIndex = viewItem.layoutPositions.length - 2;\n                  loopFrame.breakLoop();\n                  return;\n                }\n              }\n              loopFrame.continueLoop();\n            } else {\n              resultPage = page;\n              pageIndex = result.pageAndPosition.position.pageIndex;\n              viewItem.complete = true;\n              loopFrame.breakLoop();\n            }\n          });\n        })\n        .then(() => {\n          resultPage = resultPage || viewItem.pages[pageIndex];\n          const pos = viewItem.layoutPositions[pageIndex];\n          if (resultPage) {\n            frame.finish(makePageAndPosition(resultPage, pageIndex));\n            return;\n          }\n          this.renderSinglePage(viewItem, pos).then((result) => {\n            if (!result.nextLayoutPosition) {\n              viewItem.complete = true;\n            }\n            frame.finish(result.pageAndPosition);\n          });\n        });\n    });\n    return frame.result();\n  }\n\n  renderAllPages(): Task.Result<PageAndPosition | null> {\n    return this.renderPagesUpto(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      false,\n    );\n  }\n\n  /**\n   * Render pages from (spineIndex=0, pageIndex=0) to the specified (spineIndex,\n   * pageIndex).\n   * @param notAllPages If true, render from biginning of specified spine item.\n   */\n  renderPagesUpto(\n    position: Position,\n    notAllPages: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"renderPagesUpto\");\n    if (!position) {\n      position = { spineIndex: 0, pageIndex: 0, offsetInItem: 0 };\n    }\n    const spineIndex = position.spineIndex;\n    const pageIndex = position.pageIndex;\n    let s = 0;\n\n    if (notAllPages) {\n      // Render pages from biginning of specified spine item.\n      s = spineIndex;\n    }\n\n    let lastResult: PageAndPosition;\n    frame\n      .loopWithFrame((loopFrame) => {\n        const pos = {\n          spineIndex: s,\n          pageIndex: s === spineIndex ? pageIndex : Number.POSITIVE_INFINITY,\n          offsetInItem: s === spineIndex ? position.offsetInItem : -1,\n        };\n        this.renderPage(pos).then((result) => {\n          lastResult = result;\n          if (++s > spineIndex) {\n            loopFrame.breakLoop();\n          } else {\n            loopFrame.continueLoop();\n          }\n        });\n      })\n      .then(() => {\n        frame.finish(lastResult);\n      });\n    return frame.result();\n  }\n\n  /**\n   * Move to the first page and render it.\n   */\n  firstPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      { spineIndex: 0, pageIndex: 0, offsetInItem: -1 },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the last page and render it.\n   */\n  lastPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    return this.findPage(\n      {\n        spineIndex: this.opf.spine.length - 1,\n        pageIndex: Number.POSITIVE_INFINITY,\n        offsetInItem: -1,\n      },\n      sync,\n    );\n  }\n\n  /**\n   * Move to the next page position and render page.\n   * @param sync If true, get the page synchronously (not waiting another\n   *     rendering task)\n   */\n  nextPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    const frame: Task.Frame<PageAndPosition | null> = Task.newFrame(\"nextPage\");\n    this.getPageViewItem(spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      if (\n        viewItem.complete &&\n        pageIndex == viewItem.layoutPositions.length - 1\n      ) {\n        if (spineIndex >= this.opf.spine.length - 1) {\n          frame.finish(null);\n          return;\n        }\n        spineIndex++;\n        pageIndex = 0;\n\n        // Remove next viewItem if its first page has same side as the current page\n        // to avoid unpaired page.\n        const nextViewItem = this.spineItems[spineIndex];\n        const nextPage = nextViewItem && nextViewItem.pages[0];\n        const currentPage = viewItem.pages[viewItem.pages.length - 1];\n        if (nextPage && currentPage && nextPage.side == currentPage.side) {\n          nextViewItem.pages.forEach((page) => {\n            if (page.container) page.container.remove();\n          });\n          this.spineItems[spineIndex] = null;\n          this.spineItemLoadingContinuations[spineIndex] = null;\n        }\n      } else {\n        pageIndex++;\n      }\n      this.findPage(\n        { spineIndex, pageIndex, offsetInItem: -1 },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the previous page and render it.\n   */\n  previousPage(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    let spineIndex = position.spineIndex;\n    let pageIndex = position.pageIndex;\n    if (pageIndex == 0) {\n      if (spineIndex == 0) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n      spineIndex--;\n      pageIndex = Number.POSITIVE_INFINITY;\n    } else {\n      pageIndex--;\n    }\n    return this.findPage({ spineIndex, pageIndex, offsetInItem: -1 }, sync);\n  }\n\n  /**\n   * @param page This page should be a currently displayed page.\n   */\n  private isRectoPage(page: Vtree.Page, position: Position): boolean {\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    const isLTR =\n      this.getCurrentPageProgression(position) ===\n      Constants.PageProgression.LTR;\n    return (!isLeft && isLTR) || (isLeft && !isLTR);\n  }\n\n  /**\n   * Get a spread containing the currently displayed page.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   */\n  getSpread(position: Position, sync: boolean): Task.Result<Vtree.Spread> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult({ left: null, right: null });\n    }\n    const frame: Task.Frame<Vtree.Spread> = Task.newFrame(\"getSpread\");\n    const isLeft = page.side === Constants.PageSide.LEFT;\n    let other: Task.Result<PageAndPosition>;\n    if (this.isRectoPage(page, position)) {\n      other = this.previousPage(position, sync);\n    } else {\n      other = this.nextPage(position, sync);\n    }\n    other.then((otherPageAndPosition) => {\n      // this page may be replaced during nextPage(), so get thisPage again.\n      const thisPage = this.getPage(position);\n\n      let otherPage = otherPageAndPosition && otherPageAndPosition.page;\n      if (otherPage && otherPage.side === thisPage.side) {\n        // otherPage must not be same side\n        otherPage = null;\n      }\n\n      if (isLeft) {\n        frame.finish({ left: thisPage, right: otherPage });\n      } else {\n        frame.finish({ left: otherPage, right: thisPage });\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the next spread and render pages.\n   * @param sync If true, get the spread synchronously (not waiting another\n   *     rendering task)\n   * @returns The 'verso' page of the next spread.\n   */\n  nextSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const next = this.nextPage(position, sync);\n    if (isRecto) {\n      return next;\n    } else {\n      return next.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the next spread.\n            return next;\n          }\n          const next2 = this.nextPage(result.position, sync);\n          return next2.thenAsync((result2) => {\n            if (result2) {\n              return next2;\n            } else {\n              // If this is tha last spread, move to next page in the same spread.\n              return next;\n            }\n          });\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Move to the previous spread and render pages.\n   * @returns The 'recto' page of the previous spread.\n   */\n  previousSpread(\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const page = this.getPage(position);\n    if (!page) {\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const isRecto = this.isRectoPage(page, position);\n    const prev = this.previousPage(position, sync);\n    const oldPrevPageCont = page.container.previousElementSibling;\n    if (isRecto) {\n      return prev.thenAsync((result) => {\n        if (result) {\n          if (result.page.side === page.side) {\n            // If same side, this is the previous spread.\n            return prev;\n          }\n          if (result.page.container !== oldPrevPageCont) {\n            // If previous page is changed, return it.\n            return prev;\n          }\n          return this.previousPage(result.position, sync);\n        } else {\n          return Task.newResult(null as PageAndPosition | null);\n        }\n      });\n    } else {\n      return prev;\n    }\n  }\n\n  /**\n   * Move to the epage specified by the given number (zero-based) and render it.\n   */\n  navigateToEPage(\n    epage: number,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToEPage\");\n    this.opf.resolveEPage(epage).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given CFI and render it.\n   */\n  navigateToFragment(\n    fragment: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateToCFI\");\n    this.opf.resolveFragment(fragment).then((position) => {\n      if (position) {\n        this.findPage(position, sync).thenFinish(frame);\n      } else {\n        frame.finish(null);\n      }\n    });\n    return frame.result();\n  }\n\n  /**\n   * Move to the page specified by the given URL and render it.\n   */\n  navigateTo(\n    href: string,\n    position: Position,\n    sync: boolean,\n  ): Task.Result<PageAndPosition | null> {\n    Logging.logger.debug(\"Navigate to\", href);\n    let path = this.opf.getPathFromURL(Base.stripFragment(href));\n    if (!path) {\n      if (this.opf.opfXML && href.match(/^#epubcfi\\(/)) {\n        // CFI fragment is \"relative\" to OPF.\n        path = this.opf.getPathFromURL(this.opf.opfXML.url);\n      } else if (href.charAt(0) === \"#\") {\n        const restored = this.opf.documentURLTransformer.restoreURL(href);\n        if (this.opf.opfXML) {\n          path = this.opf.getPathFromURL(restored[0]);\n          if (path == null) {\n            path = restored[0];\n          }\n        } else {\n          path = restored[0];\n        }\n        href = restored[0] + (restored[1] ? `#${restored[1]}` : \"\");\n      }\n      if (path == null) {\n        return Task.newResult(null as PageAndPosition | null);\n      }\n    }\n    const item = this.opf.itemMapByPath[path];\n    if (!item) {\n      if (\n        this.opf.opfXML &&\n        path == this.opf.getPathFromURL(this.opf.opfXML.url)\n      ) {\n        // CFI link?\n        const fragmentIndex = href.indexOf(\"#\");\n        if (fragmentIndex >= 0) {\n          return this.navigateToFragment(\n            href.substr(fragmentIndex + 1),\n            position,\n            sync,\n          );\n        }\n      }\n      return Task.newResult(null as PageAndPosition | null);\n    }\n    const frame: Task.Frame<PageAndPosition | null> =\n      Task.newFrame(\"navigateTo\");\n    this.getPageViewItem(item.spineIndex).then((viewItem) => {\n      if (!viewItem) {\n        frame.finish(null);\n        return;\n      }\n      const target = viewItem.xmldoc.getElement(href);\n      this.findPage(\n        {\n          spineIndex: item.spineIndex,\n          pageIndex: -1,\n          offsetInItem: target ? viewItem.xmldoc.getElementOffset(target) : 0,\n        },\n        sync,\n      ).thenFinish(frame);\n    });\n    return frame.result();\n  }\n\n  makePage(viewItem: OPFViewItem, pos: Vtree.LayoutPosition): Vtree.Page {\n    const viewport = viewItem.instance.viewport;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    pageCont.setAttribute(\"data-vivliostyle-page-container\", \"true\");\n    pageCont.setAttribute(\"role\", \"region\");\n    pageCont.style.position = \"absolute\";\n    pageCont.style.top = \"0\";\n    pageCont.style.left = \"0\";\n\n    if (!Constants.isDebug) {\n      pageCont.style.visibility = \"hidden\";\n    }\n    viewport.layoutBox.appendChild(pageCont);\n    const bleedBox = viewport.document.createElement(\"div\") as HTMLElement;\n    bleedBox.setAttribute(\"data-vivliostyle-bleed-box\", \"true\");\n    pageCont.appendChild(bleedBox);\n    const page = new Vtree.Page(pageCont, bleedBox);\n    page.spineIndex = viewItem.item.spineIndex;\n    page.position = pos;\n    page.offset = viewItem.instance.getPosition(pos);\n    if (\n      page.offset === 0 &&\n      !(viewItem.instance.blankPageAtStart && viewItem.pages.length === 0)\n    ) {\n      const id = this.opf.documentURLTransformer.transformFragment(\n        \"\",\n        viewItem.item.src,\n      );\n      bleedBox.setAttribute(\"id\", id);\n      page.registerElementWithId(bleedBox, id);\n    }\n    if (viewport !== this.viewport) {\n      const matrix = Exprs.letterbox(\n        this.viewport.width,\n        this.viewport.height,\n        viewport.width,\n        viewport.height,\n      );\n      const cssMatrix = CssParser.parseValue(\n        null,\n        new CssTokenizer.Tokenizer(matrix, null),\n        \"\",\n      );\n      page.delayedItems.push(\n        new Vtree.DelayedItem(pageCont, \"transform\", cssMatrix),\n      );\n    }\n    return page;\n  }\n\n  makeObjectView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    let data = srcElem.getAttribute(\"data\");\n    let result: Element | null = null;\n    if (data) {\n      data = Base.resolveURL(data, xmldoc.url);\n      let mediaType = srcElem.getAttribute(\"media-type\");\n      if (!mediaType) {\n        const path = this.opf.getPathFromURL(data);\n        if (path) {\n          const item = this.opf.itemMapByPath[path];\n          if (item) {\n            mediaType = item.mediaType;\n          }\n        }\n      }\n      if (mediaType) {\n        const handlerSrc = this.opf.bindings[mediaType];\n        if (handlerSrc) {\n          result = this.viewport.document.createElement(\"iframe\");\n          (result as HTMLElement).style.border = \"none\";\n          const srcParam = Base.lightURLEncode(data);\n          const typeParam = Base.lightURLEncode(mediaType);\n          const sb = new Base.StringBuffer();\n          sb.append(handlerSrc);\n          sb.append(\"?src=\");\n          sb.append(srcParam);\n          sb.append(\"&type=\");\n          sb.append(typeParam);\n          for (let c: Node = srcElem.firstChild; c; c = c.nextSibling) {\n            if (c.nodeType == 1) {\n              const ce = c as Element;\n              if (ce.localName == \"param\" && ce.namespaceURI == Base.NS.XHTML) {\n                const pname = ce.getAttribute(\"name\");\n                const pvalue = ce.getAttribute(\"value\");\n                if (pname && pvalue) {\n                  sb.append(\"&\");\n                  sb.append(encodeURIComponent(pname));\n                  sb.append(\"=\");\n                  sb.append(encodeURIComponent(pvalue));\n                }\n              }\n            }\n          }\n          result.setAttribute(\"src\", sb.toString());\n          const width = srcElem.getAttribute(\"width\");\n          if (width) {\n            result.setAttribute(\"width\", width);\n          }\n          const height = srcElem.getAttribute(\"height\");\n          if (height) {\n            result.setAttribute(\"height\", height);\n          }\n        }\n      }\n    }\n    if (!result) {\n      result = this.viewport.document.createElement(\"span\");\n      result.setAttribute(\"data-adapt-process-children\", \"true\");\n    }\n\n    // Need to cast because we need {Element}, not {!Element}\n    return Task.newResult(result as Element);\n  }\n\n  makeMathJaxView(\n    xmldoc: XmlDoc.XMLDocHolder,\n    srcElem: Element,\n    viewParent: Element,\n    computedStyle: { [key: string]: Css.Val },\n  ): Task.Result<Element> {\n    // See if MathJax installed, use it if it is.\n    const hub = getMathJaxHub();\n    if (hub) {\n      const doc = viewParent.ownerDocument;\n      const span = doc.createElement(\"span\");\n      viewParent.appendChild(span);\n      const clonedMath = doc.importNode(srcElem, true);\n      this.resolveURLsInMathML(clonedMath, xmldoc);\n      span.appendChild(clonedMath);\n      const queue = hub[\"queue\"];\n      queue[\"Push\"]([\"Typeset\", hub, span]);\n      const frame: Task.Frame<Element> = Task.newFrame(\"makeMathJaxView\");\n      const continuation = frame.suspend();\n      queue[\"Push\"](() => {\n        continuation.schedule(span);\n      });\n      return frame.result();\n    }\n    return Task.newResult(null as Element);\n  }\n\n  private resolveURLsInMathML(node: Node, xmldoc: XmlDoc.XMLDocHolder) {\n    if (node == null) {\n      return;\n    }\n    if (node.nodeType === 1 && (node as Element).tagName === \"mglyph\") {\n      const attrs = Array.from((node as Element).attributes);\n      for (const attr of attrs) {\n        if (attr.name !== \"src\") {\n          continue;\n        }\n        const newUrl = Base.resolveURL(attr.nodeValue, xmldoc.url);\n        if (attr.namespaceURI) {\n          (node as Element).setAttributeNS(\n            attr.namespaceURI,\n            attr.name,\n            newUrl,\n          );\n        } else {\n          (node as Element).setAttribute(attr.name, newUrl);\n        }\n      }\n    }\n    if (node.firstChild) {\n      this.resolveURLsInMathML(node.firstChild, xmldoc);\n    }\n    if (node.nextSibling) {\n      this.resolveURLsInMathML(node.nextSibling, xmldoc);\n    }\n  }\n\n  /**\n   * @override\n   */\n  makeCustomRenderer(xmldoc: XmlDoc.XMLDocHolder): Vgen.CustomRenderer {\n    return (\n      srcElem: Element,\n      viewParent: Element,\n      computedStyle: { [key: string]: Css.Val },\n    ): Task.Result<Element> => {\n      if (\n        srcElem.localName == \"object\" &&\n        srcElem.namespaceURI == Base.NS.XHTML\n      ) {\n        return this.makeObjectView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (srcElem.namespaceURI == Base.NS.MATHML) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      } else if (\n        (srcElem as HTMLElement).dataset &&\n        (srcElem as HTMLElement).dataset[\"mathTypeset\"] == \"true\"\n      ) {\n        return this.makeMathJaxView(xmldoc, srcElem, viewParent, computedStyle);\n      }\n      return Task.newResult(null as Element);\n    };\n  }\n\n  getPageViewItem(spineIndex: number): Task.Result<OPFViewItem> {\n    if (spineIndex === -1 || spineIndex >= this.opf.spine.length) {\n      return Task.newResult(null as OPFViewItem);\n    }\n    let viewItem = this.spineItems[spineIndex];\n    if (viewItem) {\n      return Task.newResult(viewItem);\n    }\n    const frame: Task.Frame<OPFViewItem> = Task.newFrame(\"getPageViewItem\");\n\n    // If loading for the item has already been started, suspend and wait for\n    // the result.\n    let loadingContinuations = this.spineItemLoadingContinuations[spineIndex];\n    if (loadingContinuations) {\n      const cont = frame.suspend();\n      loadingContinuations.push(cont);\n      return frame.result();\n    } else {\n      loadingContinuations = this.spineItemLoadingContinuations[spineIndex] =\n        [];\n    }\n    const item = this.opf.spine[spineIndex];\n    const store = this.opf.store;\n    store.load(item.src).then((xmldoc: XmlDoc.XMLDocHolder) => {\n      // EPUB Spine properties support\n      const epubSpineProperties =\n        item.itemRefElement.getAttribute(\"properties\");\n      if (epubSpineProperties) {\n        xmldoc.root.setAttribute(\n          \"data-vivliostyle-epub-spine-properties\",\n          epubSpineProperties,\n        );\n      }\n      item.title = xmldoc.document.title;\n      const style = store.getStyleForDoc(xmldoc);\n      const customRenderer = this.makeCustomRenderer(xmldoc);\n      let viewport = this.viewport;\n      const viewportSize = style.sizeViewport(\n        viewport.width,\n        viewport.height,\n        viewport.fontSize,\n        this.pref,\n      );\n      if (\n        viewportSize.width != viewport.width ||\n        viewportSize.height != viewport.height ||\n        viewportSize.fontSize != viewport.fontSize\n      ) {\n        viewport = new Vgen.Viewport(\n          viewport.window,\n          viewportSize.fontSize,\n          viewport.root,\n          viewportSize.width,\n          viewportSize.height,\n        );\n      }\n      const isVersoFirstPage = this.spineItems[0]?.instance.isVersoFirstPage;\n      const previousViewItem = this.spineItems[spineIndex - 1];\n      let pageNumberOffset: number;\n      let pageCounterOffset: number;\n      if (item.startPage !== null) {\n        pageNumberOffset = item.startPage - 1;\n        pageCounterOffset = pageNumberOffset;\n      } else {\n        if (\n          spineIndex > 0 &&\n          (!previousViewItem || !previousViewItem.complete)\n        ) {\n          // When navigate to a new spine item skipping the previous items,\n          // give up calculate pageNumberOffset and use epage (or spineIndex if epage is unset).\n          pageNumberOffset = item.epage || spineIndex;\n          if (\n            !this.opf.prePaginated &&\n            pageNumberOffset % 2 == (isVersoFirstPage ? 1 : 0)\n          ) {\n            // Force to odd number to avoid unpaired page. (This is 0 based and even number is recto)\n            // (odd and even are reversed if isVersoFirstPage is true)\n            pageNumberOffset++;\n          }\n          pageCounterOffset = pageNumberOffset;\n        } else {\n          pageNumberOffset = previousViewItem\n            ? previousViewItem.instance.pageNumberOffset +\n              previousViewItem.pages.length\n            : 0;\n          const counters = this.counterStore.currentPageCounters[\"page\"];\n          pageCounterOffset =\n            !counters || !counters.length\n              ? pageNumberOffset\n              : counters[counters.length - 1];\n\n          // Note: The \"page\" counter value differs to the \"page-number\" value\n          // if the \"page\" counter has been reset by counter-reset/increment.\n          // (Fix for issue #701)\n        }\n        if (item.skipPagesBefore !== null) {\n          pageNumberOffset += item.skipPagesBefore;\n          pageCounterOffset += item.skipPagesBefore;\n        }\n      }\n      this.counterStore.forceSetPageCounter(pageCounterOffset);\n      const instance = new OPS.StyleInstance(\n        style,\n        xmldoc,\n        this.opf.lang,\n        viewport,\n        this.clientLayout,\n        this.fontMapper,\n        customRenderer,\n        this.opf.fallbackMap,\n        pageNumberOffset,\n        this.opf.documentURLTransformer,\n        this.counterStore,\n        this.opf.pageProgression,\n        isVersoFirstPage,\n      );\n      instance.pref = this.pref;\n\n      // For env(pub-title) and env(doc-title)\n      const pubTitles = this.opf.metadata && this.opf.metadata[metaTerms.title];\n      instance.pubTitle =\n        (pubTitles && pubTitles[0] && pubTitles[0][\"v\"]) || \"\";\n      instance.docTitle = item.title || \"\";\n\n      instance.init().then(() => {\n        viewItem = {\n          item,\n          xmldoc,\n          instance,\n          layoutPositions: [null],\n          pages: [],\n          complete: false,\n        };\n        this.spineItems[spineIndex] = viewItem;\n        frame.finish(viewItem);\n        loadingContinuations.forEach((c) => {\n          c.schedule(viewItem);\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  removeRenderedPages() {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        item.pages.splice(0);\n      }\n    }\n    this.viewport.clear();\n  }\n\n  /**\n   * Returns if at least one page has 'auto' size\n   */\n  hasAutoSizedPages(): boolean {\n    const items = this.spineItems;\n    for (const item of items) {\n      if (item) {\n        const pages = item.pages;\n        for (const page of pages) {\n          if (page.isAutoPageWidth && page.isAutoPageHeight) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n\n  hasPages(): boolean {\n    return this.spineItems.some((item) => item && item.pages.length > 0);\n  }\n\n  showTOC(autohide: boolean): Task.Result<Vtree.Page> {\n    const opf = this.opf;\n    const toc = opf.xhtmlToc || opf.ncxToc;\n    this.tocAutohide = autohide;\n    if (!toc) {\n      return Task.newResult(null as Vtree.Page);\n    }\n    if (this.tocView && this.tocView.page) {\n      this.tocView.page.container.style.visibility = \"visible\";\n      this.tocView.page.container.setAttribute(\"aria-hidden\", \"false\");\n      return Task.newResult(this.tocView.page);\n    }\n    const frame: Task.Frame<Vtree.Page> = Task.newFrame(\"showTOC\");\n    if (!this.tocView) {\n      this.tocView = new Toc.TOCView(\n        opf.store,\n        toc.src,\n        opf.lang,\n        this.clientLayout,\n        this.fontMapper,\n        this.pref,\n        this,\n        opf.fallbackMap,\n        opf.documentURLTransformer,\n        this.counterStore,\n      );\n    }\n    const viewport = this.viewport;\n    const tocWidth = Math.min(350, Math.round(0.67 * viewport.width) - 16);\n    const tocHeight = viewport.height - 6;\n    const pageCont = viewport.document.createElement(\"div\") as HTMLElement;\n    viewport.root.appendChild(pageCont);\n    // pageCont.style.position = \"absolute\";\n    pageCont.style.visibility = \"hidden\";\n    // pageCont.style.left = \"3px\";\n    // pageCont.style.top = \"3px\";\n    pageCont.style.width = `${tocWidth + 10}px`;\n    pageCont.style.maxHeight = `${tocHeight}px`;\n    // pageCont.style.overflow = \"scroll\";\n    // pageCont.style.overflowX = \"hidden\";\n    // pageCont.style.background = \"rgba(248,248,248,0.9)\";\n    // pageCont.style[\"borderRadius\"] = \"2px\";\n    // pageCont.style[\"boxShadow\"] = \"1px 1px 2px rgba(0,0,0,0.4)\";\n\n    pageCont.setAttribute(\"data-vivliostyle-toc-box\", \"true\");\n    pageCont.setAttribute(\"role\", \"navigation\");\n\n    this.tocView\n      .showTOC(pageCont, viewport, tocWidth, tocHeight, this.viewport.fontSize)\n      .then((page) => {\n        pageCont.style.visibility = \"visible\";\n        pageCont.setAttribute(\"aria-hidden\", \"false\");\n        frame.finish(page);\n      });\n    return frame.result();\n  }\n\n  hideTOC(): void {\n    if (this.tocView) {\n      this.tocView.hideTOC();\n    }\n  }\n\n  isTOCVisible(): boolean {\n    return !!this.tocView && this.tocView.isTOCVisible();\n  }\n}\n\nexport interface RenderSinglePageResult {\n  pageAndPosition: PageAndPosition;\n  nextLayoutPosition: Vtree.LayoutPosition;\n}\n","/**\n * Copyright 2013 Google, Inc.\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview AdaptiveViewer - Viewer implementation.\n */\nimport * as Asserts from \"./asserts\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Exprs from \"./exprs\";\nimport * as Font from \"./font\";\nimport * as Logging from \"./logging\";\nimport * as Plugin from \"./plugin\";\nimport * as Profile from \"./profile\";\nimport * as Scripts from \"./scripts\";\nimport * as Task from \"./task\";\nimport * as TaskUtil from \"./task-util\";\nimport * as Vgen from \"./vgen\";\nimport * as Vtree from \"./vtree\";\nimport {\n  TextPolyfillCss,\n  VivliostyleViewportCss,\n  VivliostyleViewportScreenCss,\n} from \"./assets\";\n\nexport type Action = (p1: Base.JSON) => Task.Result<boolean>;\n\nexport type ViewportSize = {\n  marginLeft: number;\n  marginRight: number;\n  marginTop: number;\n  marginBottom: number;\n  width: number;\n  height: number;\n};\n\nexport const VIEWPORT_STATUS_ATTRIBUTE = \"data-vivliostyle-viewer-status\";\n\nexport const VIEWPORT_SPREAD_VIEW_ATTRIBUTE = \"data-vivliostyle-spread-view\";\n\n/**\n * @enum {string}\n */\nexport enum PageViewMode {\n  SINGLE_PAGE = \"singlePage\",\n  SPREAD = \"spread\",\n  AUTO_SPREAD = \"autoSpread\",\n}\n\nexport type SingleDocumentParam = {\n  url: string;\n  startPage: number | null;\n  skipPagesBefore: number | null;\n};\n\nexport class AdaptiveViewer {\n  fontMapper: Font.Mapper;\n  kick: () => void;\n  sendCommand: (p1: Base.JSON | string) => void;\n  resizeListener: () => void;\n  hyperlinkListener: Base.EventListener;\n  pageRuleStyleElement: HTMLElement;\n  pageSheetSizeAlreadySet: boolean = false;\n  renderTask: Task.Task | null = null;\n  actions: { [key: string]: Action };\n  readyState: Constants.ReadyState;\n  packageURL: string[];\n  opf: Epub.OPFDoc;\n  haveZipMetadata: boolean;\n  touchActive: boolean;\n  touchX: number;\n  touchY: number;\n  needResize: boolean;\n  needRefresh: boolean;\n  viewportSize: ViewportSize | null;\n  currentPage: Vtree.Page;\n  currentSpread: Vtree.Spread | null;\n  pagePosition: Epub.Position | null;\n  fontSize: number;\n  zoom: number;\n  fitToScreen: boolean;\n  pageViewMode: PageViewMode;\n  waitForLoading: boolean;\n  renderAllPages: boolean;\n  pref: Exprs.Preferences;\n  pageSizes: { width: number; height: number }[];\n\n  // force relayout\n  viewport: Vgen.Viewport | null;\n  opfView: Epub.OPFView;\n\n  constructor(\n    public readonly window: Window,\n    public readonly viewportElement: HTMLElement,\n    public readonly instanceId: string,\n    public readonly callbackFn: (p1: Base.JSON) => void,\n  ) {\n    const document = viewportElement.ownerDocument;\n    const findOrCreateStyleElement = (\n      id: string,\n      cssText?: string,\n    ): HTMLElement => {\n      let styleElement = document.getElementById(id);\n      if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        styleElement.id = id;\n        if (cssText) {\n          styleElement.textContent = cssText;\n        }\n        document.head.appendChild(styleElement);\n      }\n      return styleElement;\n    };\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-screen-css\",\n      VivliostyleViewportScreenCss,\n    );\n    findOrCreateStyleElement(\n      \"vivliostyle-viewport-css\",\n      VivliostyleViewportCss,\n    );\n    findOrCreateStyleElement(\"vivliostyle-text-polyfill-css\", TextPolyfillCss);\n\n    viewportElement.setAttribute(\"data-vivliostyle-viewer-viewport\", true);\n    if (Constants.isDebug) {\n      viewportElement.setAttribute(\"data-vivliostyle-debug\", true);\n    }\n    viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, \"loading\");\n    this.fontMapper = new Font.Mapper(document.head, viewportElement);\n    this.init();\n    this.kick = () => {};\n    this.sendCommand = () => {};\n    this.resizeListener = () => {\n      this.needResize = true;\n      this.kick();\n    };\n    this.pageReplacedListener = this.pageReplacedListener.bind(this);\n    this.hyperlinkListener = (evt) => {};\n    this.pageRuleStyleElement = findOrCreateStyleElement(\n      \"vivliostyle-page-rules\",\n    );\n    this.actions = {\n      loadPublication: this.loadPublication,\n      loadXML: this.loadXML,\n      configure: this.configure,\n      moveTo: this.moveTo,\n      toc: this.showTOC,\n    };\n    this.addLogListeners();\n  }\n\n  private init(): void {\n    this.readyState = Constants.ReadyState.LOADING;\n    this.packageURL = [];\n    this.opf = null;\n    this.haveZipMetadata = false;\n    this.touchActive = false;\n    this.touchX = 0;\n    this.touchY = 0;\n    this.needResize = false;\n    this.needRefresh = false;\n    this.viewportSize = null;\n    this.currentPage = null;\n    this.currentSpread = null;\n    this.pagePosition = null;\n    this.fontSize = 16;\n    this.zoom = 1;\n    this.fitToScreen = false;\n    this.pageViewMode = PageViewMode.SINGLE_PAGE;\n    this.waitForLoading = false;\n    this.renderAllPages = true;\n    this.pref = Exprs.defaultPreferences();\n    this.pageSizes = [];\n  }\n\n  addLogListeners() {\n    const logLevel = Logging.LogLevel;\n    Logging.logger.addListener(logLevel.DEBUG, (info) => {\n      this.callback({ t: \"debug\", content: info });\n    });\n    Logging.logger.addListener(logLevel.INFO, (info) => {\n      this.callback({ t: \"info\", content: info });\n    });\n    Logging.logger.addListener(logLevel.WARN, (info) => {\n      this.callback({ t: \"warn\", content: info });\n    });\n    Logging.logger.addListener(logLevel.ERROR, (info) => {\n      this.callback({ t: \"error\", content: info });\n    });\n  }\n\n  private callback(message: Base.JSON): void {\n    message[\"i\"] = this.instanceId;\n    this.callbackFn(message);\n  }\n\n  /**\n   * Set readyState and notify to listeners\n   */\n  setReadyState(readyState: Constants.ReadyState) {\n    if (this.readyState !== readyState) {\n      this.readyState = readyState;\n      this.viewportElement.setAttribute(VIEWPORT_STATUS_ATTRIBUTE, readyState);\n      this.callback({ t: \"readystatechange\" });\n    }\n  }\n\n  loadPublication(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const url = command[\"url\"] as string;\n    const fragment = command[\"fragment\"] as string | null;\n    const haveZipMetadata = !!command[\"zipmeta\"];\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadPublication\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const pubURL = Base.resolveURL(\n          Base.convertSpecialURL(url),\n          this.window.location.href,\n        );\n        this.packageURL = [pubURL];\n        store.loadPubDoc(pubURL, haveZipMetadata).then((opf) => {\n          if (opf) {\n            this.opf = opf;\n            this.render(fragment).then(() => {\n              frame.finish(true);\n            });\n          } else {\n            frame.finish(false);\n          }\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  loadXML(command: Base.JSON): Task.Result<boolean> {\n    Profile.profiler.registerStartTiming(\"beforeRender\");\n    this.setReadyState(Constants.ReadyState.LOADING);\n    const params: SingleDocumentParam[] = command[\"url\"];\n    const doc = command[\"document\"] as Document;\n    const fragment = command[\"fragment\"] as string | null;\n    const authorStyleSheet = command[\"authorStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n    const userStyleSheet = command[\"userStyleSheet\"] as {\n      url: string | null;\n      text: string | null;\n    }[];\n\n    // force relayout\n    this.viewport = null;\n    const frame: Task.Frame<boolean> = Task.newFrame(\"loadXML\");\n    this.configure(command).then(() => {\n      const store = new Epub.EPUBDocStore();\n      store.init(authorStyleSheet, userStyleSheet).then(() => {\n        const resolvedParams: Epub.OPFItemParam[] = params.map((p, index) => ({\n          url: Base.resolveURL(\n            Base.convertSpecialURL(p.url),\n            this.window.location.href,\n          ),\n          index,\n          startPage: p.startPage,\n          skipPagesBefore: p.skipPagesBefore,\n        }));\n        this.packageURL = resolvedParams.map((p) => p.url);\n        this.opf = new Epub.OPFDoc(store, \"\");\n        this.opf.initWithChapters(resolvedParams, doc).then(() => {\n          this.render(fragment).then(() => {\n            frame.finish(true);\n          });\n        });\n      });\n    });\n    return frame.result();\n  }\n\n  private render(fragment?: string | null): Task.Result<boolean> {\n    this.cancelRenderingTask();\n    let cont: Task.Result<boolean>;\n    if (fragment) {\n      cont = this.opf.resolveFragment(fragment).thenAsync((position) => {\n        this.pagePosition = position;\n        return Task.newResult(true);\n      });\n    } else {\n      cont = Task.newResult(true);\n    }\n    return cont.thenAsync(() => {\n      Profile.profiler.registerEndTiming(\"beforeRender\");\n      return this.resize();\n    });\n  }\n\n  private resolveLength(specified: string): number {\n    const value = parseFloat(specified);\n    const unitPattern = /[a-z]+$/;\n    let matched: RegExpMatchArray;\n    if (\n      typeof specified === \"string\" &&\n      (matched = specified.match(unitPattern))\n    ) {\n      const unit = matched[0];\n      if (unit === \"em\" || unit === \"rem\") {\n        return value * this.fontSize;\n      }\n      if (unit === \"ex\") {\n        return (\n          (value * Exprs.defaultUnitSizes[\"ex\"] * this.fontSize) /\n          Exprs.defaultUnitSizes[\"em\"]\n        );\n      }\n      const unitSize = Exprs.defaultUnitSizes[unit];\n      if (unitSize) {\n        return value * unitSize;\n      }\n    }\n    return value;\n  }\n\n  configure(command: Base.JSON): Task.Result<boolean> {\n    if (typeof command[\"autoresize\"] == \"boolean\") {\n      if (command[\"autoresize\"]) {\n        this.viewportSize = null;\n        this.window.addEventListener(\"resize\", this.resizeListener, false);\n        this.needResize = true;\n      } else {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n      }\n    }\n    if (typeof command[\"fontSize\"] == \"number\") {\n      const fontSize = command[\"fontSize\"] as number;\n      if (fontSize >= 5 && fontSize <= 72 && this.fontSize != fontSize) {\n        this.fontSize = fontSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"viewport\"] == \"object\" && command[\"viewport\"]) {\n      const vp = command[\"viewport\"];\n      const viewportSize = {\n        marginLeft: this.resolveLength(vp[\"margin-left\"]) || 0,\n        marginRight: this.resolveLength(vp[\"margin-right\"]) || 0,\n        marginTop: this.resolveLength(vp[\"margin-top\"]) || 0,\n        marginBottom: this.resolveLength(vp[\"margin-bottom\"]) || 0,\n        width: this.resolveLength(vp[\"width\"]) || 0,\n        height: this.resolveLength(vp[\"height\"]) || 0,\n      };\n      if (viewportSize.width >= 200 || viewportSize.height >= 200) {\n        this.window.removeEventListener(\"resize\", this.resizeListener, false);\n        this.viewportSize = viewportSize;\n        this.needResize = true;\n      }\n    }\n    if (typeof command[\"hyphenate\"] == \"boolean\") {\n      this.pref.hyphenate = command[\"hyphenate\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"horizontal\"] == \"boolean\") {\n      this.pref.horizontal = command[\"horizontal\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"nightMode\"] == \"boolean\") {\n      this.pref.nightMode = command[\"nightMode\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"lineHeight\"] == \"number\") {\n      this.pref.lineHeight = command[\"lineHeight\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"columnWidth\"] == \"number\") {\n      this.pref.columnWidth = command[\"columnWidth\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"fontFamily\"] == \"string\") {\n      this.pref.fontFamily = command[\"fontFamily\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"load\"] == \"boolean\") {\n      this.waitForLoading = command[\"load\"]; // Load images (and other resources) on the page.\n    }\n    if (typeof command[\"renderAllPages\"] == \"boolean\") {\n      this.renderAllPages = command[\"renderAllPages\"];\n    }\n    // for backward compatibility\n    if (typeof command[\"userAgentRootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"userAgentRootURL\"].replace(/resources\\/?$/, \"\"));\n      Base.setResourceBaseURL(command[\"userAgentRootURL\"]);\n    }\n    if (typeof command[\"rootURL\"] == \"string\") {\n      Base.setBaseURL(command[\"rootURL\"]);\n      Base.setResourceBaseURL(`${Base.baseURL}resources/`);\n    }\n    if (\n      typeof command[\"pageViewMode\"] == \"string\" &&\n      command[\"pageViewMode\"] !== this.pageViewMode\n    ) {\n      this.pageViewMode = command[\"pageViewMode\"] as PageViewMode;\n      this.needResize = true;\n    }\n    if (\n      typeof command[\"pageBorder\"] == \"number\" &&\n      command[\"pageBorder\"] !== this.pref.pageBorder\n    ) {\n      // Force relayout\n      this.viewport = null;\n      this.pref.pageBorder = command[\"pageBorder\"];\n      this.needResize = true;\n    }\n    if (typeof command[\"zoom\"] == \"number\" && command[\"zoom\"] !== this.zoom) {\n      this.zoom = command[\"zoom\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"fitToScreen\"] == \"boolean\" &&\n      command[\"fitToScreen\"] !== this.fitToScreen\n    ) {\n      this.fitToScreen = command[\"fitToScreen\"];\n      this.needRefresh = true;\n    }\n    if (\n      typeof command[\"defaultPaperSize\"] == \"object\" &&\n      typeof command[\"defaultPaperSize\"].width == \"number\" &&\n      typeof command[\"defaultPaperSize\"].height == \"number\"\n    ) {\n      this.viewport = null;\n      this.pref.defaultPaperSize = command[\"defaultPaperSize\"];\n      this.needResize = true;\n    }\n    // JavaScript in HTML documents support\n    if (\n      typeof command[\"allowScripts\"] == \"boolean\" &&\n      command[\"allowScripts\"] !== Scripts.allowScripts\n    ) {\n      Scripts.setAllowScripts(command[\"allowScripts\"]);\n      this.needRefresh = true;\n    }\n    this.configurePlugins(command);\n    return Task.newResult(true);\n  }\n\n  configurePlugins(command: Base.JSON) {\n    const hooks: Plugin.ConfigurationHook[] = Plugin.getHooksForName(\n      Plugin.HOOKS.CONFIGURATION,\n    );\n    hooks.forEach((hook) => {\n      const result = hook(command);\n      this.needResize = result.needResize || this.needResize;\n      this.needRefresh = result.needRefresh || this.needRefresh;\n    });\n  }\n\n  /**\n   * Refresh view when a currently displayed page is replaced (by re-layout\n   * caused by cross reference resolutions)\n   */\n  pageReplacedListener(evt: Base.Event) {\n    const currentPage = this.currentPage;\n    const spread = this.currentSpread;\n    const target = evt.target;\n    if (spread) {\n      if (spread.left === target || spread.right === target) {\n        this.showCurrent(evt.newPage);\n      }\n    } else if (currentPage === evt.target) {\n      this.showCurrent(evt.newPage);\n    }\n  }\n\n  /**\n   * Iterate through currently displayed pages and do something\n   */\n  private forCurrentPages(fn: (p1: Vtree.Page) => any) {\n    const pages = [];\n    if (this.currentPage) {\n      pages.push(this.currentPage);\n    }\n    if (this.currentSpread) {\n      pages.push(this.currentSpread.left);\n      pages.push(this.currentSpread.right);\n    }\n    pages.forEach((page) => {\n      if (page) {\n        fn(page);\n      }\n    });\n  }\n\n  private removePageListeners() {\n    this.forCurrentPages((page) => {\n      page.removeEventListener(\"hyperlink\", this.hyperlinkListener, false);\n      page.removeEventListener(\"replaced\", this.pageReplacedListener, false);\n    });\n  }\n\n  /**\n   * Hide current pages (this.currentPage, this.currentSpread)\n   */\n  private hidePages() {\n    this.removePageListeners();\n    this.forCurrentPages((page) => {\n      Base.setCSSProperty(page.container, \"display\", \"none\");\n    });\n    this.currentPage = null;\n    this.currentSpread = null;\n  }\n\n  private showSinglePage(page: Vtree.Page) {\n    page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n    page.addEventListener(\"replaced\", this.pageReplacedListener, false);\n    Base.setCSSProperty(page.container, \"visibility\", \"visible\");\n    Base.setCSSProperty(page.container, \"display\", \"block\");\n  }\n\n  private showPage(page: Vtree.Page): void {\n    this.hidePages();\n    this.currentPage = page;\n    page.container.style.marginLeft = \"\";\n    page.container.style.marginRight = \"\";\n    this.showSinglePage(page);\n  }\n\n  private showSpread(spread: Vtree.Spread) {\n    this.hidePages();\n    this.currentSpread = spread;\n    if (spread.left && spread.right) {\n      // Adjust spread horizontal alignment when left/right page widths differ\n      let leftWidth = parseFloat(spread.left.container.style.width);\n      let rightWidth = parseFloat(spread.right.container.style.width);\n      if (leftWidth && rightWidth && leftWidth !== rightWidth) {\n        if (leftWidth < rightWidth) {\n          spread.left.container.style.marginLeft = `${\n            rightWidth - leftWidth\n          }px`;\n        } else {\n          spread.right.container.style.marginRight = `${\n            leftWidth - rightWidth\n          }px`;\n        }\n      }\n    }\n    if (spread.left) {\n      this.showSinglePage(spread.left);\n      if (!spread.right) {\n        spread.left.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.left.container.removeAttribute(\"data-vivliostyle-unpaired-page\");\n      }\n    }\n    if (spread.right) {\n      this.showSinglePage(spread.right);\n      if (!spread.left) {\n        spread.right.container.setAttribute(\n          \"data-vivliostyle-unpaired-page\",\n          true,\n        );\n      } else {\n        spread.right.container.removeAttribute(\n          \"data-vivliostyle-unpaired-page\",\n        );\n      }\n    }\n  }\n\n  private reportPosition(): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\"reportPosition\");\n    Asserts.assert(this.pagePosition);\n    this.opf\n      .getCFI(this.pagePosition.spineIndex, this.pagePosition.offsetInItem)\n      .then((cfi) => {\n        const page = this.currentPage;\n        const r =\n          this.waitForLoading && page.fetchers.length > 0\n            ? TaskUtil.waitForFetchers(page.fetchers)\n            : Task.newResult(true);\n        r.then(() => {\n          this.sendLocationNotification(page, cfi).thenFinish(frame);\n        });\n      });\n    return frame.result();\n  }\n\n  private createViewport(): Vgen.Viewport {\n    const viewportElement = this.viewportElement;\n    if (this.viewportSize) {\n      const vs = this.viewportSize;\n      viewportElement.style.marginLeft = `${vs.marginLeft}px`;\n      viewportElement.style.marginRight = `${vs.marginRight}px`;\n      viewportElement.style.marginTop = `${vs.marginTop}px`;\n      viewportElement.style.marginBottom = `${vs.marginBottom}px`;\n      return new Vgen.Viewport(\n        this.window,\n        this.fontSize,\n        viewportElement,\n        vs.width,\n        vs.height,\n      );\n    } else {\n      return new Vgen.Viewport(this.window, this.fontSize, viewportElement);\n    }\n  }\n\n  private resolveSpreadView(viewport: Vgen.Viewport): boolean {\n    switch (this.pageViewMode) {\n      case PageViewMode.SINGLE_PAGE:\n        return false;\n      case PageViewMode.SPREAD:\n        return true;\n      case PageViewMode.AUTO_SPREAD:\n      default:\n        // wide enough for a pair of pages of A/B paper sizes, but not too\n        // narrow\n        return viewport.width / viewport.height >= 1.45 && viewport.width > 800;\n    }\n  }\n\n  private updateSpreadView(spreadView: boolean) {\n    this.pref.spreadView = spreadView;\n    this.viewportElement.setAttribute(\n      VIEWPORT_SPREAD_VIEW_ATTRIBUTE,\n      spreadView.toString(),\n    );\n  }\n\n  private sizeIsGood(): boolean {\n    const viewport = this.createViewport();\n    const spreadView = this.resolveSpreadView(viewport);\n    const spreadViewChanged = this.pref.spreadView !== spreadView;\n    this.updateSpreadView(spreadView);\n    if (\n      this.viewportSize ||\n      !this.viewport ||\n      this.viewport.fontSize != this.fontSize\n    ) {\n      return false;\n    }\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height == this.viewport.height\n    ) {\n      return true;\n    }\n\n    if (\n      !spreadViewChanged &&\n      viewport.width == this.viewport.width &&\n      viewport.height != this.viewport.height &&\n      /Android|iPhone|iPad|iPod/.test(navigator.userAgent)\n    ) {\n      // On mobile browsers, the viewport height may change unexpectedly\n      // when soft keyboard appears or tab/address bar auto-hide occurs,\n      // so ignore resizing in this condition.\n      return true;\n    }\n\n    if (\n      this.opfView &&\n      this.opfView.hasPages() &&\n      !this.opfView.hasAutoSizedPages()\n    ) {\n      this.viewport.width = viewport.width;\n      this.viewport.height = viewport.height;\n      this.needRefresh = true;\n      return true;\n    }\n    return false;\n  }\n\n  private setPageSize(\n    pageSize: { width: number; height: number },\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    this.pageSizes[pageIndex] = pageSize;\n    this.setPageSizePageRules(pageSheetSize, spineIndex, pageIndex);\n  }\n\n  private setPageSizePageRules(\n    pageSheetSize: { [key: string]: { width: number; height: number } },\n    spineIndex: number,\n    pageIndex: number,\n  ) {\n    // In this implementation, it generates one page rule with the largest\n    // page size both in width and height in the multiple page sizes.\n    // (Resolve issue #751)\n    if (\n      this.pageRuleStyleElement &&\n      (!this.pageSheetSizeAlreadySet ||\n        this.pageSizes[pageIndex].width !==\n          this.pageSizes[pageIndex - 1]?.width ||\n        this.pageSizes[pageIndex].height !==\n          this.pageSizes[pageIndex - 1]?.height)\n    ) {\n      const widthMax = Math.max(...this.pageSizes.map((p) => p.width));\n      const heightMax = Math.max(...this.pageSizes.map((p) => p.height));\n\n      function convertSize(px: number): number {\n        const pt = px * 0.75;\n        // Workaround for Chromium's rounded page size problem.\n        // (Fix for issue #934 and #936)\n        return Math.ceil(pt);\n      }\n      function extraHeightAdj(): number {\n        // Workaround for issue #947,\n        // only necessary if used with Vivliostyle CLI (LayoutNGPrinting enabled)\n        if (navigator.webdriver) {\n          return 1;\n        }\n        return 0;\n      }\n      const widthPt = convertSize(widthMax);\n      const heightPt = convertSize(heightMax) + extraHeightAdj();\n      const styleText = `@page {margin:0;size:${widthPt}pt ${heightPt}pt;}`;\n      this.pageRuleStyleElement.textContent = styleText;\n      this.pageSheetSizeAlreadySet = true;\n    }\n  }\n\n  removePageSizePageRules() {\n    if (this.pageRuleStyleElement) {\n      this.pageRuleStyleElement.textContent = \"\";\n      this.pageSheetSizeAlreadySet = false;\n    }\n  }\n\n  private reset(): void {\n    let tocVisible = false;\n    let tocAutohide = false;\n    if (this.opfView) {\n      tocVisible = this.opfView.isTOCVisible();\n      tocAutohide = this.opfView.tocAutohide;\n      this.opfView.hideTOC();\n      this.opfView.removeRenderedPages();\n    }\n    this.pageSizes = [];\n    this.removePageSizePageRules();\n    this.viewport = this.createViewport();\n    this.viewport.resetZoom();\n    this.opfView = new Epub.OPFView(\n      this.opf,\n      this.viewport,\n      this.fontMapper,\n      this.pref,\n      this.setPageSize.bind(this),\n    );\n    if (tocVisible) {\n      this.sendCommand({ a: \"toc\", v: \"show\", autohide: tocAutohide });\n    }\n  }\n\n  /**\n   * Show current page or spread depending on the setting\n   * (this.pref.spreadView).\n   * @param sync If true, get the necessary page synchronously (not waiting\n   *     another rendering task)\n   */\n  private showCurrent(page: Vtree.Page, sync?: boolean): Task.Result<null> {\n    this.needRefresh = false;\n    this.removePageListeners();\n    if (this.pref.spreadView) {\n      return this.opfView\n        .getSpread(this.pagePosition, sync)\n        .thenAsync((spread) => {\n          if (!spread.left && !spread.right) {\n            return Task.newResult(null);\n          }\n          this.showSpread(spread);\n          this.setSpreadZoom(spread);\n          this.currentPage =\n            page.side === Constants.PageSide.LEFT ? spread.left : spread.right;\n          return Task.newResult(null);\n        });\n    } else {\n      this.showPage(page);\n      this.setPageZoom(page);\n      this.currentPage = page;\n      return Task.newResult(null);\n    }\n  }\n\n  setPageZoom(page: Vtree.Page) {\n    const zoom = this.getAdjustedZoomFactor(page.dimensions);\n    this.viewport.zoom(page.dimensions.width, page.dimensions.height, zoom);\n  }\n\n  setSpreadZoom(spread: Vtree.Spread) {\n    const dim = this.getSpreadDimensions(spread);\n    this.viewport.zoom(dim.width, dim.height, this.getAdjustedZoomFactor(dim));\n  }\n\n  /**\n   * @returns adjusted zoom factor\n   */\n  getAdjustedZoomFactor(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    return this.fitToScreen\n      ? this.calculateZoomFactorToFitInsideViewPort(pageDimension)\n      : this.zoom;\n  }\n\n  /**\n   * Returns width and height of the spread, including the margin between pages.\n   */\n  getSpreadDimensions(spread: Vtree.Spread): { width: number; height: number } {\n    let width = 0;\n    let height = 0;\n    if (spread.left) {\n      width += spread.left.dimensions.width;\n      height = spread.left.dimensions.height;\n    }\n    if (spread.right) {\n      width += spread.right.dimensions.width;\n      height = Math.max(height, spread.right.dimensions.height);\n    }\n    if (spread.left && spread.right) {\n      width += this.pref.pageBorder * 2;\n      // Adjust spread horizontal alignment when left/right page widths differ\n      width += Math.abs(\n        spread.left.dimensions.width - spread.right.dimensions.width,\n      );\n    }\n    return { width, height };\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: ZoomType): number {\n    if (!this.currentPage) {\n      throw new Error(\"no page exists.\");\n    }\n    switch (type) {\n      case ZoomType.FIT_INSIDE_VIEWPORT: {\n        let pageDim: { width: number; height: number };\n        if (this.pref.spreadView) {\n          Asserts.assert(this.currentSpread);\n          pageDim = this.getSpreadDimensions(this.currentSpread);\n        } else {\n          pageDim = this.currentPage.dimensions;\n        }\n        return this.calculateZoomFactorToFitInsideViewPort(pageDim);\n      }\n      default:\n        throw new Error(`unknown zoom type: ${type}`);\n    }\n  }\n\n  /**\n   * @returns zoom factor to fit inside viewport\n   */\n  calculateZoomFactorToFitInsideViewPort(pageDimension: {\n    width: number;\n    height: number;\n  }): number {\n    const widthZoom = this.viewport.width / pageDimension.width;\n    const heightZoom = this.viewport.height / pageDimension.height;\n    return Math.min(widthZoom, heightZoom);\n  }\n\n  private cancelRenderingTask() {\n    if (this.renderTask) {\n      this.renderTask.interrupt(new RenderingCanceledError());\n    }\n    this.renderTask = null;\n  }\n\n  resize(): Task.Result<boolean> {\n    this.needResize = false;\n    this.needRefresh = false;\n    if (this.sizeIsGood()) {\n      return Task.newResult(true);\n    }\n    this.setReadyState(Constants.ReadyState.LOADING);\n    this.cancelRenderingTask();\n    const resizeTask = Task.currentTask()\n      .getScheduler()\n      .run(() =>\n        Task.handle(\n          \"resize\",\n          (frame) => {\n            if (!this.opf) {\n              frame.finish(false);\n              return;\n            }\n            this.renderTask = resizeTask;\n            Profile.profiler.registerStartTiming(\"render (resize)\");\n            this.reset();\n            if (this.pagePosition) {\n              // When resizing, do not use the current page index, for a page\n              // index corresponding to the current position in the document\n              // (offsetInItem) can change due to different layout caused by\n              // different viewport size.\n\n              // Update(2019-03): to avoid unexpected page move (first page to next),\n              // keep pageIndex == 0 when offsetInItem == 0\n              if (\n                !(\n                  this.pagePosition.pageIndex == 0 &&\n                  this.pagePosition.offsetInItem == 0\n                )\n              ) {\n                this.pagePosition.pageIndex = -1;\n              }\n            }\n\n            // epageCount counting depends renderAllPages mode\n            this.opf.setEPageCountMode(this.renderAllPages);\n\n            // With renderAllPages option specified, the rendering is\n            // performed after the initial page display, otherwise users are\n            // forced to wait the rendering finish in front of a blank page.\n            this.opfView\n              .renderPagesUpto(this.pagePosition, !this.renderAllPages)\n              .then((result) => {\n                if (!result) {\n                  frame.finish(false);\n                  return;\n                }\n                this.pagePosition = result.position;\n                this.showCurrent(result.page, true).then(() => {\n                  this.setReadyState(Constants.ReadyState.INTERACTIVE);\n\n                  this.opf\n                    .countEPages((epageCount) => {\n                      const notification = {\n                        t: \"nav\",\n                        epageCount: epageCount,\n                        first: this.currentPage.isFirstPage,\n                        last: this.currentPage.isLastPage,\n                        metadata: this.opf.metadata,\n                        docTitle:\n                          this.opf.spine[this.pagePosition.spineIndex].title,\n                      };\n                      if (\n                        this.currentPage.isFirstPage ||\n                        (this.pagePosition.pageIndex == 0 &&\n                          this.opf.spine[this.pagePosition.spineIndex].epage)\n                      ) {\n                        notification[\"epage\"] =\n                          this.opf.spine[this.pagePosition.spineIndex].epage;\n                      }\n                      this.callback(notification);\n                    })\n                    .then(() => {\n                      this.reportPosition().then((p) => {\n                        const r = this.renderAllPages\n                          ? this.opfView.renderAllPages()\n                          : Task.newResult(null);\n                        r.then(() => {\n                          if (this.renderTask === resizeTask) {\n                            this.renderTask = null;\n                          }\n                          Profile.profiler.registerEndTiming(\"render (resize)\");\n                          // JavaScript in HTML documents support\n                          if (\n                            Scripts.allowScripts &&\n                            Scripts.hasScripts(this.window)\n                          ) {\n                            Scripts.loadScriptsAtEnd(this.window).then(() => {\n                              if (this.renderAllPages) {\n                                this.setReadyState(\n                                  Constants.ReadyState.COMPLETE,\n                                );\n                              }\n                              this.callback({ t: \"loaded\" });\n                              frame.finish(p);\n                            });\n                          } else {\n                            if (this.renderAllPages) {\n                              this.setReadyState(Constants.ReadyState.COMPLETE);\n                            }\n                            this.callback({ t: \"loaded\" });\n                            frame.finish(p);\n                          }\n                        });\n                      });\n                    });\n                });\n              });\n          },\n          (frame, err) => {\n            if (err instanceof RenderingCanceledError) {\n              Profile.profiler.registerEndTiming(\"render (resize)\");\n              Logging.logger.debug(err.message);\n            } else {\n              throw err;\n            }\n          },\n        ),\n      );\n    return Task.newResult(true);\n  }\n\n  private sendLocationNotification(\n    page: Vtree.Page,\n    cfi: string | null,\n  ): Task.Result<boolean> {\n    const frame: Task.Frame<boolean> = Task.newFrame(\n      \"sendLocationNotification\",\n    );\n    const notification = {\n      t: \"nav\",\n      first: page.isFirstPage,\n      last: page.isLastPage,\n      metadata: this.opf.metadata,\n      docTitle: this.opf.spine[page.spineIndex].title,\n    };\n    this.opf\n      .getEPageFromPosition(this.pagePosition as Epub.Position)\n      .then((epage) => {\n        notification[\"epage\"] = epage;\n        notification[\"epageCount\"] = this.opf.epageCount;\n        if (cfi) {\n          notification[\"cfi\"] = cfi;\n        }\n        this.callback(notification);\n        frame.finish(true);\n      });\n    return frame.result();\n  }\n\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.opfView\n      ? this.opfView.getCurrentPageProgression(this.pagePosition)\n      : null;\n  }\n\n  moveTo(command: Base.JSON): Task.Result<boolean> {\n    let method: () => Task.Result<Epub.PageAndPosition>;\n    if (\n      this.readyState !== Constants.ReadyState.COMPLETE &&\n      command[\"where\"] !== \"next\"\n    ) {\n      this.setReadyState(Constants.ReadyState.LOADING);\n    }\n    if (typeof command[\"where\"] == \"string\") {\n      let m: (\n        position: Epub.Position,\n        sync: boolean,\n      ) => Task.Result<Epub.PageAndPosition>;\n      switch (command[\"where\"]) {\n        case \"next\":\n          m = this.pref.spreadView\n            ? this.opfView.nextSpread\n            : this.opfView.nextPage;\n          break;\n        case \"previous\":\n          m = this.pref.spreadView\n            ? this.opfView.previousSpread\n            : this.opfView.previousPage;\n          break;\n        case \"last\":\n          m = this.opfView.lastPage;\n          break;\n        case \"first\":\n          m = this.opfView.firstPage;\n          break;\n        default:\n          return Task.newResult(true);\n      }\n      if (m) {\n        method = () =>\n          m.call(this.opfView, this.pagePosition, !this.renderAllPages);\n      }\n    } else if (typeof command[\"epage\"] == \"number\") {\n      const epage = command[\"epage\"] as number;\n      method = () =>\n        this.opfView.navigateToEPage(\n          epage,\n          this.pagePosition,\n          !this.renderAllPages,\n        );\n    } else if (typeof command[\"url\"] == \"string\") {\n      const url = command[\"url\"] as string;\n      method = () =>\n        this.opfView.navigateTo(url, this.pagePosition, !this.renderAllPages);\n    } else {\n      return Task.newResult(true);\n    }\n    const frame: Task.Frame<boolean> = Task.newFrame(\"moveTo\");\n    method.call(this.opfView).then((result) => {\n      let cont: Task.Result<boolean>;\n      if (result) {\n        this.pagePosition = result.position;\n        const innerFrame: Task.Frame<boolean> =\n          Task.newFrame(\"moveTo.showCurrent\");\n        cont = innerFrame.result();\n        this.showCurrent(result.page, !this.renderAllPages).then(() => {\n          this.reportPosition().thenFinish(innerFrame);\n        });\n      } else {\n        cont = Task.newResult(true);\n      }\n      cont.then((res) => {\n        if (this.readyState === Constants.ReadyState.LOADING) {\n          this.setReadyState(Constants.ReadyState.INTERACTIVE);\n        }\n        frame.finish(res);\n      });\n    });\n    return frame.result();\n  }\n\n  showTOC(command: Base.JSON): Task.Result<boolean> {\n    const autohide = !!command[\"autohide\"];\n    const visibility = command[\"v\"];\n    const currentVisibility = this.opfView.isTOCVisible();\n    const changeAutohide =\n      autohide != this.opfView.tocAutohide && visibility != \"hide\";\n    if (currentVisibility) {\n      if (visibility == \"show\" && !changeAutohide) {\n        return Task.newResult(true);\n      }\n    } else {\n      if (visibility == \"hide\") {\n        return Task.newResult(true);\n      }\n    }\n    if (currentVisibility && visibility != \"show\") {\n      this.opfView.hideTOC();\n      return Task.newResult(true);\n    } else {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"showTOC\");\n      this.opfView.showTOC(autohide).then((page) => {\n        if (page) {\n          if (changeAutohide) {\n            page.listeners = {};\n          }\n          if (autohide) {\n            const hideTOC = () => {\n              this.opfView.hideTOC();\n            };\n            page.addEventListener(\"hyperlink\", hideTOC, false);\n            // page.container.addEventListener(\"click\", hideTOC, false);\n          }\n          page.addEventListener(\"hyperlink\", this.hyperlinkListener, false);\n        }\n        frame.finish(true);\n      });\n      return frame.result();\n    }\n  }\n\n  runCommand(command: Base.JSON): Task.Result<boolean> {\n    const actionName = command[\"a\"] || \"\";\n    return Task.handle(\n      \"runCommand\",\n      (frame) => {\n        const action = this.actions[actionName];\n        if (action) {\n          action.call(this, command).then(() => {\n            this.callback({ t: \"done\", a: actionName });\n            frame.finish(true);\n          });\n        } else {\n          Logging.logger.error(\"No such action:\", actionName);\n          frame.finish(true);\n        }\n      },\n      (frame, err) => {\n        Logging.logger.error(err, \"Error during action:\", actionName);\n        frame.finish(true);\n      },\n    );\n  }\n\n  initEmbed(cmd: Base.JSON | string): void {\n    let command = maybeParse(cmd);\n    let continuation: Task.Continuation<boolean> | null = null;\n    const viewer = this;\n    Task.start(() => {\n      const frame: Task.Frame<boolean> = Task.newFrame(\"commandLoop\");\n      const scheduler = Task.currentTask().getScheduler();\n      viewer.hyperlinkListener = (evt) => {\n        const hrefEvent = evt as Vtree.PageHyperlinkEvent;\n        const internal =\n          hrefEvent.href.charAt(0) === \"#\" ||\n          viewer.packageURL.some(\n            (url) => hrefEvent.href.substr(0, url.length) == url,\n          );\n        if (internal) {\n          evt.preventDefault();\n          const msg = {\n            t: \"hyperlink\",\n            href: hrefEvent.href,\n            internal: internal,\n          };\n          scheduler.run(() => {\n            viewer.callback(msg);\n            return Task.newResult(true);\n          });\n        }\n      };\n      frame\n        .loopWithFrame((loopFrame) => {\n          if (viewer.needResize) {\n            viewer.resize().then(() => {\n              loopFrame.continueLoop();\n            });\n          } else if (viewer.needRefresh) {\n            if (viewer.currentPage) {\n              viewer\n                .showCurrent(viewer.currentPage, !this.renderAllPages)\n                .then(() => {\n                  loopFrame.continueLoop();\n                });\n            }\n          } else if (command) {\n            const cmd = command;\n            command = null;\n            viewer.runCommand(cmd).then(() => {\n              loopFrame.continueLoop();\n            });\n          } else {\n            const frameInternal: Task.Frame<boolean> =\n              Task.newFrame(\"waitForCommand\");\n            continuation = frameInternal.suspend(this);\n            frameInternal.result().then(() => {\n              loopFrame.continueLoop();\n            });\n          }\n        })\n        .thenFinish(frame);\n      return frame.result();\n    });\n    viewer.kick = () => {\n      const cont = continuation;\n      if (cont) {\n        continuation = null;\n        cont.schedule(true);\n      }\n    };\n    viewer.sendCommand = (cmd) => {\n      if (command) {\n        return false;\n      }\n      command = maybeParse(cmd);\n      viewer.kick();\n      return true;\n    };\n    this.window[\"adapt_command\"] = viewer.sendCommand;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum ZoomType {\n  FIT_INSIDE_VIEWPORT = \"fit inside viewport\",\n}\n\n/**\n * Error representing that the rendering has been canceled.\n */\nclass RenderingCanceledError extends Error {\n  name: string = \"RenderingCanceledError\";\n  message: string = \"Page rendering has been canceled\";\n  stack: string;\n\n  constructor() {\n    super();\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, RenderingCanceledError.prototype);\n    this.stack = new Error().stack;\n  }\n}\n\nexport function maybeParse(cmd: any): Base.JSON {\n  if (typeof cmd == \"string\") {\n    return Base.stringToJSON(cmd);\n  }\n  return cmd;\n}\n","/**\n * Copyright 2015 Trim-marks Inc.\n * Copyright 2018 Vivliostyle Foundation\n *\n * Vivliostyle.js is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Vivliostyle.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Vivliostyle.js.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @fileoverview CoreViewer - Vivliostyle CoreViewer class\n */\nimport * as AdaptiveViewer from \"./adaptive-viewer\";\nimport * as Base from \"./base\";\nimport * as Constants from \"./constants\";\nimport * as Epub from \"./epub\";\nimport * as Profile from \"./profile\";\nimport * as Toc from \"./toc\";\n\nexport interface Payload {\n  type: string;\n  internal: boolean;\n  href: string;\n  content: string;\n  cfi: string;\n  first: boolean;\n  last: boolean;\n  epage: number;\n  epageCount: number;\n  metadata: unknown;\n  docTitle: string;\n}\n\nconst PageProgression = Constants.PageProgression;\n\n/**\n * Viewer settings that must be passed to Viewer's constructor.\n * - userAgentRootURL: URL of a directory from which viewer resource files\n *   (under resources/ directory in the source repository) are served.\n * - viewportElement: An element used as the viewport of the displayed contents.\n * - window: Window object. If omitted, current `window` is used.\n * - debug: Debug flag.\n */\nexport type CoreViewerSettings = {\n  userAgentRootURL?: string;\n  viewportElement: HTMLElement;\n  window?: Window;\n  debug?: boolean;\n};\n\n/**\n * Viewer options that can be set after the Viewer object is constructed.\n * - autoResize: Run layout again when the window is resized. default: true\n * - fontSize: Default font size (px). default: 16\n * - pageBorderWidth: Width of a border between two pages in a single\n *   spread (px). Effective only in spread view mode. default: 1\n * - renderAllPages: Render all pages at the document load time. default: true\n * - pageViewMode: Page view mode (singlePage / spread / autoSpread).\n *   default: singlePage\n * - zoom: Zoom factor with which pages are displayed. default: 1\n * - fitToScreen: Auto adjust zoom factor to fit the screen. default: false\n * - defaultPaperSize: Default paper size in px. Effective when `@page` size\n *   is set to auto. default: undefined (means the windows size is used as\n *   paper size).\n */\nexport type CoreViewerOptions = {\n  autoResize?: boolean;\n  fontSize?: number;\n  pageBorderWidth?: number;\n  renderAllPages?: boolean;\n  pageViewMode?: AdaptiveViewer.PageViewMode;\n  zoom?: number;\n  fitToScreen?: boolean;\n  defaultPaperSize?: { width: number; height: number };\n  allowScripts?: boolean;\n};\n\nfunction getDefaultViewerOptions(): CoreViewerOptions {\n  return {\n    autoResize: true,\n    fontSize: 16,\n    pageBorderWidth: 1,\n    renderAllPages: true,\n    pageViewMode: AdaptiveViewer.PageViewMode.AUTO_SPREAD,\n    zoom: 1,\n    fitToScreen: false,\n    defaultPaperSize: undefined,\n    allowScripts: true,\n  };\n}\n\nfunction convertViewerOptions(options: CoreViewerOptions): object {\n  const converted = {};\n  Object.keys(options).forEach((key) => {\n    const v = options[key];\n    switch (key) {\n      case \"autoResize\":\n        converted[\"autoresize\"] = v;\n        break;\n      case \"pageBorderWidth\":\n        converted[\"pageBorder\"] = v;\n        break;\n      default:\n        converted[key] = v;\n    }\n  });\n  return converted;\n}\n\n/**\n * Options for the displayed document.\n * - documentObject: Document object for the document. If provided, it is used\n *   directly without parsing the source again.\n * - fragment: Fragmentation identifier (EPUB CFI) of the location in the\n *   document which is to be displayed.\n * - authorStyleSheet: An array of author style sheets to be injected after all\n *   author style sheets referenced from the document. A single stylesheet may\n *   be a URL of the style sheet or a text content of the style sheet.\n * - userStyleSheet: An array of user style sheets to be injected.\n *   A single stylesheet may be a URL of the style sheet or a text content of\n *   the style sheet.\n */\nexport type DocumentOptions = {\n  documentObject?: Document;\n  fragment?: string;\n  authorStyleSheet?: { url?: string; text?: string }[];\n  userStyleSheet?: { url?: string; text?: string }[];\n};\n\n/**\n * Options for a single source document.\n * - url: URL of the document.\n * - startPage: If specified, the `page` page-based counter is set to the\n *   specified value on the first page of the document. It is equivalent to\n *   specifying `counter-reset: page [specified value - 1]` on that page.\n * - skipPagesBefore: If specified, the `page` page-based counter is\n *   incremented by the specified value *before* updating page-based counters\n *   on the first page of the document.\n *   This option is ignored if `startPageNumber` option is also specified.\n */\nexport type SingleDocumentOptions =\n  | string\n  | {\n      url: string;\n      startPage?: number;\n      skipPagesBefore?: number;\n    };\n\n/**\n * Vivliostyle Viewer class.\n */\nexport class CoreViewer {\n  private initialized: boolean = false;\n  private adaptViewer_: AdaptiveViewer.AdaptiveViewer;\n  private options: CoreViewerOptions;\n  private eventTarget: Base.SimpleEventTarget;\n  readyState: Constants.ReadyState;\n\n  constructor(\n    private readonly settings: CoreViewerSettings,\n    opt_options?: CoreViewerOptions,\n  ) {\n    Constants.setDebug(settings.debug);\n    this.adaptViewer_ = new AdaptiveViewer.AdaptiveViewer(\n      settings[\"window\"] || window,\n      settings[\"viewportElement\"],\n      \"main\",\n      this.dispatcher.bind(this),\n    );\n    this.options = getDefaultViewerOptions();\n    if (opt_options) {\n      this.setOptions(opt_options);\n    }\n    this.eventTarget = new Base.SimpleEventTarget();\n    Object.defineProperty(this, \"readyState\", {\n      get() {\n        return this.adaptViewer_.readyState;\n      },\n    });\n  }\n\n  /**\n   * Set ViewerOptions to the viewer.\n   */\n  setOptions(options: CoreViewerOptions) {\n    const command = Object.assign(\n      { a: \"configure\" },\n      convertViewerOptions(options),\n    );\n    this.adaptViewer_.sendCommand(command);\n    Object.assign(this.options, options);\n  }\n\n  private dispatcher(msg: Base.JSON) {\n    /** @dict */\n    const event = { type: msg[\"t\"] };\n    const o = msg as object;\n    Object.keys(o).forEach((key) => {\n      if (key !== \"t\") {\n        event[key] = o[key];\n      }\n    });\n    this.eventTarget.dispatchEvent(event);\n  }\n\n  /**\n   * Add a listener function, which is invoked when the specified type of event\n   * is dispatched.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  addListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.addEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Remove an event listener.\n   * @param type Event type.\n   * @param listener Listener function.\n   */\n  removeListener(type: string, listener: (payload: Payload) => void) {\n    this.eventTarget.removeEventListener(\n      type,\n      listener as Base.EventListener,\n      false,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document(s).\n   */\n  loadDocument(\n    singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!singleDocumentOptions) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      singleDocumentOptions,\n      null,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an EPUB/WebPub publication.\n   */\n  loadPublication(\n    pubUrl: string,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    if (!pubUrl) {\n      this.eventTarget.dispatchEvent({\n        type: \"error\",\n        content: \"No URL specified\",\n      });\n    }\n    this.loadDocumentOrPublication(\n      null,\n      pubUrl,\n      opt_documentOptions,\n      opt_viewerOptions,\n    );\n  }\n\n  /**\n   * Load an HTML or XML document, or an EPUB/WebPub publication.\n   */\n  private loadDocumentOrPublication(\n    singleDocumentOptions:\n      | SingleDocumentOptions\n      | SingleDocumentOptions[]\n      | null,\n    pubUrl: string | null,\n    opt_documentOptions?: DocumentOptions,\n    opt_viewerOptions?: CoreViewerOptions,\n  ) {\n    const documentOptions = opt_documentOptions || {};\n\n    function convertStyleSheetArray(arr) {\n      if (arr) {\n        return arr.map((s) => ({ url: s.url || null, text: s.text || null }));\n      } else {\n        return undefined;\n      }\n    }\n    const authorStyleSheet = convertStyleSheetArray(\n      documentOptions[\"authorStyleSheet\"],\n    );\n    const userStyleSheet = convertStyleSheetArray(\n      documentOptions[\"userStyleSheet\"],\n    );\n    if (opt_viewerOptions) {\n      Object.assign(this.options, opt_viewerOptions);\n    }\n    const command = Object.assign(\n      {\n        a: singleDocumentOptions ? \"loadXML\" : \"loadPublication\",\n        userAgentRootURL: this.settings[\"userAgentRootURL\"],\n        url: convertSingleDocumentOptions(singleDocumentOptions) || pubUrl,\n        document: documentOptions[\"documentObject\"],\n        fragment: documentOptions[\"fragment\"],\n        authorStyleSheet: authorStyleSheet,\n        userStyleSheet: userStyleSheet,\n      },\n      convertViewerOptions(this.options),\n    );\n    if (this.initialized) {\n      this.adaptViewer_.sendCommand(command);\n    } else {\n      this.initialized = true;\n      this.adaptViewer_.initEmbed(command);\n    }\n  }\n\n  /**\n   * Returns the current page progression of the viewer. If no document is\n   * loaded, returns null.\n   */\n  getCurrentPageProgression(): Constants.PageProgression | null {\n    return this.adaptViewer_.getCurrentPageProgression();\n  }\n\n  private resolveNavigation(nav: Navigation): Navigation {\n    switch (nav) {\n      case Navigation.LEFT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.PREVIOUS\n          : Navigation.NEXT;\n      case Navigation.RIGHT:\n        return this.getCurrentPageProgression() === PageProgression.LTR\n          ? Navigation.NEXT\n          : Navigation.PREVIOUS;\n      default:\n        return nav;\n    }\n  }\n\n  /**\n   * Navigate to the specified page.\n   */\n  navigateToPage(nav: Navigation, opt_epage?: number) {\n    if (nav === Navigation.EPAGE) {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        epage: opt_epage,\n      });\n    } else {\n      this.adaptViewer_.sendCommand({\n        a: \"moveTo\",\n        where: this.resolveNavigation(nav),\n      });\n    }\n  }\n\n  /**\n   * Navigate to the specified internal URL.\n   */\n  navigateToInternalUrl(url: string) {\n    this.adaptViewer_.sendCommand({ a: \"moveTo\", url: url });\n  }\n\n  /**\n   * @returns True if TOC is visible, false if hidden, null if TOC is unavailable\n   */\n  isTOCVisible(): boolean | null {\n    if (\n      this.adaptViewer_.opfView &&\n      this.adaptViewer_.opfView.opf &&\n      (this.adaptViewer_.opfView.opf.xhtmlToc ||\n        this.adaptViewer_.opfView.opf.ncxToc)\n    ) {\n      return !!this.adaptViewer_.opfView.isTOCVisible();\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Show or hide TOC box\n   * @param opt_autohide If true, automatically hide when click TOC item\n   * @param opt_show If true show TOC, false hide TOC. If null or undefined toggle TOC.\n   */\n  showTOC(opt_show?: boolean | null, opt_autohide?: boolean) {\n    const visibility = opt_show == null ? \"toggle\" : opt_show ? \"show\" : \"hide\";\n    this.adaptViewer_.sendCommand({\n      a: \"toc\",\n      v: visibility,\n      autohide: opt_autohide,\n    });\n  }\n\n  /**\n   * Returns zoom factor corresponding to the specified zoom type.\n   */\n  queryZoomFactor(type: AdaptiveViewer.ZoomType): number {\n    return this.adaptViewer_.queryZoomFactor(type);\n  }\n\n  getPageSizes(): { width: number; height: number }[] {\n    return this.adaptViewer_.pageSizes;\n  }\n\n  /**\n   * Returns the current structure of the TOC once it has\n   * been shown, or the empty array if there is no TOC.\n   */\n  getTOC(): Toc.TOCItem[] {\n    return this.adaptViewer_.opfView?.tocView?.getTOC();\n  }\n\n  /**\n   * Returns metadata for the publication. Metadata is\n   * organized as an object of fully-qualified IRI properties\n   * containing arrays of metadata entries. The first element\n   * in the array is primary and should be used by default. Other\n   * entries may overload or refine that metadata.\n   */\n  getMetadata(): Epub.Meta {\n    return this.adaptViewer_.opf.getMetadata();\n  }\n\n  /**\n   * Returns the cover for an EPUB publication, if specified.\n   */\n  getCover(): Epub.OPFItem | null {\n    return this.adaptViewer_.opf.cover;\n  }\n}\n\nfunction convertSingleDocumentOptions(\n  singleDocumentOptions: SingleDocumentOptions | SingleDocumentOptions[],\n): AdaptiveViewer.SingleDocumentParam[] | null {\n  function toNumberOrNull(num: any): number | null {\n    return typeof num === \"number\" ? num : null;\n  }\n\n  function convert(opt) {\n    if (typeof opt === \"string\") {\n      return {\n        url: opt,\n        startPage: null,\n        skipPagesBefore: null,\n      } as AdaptiveViewer.SingleDocumentParam;\n    } else {\n      return {\n        url: opt[\"url\"],\n        startPage: toNumberOrNull(opt[\"startPage\"]),\n        skipPagesBefore: toNumberOrNull(opt[\"skipPagesBefore\"]),\n      } as AdaptiveViewer.SingleDocumentParam;\n    }\n  }\n  if (Array.isArray(singleDocumentOptions)) {\n    return singleDocumentOptions.map(convert);\n  } else if (singleDocumentOptions) {\n    return [convert(singleDocumentOptions)];\n  } else {\n    return null;\n  }\n}\n\n/**\n * @enum {string}\n */\nexport enum Navigation {\n  PREVIOUS = \"previous\",\n  NEXT = \"next\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  FIRST = \"first\",\n  LAST = \"last\",\n  EPAGE = \"epage\",\n}\n\nexport type ZoomType = AdaptiveViewer.ZoomType;\nexport const ZoomType = AdaptiveViewer.ZoomType; // eslint-disable-line no-redeclare\n\nexport type PageViewMode = AdaptiveViewer.PageViewMode;\nexport const PageViewMode = AdaptiveViewer.PageViewMode; // eslint-disable-line no-redeclare\n\nProfile.profiler.forceRegisterEndTiming(\"load_vivliostyle\");\n","// Johannes Wilm\n// Vivliostyle Foundation\n\nimport { CoreViewer } from \"./core-viewer\";\n\ninterface IFrameWindowForPrint {\n  printInstance?: VivliostylePrint;\n}\n\nexport interface PrintConfig {\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n}\n\nclass VivliostylePrint {\n  htmlDoc: string;\n  title: string;\n  printCallback: (iframeWin: Window) => void;\n  hideIframe: boolean;\n  removeIframe: boolean;\n  iframe: HTMLIFrameElement;\n  iframeWin: Window;\n  window: Window & typeof globalThis & IFrameWindowForPrint;\n\n  constructor(\n    htmlDoc: string,\n    {\n      title = \"\",\n      printCallback = (iframeWin: Window) => iframeWin.print(),\n      hideIframe = true,\n      removeIframe = true,\n    }: PrintConfig,\n  ) {\n    this.htmlDoc = htmlDoc;\n    this.title = title;\n    this.printCallback = printCallback;\n    this.hideIframe = hideIframe;\n    this.removeIframe = removeIframe;\n  }\n\n  init() {\n    this.iframe = document.createElement(\"iframe\");\n\n    if (this.hideIframe) {\n      this.iframe.style.width = \"0\"; // We don't want the iframe to be seen, so we make it zero size with zero border.\n      this.iframe.style.height = \"0\";\n      this.iframe.style.borderWidth = \"0\";\n    }\n\n    this.window = window;\n    this.window.printInstance = this;\n    this.iframe.srcdoc = `\n      <!DOCTYPE html>\n      <html data-vivliostyle-paginated=\"true\">\n        <head>\n          <meta charset='utf-8'/>\n          <meta name='viewport' content='width=device-width, initial-scale=1.0'/>\n          <title>${this.title}</title>\n          <style>\n            html[data-vivliostyle-paginated] {\n              width: 100%;\n              height: 100%;\n            }\n            html[data-vivliostyle-paginated] body,\n            html[data-vivliostyle-paginated] [data-vivliostyle-viewer-viewport] {\n              width: 100% !important;\n              height: 100% !important;\n            }\n            html[data-vivliostyle-paginated],\n            html[data-vivliostyle-paginated] body {\n              margin: 0;\n              padding: 0;\n            }\n          </style>\n          <style id='vivliostyle-page-rules'></style>\n        </head>\n        <body onload='parent.printInstance.runInIframe(window)'>\n          <div id=\"vivliostyle-viewer-viewport\"></div>\n        </body>\n      </html>`;\n\n    document.body.appendChild(this.iframe);\n  }\n\n  runInIframe(iframeWin: Window) {\n    this.iframeWin = iframeWin;\n    return this.preparePrint()\n      .then(() => this.browserPrint())\n      .then(() => this.cleanUp());\n  }\n\n  preparePrint() {\n    this.iframeWin.document.title = this.title;\n    const docBlob = new Blob([this.htmlDoc], {\n        type: \"text/html\",\n      }),\n      docURL = URL.createObjectURL(docBlob),\n      Viewer = new CoreViewer({\n        viewportElement: this.iframeWin.document.body\n          .firstElementChild as HTMLElement,\n        window: this.iframeWin,\n        debug: true,\n      });\n    return new Promise<void>((resolve) => {\n      Viewer.addListener(\"readystatechange\", () => {\n        if (Viewer.readyState === \"complete\") {\n          resolve();\n        }\n      });\n\n      Viewer.loadDocument({\n        url: docURL,\n      });\n    });\n  }\n\n  browserPrint() {\n    this.printCallback(this.iframeWin);\n  }\n\n  cleanUp() {\n    delete this.window.printInstance;\n    if (this.removeIframe) {\n      this.iframe.parentElement.removeChild(this.iframe);\n    }\n  }\n}\n\nexport function printHTML(htmlDoc: string, config: PrintConfig) {\n  const instance = new VivliostylePrint(htmlDoc, config);\n  instance.init();\n}\n","import {\n    printHTML\n} from \"../src\"\n\n\ndocument.getElementById('print').addEventListener('click', () => {\n    const html = document.getElementById('html').value,\n        css = document.getElementById('css').value,\n        title = document.getElementById('title').value,\n        htmlDoc = `\n        <!doctype html>\n        <html>\n            <head>\n                <meta charset=\"UTF-8\">\n                <title>${title}</title>\n                <style>${css}</style>\n            <head>\n            <body>${html}</body>\n        </html>`,\n        printCallback = iframeWin => {\n            const pageCount = iframeWin.document.querySelectorAll('[data-vivliostyle-page-container]').length\n            console.log(`page count: ${pageCount}`)\n            iframeWin.print()\n        }\n\n    printHTML(htmlDoc, {\n        title,\n        printCallback,\n        hideIframe: true, // Whether to use a hidden iframe (default: true)\n        removeIframe: true // Whether to remove the iframe after use (default: true)\n    })\n})\n"],"names":["DIFF_DELETE","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldText","newText","oldRange","index","length","newRange","oldLength","newLength","oldCursor","oldBefore","slice","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","Math","min","oldPrefix","newPrefix","make_edit_splice","cursor","suffixLength","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","i","indexOf","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","j","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","concat","text1_length","text2_length","max_d","v_offset","v_length","v1","Array","v2","x","delta","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","unshift","push","diff_cleanupMerge","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","splice","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","n","pop","changes","charCode","str","before","oldMiddle","newMiddle","after","tuples","ret","remove_empty_tuples","diff","INSERT","DELETE","EQUAL","PageSide","ReadyState","LogLevel","setDebug","value","isDebug","pageProgressionOf","PageProgression","LTR","RTL","Error","argumentsToErrorInfo","args","a","from","e","shift","error","messages","buildMessageAndStackTrace","stack","frameTrace","toString","HOOKS","logger","opt_console","listeners","this","consoleDebug","msg","debug","log","console","consoleInfo","info","consoleWarn","warn","consoleError","triggerListeners","level","forEach","listener","addListener","arguments","DEBUG","INFO","WARN","ERROR","hooks","registerHook","name","fn","hooksForName","Logging","removeHook","getHooksForName","plugin","Profiler","performanceInstance","timestamps","registerTiming","registerStartTiming","registerEndTiming","noop","forceRegisterStartTiming","timestamp","call","forceRegisterEndTiming","printTimings","st","Object","keys","stamps","l","t","start","end","disable","enable","isEnabled","startEnd","now","fallbackPerformanceInstance","Date","profiler","window","performance","profile","firstLetterPattern","emptyObj","stringToJSON","JSON","parse","stripFragment","url","r","match","baseURL","location","href","setBaseURL","NS","resourceBaseURL","setResourceBaseURL","resolveURL","relURL","test","toLowerCase","substr","lastIndexOf","urlOption","replace","convertSpecialURL","exec","asString","v","PriorityQueue","queue","add","item","parentIndex","parent","compare","peek","remove","result","curr","size","childIndex","knownPrefixes","propNameMap","checkIfPropertySupported","prefix","prop","CSS","supports","getPrefixedPropertyNames","prefixed","setCSSProperty","elem","elemStyle","style","startsWith","setProperty","prefixedPropertyNames","getCSSProperty","opt_value","propertyNames","getPropertyValue","err","getLangAttribute","element","lang","getAttributeNS","XML","namespaceURI","XHTML","getAttribute","StringBuffer","list","append","clear","join","escapeChar","escapeCSSIdent","escapeCSSStr","lightURLEncode","encodeURIComponent","isLetter","ch","escapeNameStrToHex","s","escapeRegExp","binarySearch","high","good","h","m","numberCompare","b","indexArray","arr","key","map","multiIndexArray","SimpleEventTarget","dispatchEvent","evt","type","target","currentTarget","addEventListener","capture","removeEventListener","hasVerticalBBoxBug","hasInlineBlockJustificationBug","hasSoftWrapOpportunityAfterHyphenBug","hasSoftWrapOpportunityByWbrBug","getId","node","nodeType","idtxt","escape","unescapeChar","unescape","parseExtVal","extstr","p","parseExt","ext","RefStep","appendTo","sb","applyTo","pos","ChildStep","id","sideBias","child","childElements","children","childElementCount","firstChild","next","nextSibling","movedNode","ownerDocument","getElementById","OffsetStep","offset","textBefore","textAfter","textLength","textContent","Fragment","steps","fromString","fragstr","decodeURIComponent","parseInt","Base","navigate","doc","documentElement","ref","trim","text","prependPathFromNode","parentNode","previousSibling","reverse","clonePreferences","pref","fontFamily","lineHeight","margin","hyphenate","columnWidth","horizontal","nightMode","spreadView","pageBorder","enabledMediaTypes","assign","defaultPaperSize","defaultPreferencesInstance","vivliostyle","print","Special","letterbox","viewW","viewH","objW","objH","scale","cssString","cssIdent","makeQualifiedName","objName","memberName","nextKeyIndex","LexicalScope","resolver","scopeKey","zero","one","_true","_false","values","funcs","builtIns","Const","round","sqrt","max","typeof","defineBuiltInName","pageWidth","pageHeight","fontSize","pubTitle","docTitle","Native","defineName","qualifiedName","val","defineFunc","defineBuiltIn","isViewportRelativeLengthUnit","unit","defaultUnitSizes","px","in","pt","pc","cm","mm","q","em","rem","ex","dppx","dpi","dpcm","needUnitConversion","Context","rootScope","viewportWidth","viewportHeight","actualPageWidth","actualPageHeight","initialFontSize","rootFontSize","isRelativeRootFontSize","scopes","pageAreaWidth","pageAreaHeight","pageVertical","getScopeContext","scope","clearScope","queryUnitSize","isRoot","pvw","pvh","vw","vh","evalName","evalCall","params","noBuiltInEval","body","evaluate","apply","evalMediaName","not","enabled","evalMediaTest","feature","req","actual","screen","availWidth","availHeight","pixelDepth","evalSupportsTest","isFunc","queryVal","storeVal","Val","buf","priority","evaluateCore","context","expand","dependCore","other","dependencyCache","dependOuter","cached","depend","isMediaName","Prefix","_this","getOp","evalPrefix","constructor","Infix","lhs","rhs","_this2","getPriority","evalInfix","thisPriority","Logical","Comparison","Additive","Multiplicative","Not","NotMedia","Negate","And","AndMedia","Or","Comma","OrMedia","Lt","Le","Gt","Ge","Eq","Ne","Add","Subtract","Multiply","Divide","Modulo","Numeric","num","_this3","Named","_this4","MediaName","_this5","_this6","Call","_this7","expandedParams","expanded","Cond","cond","ifTrue","ifFalse","_this8","_this9","MediaTest","_this10","SupportsTest","_this11","Param","_this12","and","sub","mul","div","Visitor","visitValues","visit","visitEmpty","empty","visitSlash","slash","visitStr","visitIdent","ident","visitNumeric","numeric","visitNum","visitInt","visitHexColor","color","visitURL","visitURange","urange","visitSpaceList","visitCommaList","visitFunc","func","visitExpr","expr","FilterVisitor","SpaceList","CommaList","Func","stringValue","toExpr","isExpr","isNumeric","isNum","isIdent","isSpaceList","visitor","Empty","Exprs","instance","Slash","Str","nameTable","Ident","getName","Num","Int","HexColor","hex","URL","URange","urangeText","appendList","separator","Expr","AnyToken","_this13","toNumber","convertNumericToPx","absolute","all","always","anywhere","auto","avoid","balance","balance_all","block","block_end","block_start","both","bottom","border_box","break_all","break_word","crop","cross","column","exclusive","fixed","flex","footnote","footer","header","hidden","horizontal_tb","inherit","initial","inline","inline_block","inline_end","inline_start","landscape","left","line","list_item","ltr","manual","none","normal","oeb_page_foot","oeb_page_head","page","relative","revert","right","same","snap_block","spread","_static","rtl","table","table_caption","table_cell","table_footer_group","table_header_group","table_row","top","transparent","unset","vertical_lr","vertical_rl","visible","hundredPercent","fullWidth","fullHeight","numericZero","fullURange","processingOrder","isDefaultingValue","processingOrderFn","name1","name2","Number","MAX_VALUE","isCustomPropName","Rect","Point","Insets","Segment","low","winding","shapeId","Band","segmentCompare","s1","s2","Shape","points","addSegments","prev","withOffset","offsetX","offsetY","shapeForEllipse","cx","cy","rx","ry","PI","sin","cos","shapeForRect","BandIntersection","lowOrHigh","intersectY","isNaN","addBandIntersections","intersections","w1","w2","mergeIntersections","includeCount","excludeCount","shapeCount","windings1","windings2","xranges","inside","intersectionCount","intersection","stillInside","rotateBox","box","unrotateBox","rotateShape","shape","point","normalize","bands","currBand","prevBand","findBand","mid","findUppermostFullyOpenRect","rect","band","topEdge","bottomEdge","findBottommostFullyOpenRect","SetVisitor","propSet","Css","IntVisitor","toInt","def","ShapeVisitor","collect","coords","getShape","width","height","numbers","coord","GeometryUtil","toShape","CountersVisitor","reset","counters","toCounters","UrlTransformVisitor","baseUrl","transformer","transformURL","cloneCounterValues","TokenType","TargetCounterReference","targetId","resolved","pageCounters","spineIndex","pageIndex","equals","isResolved","resolve","unresolve","CounterListener","counterStore","countersOfId","documentURLTransformer","transformFragment","countersById","getExprContentListener","CounterResolver","pageScope","styler","namedStringValues","setStyler","getFragment","getTransformedId","transformedId","getPageCounterVal","format","currentPageCounters","registerPageCounterExpr","getPageCountersVal","getTargetCounters","lookForElement","targetCounters","styleUntilIdIsReached","getTargetPageCounters","currentPage","elementsById","pageCountersById","getTargetCounterVal","countersOfName","resolveReference","pageCountersOfName","saveReferenceOfCurrentPage","getTargetCountersVal","elementCounters","getNamedStringVal","retrievePosition","stringValues","offsets","sort","pageStartOffset","isBlankPage","pageLastOffset","container","querySelectorAll","firstOffset","startOffset","lastOffset","firstExceptOffset","offsetPrev","offsetNext","elementAtOffset","querySelector","elementAtPageStartOffset","firstElementChild","first","last","setNamedString","cascadeInstance","currentElementOffset","CounterStore","previousPageCounters","currentPageCountersStack","pageIndicesById","newReferencesOfCurrentPage","referencesToSolve","referencesToSolveStack","unresolvedReferences","resolvedReferences","pagesCounterExprs","createCounterListener","createCounterResolver","setCurrentPage","definePageCounter","counterName","forceSetPageCounter","pageNumber","updatePageCounters","cascadedPageStyle","resetMap","incrementMap","resetVal","CssProp","resetCounterName","increment","incrementVal","incrementCounterName","counterValues","pushPageCounters","popPageCounters","unresolvedRefs","resolvedRefs","pushed","some","finishPage","ids","oldPageIndex","prevPageCounters","every","getUnresolvedRefsToPage","refs","idRefs","r1","r2","o","pushReferencesToSolve","popReferencesToSolve","exprContentListener","bind","document","findIndex","createElement","setAttribute","PAGES_COUNTER_ATTR","finishLastPage","viewport","nodes","root","pages","createLayoutConstraint","LayoutConstraint","allowLayout","nodeContext","viewNode","escapeParseSingle","code","String","fromCodePoint","escapeParse","Action","Token","precededBySpace","position","EOF","O_PAR","C_PAR","O_BRC","C_BRC","O_BRK","C_BRK","COMMA","SEMICOL","COLON","SLASH","AT","PERCENT","QMARK","PLUS","MINUS","BAR_BAR","AMP_AMP","BANG","DOLLAR","HAT","BAR","TILDE","STAR","GT","LT","EQ","BANG_EQ","DOLLAR_EQ","HAT_EQ","BAR_EQ","TILDE_EQ","STAR_EQ","GT_EQ","LT_EQ","EQ_EQ","COL_COL","CDO","CDC","NUMERIC","NUM","INT","HASH","FUNC","CLASS","makeActions","spec","NaN","END","INVALID","actionsNormal","SPACE","STR2","AMP","STR1","DOT","IDENT","BSLASH","actionsIdent","ENDIDNT","CONT","IDNTESC","actionsNumOrClass","TOCLASS","TONUM","TOIDES","actionsMinus","MINMIN","TOINT","TOIDENT","actionsIdentEsc","ENDIDES","CHKPOSS","FUNCES","actionsInt","ENDINT","PCUNIT","NUMBER","UNIT","actionsNumber","ENDNUM","FrameState","actionsCheckEq","EQTAIL","actionsColon","actionsBar","actionsAmp","actionsSlash","COMMENT","actionsComment","COMMST","actionsCommentStar","ENDNOTK","actionsMinusMinus","KILL1","actionsLt","LT_BG","actionsLtBang","LT_BG_M","actionsLtBangMinus","KILL2","actionsIdentEscChr","IDESCH","actionsStr1","ENDSTR","STR1ESC","actionsStr2","STR2ESC","actionsStr1Esc","ENDESTR","CHKPOSN","actionsStr2Esc","actionsURL","URL2","URL1","actionsURLInside","ENDURL","CHKSP","URLESC","actionsURLInside1","TERMURL","actionsURLInside2","actionsURLTail","FINURL","Tokenizer","input","handler","indexMask","buffer","head","tail","token","fillBuffer","nthToken","consume","mark","unmark","hasMark","reallocate","newIndexMask","newBuffer","oldIndex","newIndex","mnemonics","actions","tokenType","tokenPosition","tokenText","tokenNum","seenSpace","backslashPos","STR","parseFloat","URANGE","privateCurrentTask","primaryScheduler","currentTask","newFrame","task","frame","Frame","state","ACTIVE","newResult","SyncResultImpl","handle","onErr","raise","TimerImpl","currentTime","valueOf","setTimeout","delay","clearTimeout","Scheduler","timer","timeout","sliceOverTime","wakeupTime","timeoutToken","inTimeSlice","order","setSlice","isTimeSliceOver","arm","newTime","scheduledTime","doTimeSlice","schedule","continuation","opt_delay","c","canceled","resumeInternal","run","opt_name","Task","then","done","running","callbacks","callback","savedTask","suspend","Continuation","otherComp","getTask","scheduler","finish","cancel","exception","waitTarget","interrupt","getScheduler","isRunning","whenDone","unwind","opt_frame","fillStack","f","out","thenAsync","thenReturn","thenFinish","isPending","get","ResultImpl","res1","res2","res","INIT","checkEnvironment","FINISHED","DEAD","timeSlice","sleep","loop","step","more","loopWithFrame","LoopBodyFrame","opt_waitTarget","continueLoop","breakLoop","Fetcher","fetch","arrived","resource","piggybacks","piggibacks","piggyback","hasArrived","waitForFetchers","fetchers","fetcher","loadElement","src","SVG","setAttributeNS","XLINK","localName","XMLHttpRequestResponseType","VivliostyleViewportScreenCss","VivliostyleViewportCss","ValidationTxt","UserAgentXml","UserAgentPageCss","UserAgentBaseCss","TextPolyfillCss","ajax","opt_type","opt_method","opt_data","opt_contentType","request","XMLHttpRequest","response","status","statusText","contentType","responseText","responseXML","responseBlob","open","responseType","onreadystatechange","readyState","DOCUMENT","HTMLDocument","TEXT","makeBlob","contentTypeHeader","getResponseHeader","setRequestHeader","send","overrideMimeType","parts","builderCtr","WebKitBlobBuilder","MSBlobBuilder","builder","getBlob","Blob","StylesheetFlavor","ResourceStore","parser","resources","load","opt_required","opt_message","fetchInner","isTocBox","endsWith","userAgentXmlUrl","isUserAgentXml","TaskUtil","parseJSONResource","store","ParserHandler","flavor","AUTHOR","getCurrentToken","getScope","startStylesheet","tagSelector","ns","classSelector","pseudoclassSelector","pseudoelementSelector","idSelector","attributeSelector","op","descendantSelector","childSelector","adjacentSiblingSelector","followingSiblingSelector","nextSelector","startSelectorRule","startFontFaceRule","startFootnoteRule","pseudoelem","startViewportRule","startDefineRule","startRegionRule","startPageRule","startPageMarginBoxRule","startWhenRule","startMediaRule","startFlowRule","flowName","startPageTemplateRule","startPageMasterRule","pseudoName","classes","startPartitionRule","startPartitionGroupRule","startRuleBody","property","important","endRule","startFuncWithSelector","funcName","endFuncWithSelector","getImportantSpecificity","USER_AGENT","USER","getBaseSpecificity","DispatchParserHandler","tokenizer","slave","pushHandler","popHandler","errorMsg","_ParserHandler","SkippingParserHandler","owner","topLevel","depth","SlaveParserHandler","report","message","reportAndSkip","actionsBase","actionsStyleAttribute","actionsSelector","actionsSelectorInFunc","actionsSelectorCont","actionsSelectorStart","actionsPropVal","actionsExprVal","actionsExprOp","actionsError","actionsErrorDecl","actionsErrorSelector","ExprContext","OP_MEDIA_AND","CssTokenizer","LAST","OP_MEDIA_OR","OP_MEDIA_NOT","SELECTOR_START","RULE_END","DONE","PROP","SELECTOR_NAME","SELECTOR_ANY","SELECTOR_ID","SELECTOR_CLASS","SELECTOR_ATTR","SELECTOR_PSEUDOCLASS","SELECTOR_CHILD","SELECTOR_SIBLING","SELECTOR_FOLLOWING_SIBLING","SELECTOR_NAME_1","SELECTOR_ANY_1","SELECTOR_ID_1","SELECTOR_CLASS_1","SELECTOR_ATTR_1","SELECTOR_BODY","SELECTOR_PSEUDOCLASS_1","SELECTOR_PSEUDOELEM","SELECTOR_NEXT","VAL_IDENT","VAL_HASH","VAL_NUM","VAL_INT","VAL_NUMERIC","VAL_STR","VAL_URL","VAL_URANGE","VAL_COMMA","VAL_SLASH","VAL_FUNC","VAL_C_PAR","VAL_END","VAL_BRC","VAL_BANG","VAL_PLUS","VAL_FINISH","EXPR_IDENT","EXPR_NUM","EXPR_NUMERIC","EXPR_STR","EXPR_O_PAR","EXPR_FUNC","EXPR_PREFIX","EXPR_PARAM","EXPR_INFIX_NAME","EXPR_INFIX","EXPR_C_PAR","EXPR_O_BRC","EXPR_SEMICOL","ERROR_PUSH","ERROR_POP","ERROR_SEMICOL","ERROR_POP_DECL","Parser","valStack","namespacePrefixToURI","defaultNamespaceURI","propName","propImportant","exprContext","importReady","importURL","importCondition","errorBrackets","ruleStack","regionRule","pageRule","MEDIA","extractVals","sep","valStackReduce","count","exprError","exprStackReduce","val2","tok","e1","e2","er","readSupportsTest","startPosition","token1","token2","tokenN","parLevel","readPseudoParams","readNthPseudoParams","hasLeadingPlus","hasMinusSign","hasSign","makeCondition","condition","split","isInsidePropertyOnlyRule","runParser","parsingValue","parsingStyleAttr","parsingMediaQuery","parsingFunctionParam","parserLoop","pseudoclassType","POSITIVE_INFINITY","IMPORT","SUPPORTS","WHEN","supportsTest","ruleName","rulePseudoName","ErrorHandler","parseStylesheetFromText","media","resolvedURL","innerFrame","parseStylesheetFromURL","Net","xhr","parseValue","numProp","opacity","utilization","evaluateCSSToCSS","matchANPlusB","AnyMatcher","matchers","matches","matcher","AllMatcher","NthFragmentMatcher","elementOffset","registerFragmentIndex","fragmentIndex","indices","fragmentIndices","clearFragmentIndices","entry","LayoutProcessor","PageFloats","Selectors","RepetitiveElement","Table","Vtree","MatcherBuilder","buildViewConditionMatcher","viewCondition","strs","buildAllMatcher","buildAnyMatcher","restoreNewText","reduce","fastdiff","resolveIndex","coef","current","change","object","formattingContextType","FloatReference","flagmentLayoutConstraintType","isInstanceOfTableFormattingContext","isInstanceOfTableRowLayoutConstraint","Whitespace","ShadowType","delayedProps","transform","delayedPropsIfRelativePositioned","DelayedItem","show","obj","visibility","hide","play","pause","resume","mute","muted","unmute","makeListener","action","actionFn","Page","bleedBox","pageAreaElement","delayedItems","hrefHandler","dimensions","isFirstPage","isLastPage","isAutoPageWidth","isAutoPageHeight","side","marginBoxes","anchorElement","preventDefault","setAutoPageWidth","isAuto","AUTO_PAGE_WIDTH_ATTRIBUTE","removeAttribute","setAutoPageHeight","AUTO_PAGE_HEIGHT_ATTRIBUTE","registerElementWithId","triggers","clientLayout","elems","contains","getElementClientRect","trigger","observers","observer","event","zoom","getPageAreaElement","whitespaceFromPropertyValue","whitespace","IGNORE","NEWLINE","PRESERVE","canIgnore","Flow","parentFlowName","forcedBreakOffsets","formattingContext","FlowChunk","linger","repeated","breakBefore","startPage","isBetter","clientrectIncreasingTop","clientrectDecreasingRight","isSameNodePositionStep","nps1","nps2","shadowContext","shadowType","ROOTLESS","outerHTML","_nps2$node","isSameShadowContext","nodeShadow","shadowSibling","isSameNodePosition","np1","np2","offsetInNode","newNodePositionFromNodeContext","initialFragmentIndex","sourceNode","NONE","preprocessedTextContent","makeNodeContextFromNodePositionStep","NodeContext","copy","ShadowContext","xmldoc","parentShadow","superShadow","subShadow","sc1","sc2","FirstPseudo","outer","boxOffset","shared","overflow","breakPenalty","display","floatReference","floatSide","clearSide","floatMinWrapBlock","columnSpan","verticalAlign","captionSide","inlineBorderSpacing","blockBorderSpacing","flexContainer","hyphenateCharacter","breakWord","establishesBFC","containingBlockForAbsolute","breakAfter","clearSpacer","inheritedProps","vertical","direction","firstPseudo","repeatOnBreak","pluginProps","afterIfContinues","footnotePolicy","pageType","INLINE","resetView","cloneItem","np","create","modify","clone","npp","npc","toNodePositionStep","toNodePosition","nc","_nc$shadowContext","_nc$shadowContext$sty","_nc$shadowContext$sty2","_pseudos","isInsideBFC","getContainingBlockForAbsolute","walkUpBlocks","belongsTo","ChunkPosition","primary","floats","isSamePosition","FlowChunkPosition","chunkPosition","flowChunk","FlowPosition","positions","startSide","newfp","newarr","hasContent","LayoutPosition","flows","flowPositions","highestSeenOffset","highestSeenNode","lookupPositionOffset","newcp","thisFlowNames","otherFlowNames","flowPos","startSideOfFlow","firstFlowChunkOfFlow","flowChunkPosition","Container","marginLeft","marginRight","marginTop","marginBottom","borderLeft","borderRight","borderTop","borderBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","originX","originY","exclusions","innerShape","computedBlockSize","snapWidth","snapHeight","snapOffsetX","snapOffsetY","getInsetTop","getInsetBottom","getInsetLeft","getInsetRight","getInsetBefore","getInsetAfter","getInsetStart","getInsetEnd","getBeforeEdge","getAfterEdge","getStartEdge","getEndEdge","getInlineSize","getBoxSize","getBoxDir","getInlineDir","copyFrom","setVerticalPosition","setHorizontalPosition","setBlockPosition","extent","setInlinePosition","lastChild","removeChild","getInnerShape","getInnerRect","getPaddingRect","paddingX","paddingY","getOuterShape","outerShapeProp","getOuterRect","outerX","outerY","outerWidth","outerHeight","ContentPropertyHandler","rootContentValue","visitStrInner","Text","createTextNode","appendChild","img","createElementNS","CssParser","nonTrivialContent","fill","hyphens","marker","orphans","quotes","stroke","widows","polyfilledInheritedProps","supportedNamespaces","coupledPatterns","coupledExtentPatterns","geomNames","sides","names","buildCouplingMap","sideMap","extentMap","pattern","extentPattern","couplingMapVert","couplingMapHor","couplingMapVertRtl","couplingMapHorRtl","CascadeValue","getBaseValue","filterValue","increaseSpecificity","specificity","ConditionalCascadeValue","cascadeValues","tv","av","SPECIALS","isMapName","isPropName","isInherited","getProp","setProp","getStyleMap","getMutableStyleMap","getViewConditionalStyleMap","_viewConditionalStyles","getSpecial","getMutableSpecial","mergeIn","pseudoelement","regionId","viewConditionMatcher","styleKey","styleMap","styles","as","ts","prototype","propListLH","_context$style","validatorSet","shorthands","_context$style$valida","propList","propLH","avLH","tvLH","chainActions","chain","chained","InheritanceVisitor","props","setPropName","getFontSize","cascval","parentFontSize","convertFontRelativeLengthToPx","baseFontSize","CascadeAction","mergeWith","CompoundAction","ConditionItemAction","conditionItem","pushConditionItem","fresh","ApplyRuleAction","viewConditionId","currentStyle","ChainedAction","makePrimary","cascade","CheckClassAction","className","currentClassNames","includes","insertInTable","CheckIdAction","currentId","currentXmlId","CheckLocalNameAction","currentLocalName","tags","CheckNSTagAction","currentNamespace","nsPrefix","nsCount","nstags","CheckTargetEpubTypeAction","epubTypePatt","currentElement","epubType","epub","CheckNamespaceAction","CheckAttributePresentAction","hasAttributeNS","CheckAttributeEqAction","_this14","epubtypes","CheckNamespaceSupportedAction","_this15","CheckAttributeRegExpAction","regexp","_this16","attr","CheckLangAction","langRegExp","_this17","IsFirstAction","isFirst","IsRootAction","IsNthAction","_this18","Matchers","IsNthSiblingAction","currentSiblingOrder","IsNthSiblingOfTypeAction","currentSiblingTypeCounts","IsNthLastSiblingAction","currentFollowingSiblingOrder","IsNthLastSiblingOfTypeAction","counts","currentFollowingSiblingTypeCounts","nsCounts","nextElementSibling","IsEmptyAction","Node","ELEMENT_NODE","TEXT_NODE","IsEnabledAction","disabled","IsDisabledAction","IsCheckedAction","selected","checked","CheckConditionAction","_this19","conditions","dependentConditions","CheckAppliedAction","_this20","applied","cloned","NegateActionsSet","_this21","checkAppliedAction","firstAction","AbstractConditionItem","decrement","DescendantConditionItem","ChildConditionItem","AdjacentSiblingConditionItem","_this22","fired","FollowingSiblingConditionItem","_this23","AfterPseudoelementItem","afterprop","processPseudoelementProps","RestoreLangItem","QuotesScopeItem","oldQuotes","AttrValueFilterVisitor","_this24","createValueFromString","defaultValue","attributeName","hasAttribute","getStringValueFromCssContentVal","ContentPropVisitor","counterResolver","_this25","maxDepth","quoteDepth","upper","lower","additiveNumbering","entries","alphabeticNumbering","alphabetStr","alphabet","fromCharCode","digit","numbering","digits","negative","formal","markers","thousands","hundreds","tens","ones","chineseTradInformal","toUpperCase","visitFuncCounter","numval","_this26","visitFuncCounters","numvals","_this27","visitFuncTargetCounter","targetUrlStr","targetUrl","_this28","visitFuncTargetCounters","_this29","visitFuncString","visitFuncContent","pseudos","_pseudos$pseudoName","content","_pseudos$pseudoName$c","roman","armenian","georgian","hebrew","latin","alpha","greek","russian","square","disc","circle","copyTable","dst","ParseState","Cascade","pagetypes","createInstance","counterListener","CascadeInstance","nextOrder","currentNSTag","currentEpubTypes","currentPageType","previousPageType","firstPageType","counterScoping","siblingOrderStack","siblingTypeCountsStack","followingSiblingOrderStack","followingSiblingTypeCountsStack","viewConditions","elementStack","filter","dependentConditionMatchers","conditionId","_this30","applyAction","pushRule","baseStyle","EMPTY","applyActions","defineCounter","scoping","pushCounters","displayVal","floatVal","float","setMap","set","setVal","_this$currentElement","_this$currentElement2","DOCUMENT_NODE","incrPropValue","_this$currentStyle$co","setCounterName","listItemCounts","popCounters","setNamedStrings","stringSet","pseudoprops","pushElement","types","currentNamespaceTypeCounts","applyVarFilter","applyCalcFilter","applyAttrFilter","quotesCasc","itemToPushLast","quotesVal","_this31","pseudoNames","pseudoProps","_pseudoProps$content","applyAttrFilterInner","elementStyle","pseudoMap","elementStyles","VarFilterVisitor","cascVal","shorthand","_validatorSet$shortha","valueSH","nameLH","defaultValues","CalcFilterVisitor","popRule","popElement","uaBaseCascade","CascadeParserHandler","_this32","conditionCount","footnoteContent","insideSelectorRule","TOP","insertNonPrimary","processChain","isInsideSelectorRule","patt","RegExp","ActionClass","nthSelectorActionClasses","finishChain","SELECTOR","_CssParser$SlaveParse","makeApplyRuleAction","special","validatePropertyAndHandleShorthand","invalidPropertyValue","unknownProperty","simpleProperty","Plugin","hook","converted","notParserHandler","NotParameterParserHandler","_this33","parentChain","_CascadeParserHandler","DefineParserHandler","dim","PropSetParserHandler","_this34","PropertyParserHandler","_this35","forEachViewConditionalStyles","viewConditionalStyles","mergeViewConditionalStyles","cascMap","mergeStyle","isVertical","cascaded","writingModeCasc","writingMode","isRtl","directionCasc","flattenCascadedStyle","regionIds","isFootnote","forEachStylesInRegion","regionStyle","regions","footnoteRegion","to","newVal","convertToPhysical","dest","couplingMap","hasOwnProperty","coupledName","targetName","coupledCascVal","_this36","getVarValue","_this$elementStyles","_style$name","parentElement","getStyle","_this$styler$getStyle","_this$styler$getStyle2","_this37","exprText","unitInCalc","exprVal","exprResult","createRegExpMap","valueMaps","toPhysical","physical","logical","convert","maps","maps2","replaced","toPhysicalMaps","toLogicalMaps","toLogical","Size","lineRelativeValues","getSize","sizes","original","maxWidth","minWidth","maxHeight","minHeight","getComputedValue","getElementComputedStyle","insertBefore","writingModeProperty","writingModeValue","inlineSizeName","blockSizeName","getFillAvailableInline","getMaxContentInline","getMinContentInline","getFitContentInline","fillAvailableInline","minContentInline","parsedFillAvailable","maxContentInline","getIdealBlock","getFillAvailableBlock","FILL_AVAILABLE_INLINE_SIZE","MAX_CONTENT_INLINE_SIZE","MIN_CONTENT_INLINE_SIZE","FIT_CONTENT_INLINE_SIZE","FILL_AVAILABLE_BLOCK_SIZE","MAX_CONTENT_BLOCK_SIZE","MIN_CONTENT_BLOCK_SIZE","FIT_CONTENT_BLOCK_SIZE","FILL_AVAILABLE_WIDTH","FILL_AVAILABLE_HEIGHT","MAX_CONTENT_WIDTH","MAX_CONTENT_HEIGHT","MIN_CONTENT_WIDTH","MIN_CONTENT_HEIGHT","FIT_CONTENT_WIDTH","FIT_CONTENT_HEIGHT","isPageFloat","COLUMN","REGION","PAGE","PageFloat","nodePosition","getOrder","isAllowedOnContext","pageFloatLayoutContext","isAnchorAlreadyAppeared","isAllowedToPrecede","PageFloatStore","nextPageFloatIndex","createPageFloatId","addPageFloat","VtreeImpl","findPageFloatByNodePosition","findPageFloatById","PageFloatFragment","continuations","area","continues","hasFloat","findNotAllowedFloat","shouldBeStashedBefore","addContinuations","getFlowName","PageFloatContinuation","PageFloatLayoutContext","generatingNodePosition","invalidated","floatStore","forbiddenFloats","floatFragments","stashedFloatFragments","floatAnchors","floatsDeferredToNext","floatsDeferredFromPrevious","layoutConstraints","locked","getPreviousSibling","getParent","getPreviousSiblingOf","getContainer","setContainer","reattachFloatFragments","getPageFloatLayoutContext","forbid","PageFloatLayoutStrategyResolver","findByFloat","isForbidden","addPageFloatFragment","floatFragment","dontInvalidate","fr1","fr2","invalidate","removePageFloatFragment","fragment","findPageFloatFragment","hasFloatFragments","hasContinuingFloatFragmentsInFlow","registerPageFloatAnchor","anchorViewNode","collectPageFloatAnchors","anchors","floatId","getDeferredPageFloatContinuations","cont","deferPageFloat","hasPrecedingFloatsDeferredToNext","ignoreReference","getLastFollowingFloatInFragments","lastFollowing","lastFollowingOfParent","c1","c2","getPageFloatContinuationsDeferredToNext","getFloatsDeferredToNextInChildContexts","checkAndForbidNotAllowedFloat","checkAndForbidFloatFollowingDeferredFloat","notAllowedFloat","removeEndFloatFragments","deferredFloats","floatsInFragments","fr","f1","f2","hasSameContainerAs","detachChildren","attachChildren","isInvalidated","validate","CssLogicalUtil","logicalFloatSide","stashEndFloatFragments","fragmentFloatSide","restoreStashedFragments","stashed","discardStashedFragments","getStashedFloatFragments","getLimitValue","layoutContext","logicalSide","physicalSide","limit","getLimitValueInner","parentLimit","limits","getLimitValuesInner","paddingRect","floatMinWrapBlockStart","floatMinWrapBlockEnd","resolveLengthPercentage","containerLength","convertLengthToPx","fragments","rootViewNodes","setFloatAreaDimensions","anchorEdge","init","force","blockSize","inlineSize","outerBlockSize","outerInlineSize","blockStart","blockEnd","inlineStart","inlineEnd","blockOffset","inlineOffset","limitBlockStartEndValueWithOpenRect","getRect","openRect","availableBlockSize","containerRect","Sizing","adjustContentRelativeSize","getContentInlineSize","getFloatFragmentExclusions","getMaxReachedAfterEdge","edge","Infinity","getBlockStartEdgeOfBlockEndFloats","getPageFloatClearEdge","isContinuationOfAlreadyAppearedFloat","isFragmentWithAlreadyAppearedFloat","columnRect","columnBlockEnd","blockStartLimit","getPageFloatPlacementCondition","logicalSides","logicalClearSide","floatOrder","isPrecedingFragment","hasPrecedingFragmentInChildren","hasPrecedingFragmentInParents","getLayoutConstraints","addLayoutConstraint","layoutConstraint","isColumnFullWithPageFloats","getMaxBlockSizeOfPageFloats","lock","unlock","isLocked","pageFloatLayoutStrategies","register","strategy","findByNodeContext","appliesToNodeContext","appliesToFloat","createPageFloat","resolveFloatReferenceFromColumnSpan","createPageFloatFragment","floatArea","adjustPageFloatArea","floatContainer","Footnote","FootnoteFragment","LineFootnotePolicyLayoutConstraint","regionContext","applyFootnoteStyle","convertPercentageSizesToPx","setComputedInsets","setComputedWidthAndHeight","constraint","forcedBreakValues","recto","verso","region","isForcedBreakValue","spreadBreakValues","isSpreadBreakValue","avoidBreakValues","isAvoidBreakValue","resolveEffectiveBreakValue","second","firstIsForcedBreakValue","secondIsForcedBreakValue","breakValueToStartSideValue","breakValue","startSideValueToBreakValue","startSideValue","blockify","blockifiedStr","displayStr","isAbsolutelyPositioned","getComputedDislayValue","isBlock","isInlineLevel","isRubyInternalDisplay","calculateEdge","extraOffset","HTMLElement","cbox","range","createRange","setStart","setEnd","boxes","getRangeClientRects","getBoundingClientRect","fullRange","fullBoxes","fullBox","abs","getElementHeight","getComputedMargin","isOrphan","removeFollowingSiblings","isSpecial","isSpecialNodeContext","Element","AbstractBreakPosition","calculateOffset","getNodeContext","collectElementsOffset","breakPositionChosen","elementsOffsets","repetitiveElement","minimum","calculateMinimumOffset","EdgeBreakPosition","breakOnEdge","overflows","overflowIfRepetitiveElementsDropped","isEdgeUpdated","findAcceptableBreak","penalty","updateOverflows","getMinBreakPenalty","findEdgeBreakPosition","preferDropping","isFirstContentOfRepetitiveElementsOwner","Break","updateEdge","clonedPaddingBorder","calculateClonedPaddingBorder","LayoutHelper","isOverflown","isInstanceOfRepetitiveElementsOwnerFormattingContext","repetitiveElements","getRepetitiveElements","isFirstContentNode","LayoutProcessorResolver","find","RESOLVE_LAYOUT_PROCESSOR","processor","BlockLayoutProcessor","layout","leadingEdge","isFloatNodeContext","layoutFloatOrFootnote","isBreakable","layoutBreakableBlock","layoutUnbreakable","createEdgeBreakPosition","columnBlockSize","BreakPosition","startNonInlineElementNode","afterNonInlineElementNode","stopAtOverflow","clearOverflownViewNodes","parentNodeContext","removeSelf","finishBreak","forceRemoveSelf","endOfColumn","fixJustificationIfNeeded","processFragmentedBlockEdge","BlockFormattingContext","isFirstTime","firstTime","saveState","restoreState","blockLayoutProcessor","isInstanceOfBlockFormattingContext","RESOLVE_FORMATTING_CONTEXT","Display","AbstractLayoutRetryer","initialBreakPositions","initialStateOfFormattingContext","initialPosition","initialFragmentLayoutConstraints","prepareLayout","tryLayout","mode","resolveLayoutMode","doLayout","positionAfter","accepted","accept","postLayout","clearNodes","sibling","breakPositions","fragmentLayoutConstraints","LayoutIteratorStrategy","initialState","initialNodeContext","atUnforcedBreak","break","startNonDisplayableNode","afterNonDisplayableNode","startIgnoredTextNode","afterIgnoredTextNode","startNonElementNode","afterNonElementNode","startInlineElementNode","afterInlineElementNode","LayoutIterator","iterate","loopFrame","nextResult","nextInTree","nextNodeContext","EdgeSkipper","startNonInlineBox","endEmptyNonInlineBox","endNonInlineBox","breakAtTheEdge","onStartEdges","leadingEdgeContexts","lastAfterNodeContext","processForcedBreak","needForcedBreak","pageBreakType","saveEdgeAndProcessOverflow","checkOverflowAndSaveEdgeAndBreakPosition","processLayoutConstraint","violateConstraint","repetitiveElementsCache","HANGING_PUNCTUATION_NONE","allowEnd","hangingPunctuationFromPropertyValue","cssval","hangingPunctuation","isHangingPunctuationNone","TEXT_SPACING_NONE","trimStart","spaceFirst","trimEnd","trimAdjacent","ideographAlpha","ideographNumeric","TEXT_SPACING_NORMAL","TEXT_SPACING_AUTO","textSpacingFromPropertyValue","textSpacing","isTextSpacingNone","normalizeLang","embeddedContentTags","audio","canvas","embed","iframe","math","picture","svg","video","textPolyfill","getPolyfilledInheritedProps","preprocessSingleDocument","preprocessForTextSpacing","nodeIter","createNodeIterator","NodeFilter","SHOW_TEXT","nextNode","dataset","mathTypeset","textArr","lastIndex","processGeneratedContent","textSpacingVal","hangingPunctuationVal","whiteSpaceSave","whiteSpace","offsetHeight","offsetWidth","prevNode","isFirstInBlock","isFirstAfterForcedLineBreak","isLastBeforeForcedLineBreak","processTextSpacing","postLayoutBlock","checkPoints","isFirstFragment","isAfterForcedLineBreak","_p$sourceNode","checkIfFirstAfterForcedLineBreak","prevP","previousElementSibling","checkIfLastBeforeForcedLineBreak","nextP","_nodeContext$parent","isLastInBlock","textNode","currRange","prevRange","nextRange","isAtEndOfLine","selectNode","getClientRects","nextRect","tagName","punctProcessing","hangingFirst","hangingLast","hangingEnd","outerElem","innerElem","defaultView","getComputedStyle","isFullWidth","prevRects","prevRect","atEnd","atEndNoHang","checkUpright","_elem$ownerDocument$d","textOrientation","textCombineUpright","registerHooks","POLYFILLED_INHERITED_PROPS","PREPROCESS_SINGLE_DOCUMENT","POST_LAYOUT_BLOCK","DOMParser","parseFromString","SHADOW","getPseudoName","setPseudoName","PseudoelementStyler","contentProcessed","deep","CssCascade","nest","processContent","contentVal","AfterIfContinues","viewRoot","pseudoColumn","PseudoColumn","initialPageBreakType","getColumn","createNodePositionForPseudoElement","pseudoElement","PseudoElement","createShadowContext","ROOTED","AfterIfContinuesLayoutConstraint","pseudoElementHeight","overflownNodeContext","nextCandidate","allowed","affectTo","AfterIfContinuesElementsOffset","equalsTo","getPriorityOfFinishBreak","processAfterIfContinuesOfNodeContext","processAfterIfContinues","mediaTags","AllLayoutConstraint","constraints","BoxBreakPosition","alreadyEvaluated","breakNodeContext","findBoxBreakPosition","Column","viewDocument","flowRootFormattingContext","isFloat","startEdge","endEdge","beforeEdge","afterEdge","footnoteEdge","chunkPositions","overflown","forceNonfitting","leftFloatEdge","rightFloatEdge","bottommostFloatTop","lastAfterPosition","pseudoParent","nodeContextOverflowingDueToRepetitiveElements","blockDistanceToBlockEndFloats","breakAtTheEdgeBeforeFloat","getTopEdge","getBottomEdge","getLeftEdge","getRightEdge","stopByOverflow","getExclusions","pageFloatExclusions","openAllViews","setViewRoot","stepIndex","calculateOffsetInNodeForNodeContext","setCurrent","maybePeelOff","firstLetterLength","firstLetterText","peelOff","buildViewToNextBlockEdge","bodyFrame","position1Param","positionParam","buildDeepElementView","position1","createFloat","killFloats","cssFloat","createFloats","parseComputedLength","insets","getComputedPaddingBorder","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","getComputedInsets","boxSizing","nodeContextIn","layoutFloat","lineRelativeValue","nodeContextAfter","floatBBox","floatBox","probe","parentBox","floatBoxMeasure","floatHorBox","dir","boxExtent","floatWidth","floatHeight","floatBottom","floatBoxEdge","floatBoxTop","floatBands","lastY","floatBand","updateMaxReachedAfterEdge","setupFloatArea","floatLayoutContext","containingBlockRect","fitWithinContainer","createPageFloatArea","floatAreaElement","parentPageFloatLayoutContext","parentContainer","PageFloatArea","layoutSinglePageFloatFragment","allowFragmented","pageFloatFragment","firstFloat","newPosition","failed","floatChunkPosition","newFragment","layoutPageFloatInner","cancelLayout","layoutStashedPageFloats","success","excluded","newFloatAreas","newFragments","stashedFragment","setFloatAnchorViewNode","anchor","applyPseudoelementStyle","columnContext","layoutPageFloat","createJustificationAdjustmentElement","insertionPoint","span","inner","textIndent","textAlign","leftPos","rightPos","inlineBlock","padding","paddingStr","addAndAdjustJustificationElement","insertAfter","hyphenChar","resolveHyphenateCharacter","prevSibling","prevText","compensateJustificationLineHeight","br","spanRect","brRect","parentElem","processLineStyling","resNodeContext","lastCheckPoints","totalLineCount","linePositions","findLinePositions","lineBreak","findAcceptableBreakInside","resNodeContextParam","isLoneImage","getTrailingMarginEdgeAdjustment","trailingEdgeContexts","maxPos","minNeg","checkPointIndex","saveBoxBreakPosition","findEndOfLine","linePosition","isUpdateMaxReachedAfterEdge","effectiveLinePosition","lowCP","low1","highCP","high1","mid1","edgePosition","resolveTextNodeBreaker","breakTextNode","RESOLVE_TEXT_NODE_BREAKER","TextNodeBreaker","getRangeBoxes","wentUp","lastGood","haveStart","endNotReached","seekRange","setStartBefore","setEndAfter","boxList","lineBefore","lineAfter","lineEnd","lineLength","overlap","boxSize","paddingBorders","getOffsetByRepetitiveElements","bp","repetitiveElementsOffset","firstOverflowing","findFirstOverflowingEdgeAndCheckPoint","lineIndex","forceCutBeforeOverflowing","checkPoint","blockEdge","getAfterEdgeOfBlockContainer","blockParent","cp","findAcceptableBreakPosition","nextPenalty","minPenalty","breakPosition","doFinishBreak","initialComputedBlockSize","skipTailEdges","flowPosition","zeroIndent","checkOverflowAndSaveEdge","marginEdge","saveEvenOverflown","saveEdgeBreakPosition","applyClearance","spacer","spacerBox","clearEdge","wAdj","hAdj","isBFC","skipEdges","forcedBreakValue","fc","_nodeContext$parent2","layoutProcessor","_nodeContext$parent3","nodeContextParam","resultNodeContext","layoutNext","initGeom","columnBBox","include","exclude","granularity","segment","segments","segmentCount","lowestIncludeIndex","segmentIndex","activeSegments","y2min","yn","bandIntersections","bi1","bi2","rw","breakAtEdge","isFullWithPageFloats","nextInTreeListener","retryer","ColumnLayoutRetryer","doFinishBreakOfFragmentLayoutConstraints","sortedFragmentLayoutConstraints","pending","redoLayout","isPseudoelement","saveDistanceToBlockEndFloats","blockStartEdgeOfBlockEndFloats","isFinite","isInstanceOfRepetitiveElementsOwnerLayoutConstraint","isInstanceOfAfterIfContinuesLayoutConstraint","getElementsOffsetsForTableCell","startNodeContexts","parentClonedPaddingBorder","allowBreakAtStartPosition","startNodeContext","isStartNodeContext","isLastAfterNodeContext","getColumnElement","checkpointIndex","viewIndex","data","breakAfterSoftHyphen","breakAfterOtherCharacter","updateNodeContext","replaceData","ch0","ch1","initialOverflown","DefaultLayoutMode","_LayoutRetryers$Abstr","LayoutRetryers","hasNextCandidate","floatMargins","fixFloatSizeAndPosition","refWidth","refHeight","convertPercentageToPx","refValue","valueString","percentageValue","rootViewNode","RepetitiveElementsOwnerFormattingContext","rootSourceNode","getRootViewNode","getRootNodeContext","initializeRepetitiveElements","Shared","elements","RepetitiveElements","ownerSourceNode","headerSourceNode","footerSourceNode","headerViewNode","footerViewNode","headerNodePosition","footerNodePosition","headerHeight","footerHeight","isSkipHeader","isSkipFooter","enableSkippingFooter","enableSkippingHeader","doneInitialLayout","firstContentSourceNode","lastContentSourceNode","affectedNodeCache","afterLastContentNodeCache","allowInsert","allowInsertRepeatitiveElements","setHeaderNodeContext","setFooterNodeContext","updateHeight","prepareLayoutFragment","appendHeaderToFragment","rootNodeContext","appendElementToFragment","appendFooterToFragment","Layout","moveChildren","isAfterLastContent","findResultFromCache","isAfterNodeContextOf","cache","calculator","cacheEntry","includeChildren","parentsOfNode","currentParent","isEnableToUpdateState","updateState","preventSkippingHeader","preventSkippingFooter","isHeaderRegistered","isFooterRegistered","isHeaderSourceNode","isFooterSourceNode","LayoutEntireBlock","LayoutFragmentedBlock","LayoutEntireOwnerBlock","doInitialLayout","LayoutFragmentedOwnerBlock","RepetitiveElementsOwnerLayoutConstraint","RepetitiveElementsOwnerLayoutRetryer","EntireBlockLayoutStrategy","LayoutUtil","appendHeaderToAncestors","repetitiveLayoutProcessor","layoutEntireBlock","TableRow","rowIndex","cells","addCell","cell","getMinimumHeight","TableCell","columnIndex","viewElement","colSpan","rowSpan","anchorSlot","setHeight","setAnchorSlot","slot","TableSlot","TableCellFragment","pseudoColumnContainer","cellNodeContext","TableCaptionView","BetweenTableRowBreakPosition","acceptableCellBreakPositions","getAcceptableCellBreakPositions","cellFragments","getCellFragments","cellFragment","getRowIndex","findRowIndexBySourceNode","getRowSpanningCellsOverflowingTheRow","getCellFragmentOfCell","InsideTableRowBreakPosition","beforeNodeContext","allCellsBreakable","row","getRowByIndex","isFreelyFragmentableRow","getCellsFallingOnRow","TableFormattingContext","tableSourceNode","columnCount","tableWidth","captions","colGroups","colWidths","rows","slots","lastRowViewNode","cellBreakPositions","cellNodePosition","finishFragment","addRow","getRowSlots","rowSlots","rowUpper","startColIndex","addCellFragment","uniqueCells","getColumnCount","sum","updateCellSizes","findCellFromColumn","tableCell","col","collectElementsOffsetOfUpperCells","collected","collectElementsOffsetFromColumn","collectElementsOffsetOfHighestColumn","elementsInColumn","ElementsOffsetOfTableCell","RepetitiveElementImpl","repeatitiveElementsInColumns","calculateMaxOffsetOfColumn","maxOffset","isValidParentOfTableRow","skipNestedTable","parentDisplay","isNestedInlineTable","EntireTableLayoutStrategy","inRow","inHeaderOrFooter","postLayoutBlockContents","captionView","computedStyle","registerCheckPoint","TableLayoutStrategy","currentRowIndex","currentColumnIndex","originalStopAtOverflow","inHeader","inFooter","resetColumn","getColSpanningCellWidth","layoutCell","startChunkPosition","cellViewNode","hasBrokenCellAtSlot","slotIndex","cellBreakPosition","extractRowSpanningCellBreakPositions","rowSpanningCellBreakPositions","layoutRowSpanningCellsFromPreviousFragment","rowCount","currentRow","spanningCellRowIndex","occupiedSlotIndices","rowCellBreakPositions","rowNodeContext","cont1","addDummyCellUntil","upperColumnIndex","dummy","breakChunkPosition","startTableRow","registerCellFragmentIndex","tdNodeStep","getElementOffset","startTableCell","afterNodeContext","startNodePosition","ignoreList","tableLayoutOptionCache","TableLayoutProcessor","layoutEntireTable","getColumnWidths","lastRow","dummyRow","dummyCells","getColGroupElements","tableElement","normalizeAndGetColElements","cols","colGroup","cloneNode","addMissingColElements","normalizeColGroups","createDocumentFragment","tableRootSourceNode","pair","tableLayoutOption","tableBBox","calculateBreakPositionsInside","EntireTableBreakPosition","addCaptions","caption","addColGroups","removeColGroups","iterator","LayoutRetryer","cellContentElement","cellElement","cellElementRect","tableFormattingContext","LayoutFragmentedTable","LayoutEntireTable","tableNodeContext","EntireTableLayoutConstraint","tableRootNode","TableRowLayoutConstraint","cellFragmentLayoutConstraints","collectCellFragmentLayoutConstraints","removeDummyRowNodes","_RepetitiveElementImp4","array","dummyNode","getCellFragemnts","tableLayoutProcessor","mean","ColumnBalancingTrialResult","layoutResult","getBlockSize","setBlockSize","ColumnBalancer","layoutContainer","columnGenerator","regionPageFloatLayoutContext","originalContainerBlockSize","balanceColumns","preBalance","savePageFloatLayoutContexts","candidates","createTrialResult","updateCondition","restoreContents","postBalance","calculatePenalty","columnPageFloatLayoutContexts","newLayoutResult","columns","canReduceContainerSize","lastCandidate","secondLastCandidate","reduceContainerSize","newEdge","BalanceLastColumnBalancer","originalPosition","foundUpperBound","totalBlockSize","checkPosition","isLastColumnLongerThanAnyOtherColumn","lastColumnBlockSize","BalanceNonLastColumnBalancer","meanValue","computedBlockSizes","SlipRange","endStuckFixed","endFixed","endSlipped","SlipMap","getMaxFixed","getMaxSlipped","addStuckRange","addSlippedRange","slippedByFixed","fixedBySlipped","slipped","Box","atBlockStart","atFlowStart","isParentBoxDisplayed","isBlockValue","hasBoxValue","styleValues","beforeBox","afterBox","hasBox","styleValue","getBreakValue","buildAfterPseudoElementBox","cv","displayValue","BoxStack","atStartStack","lastBox","lastFlowName","isCurrentBoxDisplayed","newFlowChunk","isAtFlowStart","encounteredTextNode","CDATA_SECTION_NODE","atStart","nearestBlockStartOffset","Styler","primaryFlows","cascadeHolder","rootStyle","flowChunks","flowListener","flowToReach","idToReach","offsetMap","primaryStack","rootBackgroundAssigned","rootLayoutAssigned","breakBeforeValues","boxStack","bodyReached","rootOffset","getAttrStyle","postprocessTopStyle","replayFlowElementsFromOffset","hasProp","transferPropsToRoot","srcStyle","pname","isBody","backgroundColor","backgroundProps","backgroundImage","columnProps","layoutProps","isRelativeFontSize","unitSize","getTopContainerStyle","styleUntil","CSSStyleDeclaration","styleAttrValue","getReachedOffset","flowNameStr","encounteredFlowElement","getNodeByOffset","nodeOffset","getNodeOffset","resetFlowChunkStream","encounteredFlowChunk","styleUntilFlowIsReached","optionsCV","options","static","lingerCV","priorityCV","flow","registerForcedBreakOffset","lookup","targetSlippedOffset","afterPseudoBreakBefore","blockStartOffset","pageCV","beforePseudoBreakAfter","validator","failure","markAsStartGroup","isStartGroup","markAsEndGroup","isEndGroup","markAsStartAlternate","isStartAlternate","markAsEndAlternate","isEndAlternate","getAlternate","Connection","where","what","ValidatingGroup","connections","nomatch","emptyHead","connect","nodeIndex","group","clonedNode","connection","groupConnection","addSpecialToArr","clause","ALWAYS_FAIL","endSpecialGroup","arrs","startSpecialGroup","endClause","startClause","addPrimitive","isSimple","isPrimitive","PrimitiveValidator","addGroup","how","ALTERNATE","combine","connectionIndex","REPEATED","OPTIONAL","successTerminal","failTerminal","PropertyValidator","validateForShorthand","rval","idents","units","NO_IDENTS","ListValidator","failureTerminal","validateList","startIndex","alternativeStack","alternatives","inval","outval","SpaceListValidator","CommaListValidator","validateSingle","hasCommaListValidator","FuncValidator","ShorthandSyntaxNode","tryParse","shorthandValidator","ShorthandSyntaxProperty","validators","rvals","len","ShorthandSyntaxPropertyN","ShorthandSyntaxCompound","index0","ShorthandValidator","syntax","setOwner","syntaxNodeForProperty","receiver","propagateDefaultingValue","SimpleShorthandValidator","InsetsShorthandValidator","createSyntaxNode","InsetsSlashShorthandValidator","slashIndex","index1","CommaShorthandValidator","acc","FontShorthandValidator","_SimpleShorthandValid2","fontVariant","fontStretch","familyList","family","systemFonts","propsExcludedFromAll","shorthandValidators","SIMPLE","INSETS","INSETS_SLASH","FONT","ALL","_SimpleShorthandValid3","ValidatorSet","prefixes","namedValidators","addReplacement","newGroup","vals","subgroup","FOLLOW","addCounts","primitive","newFunc","initBuiltInValidators","COLOR","IMAGE_FUNCTION","POS_INT","POS_NUM","POS_PERCENTAGE","NEGATIVE","ZERO","ZERO_PERCENTAGE","POS_LENGTH","vi","vb","vmin","vmax","pvi","pvb","pvmin","pvmax","POS_ANGLE","deg","grad","rad","turn","POS_TIME","ms","FREQUENCY","Hz","kHz","RESOLUTION","URI","STRING","stdfont","icon","menu","isBuiltIn","readNameAndPrefixes","section","rulePrefixes","parseValidators","expectval","setop","currop","builtIn","parseDefaults","parseShorthands","insetShorthand","compound","makePropSet","pval","varCheckVisitor","VarCheckVisitor","varFound","origName","rvalue","baseValidatorSet","traitProps","prepareProperties","properties","Face","fontTraitKey","blobURLs","blobs","traitsEqual","makeAtRule","fontBytes","blobURL","webkitURL","createObjectURL","DocumentFaces","deobfuscator","familyMap","registerFamily","srcFace","viewFace","srcFamily","viewFamilyFromSrc","viewFamilyFromView","filterFontFamily","newValues","rf","Mapper","opt_familyPrefix","srcURLMap","familyPrefix","familyCounter","getViewFontFamily","documentFaces","viewFamily","initFont","viewFontFace","loadFont","srcFamilySrc","viewFaceParam","BLOB","findOrLoadFonts","srcFaces","waitFontLoading","fonts","unloadedCount","fontFace","keyCount","PageBox","specified","pageMaster","_scope","parentInstance","param","copySpecified","destSpecified","cloneChildren","RootPageBox","PageMasterScope","self","keyMap","boxInstance","lookupInstance","resolveFunc","resolveName","PageMaster","PageMasterInstance","resetScope","PartitionGroup","PartitionGroupInstance","Partition","PartitionInstance","toExprAuto","toExprZero","toExprZeroAuto","toExprZeroBorder","styleVal","toExprBool","PageBoxInstance","pageBox","autoWidth","autoHeight","isAutoWidth","isAutoHeight","isTopDependentOnAutoHeight","isRightDependentOnAutoWidth","calculatedWidth","calculatedHeight","pageMasterInstance","namedValues","namedFuncs","suppressEmptyBoxGeneration","addNamedValues","altName","columnGap","initEnabled","minPageWidth","minPageHeight","boxSpecificEnabled","initHorizontal","parentWidth","leftBP","rightBP","extra","remains","initVertical","parentHeight","topBP","bottomBP","initColumns","depends","registerInstance","getActiveRegions","_context$styler","_rootStyle$name","getPropAsNumber","propagateProperty","docFaces","propagatePropertyToElement","propagateDelayedProperty","assignLeftPosition","assignRightPosition","xpos","assignTopPosition","ypos","assignBottomPosition","assignBeforePosition","assignAfterPosition","assignStartEndPosition","sizeWithMaxHeight","sizeWithMaxWidth","prepareContainer","passPreProperties","transferContentProps","passContentProperties","transferSinglUriContentProps","passSingleUriContentProperties","finishContainer","readHeight","readWidth","bbox","ruleWidth","ruleStyle","ruleColor","containerSize","border","rule","passPostProperties","delayedProperties","applyCascadeAndInit","docElementStyle","userAgentPageMasterPseudo","resolveAutoSizing","RootPageBoxInstance","_PageBoxInstance","adjustPageLayout","processPartitionList","listVal","conflicting","qname","term","required","pmEnabledVal","pmEnabled","_PageBoxInstance4","PageBoxParserHandler","PartitionParserHandler","PartitionGroupParserHandler","partition","partitionGroup","PageMasterParserHandler","resolvePageProgression","_style$writingMode","_style$direction","Constants","pageSizes","a10","a9","a8","a7","a6","a5","a4","a3","a2","a1","a0","b10","b9","b8","b7","b6","b5","b4","b3","b2","b1","b0","c10","c9","c8","c7","c6","c5","c4","c3","c0","letter","legal","ledger","defaultPrinterMarkLineWidth","CornerMarkPosition","CrossMarkPosition","defaultPrinterMarkLineLength","defaultBleedOffset","resolvePageSizeAndBleed","pageSizeAndBleed","bleed","bleedOffset","cropOffset","val1","marksCV","marks","bleedCV","cropOffsetCV","evaluatePageSizeAndBleed","evaluated","createPrinterMarkSvg","createPrinterMarkElement","lineWidth","elementType","MarginBoxPositionAlongVariableDimension","propertiesAppliedToPartition","outline","pageMarginBoxes","isInTopRow","isInBottomRow","isInLeftColumn","isInRightColumn","positionAlongVariableDimension","START","CENTER","pageMarginBoxNames","PageRuleMaster","bodyPartitionKey","pageSize","PageRulePartition","createPageMarginBoxes","applySpecified","marginBoxesMap","_marginBoxes","PageMarginBoxPartition","PageRuleMasterInstance","PageRulePartitionInstance","marginBoxName","ownStyle","ownVal","PageMarginBoxPartitionInstance","pageRuleMaster","pageAreaDimension","pageMarginBoxInstances","_PageMaster$PageMaste2","setPageAreaDimension","borderBoxWidth","borderBoxHeight","marginBoxContainers","horizontalDimensions","verticalDimensions","sizeMarginBoxesAlongVariableDimension","isHorizontal","containers","boxInstances","boxParams","boxInfo","boxParam","SingleBoxMarginBoxSizingParam","evaluatedDim","getSizesOfMarginBoxesAlongVariableDimension","needRecalculate","maxOuterSizes","maxSize","evaluatedMaxSize","FixedSizeMarginBoxSizingParam","getOuterSize","minOuterSizes","minSize","evaluatedMinSize","startEndSum","outerSize","availableSize","startBoxParam","centerBoxParam","endBoxParam","startEndBoxParam","MultipleBoxesMarginBoxSizingParam","centerSizes","distributeAutoMarginBoxSizes","xSize","startEndAutoSize","hasAutoSize","startEndSizes","ySize","xOuterMaxContentSize","getOuterMaxContentSize","yOuterMaxContentSize","maxContentSizeSum","xOuterMinContentSize","getOuterMinContentSize","minContentSizeSum","hasAutoSize_","fixedSize","pageRulePartition","_PageMaster$Partition3","resolvePageBoxDimensions","borderBoxExtent","marginStart","marginEnd","endSide","extentName","pageExtent","paddingStart","paddingEnd","borderStartWidth","borderEndWidth","pageMarginBoxPartition","applyVerticalAlign","_PageMaster$Partition4","flexAlign","align","availableExtent","outerExtent","positionAndSizeAlongFixedDimension","insideName","outsideName","outside","pageMargin","marginInside","marginOutside","paddingInside","paddingOutside","borderInsideWidth","borderOutsideWidth","getComputedValues","pageMarginValue","borderAndPadding","PageManager","rootPageBoxInstance","pageMasterCache","definePageProgression","styleInstance","isVersoFirstPage","isVersoPage","pageProgression","getCascadedPageStyle","getPageRulePageMaster","makeCacheKey","generatePageRuleMaster","generateCascadedPageMaster","propsStr","makeCascadeValueObjectKey","newPageMaster","pageMasterStyle","CheckPageTypeAction","IsFirstPageAction","IsBlankPageAction","IsLeftPageAction","IsRightPageAction","IsRectoPageAction","IsVersoPageAction","IsNthPageAction","layoutPositionAtPageStart","blankPageAtStart","ApplyPageRuleAction","targetMap","boxName","targetBox","PageParserHandler","pageProps","currentPageSelectors","currentNamedPageSelector","currentPseudoPageClassSelectors","finishSelector","selectors","_CssCascade$CascadePa","selector","noPageSelectorProps","prevCascVal","marginBoxMap","boxStyle","PageMarginBoxParserHandler","allowScripts","deferredScripts","sameScripts","getScriptsInOrNearHead","scriptsInBodyNotNearHead","script","loadScript","srcScriptElem","flags","inHead","scriptContent","isModule","async","defer","needDefer","forceDefer","hasScripts","onload","builtinMathJax2","MathJax","_window$MathJax","version","_window$MathJax$versi","getElementsByTagName","scriptElem","attributes","transformURIs","attributeValue","m1","namespacePrefixMap","frontEdgeBlackListHor","frontEdgeBlackListVert","frontEdgeUnforcedBreakBlackListHor","frontEdgeUnforcedBreakBlackListVert","ViewFactory","footnoteStyle","stylerProducer","customRenderer","fallbackMap","createPseudoelementShadow","cascStyle","getPseudoMap","addedNames","att","shadowStyler","computedPseudoStyleMap","computedPseudoStyle","createRefShadow","refDocParam","refDoc","refElement","getElement","refStyler","getStylerForDoc","createShadows","templateURLVal","template","shadow","cont2","computeStyle","displayValues","inheritFromSourceParent","shadowRoot","nodeStyle","inheritanceVisitor","sname","inheritLangAttribute","transferPolyfilledInheritedProps","numericVal","resolveFormattingContext","createElementView","needToProcessChildren","inheritedValues","floatReferenceCV","_this$nodeContext$par","Scripts","HTMLScriptElement","_this$nodeContext$par3","shadowParam","parentWritingMode","isFlowRoot","floating","listItem","breakInside","pageVal","isAtForcedBreak","borderCollapse","borderSpacing","processAfterIfcontinues","whitespaceValue","overflowWrap","processRepeatOnBreak","findAndProcessRepeatingElements","custom","tag","_elementStyle$content","_elementStyle$content2","NCX","navParent","hp","behavior","contentWindow","navigator","epubReadingSystem","layoutStyle","hasFeature","imageResolution","images","cssWidth","cssHeight","attrWidth","attrHeight","hasAutoWidth","hasAutoHeight","attributeCount","delayedSrc","attribute","attributeNS","nodeValue","transformedValue","anchorElem","image","Image","isSVGUrlAttribute","Urls","attributePrefix","imageFetcher","listStyleImage","listStyleURL","preprocessElementStyle","applyComputedStyles","blackList","isParagraph","modifyElemDimensionWithImageResolution","textLevelElements","abbr","bdi","bdo","cite","del","dfn","ins","kbd","ruby","samp","small","strong","sup","time","u","var","childNode","SVG_URL_ATTRIBUTES","scaledWidth","scaledHeight","numericMaxHeight","numericMinWidth","numericMinHeight","PREPROCESS_ELEMENT_STYLE","createTextNodeView","preprocessTextContent","Diff","originl","PREPROCESS_TEXT_CONTENT","processedText","createNodeView","processChildren","processShadowContent","contentNode","contentShadowType","contentShadow","nextPositionInTree","shadowNode","sr","isTransclusion","transclusionType","proc","addImageFetchers","bg","isRelativePositioned","_this$viewRoot","propertiesNotPassedToDOM","fixRubyTextFontSize","userAgent","fontSizeInPx","_this$nodeContext2","_this$nodeContext2$pa","minFontSizeInPx","pn","childComputedStyle","boxDecorationBreak","step1","step2","elem2","nodePosition1","nodePosition2","DOMParserSupportedType","DefaultClientLayout","layoutBox","subtractOffsets","originRect","viewportLeft","viewportTop","rects","layoutBoxRect","Viewport","opt_root","opt_width","opt_height","outerZoomBox","contentContainer","innerWidth","innerHeight","isHeadlessBrowser","webdriver","resetZoom","XMLDocHolder","totalOffset","idMap","NodeList","offsetStr","srcNode","getTotalOffset","buildIdMap","xmlid","getElementsByName","parseAndReturnNullIfError","opt_parser","docElement","errorTagName","parseXMLResource","supportedKeys","APPLICATION_XML","TEXT_HTML","APPLICATION_XHTML_XML","IMAGE_SVG_XML","predicate","check","withAttribute","Predicate","withChild","opt_childPredicate","asArray","pr","forEachNode","forEachNonNull","uaStylesheetBaseFetcher","CssValidator","Style","rootBox","fontFaces","footnoteProps","flowProps","viewportProps","fontDeobfuscator","currentLayoutPosition","matchPageSide","lookupOffset","flowChunkIsAfterParentFlowForcedBreak","pageNumberOffset","sizeViewport","textZoom","scaleFactor","defaultFontSize","widthVal","heightVal","StyleInstance","defaultLang","fontMapper","stylerMap","faces","pageBoxInstances","pageManager","rootPageFloatLayoutContext","pageBreaks","pageSheetSize","pageSheetHeight","pageSheetWidth","Font","CssStyler","CssPage","matchStartPageSide","srcDocument","srcScripts","needPrepareForWebFonts","textContentDiv","fontFamilySet","findFontFamilyInStyle","_style$fontFamily","findAllFontFamily","arg","isArray","getAllFontFamilyList","savedDollar","$","classList","FontJSON","_window$ret","Event","pageStyle","isRectoStart","isLTR","getStyleForDoc","supported","supportsReceiver","getConsumedOffset","chunkOffset","getPosition","layoutPosition","noLookAhead","currentPosition","consumedOffset","dumpLocation","updateStartSide","flowChunkBreakBefore","flowBreakAfter","selectPageMaster","pageMasters","coeff","pageArea","initLingering","breakOffsetBeforeStartIndex","breakOffsetBeforeStart","parentFlowPosition","parentStartOffset","setFormattingContextToColumn","layoutDeferredPageFloats","pageStartPos","deferredFloatOffset","parentInvalidated","getLastAfterPositionIfDeferredFloatsExists","layoutColumn","repeatedIndices","removedIndices","alt","counterConstraint","createAndLayoutColumn","forceNonFitting","dontApplyExclusions","boxContainer","columnPageFloatLayoutContext","positionAtColumnStart","columnContainer","columnY","columnX","setPagePageFloatLayoutContextContainer","pagePageFloatLayoutContext","getRegionPageFloatLayoutContext","layoutFlowColumnsWithBalancing","positionAtContainerStart","layoutColumns","layoutFlowColumns","generatorResult","columnFill","columnBalancer","lastColumn","Vgen","dontExclude","forwardOrderInLayout","removed","innerContainerTag","innerContainer","outerShape","processLinger","noMorePrimaryFlows","layoutNextPage","_cp$flowPositions$bod","bleedBoxPaddingEdge","evaluatedPageSizeAndBleed","setPageSizeAndBleed","bgcolor","printerMarkOffset","cropMarkLineLength","bleedMarkLineLength","maxLineLength","svgWidth","points1","points2","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","line1","line2","longLineLength","BOTTOM","horizontalLine","verticalLine","opposite","LEFT","RIGHT","isLeftPage","getTriggersForDoc","BaseParserHandler","masterHandler","insideRegion","pageHandler","regionCount","regionHandler","processViewportMeta","meta","StyleParserHandler","cascadeParserHandler","parseOPSResource","OPSDocStore","styleByKey","styleFetcherByKey","styleByDocURL","triggersByDocURL","styleSheets","triggerSingleDocumentPreprocessing","authorStyleSheets","userStyleSheets","setStyleSheets","userAgentXML","clearStyleSheets","addAuthorStyleSheet","addUserStyleSheet","stylesheet","XmlDoc","triggerList","getElementsByTagNameNS","triggerElem","EV","sources","userAgentURL","title","rel","sph","source","encode32","decode32","bytes","bytesToSHA1Int32","appendCount","w","bi","TOCView","rendererFactory","setAutoHeight","makeCustomRenderer","renderer","srcElem","viewParent","replaceChild","createComment","adaptParentClass","button","toggleNodeExpansion","tabIndex","showTOC","tocBoxUrl","viewportSize","OPS","bodyChildElem","hideTOC","isTOCVisible","getTOC","exportTree","links","exportLink","hash","innerText","tocNodeElem","ce","adaptClass","elem1","stopPropagation","EPUBDocStore","plainXMLStore","jsonStore","opfByURL","primaryOPFByEPubURL","deobfuscators","documents","makeDeobfuscatorFactory","loadAsPlainXML","startLoadingAsPlainXML","loadAsJSON","startLoadingAsJSON","loadPubDoc","haveZipMetadata","loadEPUBDoc","opf","loadOPF","manifestObj","reportLoadError","OPFDoc","initWithWebPubManifest","loadWebPub","containerXML","pubURL","opfXML","encXML","zipMetadata","initWithXMLDoc","manifestLink","manifestUrl","xhtmlToc","addDocument","docURL","domain","removePath","OPFItem","mediaType","itemRefElement","compressedSize","compressed","epage","epageCount","skipPagesBefore","itemProperties","initWithElement","itemElem","opfURL","propStr","initWithParam","getOPFItemId","predefinedPrefixes","dcterms","marc","rendition","onix","xsd","defaultIRI","metaTerms","language","creator","titleType","displaySeq","alternateScript","role","getMetadataComparator","item1","item2","i1","_r1$metaTerms$display","i2","_r2$metaTerms$display","getMathJaxHub","Hub","PageViewMode","supportedMediaTypes","items","spine","itemMap","itemMapByPath","uid","bindings","prePaginated","epageIsRenderedPage","epageCountCallback","metadata","ncxToc","cover","createDocumentURLTransformer","MATHML","OPFDocumentURLTransformer","path","restoreURL","encoded","getMetadata","getPathFromURL","epubBaseURL","manifestURL","pkg","uidref","uidElem","srcToFallbackId","fallback","nav","fallbackSrc","tocAttr","pageProgressionAttr","idpfObfURLs","mediaTypeElems","handlerId","mroot","prefixMap","resolveProperty","iri","rawItems","refines","scheme","DC","rawItemsByTarget","rawItem","makeMetadata","entryMap","sortMetadata","sha1Sum","blob","webkitSlice","fileReader","FileReader","readAsArrayBuffer","dataView","DataView","byteLength","getUint8","setUint8","assignAutoPages","manifestText","obfuscations","obfuscationKey","sha1","encodedPath","obfuscation","DEFAULT","setEPageCountMode","countEPages","offsetPerEPage","initWithChapters","itemref","readingProgression","_manifestObj$metadata","author","_manifestObj$metadata2","inLanguage","_manifestObj$metadata3","primaryEntryPath","readingOrder","encodeURI","hrefNoFragment","itemCount","tocFound","readingOrderOrResources","itemObj","isInReadingOrder","encodingFormat","_this12$items","getCFI","offsetInItem","cfi","CFI","resolveFragment","opfNav","idref","nodeNav","resolveEPage","getEPageFromPosition","makePageAndPosition","OPFView","pageSheetSizeReporter","spineItems","spineItemLoadingContinuations","tocAutohide","tocView","Counters","getPage","viewItem","getCurrentPageProgression","finishPageContainer","oldPage","prevItem","newPage","insertPos","renderSinglePage","makePage","posParam","layoutPositions","prevPos","getPageViewItem","resultPosition","pageAndPosition","nextLayoutPosition","normalizeSeekPosition","seekOffset","seekOffsetPageIndex","complete","findPage","sync","resultPage","normalizedPosition","renderPage","renderAllPages","renderPagesUpto","notAllPages","lastResult","firstPage","lastPage","nextPage","nextViewItem","previousPage","isRectoPage","isLeft","getSpread","otherPageAndPosition","thisPage","otherPage","nextSpread","isRecto","next2","result2","previousSpread","oldPrevPageCont","navigateToEPage","navigateToFragment","navigateTo","restored","pageCont","matrix","cssMatrix","makeObjectView","handlerSrc","srcParam","typeParam","pvalue","makeMathJaxView","hub","clonedMath","importNode","resolveURLsInMathML","Push","newUrl","loadingContinuations","epubSpineProperties","pageCounterOffset","_this27$spineItems$","previousViewItem","pubTitles","removeRenderedPages","hasAutoSizedPages","hasPages","autohide","toc","Toc","tocWidth","tocHeight","ZoomType","AdaptiveViewer","viewportElement","instanceId","callbackFn","kick","sendCommand","resizeListener","hyperlinkListener","pageRuleStyleElement","pageSheetSizeAlreadySet","renderTask","packageURL","touchActive","touchX","touchY","needResize","needRefresh","currentSpread","pagePosition","fitToScreen","pageViewMode","waitForLoading","opfView","findOrCreateStyleElement","cssText","styleElement","pageReplacedListener","loadPublication","loadXML","configure","moveTo","addLogListeners","LOADING","SINGLE_PAGE","logLevel","setReadyState","command","Profile","zipmeta","authorStyleSheet","userStyleSheet","Epub","render","resolvedParams","cancelRenderingTask","resize","resolveLength","matched","autoresize","vp","userAgentRootURL","rootURL","configurePlugins","CONFIGURATION","showCurrent","forCurrentPages","removePageListeners","hidePages","showSinglePage","showPage","showSpread","leftWidth","rightWidth","reportPosition","sendLocationNotification","createViewport","vs","resolveSpreadView","SPREAD","updateSpreadView","sizeIsGood","spreadViewChanged","setPageSize","setPageSizePageRules","_this$pageSizes","_this$pageSizes2","convertSize","widthMax","heightMax","widthPt","heightPt","removePageSizePageRules","tocVisible","setSpreadZoom","setPageZoom","getAdjustedZoomFactor","getSpreadDimensions","pageDimension","calculateZoomFactorToFitInsideViewPort","queryZoomFactor","pageDim","FIT_INSIDE_VIEWPORT","RenderingCanceledError","resizeTask","INTERACTIVE","notification","COMPLETE","method","currentVisibility","changeAutohide","runCommand","actionName","initEmbed","cmd","maybeParse","viewer","hrefEvent","internal","frameInternal","adapt_command","setPrototypeOf","convertViewerOptions","Navigation","CoreViewer","settings","opt_options","initialized","adaptViewer_","eventTarget","dispatcher","autoResize","pageBorderWidth","AUTO_SPREAD","setOptions","defineProperty","removeListener","loadDocument","singleDocumentOptions","opt_documentOptions","opt_viewerOptions","loadDocumentOrPublication","pubUrl","documentOptions","convertStyleSheetArray","convertSingleDocumentOptions","documentObject","resolveNavigation","PREVIOUS","NEXT","navigateToPage","opt_epage","EPAGE","navigateToInternalUrl","opt_show","opt_autohide","getPageSizes","_this$adaptViewer_$op","_this$adaptViewer_$op2","getCover","toNumberOrNull","opt","VivliostylePrint","htmlDoc","printCallback","iframeWin","hideIframe","removeIframe","borderWidth","printInstance","srcdoc","runInIframe","preparePrint","browserPrint","cleanUp","docBlob","Viewer","Promise","config","html","css","printHTML"],"mappings":"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KACb,MAAO,IAAM7zB,KAAK2N,KACpB,KAAKwa,GAAU2L,KACb,YAAYnmB,KAAO,IACrB,KAAKwa,GAAU4L,MACb,MAAO,IAAM/zB,KAAK2N,KACpB,QACE,YAAYA,qBAgGJqmB,GAAYjN,EAAakN,GACvC,IACI77B,EADE8G,EAAchF,MAAM,KAE1B,IAAK9B,EAAI,EAAGA,EAAI,IAAKA,IACnB8G,EAAE9G,GAAK2uB,EAGT,IADA7nB,EAACg1B,IAAQnN,GAAOgK,GAAOoD,IAAMpD,GAAOoD,IAAMpD,GAAOqD,QAC5Ch8B,EAAI,EAAGA,EAAI67B,EAAK79B,OAAQgC,GAAK,EAChC8G,EAAE+0B,EAAK77B,IAAM67B,EAAK77B,EAAI,GAExB,OAAO8G,GAlGT,SAAY6xB,GACVA,qBACAA,iBACAA,qBACAA,mBACAA,mBACAA,uBACAA,yBACAA,iBACAA,sBACAA,sBACAA,oBACAA,oBACAA,sBACAA,sBACAA,kBACAA,sBACAA,sBACAA,0BACAA,gBACAA,gBACAA,gBACAA,sBACAA,gBACAA,sBACAA,sBACAA,sBACAA,sBACAA,wBACAA,kBACAA,kBACAA,sBACAA,oBACAA,oBACAA,kBACAA,wBACAA,wBACAA,wBACAA,oBACAA,oBACAA,wBACAA,wBACAA,0BACAA,0BACAA,0BAGAA,wBACAA,0BAGAA,0BACAA,0BACAA,0BACAA,0BACAA,oBACAA,wBACAA,0BACAA,wBACAA,0BACAA,wBACAA,sBACAA,sBACAA,0BACAA,wBACAA,sBACAA,sBACAA,kBACAA,oBACAA,oBACAA,wBACAA,0BACAA,wBACAA,sBACAA,0BACAA,0BACAA,0BACAA,0BACAA,wBACAA,wBACAA,0BACAA,0BACAA,sBACAA,kBACAA,kBACAA,kBArFF,CAAYA,KAAAA,YAwGCsD,GAA0B,CACrCtD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOqD,QACPrD,GAAOuD,MACPvD,GAAOuD,MACPvD,GAAOqD,QA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A,EACA,KACA,EACA,KAEFC,SAAU,CACR,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,SAAU,CACR,MACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,KAEFC,OAAQ,CACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,KACA,GACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,IACA,EACA,MAISrC,GAAsB,CACjCsC,MAAO,MACPC,MAAO,MACPC,MAAO,SACPC,QAAS,aAGEpzC,GAAQ,CACnBqzC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRpyC,KAAM,IAmEKswC,GAAwC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A,MACA,SACA,SACA,QACA,QACA,MACA,cACA,YACA,eACA,cAeIx+G,SAAQ,SAACs1C,GACb2R,aAAgB3R,MAChB2R,cAAiB3R,MACjB2R,aAAgB3R,eAChB2R,aAAgB3R,eAChB2R,aAAgB3R,kBAEX2R,KAaT,SAAYq3D,GACVA,gBACAA,kBACAA,YAHF,CAAYA,KAAAA,YAkKJ9xC,GA/IKiyC,GAA+D,CAC1E,kBAAmB,CACjB9iF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,WAAY,CACVnjF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,aAAc,CACZpjF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,YAAa,CACXrjF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwChrF,KAE1E,mBAAoB,CAClBqI,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,YAAa,CACXnjF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,eAAgB,CACdpjF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,eAAgB,CACdrjF,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwChrF,KAE1E,sBAAuB,CACrBqI,MAAO,EACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,eAAgB,CACdnjF,MAAO,GACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgCR,GAAwChrF,KAE1E,gBAAiB,CACfqI,MAAO,GACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCU,QAE5C,cAAe,CACbrjF,MAAO,GACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BACER,GAAwCS,OAE5C,qBAAsB,CACpBpjF,MAAO,GACP+iF,cACAC,iBACAC,kBACAC,mBACAC,+BAAgC,MAElC,cAAe,CACbnjF,MAAO,GAC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"}